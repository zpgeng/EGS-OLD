# Makefile.in generated by automake 1.16.3 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2020 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# StarPU --- Runtime system for heterogeneous multicore architectures.
#
# Copyright (C) 2016-2021  UniversitÃ© de Bordeaux, CNRS (LaBRI UMR 5800), Inria
#
# StarPU is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or (at
# your option) any later version.
#
# StarPU is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# See the GNU Lesser General Public License in COPYING.LGPL for more details.
#




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/starpu
pkgincludedir = $(includedir)/starpu
pkglibexecdir = $(libexecdir)/starpu
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
target_triplet = x86_64-pc-linux-gnu
am__append_1 = --compiler-options -fno-strict-aliasing $(AM_CPPFLAGS) -I$(top_builddir)/include $(HWLOC_CFLAGS) $(SIMGRID_CFLAGS)
noinst_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_6) $(am__EXEEXT_8) \
	$(am__EXEEXT_9)
am__append_2 = loader
TESTS = $(am__EXEEXT_12) $(am__EXEEXT_6)
#am__append_3 = coverage/coverage.sh
XFAIL_TESTS = errorcheck/invalid_blocking_calls$(EXEEXT)
#am__append_4 = \
#	datawizard/simgrid-locality

am__append_5 = \
	main/deprecated_func			\
	main/driver_api/init_run_deinit         \
	main/driver_api/run_driver              \
	main/deploop                            \
	main/display_binding			\
	main/execute_on_a_specific_worker	\
	main/insert_task			\
	main/insert_task_value			\
	main/insert_task_dyn_handles		\
	main/insert_task_array			\
	main/insert_task_many			\
	main/insert_task_where			\
	main/job				\
	main/multithreaded			\
	main/starpu_task_bundle			\
	main/starpu_task_wait_for_all		\
	main/starpu_task_wait			\
	main/static_restartable			\
	main/static_restartable_using_initializer\
	main/static_restartable_tag		\
	main/regenerate				\
	main/regenerate_pipeline		\
	main/restart				\
	main/wait_all_regenerable_tasks		\
	main/subgraph_repeat			\
	main/subgraph_repeat_tag		\
	main/subgraph_repeat_regenerate		\
	main/subgraph_repeat_regenerate_tag	\
	main/subgraph_repeat_regenerate_tag_cycle	\
	main/empty_task_sync_point		\
	main/empty_task_sync_point_tasks	\
	main/tag_wait_api			\
	main/tag_get_task			\
	main/task_wait_api			\
	main/declare_deps_in_callback		\
	main/declare_deps_after_submission	\
	main/declare_deps_after_submission_synchronous	\
	main/get_current_task			\
	main/starpu_init			\
	main/submit				\
	main/pause_resume			\
	main/pack				\
	main/get_children_tasks			\
	main/hwloc_cpuset			\
	main/task_end_dep			\
	datawizard/acquire_cb_insert		\
	datawizard/acquire_release		\
	datawizard/acquire_release2		\
	datawizard/acquire_try			\
	datawizard/bcsr				\
	datawizard/cache			\
	datawizard/commute			\
	datawizard/commute2			\
	datawizard/copy				\
	datawizard/data_implicit_deps		\
	datawizard/data_lookup			\
	datawizard/scratch			\
	datawizard/scratch_reuse		\
	datawizard/sync_and_notify_data		\
	datawizard/sync_and_notify_data_implicit\
	datawizard/dsm_stress			\
	datawizard/double_parameter		\
	datawizard/write_only_tmp_buffer	\
	datawizard/data_invalidation		\
	datawizard/dining_philosophers		\
	datawizard/manual_reduction		\
	datawizard/readers_and_writers		\
	datawizard/unpartition			\
	datawizard/sync_with_data_with_mem	\
	datawizard/sync_with_data_with_mem_non_blocking\
	datawizard/sync_with_data_with_mem_non_blocking_implicit\
	datawizard/mpi_like			\
	datawizard/mpi_like_async		\
	datawizard/critical_section_with_void_interface\
	datawizard/increment_init		\
	datawizard/increment_redux		\
	datawizard/increment_redux_v2		\
	datawizard/increment_redux_lazy		\
	datawizard/handle_to_pointer		\
	datawizard/lazy_allocation		\
	datawizard/lazy_unregister		\
	datawizard/no_unregister		\
	datawizard/noreclaim			\
	datawizard/nowhere			\
	datawizard/interfaces/block/block_interface \
	datawizard/interfaces/bcsr/bcsr_interface \
	datawizard/interfaces/coo/coo_interface \
	datawizard/interfaces/csr/csr_interface \
	datawizard/interfaces/matrix/matrix_interface \
	datawizard/interfaces/multiformat/multiformat_interface \
	datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl \
	datawizard/interfaces/multiformat/advanced/multiformat_data_release \
	datawizard/interfaces/multiformat/advanced/multiformat_worker \
	datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion \
	datawizard/interfaces/multiformat/advanced/same_handle \
	datawizard/interfaces/variable/variable_interface    \
	datawizard/interfaces/vector/vector_interface   \
	datawizard/interfaces/void/void_interface \
	datawizard/in_place_partition   	\
	datawizard/partition_dep   		\
	datawizard/partition_lazy		\
	datawizard/partition_init		\
	datawizard/gpu_register   		\
	datawizard/gpu_ptr_register   		\
	datawizard/variable_parameters		\
	datawizard/wt_host			\
	datawizard/wt_broadcast			\
	datawizard/readonly			\
	datawizard/specific_node		\
	datawizard/task_with_multiple_time_the_same_handle	\
	datawizard/test_arbiter			\
	datawizard/invalidate_pending_requests	\
	datawizard/temporary_partition		\
	datawizard/partitioned_initialization	\
	datawizard/partitioned_acquire		\
	datawizard/temporary_partition_implicit	\
	datawizard/redux_acquire		\
	disk/disk_copy				\
	disk/disk_copy_unpack			\
	disk/disk_copy_to_disk			\
	disk/disk_compute			\
	disk/disk_pack				\
	disk/mem_reclaim			\
	errorcheck/invalid_blocking_calls	\
	errorcheck/workers_cpuid		\
	helper/starpu_data_cpy			\
	helper/starpu_create_sync_task		\
	microbenchs/async_tasks_overhead	\
	microbenchs/sync_tasks_overhead		\
	microbenchs/tasks_overhead		\
	microbenchs/tasks_size_overhead		\
	microbenchs/prefetch_data_on_node 	\
	microbenchs/redundant_buffer		\
	microbenchs/matrix_as_vector		\
	microbenchs/bandwidth			\
	overlap/gpu_concurrency			\
	parallel_tasks/explicit_combined_worker	\
	parallel_tasks/parallel_kernels		\
	parallel_tasks/parallel_kernels_trivial	\
	parallel_tasks/parallel_kernels_spmd	\
	parallel_tasks/spmd_peager		\
	parallel_tasks/cuda_only		\
	perfmodels/regression_based		\
	perfmodels/non_linear_regression_based	\
	perfmodels/feed				\
	perfmodels/user_base			\
	perfmodels/valid_model			\
	perfmodels/memory			\
	sched_policies/data_locality            \
	sched_policies/execute_all_tasks        \
	sched_policies/prio        		\
	sched_policies/simple_deps              \
	sched_policies/simple_cpu_gpu_sched	\
	sched_ctx/sched_ctx_hierarchy

#am__append_6 = \
#	fortran90/init_01

#am__append_7 = \
#	main/tag_task_data_deps			\
#	datawizard/reclaim

examplebin_PROGRAMS = microbenchs/async_tasks_overhead$(EXEEXT) \
	microbenchs/sync_tasks_overhead$(EXEEXT) \
	microbenchs/tasks_overhead$(EXEEXT) \
	microbenchs/tasks_size_overhead$(EXEEXT) \
	microbenchs/local_pingpong$(EXEEXT) $(am__EXEEXT_7)
am__append_8 = \
	microbenchs/bandwidth

am__append_9 = \
	microbenchs/tasks_data_overhead.sh \
	microbenchs/sync_tasks_data_overhead.sh \
	microbenchs/async_tasks_data_overhead.sh \
	microbenchs/tasks_size_overhead_scheds.sh

check_PROGRAMS = $(am__EXEEXT_1) \
	$(am__EXEEXT_6)
#check_PROGRAMS = $(am__EXEEXT_6)
#am__append_10 = $(MICROBENCHS:=.sh)
am__append_11 = \
	datawizard/locality.sh \
	microbenchs/bandwidth_scheds.sh \
	overlap/overlap.sh

#am__append_12 = model-checking/prio_list \
#	model-checking/starpu_barrier
#am__append_13 = model-checking/prio_list.sh
am__append_14 = \
	datawizard/acquire_release_cuda.cu

#am__append_15 = \
#	datawizard/acquire_release_opencl.c

am__append_16 = \
	datawizard/acquire_release_cuda.cu

#am__append_17 = \
#	datawizard/acquire_release_opencl.c

am__append_18 = \
	datawizard/scratch_cuda.cu

#am__append_19 = \
#	datawizard/scratch_opencl.c

am__append_20 = \
	datawizard/cuda_codelet_unsigned_inc.cu

#am__append_21 = \
#	datawizard/opencl_codelet_unsigned_inc.c

am__append_22 = \
	datawizard/cuda_codelet_unsigned_inc.cu

#am__append_23 = \
#	datawizard/opencl_codelet_unsigned_inc.c

am__append_24 = \
	datawizard/sync_and_notify_data_kernels.cu

#am__append_25 = \
#	datawizard/sync_and_notify_data_opencl.c

am__append_26 = \
	datawizard/sync_and_notify_data_kernels.cu

#am__append_27 = \
#	datawizard/sync_and_notify_data_opencl.c

am__append_28 = \
	datawizard/scal_cuda.cu

#am__append_29 = \
#	datawizard/scal_opencl.cl

am__append_30 = \
	datawizard/scal_cuda.cu

#am__append_31 = \
#	datawizard/scal_opencl.cl

am__append_32 = \
	datawizard/scal_cuda.cu

#am__append_33 = \
#	datawizard/scal_opencl.cl

am__append_34 = \
	datawizard/scal_cuda.cu

#am__append_35 = \
#	datawizard/scal_opencl.cl

am__append_36 = \
	datawizard/scal_cuda.cu

#am__append_37 = \
#	datawizard/scal_opencl.cl

am__append_38 = \
	datawizard/cuda_codelet_unsigned_inc.cu

#am__append_39 = \
#	datawizard/opencl_codelet_unsigned_inc.c

am__append_40 = \
	main/increment.cu

am__append_41 = \
	main/increment.cu

am__append_42 = \
	main/increment.cu

am__append_43 = \
	main/increment.cu

am__append_44 = \
	main/increment.cu

am__append_45 = \
	main/increment.cu

am__append_46 = \
	datawizard/interfaces/block/block_cuda.cu

#am__append_47 = \
#	datawizard/interfaces/block/block_opencl.c

am__append_48 = \
	datawizard/interfaces/bcsr/bcsr_cuda.cu

#am__append_49 = \
#	datawizard/interfaces/bcsr/bcsr_opencl.c

am__append_50 = \
	datawizard/interfaces/coo/coo_cuda.cu

#am__append_51 = \
#	datawizard/interfaces/coo/coo_opencl.c

am__append_52 = \
	datawizard/interfaces/csr/csr_cuda.cu

#am__append_53 = \
#	datawizard/interfaces/csr/csr_opencl.c

am__append_54 = \
	datawizard/interfaces/vector/vector_cuda.cu

#am__append_55 = \
#	datawizard/interfaces/vector/vector_opencl.c

am__append_56 = \
	datawizard/interfaces/matrix/matrix_cuda.cu

#am__append_57 = \
#	datawizard/interfaces/matrix/matrix_opencl.c

am__append_58 = \
	datawizard/interfaces/multiformat/multiformat_cuda.cu                      \
	datawizard/interfaces/multiformat/multiformat_conversion_codelets_cuda.cu

#am__append_59 = \
#	datawizard/interfaces/multiformat/multiformat_opencl.c                     \
#	datawizard/interfaces/multiformat/multiformat_conversion_codelets_opencl.c

am__append_60 = \
	datawizard/interfaces/variable/variable_cuda.cu

#am__append_61 = \
#	datawizard/interfaces/variable/variable_opencl.c

am__append_62 = \
	overlap/long_kernel.cu

#am__append_63 = \
#	perfmodels/opencl_memset.c

#am__append_64 = \
#	perfmodels/opencl_memset.c

subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/acinclude.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/m4/ax_dlb_callback_arg.m4 \
	$(top_srcdir)/m4/libs.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/common/config.h \
	$(top_builddir)/src/common/config-src-build.h \
	$(top_builddir)/include/starpu_config.h \
	$(top_builddir)/starpurm/include/starpurm_config.h
CONFIG_CLEAN_FILES = loader-cross.sh
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = loader$(EXEEXT)
#am__EXEEXT_2 =  \
#	datawizard/simgrid-locality$(EXEEXT)
am__EXEEXT_3 = main/deprecated_func$(EXEEXT) \
	main/driver_api/init_run_deinit$(EXEEXT) \
	main/driver_api/run_driver$(EXEEXT) \
	main/deploop$(EXEEXT) \
	main/display_binding$(EXEEXT) \
	main/execute_on_a_specific_worker$(EXEEXT) \
	main/insert_task$(EXEEXT) \
	main/insert_task_value$(EXEEXT) \
	main/insert_task_dyn_handles$(EXEEXT) \
	main/insert_task_array$(EXEEXT) \
	main/insert_task_many$(EXEEXT) \
	main/insert_task_where$(EXEEXT) \
	main/job$(EXEEXT) \
	main/multithreaded$(EXEEXT) \
	main/starpu_task_bundle$(EXEEXT) \
	main/starpu_task_wait_for_all$(EXEEXT) \
	main/starpu_task_wait$(EXEEXT) \
	main/static_restartable$(EXEEXT) \
	main/static_restartable_using_initializer$(EXEEXT) \
	main/static_restartable_tag$(EXEEXT) \
	main/regenerate$(EXEEXT) \
	main/regenerate_pipeline$(EXEEXT) \
	main/restart$(EXEEXT) \
	main/wait_all_regenerable_tasks$(EXEEXT) \
	main/subgraph_repeat$(EXEEXT) \
	main/subgraph_repeat_tag$(EXEEXT) \
	main/subgraph_repeat_regenerate$(EXEEXT) \
	main/subgraph_repeat_regenerate_tag$(EXEEXT) \
	main/subgraph_repeat_regenerate_tag_cycle$(EXEEXT) \
	main/empty_task_sync_point$(EXEEXT) \
	main/empty_task_sync_point_tasks$(EXEEXT) \
	main/tag_wait_api$(EXEEXT) \
	main/tag_get_task$(EXEEXT) \
	main/task_wait_api$(EXEEXT) \
	main/declare_deps_in_callback$(EXEEXT) \
	main/declare_deps_after_submission$(EXEEXT) \
	main/declare_deps_after_submission_synchronous$(EXEEXT) \
	main/get_current_task$(EXEEXT) \
	main/starpu_init$(EXEEXT) \
	main/submit$(EXEEXT) \
	main/pause_resume$(EXEEXT) \
	main/pack$(EXEEXT) \
	main/get_children_tasks$(EXEEXT) \
	main/hwloc_cpuset$(EXEEXT) \
	main/task_end_dep$(EXEEXT) \
	datawizard/acquire_cb_insert$(EXEEXT) \
	datawizard/acquire_release$(EXEEXT) \
	datawizard/acquire_release2$(EXEEXT) \
	datawizard/acquire_try$(EXEEXT) \
	datawizard/bcsr$(EXEEXT) \
	datawizard/cache$(EXEEXT) \
	datawizard/commute$(EXEEXT) \
	datawizard/commute2$(EXEEXT) \
	datawizard/copy$(EXEEXT) \
	datawizard/data_implicit_deps$(EXEEXT) \
	datawizard/data_lookup$(EXEEXT) \
	datawizard/scratch$(EXEEXT) \
	datawizard/scratch_reuse$(EXEEXT) \
	datawizard/sync_and_notify_data$(EXEEXT) \
	datawizard/sync_and_notify_data_implicit$(EXEEXT) \
	datawizard/dsm_stress$(EXEEXT) \
	datawizard/double_parameter$(EXEEXT) \
	datawizard/write_only_tmp_buffer$(EXEEXT) \
	datawizard/data_invalidation$(EXEEXT) \
	datawizard/dining_philosophers$(EXEEXT) \
	datawizard/manual_reduction$(EXEEXT) \
	datawizard/readers_and_writers$(EXEEXT) \
	datawizard/unpartition$(EXEEXT) \
	datawizard/sync_with_data_with_mem$(EXEEXT) \
	datawizard/sync_with_data_with_mem_non_blocking$(EXEEXT) \
	datawizard/sync_with_data_with_mem_non_blocking_implicit$(EXEEXT) \
	datawizard/mpi_like$(EXEEXT) \
	datawizard/mpi_like_async$(EXEEXT) \
	datawizard/critical_section_with_void_interface$(EXEEXT) \
	datawizard/increment_init$(EXEEXT) \
	datawizard/increment_redux$(EXEEXT) \
	datawizard/increment_redux_v2$(EXEEXT) \
	datawizard/increment_redux_lazy$(EXEEXT) \
	datawizard/handle_to_pointer$(EXEEXT) \
	datawizard/lazy_allocation$(EXEEXT) \
	datawizard/lazy_unregister$(EXEEXT) \
	datawizard/no_unregister$(EXEEXT) \
	datawizard/noreclaim$(EXEEXT) \
	datawizard/nowhere$(EXEEXT) \
	datawizard/interfaces/block/block_interface$(EXEEXT) \
	datawizard/interfaces/bcsr/bcsr_interface$(EXEEXT) \
	datawizard/interfaces/coo/coo_interface$(EXEEXT) \
	datawizard/interfaces/csr/csr_interface$(EXEEXT) \
	datawizard/interfaces/matrix/matrix_interface$(EXEEXT) \
	datawizard/interfaces/multiformat/multiformat_interface$(EXEEXT) \
	datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl$(EXEEXT) \
	datawizard/interfaces/multiformat/advanced/multiformat_data_release$(EXEEXT) \
	datawizard/interfaces/multiformat/advanced/multiformat_worker$(EXEEXT) \
	datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion$(EXEEXT) \
	datawizard/interfaces/multiformat/advanced/same_handle$(EXEEXT) \
	datawizard/interfaces/variable/variable_interface$(EXEEXT) \
	datawizard/interfaces/vector/vector_interface$(EXEEXT) \
	datawizard/interfaces/void/void_interface$(EXEEXT) \
	datawizard/in_place_partition$(EXEEXT) \
	datawizard/partition_dep$(EXEEXT) \
	datawizard/partition_lazy$(EXEEXT) \
	datawizard/partition_init$(EXEEXT) \
	datawizard/gpu_register$(EXEEXT) \
	datawizard/gpu_ptr_register$(EXEEXT) \
	datawizard/variable_parameters$(EXEEXT) \
	datawizard/wt_host$(EXEEXT) \
	datawizard/wt_broadcast$(EXEEXT) \
	datawizard/readonly$(EXEEXT) \
	datawizard/specific_node$(EXEEXT) \
	datawizard/task_with_multiple_time_the_same_handle$(EXEEXT) \
	datawizard/test_arbiter$(EXEEXT) \
	datawizard/invalidate_pending_requests$(EXEEXT) \
	datawizard/temporary_partition$(EXEEXT) \
	datawizard/partitioned_initialization$(EXEEXT) \
	datawizard/partitioned_acquire$(EXEEXT) \
	datawizard/temporary_partition_implicit$(EXEEXT) \
	datawizard/redux_acquire$(EXEEXT) \
	disk/disk_copy$(EXEEXT) \
	disk/disk_copy_unpack$(EXEEXT) \
	disk/disk_copy_to_disk$(EXEEXT) \
	disk/disk_compute$(EXEEXT) \
	disk/disk_pack$(EXEEXT) \
	disk/mem_reclaim$(EXEEXT) \
	errorcheck/invalid_blocking_calls$(EXEEXT) \
	errorcheck/workers_cpuid$(EXEEXT) \
	helper/starpu_data_cpy$(EXEEXT) \
	helper/starpu_create_sync_task$(EXEEXT) \
	microbenchs/async_tasks_overhead$(EXEEXT) \
	microbenchs/sync_tasks_overhead$(EXEEXT) \
	microbenchs/tasks_overhead$(EXEEXT) \
	microbenchs/tasks_size_overhead$(EXEEXT) \
	microbenchs/prefetch_data_on_node$(EXEEXT) \
	microbenchs/redundant_buffer$(EXEEXT) \
	microbenchs/matrix_as_vector$(EXEEXT) \
	microbenchs/bandwidth$(EXEEXT) \
	overlap/gpu_concurrency$(EXEEXT) \
	parallel_tasks/explicit_combined_worker$(EXEEXT) \
	parallel_tasks/parallel_kernels$(EXEEXT) \
	parallel_tasks/parallel_kernels_trivial$(EXEEXT) \
	parallel_tasks/parallel_kernels_spmd$(EXEEXT) \
	parallel_tasks/spmd_peager$(EXEEXT) \
	parallel_tasks/cuda_only$(EXEEXT) \
	perfmodels/regression_based$(EXEEXT) \
	perfmodels/non_linear_regression_based$(EXEEXT) \
	perfmodels/feed$(EXEEXT) \
	perfmodels/user_base$(EXEEXT) \
	perfmodels/valid_model$(EXEEXT) \
	perfmodels/memory$(EXEEXT) \
	sched_policies/data_locality$(EXEEXT) \
	sched_policies/execute_all_tasks$(EXEEXT) \
	sched_policies/prio$(EXEEXT) \
	sched_policies/simple_deps$(EXEEXT) \
	sched_policies/simple_cpu_gpu_sched$(EXEEXT) \
	sched_ctx/sched_ctx_hierarchy$(EXEEXT)
#am__EXEEXT_4 = fortran90/init_01$(EXEEXT)
#am__EXEEXT_5 = main/tag_task_data_deps$(EXEEXT) \
#	datawizard/reclaim$(EXEEXT)
am__EXEEXT_6 = main/callback$(EXEEXT) main/bind$(EXEEXT) \
	main/mkdtemp$(EXEEXT) main/execute_schedule$(EXEEXT) \
	main/insert_task_pack$(EXEEXT) \
	main/insert_task_nullcodelet$(EXEEXT) \
	main/multithreaded_init$(EXEEXT) main/empty_task$(EXEEXT) \
	main/empty_task_chain$(EXEEXT) \
	main/starpu_worker_exists$(EXEEXT) \
	main/codelet_null_callback$(EXEEXT) \
	datawizard/allocate$(EXEEXT) datawizard/acquire_cb$(EXEEXT) \
	datawizard/deps$(EXEEXT) \
	datawizard/user_interaction_implicit$(EXEEXT) \
	datawizard/interfaces/copy_interfaces$(EXEEXT) \
	datawizard/numa_overflow$(EXEEXT) datawizard/locality$(EXEEXT) \
	datawizard/variable_size$(EXEEXT) \
	errorcheck/starpu_init_noworker$(EXEEXT) \
	errorcheck/invalid_tasks$(EXEEXT) helper/cublas_init$(EXEEXT) \
	helper/cusparse_init$(EXEEXT) helper/pinned_memory$(EXEEXT) \
	helper/execute_on_all$(EXEEXT) \
	microbenchs/display_structures_size$(EXEEXT) \
	microbenchs/local_pingpong$(EXEEXT) overlap/overlap$(EXEEXT) \
	sched_ctx/sched_ctx_list$(EXEEXT) \
	sched_ctx/sched_ctx_policy_data$(EXEEXT) \
	openmp/init_exit_01$(EXEEXT) openmp/init_exit_02$(EXEEXT) \
	openmp/environment$(EXEEXT) openmp/api_01$(EXEEXT) \
	openmp/parallel_01$(EXEEXT) openmp/parallel_02$(EXEEXT) \
	openmp/parallel_03$(EXEEXT) \
	openmp/parallel_barrier_01$(EXEEXT) \
	openmp/parallel_master_01$(EXEEXT) \
	openmp/parallel_master_inline_01$(EXEEXT) \
	openmp/parallel_single_wait_01$(EXEEXT) \
	openmp/parallel_single_nowait_01$(EXEEXT) \
	openmp/parallel_single_inline_01$(EXEEXT) \
	openmp/parallel_single_copyprivate_01$(EXEEXT) \
	openmp/parallel_single_copyprivate_inline_01$(EXEEXT) \
	openmp/parallel_critical_01$(EXEEXT) \
	openmp/parallel_critical_inline_01$(EXEEXT) \
	openmp/parallel_critical_named_01$(EXEEXT) \
	openmp/parallel_critical_named_inline_01$(EXEEXT) \
	openmp/parallel_simple_lock_01$(EXEEXT) \
	openmp/parallel_nested_lock_01$(EXEEXT) \
	openmp/parallel_for_01$(EXEEXT) \
	openmp/parallel_for_02$(EXEEXT) \
	openmp/parallel_for_ordered_01$(EXEEXT) \
	openmp/parallel_sections_01$(EXEEXT) \
	openmp/parallel_sections_combined_01$(EXEEXT) \
	openmp/task_01$(EXEEXT) openmp/task_02$(EXEEXT) \
	openmp/task_03$(EXEEXT) openmp/taskloop$(EXEEXT) \
	openmp/taskwait_01$(EXEEXT) openmp/taskgroup_01$(EXEEXT) \
	openmp/taskgroup_02$(EXEEXT) openmp/array_slice_01$(EXEEXT) \
	openmp/cuda_task_01$(EXEEXT) perfmodels/value_nan$(EXEEXT) \
	$(am__EXEEXT_2) $(am__EXEEXT_3) $(am__EXEEXT_4) \
	$(am__EXEEXT_5)
am__EXEEXT_7 = microbenchs/bandwidth$(EXEEXT)
am__installdirs = "$(DESTDIR)$(examplebindir)" \
	"$(DESTDIR)$(examplebindir)" \
	"$(DESTDIR)$(STARPU_OPENCL_DATAdir)"
am__EXEEXT_8 =  \
	microbenchs/parallel_independent_homogeneous_tasks$(EXEEXT) \
	microbenchs/parallel_independent_heterogeneous_tasks$(EXEEXT) \
	microbenchs/parallel_independent_homogeneous_tasks_data$(EXEEXT) \
	microbenchs/parallel_independent_heterogeneous_tasks_data$(EXEEXT) \
	microbenchs/parallel_redux_homogeneous_tasks_data$(EXEEXT) \
	microbenchs/parallel_redux_heterogeneous_tasks_data$(EXEEXT) \
	microbenchs/parallel_dependent_homogeneous_tasks_data$(EXEEXT)
#am__EXEEXT_9 =  \
#	model-checking/prio_list$(EXEEXT) \
#	model-checking/starpu_barrier$(EXEEXT)
PROGRAMS = $(examplebin_PROGRAMS) $(noinst_PROGRAMS)
datawizard_acquire_cb_SOURCES = datawizard/acquire_cb.c
datawizard_acquire_cb_OBJECTS = acquire_cb.$(OBJEXT)
datawizard_acquire_cb_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
datawizard_acquire_cb_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am__dirstamp = $(am__leading_dot)dirstamp
datawizard_acquire_cb_insert_SOURCES = datawizard/acquire_cb_insert.c
datawizard_acquire_cb_insert_OBJECTS = acquire_cb_insert.$(OBJEXT)
datawizard_acquire_cb_insert_LDADD = $(LDADD)
datawizard_acquire_cb_insert_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__datawizard_acquire_release_SOURCES_DIST =  \
	datawizard/acquire_release.c \
	datawizard/acquire_release_cuda.cu \
	datawizard/acquire_release_opencl.c
am__objects_1 = datawizard/acquire_release_cuda.$(OBJEXT)
#am__objects_2 =  \
#	acquire_release_opencl.$(OBJEXT)
am_datawizard_acquire_release_OBJECTS = acquire_release.$(OBJEXT) \
	$(am__objects_1) $(am__objects_2)
datawizard_acquire_release_OBJECTS =  \
	$(am_datawizard_acquire_release_OBJECTS)
datawizard_acquire_release_LDADD = $(LDADD)
datawizard_acquire_release_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__datawizard_acquire_release2_SOURCES_DIST =  \
	datawizard/acquire_release2.c \
	datawizard/acquire_release_cuda.cu \
	datawizard/acquire_release_opencl.c
am_datawizard_acquire_release2_OBJECTS = acquire_release2.$(OBJEXT) \
	$(am__objects_1) $(am__objects_2)
datawizard_acquire_release2_OBJECTS =  \
	$(am_datawizard_acquire_release2_OBJECTS)
datawizard_acquire_release2_LDADD = $(LDADD)
datawizard_acquire_release2_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_acquire_try_SOURCES = datawizard/acquire_try.c
datawizard_acquire_try_OBJECTS = acquire_try.$(OBJEXT)
datawizard_acquire_try_LDADD = $(LDADD)
datawizard_acquire_try_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_allocate_SOURCES = datawizard/allocate.c
datawizard_allocate_OBJECTS = allocate.$(OBJEXT)
datawizard_allocate_LDADD = $(LDADD)
datawizard_allocate_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_bcsr_SOURCES = datawizard/bcsr.c
datawizard_bcsr_OBJECTS = bcsr.$(OBJEXT)
datawizard_bcsr_LDADD = $(LDADD)
datawizard_bcsr_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
datawizard_cache_SOURCES = datawizard/cache.c
datawizard_cache_OBJECTS = cache.$(OBJEXT)
datawizard_cache_LDADD = $(LDADD)
datawizard_cache_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
datawizard_commute_SOURCES = datawizard/commute.c
datawizard_commute_OBJECTS = commute.$(OBJEXT)
datawizard_commute_LDADD = $(LDADD)
datawizard_commute_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_commute2_SOURCES = datawizard/commute2.c
datawizard_commute2_OBJECTS = commute2.$(OBJEXT)
datawizard_commute2_LDADD = $(LDADD)
datawizard_commute2_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_copy_SOURCES = datawizard/copy.c
datawizard_copy_OBJECTS = copy.$(OBJEXT)
datawizard_copy_LDADD = $(LDADD)
datawizard_copy_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
datawizard_critical_section_with_void_interface_SOURCES =  \
	datawizard/critical_section_with_void_interface.c
datawizard_critical_section_with_void_interface_OBJECTS =  \
	critical_section_with_void_interface.$(OBJEXT)
datawizard_critical_section_with_void_interface_LDADD = $(LDADD)
datawizard_critical_section_with_void_interface_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_data_implicit_deps_SOURCES =  \
	datawizard/data_implicit_deps.c
datawizard_data_implicit_deps_OBJECTS = data_implicit_deps.$(OBJEXT)
datawizard_data_implicit_deps_LDADD = $(LDADD)
datawizard_data_implicit_deps_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_data_invalidation_SOURCES = datawizard/data_invalidation.c
datawizard_data_invalidation_OBJECTS = data_invalidation.$(OBJEXT)
datawizard_data_invalidation_LDADD = $(LDADD)
datawizard_data_invalidation_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_data_lookup_SOURCES = datawizard/data_lookup.c
datawizard_data_lookup_OBJECTS = data_lookup.$(OBJEXT)
datawizard_data_lookup_LDADD = $(LDADD)
datawizard_data_lookup_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_deps_SOURCES = datawizard/deps.c
datawizard_deps_OBJECTS = deps.$(OBJEXT)
datawizard_deps_LDADD = $(LDADD)
datawizard_deps_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
datawizard_dining_philosophers_SOURCES =  \
	datawizard/dining_philosophers.c
datawizard_dining_philosophers_OBJECTS =  \
	dining_philosophers.$(OBJEXT)
datawizard_dining_philosophers_LDADD = $(LDADD)
datawizard_dining_philosophers_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_double_parameter_SOURCES = datawizard/double_parameter.c
datawizard_double_parameter_OBJECTS = double_parameter.$(OBJEXT)
datawizard_double_parameter_LDADD = $(LDADD)
datawizard_double_parameter_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_dsm_stress_SOURCES = datawizard/dsm_stress.c
datawizard_dsm_stress_OBJECTS = dsm_stress.$(OBJEXT)
datawizard_dsm_stress_LDADD = $(LDADD)
datawizard_dsm_stress_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__datawizard_gpu_ptr_register_SOURCES_DIST =  \
	datawizard/gpu_ptr_register.c datawizard/scal.c \
	datawizard/scal_cuda.cu datawizard/scal_opencl.cl
am__objects_3 = datawizard/scal_cuda.$(OBJEXT)
am__objects_4 =
am_datawizard_gpu_ptr_register_OBJECTS = gpu_ptr_register.$(OBJEXT) \
	scal.$(OBJEXT) $(am__objects_3) $(am__objects_4)
datawizard_gpu_ptr_register_OBJECTS =  \
	$(am_datawizard_gpu_ptr_register_OBJECTS)
datawizard_gpu_ptr_register_LDADD = $(LDADD)
datawizard_gpu_ptr_register_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__datawizard_gpu_register_SOURCES_DIST = datawizard/gpu_register.c \
	datawizard/scal.c datawizard/scal_cuda.cu \
	datawizard/scal_opencl.cl
am_datawizard_gpu_register_OBJECTS = gpu_register.$(OBJEXT) \
	scal.$(OBJEXT) $(am__objects_3) $(am__objects_4)
datawizard_gpu_register_OBJECTS =  \
	$(am_datawizard_gpu_register_OBJECTS)
datawizard_gpu_register_LDADD = $(LDADD)
datawizard_gpu_register_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_handle_to_pointer_SOURCES = datawizard/handle_to_pointer.c
datawizard_handle_to_pointer_OBJECTS = handle_to_pointer.$(OBJEXT)
datawizard_handle_to_pointer_LDADD = $(LDADD)
datawizard_handle_to_pointer_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__datawizard_in_place_partition_SOURCES_DIST =  \
	datawizard/in_place_partition.c datawizard/scal.c \
	datawizard/scal_cuda.cu datawizard/scal_opencl.cl
am_datawizard_in_place_partition_OBJECTS =  \
	in_place_partition.$(OBJEXT) scal.$(OBJEXT) $(am__objects_3) \
	$(am__objects_4)
datawizard_in_place_partition_OBJECTS =  \
	$(am_datawizard_in_place_partition_OBJECTS)
datawizard_in_place_partition_LDADD = $(LDADD)
datawizard_in_place_partition_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_increment_init_SOURCES = datawizard/increment_init.c
datawizard_increment_init_OBJECTS = increment_init.$(OBJEXT)
datawizard_increment_init_LDADD = $(LDADD)
datawizard_increment_init_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_increment_redux_SOURCES = datawizard/increment_redux.c
datawizard_increment_redux_OBJECTS = increment_redux.$(OBJEXT)
datawizard_increment_redux_LDADD = $(LDADD)
datawizard_increment_redux_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_increment_redux_lazy_SOURCES =  \
	datawizard/increment_redux_lazy.c
datawizard_increment_redux_lazy_OBJECTS =  \
	increment_redux_lazy.$(OBJEXT)
datawizard_increment_redux_lazy_LDADD = $(LDADD)
datawizard_increment_redux_lazy_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_increment_redux_v2_SOURCES =  \
	datawizard/increment_redux_v2.c
datawizard_increment_redux_v2_OBJECTS = increment_redux_v2.$(OBJEXT)
datawizard_increment_redux_v2_LDADD = $(LDADD)
datawizard_increment_redux_v2_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__datawizard_interfaces_bcsr_bcsr_interface_SOURCES_DIST =  \
	datawizard/interfaces/test_interfaces.c \
	datawizard/interfaces/bcsr/bcsr_interface.c \
	datawizard/interfaces/bcsr/bcsr_cuda.cu \
	datawizard/interfaces/bcsr/bcsr_opencl.c
am__objects_5 = datawizard/interfaces/bcsr/bcsr_cuda.$(OBJEXT)
#am__objects_6 = bcsr_opencl.$(OBJEXT)
am_datawizard_interfaces_bcsr_bcsr_interface_OBJECTS =  \
	test_interfaces.$(OBJEXT) bcsr_interface.$(OBJEXT) \
	$(am__objects_5) $(am__objects_6)
datawizard_interfaces_bcsr_bcsr_interface_OBJECTS =  \
	$(am_datawizard_interfaces_bcsr_bcsr_interface_OBJECTS)
datawizard_interfaces_bcsr_bcsr_interface_LDADD = $(LDADD)
datawizard_interfaces_bcsr_bcsr_interface_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__datawizard_interfaces_block_block_interface_SOURCES_DIST =  \
	datawizard/interfaces/test_interfaces.c \
	datawizard/interfaces/block/block_interface.c \
	datawizard/interfaces/block/block_cuda.cu \
	datawizard/interfaces/block/block_opencl.c
am__objects_7 = datawizard/interfaces/block/block_cuda.$(OBJEXT)
#am__objects_8 = block_opencl.$(OBJEXT)
am_datawizard_interfaces_block_block_interface_OBJECTS =  \
	test_interfaces.$(OBJEXT) block_interface.$(OBJEXT) \
	$(am__objects_7) $(am__objects_8)
datawizard_interfaces_block_block_interface_OBJECTS =  \
	$(am_datawizard_interfaces_block_block_interface_OBJECTS)
datawizard_interfaces_block_block_interface_LDADD = $(LDADD)
datawizard_interfaces_block_block_interface_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__datawizard_interfaces_coo_coo_interface_SOURCES_DIST =  \
	datawizard/interfaces/test_interfaces.c \
	datawizard/interfaces/coo/coo_interface.c \
	datawizard/interfaces/coo/coo_cuda.cu \
	datawizard/interfaces/coo/coo_opencl.c
am__objects_9 = datawizard/interfaces/coo/coo_cuda.$(OBJEXT)
#am__objects_10 = coo_opencl.$(OBJEXT)
am_datawizard_interfaces_coo_coo_interface_OBJECTS =  \
	test_interfaces.$(OBJEXT) coo_interface.$(OBJEXT) \
	$(am__objects_9) $(am__objects_10)
datawizard_interfaces_coo_coo_interface_OBJECTS =  \
	$(am_datawizard_interfaces_coo_coo_interface_OBJECTS)
datawizard_interfaces_coo_coo_interface_LDADD = $(LDADD)
datawizard_interfaces_coo_coo_interface_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_interfaces_copy_interfaces_SOURCES =  \
	datawizard/interfaces/copy_interfaces.c
datawizard_interfaces_copy_interfaces_OBJECTS =  \
	copy_interfaces.$(OBJEXT)
datawizard_interfaces_copy_interfaces_LDADD = $(LDADD)
datawizard_interfaces_copy_interfaces_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__datawizard_interfaces_csr_csr_interface_SOURCES_DIST =  \
	datawizard/interfaces/test_interfaces.c \
	datawizard/interfaces/csr/csr_interface.c \
	datawizard/interfaces/csr/csr_cuda.cu \
	datawizard/interfaces/csr/csr_opencl.c
am__objects_11 = datawizard/interfaces/csr/csr_cuda.$(OBJEXT)
#am__objects_12 = csr_opencl.$(OBJEXT)
am_datawizard_interfaces_csr_csr_interface_OBJECTS =  \
	test_interfaces.$(OBJEXT) csr_interface.$(OBJEXT) \
	$(am__objects_11) $(am__objects_12)
datawizard_interfaces_csr_csr_interface_OBJECTS =  \
	$(am_datawizard_interfaces_csr_csr_interface_OBJECTS)
datawizard_interfaces_csr_csr_interface_LDADD = $(LDADD)
datawizard_interfaces_csr_csr_interface_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__datawizard_interfaces_matrix_matrix_interface_SOURCES_DIST =  \
	datawizard/interfaces/test_interfaces.c \
	datawizard/interfaces/matrix/matrix_interface.c \
	datawizard/interfaces/matrix/matrix_cuda.cu \
	datawizard/interfaces/matrix/matrix_opencl.c
am__objects_13 = datawizard/interfaces/matrix/matrix_cuda.$(OBJEXT)
#am__objects_14 = matrix_opencl.$(OBJEXT)
am_datawizard_interfaces_matrix_matrix_interface_OBJECTS =  \
	test_interfaces.$(OBJEXT) matrix_interface.$(OBJEXT) \
	$(am__objects_13) $(am__objects_14)
datawizard_interfaces_matrix_matrix_interface_OBJECTS =  \
	$(am_datawizard_interfaces_matrix_matrix_interface_OBJECTS)
datawizard_interfaces_matrix_matrix_interface_LDADD = $(LDADD)
datawizard_interfaces_matrix_matrix_interface_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_datawizard_interfaces_multiformat_advanced_multiformat_cuda_opencl_OBJECTS =  \
	generic.$(OBJEXT) multiformat_cuda_opencl.$(OBJEXT)
datawizard_interfaces_multiformat_advanced_multiformat_cuda_opencl_OBJECTS = $(am_datawizard_interfaces_multiformat_advanced_multiformat_cuda_opencl_OBJECTS)
datawizard_interfaces_multiformat_advanced_multiformat_cuda_opencl_LDADD =  \
	$(LDADD)
datawizard_interfaces_multiformat_advanced_multiformat_cuda_opencl_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_datawizard_interfaces_multiformat_advanced_multiformat_data_release_OBJECTS =  \
	generic.$(OBJEXT) multiformat_data_release.$(OBJEXT)
datawizard_interfaces_multiformat_advanced_multiformat_data_release_OBJECTS = $(am_datawizard_interfaces_multiformat_advanced_multiformat_data_release_OBJECTS)
datawizard_interfaces_multiformat_advanced_multiformat_data_release_LDADD =  \
	$(LDADD)
datawizard_interfaces_multiformat_advanced_multiformat_data_release_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_datawizard_interfaces_multiformat_advanced_multiformat_handle_conversion_OBJECTS =  \
	generic.$(OBJEXT) multiformat_handle_conversion.$(OBJEXT)
datawizard_interfaces_multiformat_advanced_multiformat_handle_conversion_OBJECTS = $(am_datawizard_interfaces_multiformat_advanced_multiformat_handle_conversion_OBJECTS)
datawizard_interfaces_multiformat_advanced_multiformat_handle_conversion_LDADD =  \
	$(LDADD)
datawizard_interfaces_multiformat_advanced_multiformat_handle_conversion_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_datawizard_interfaces_multiformat_advanced_multiformat_worker_OBJECTS =  \
	generic.$(OBJEXT) multiformat_worker.$(OBJEXT)
datawizard_interfaces_multiformat_advanced_multiformat_worker_OBJECTS = $(am_datawizard_interfaces_multiformat_advanced_multiformat_worker_OBJECTS)
datawizard_interfaces_multiformat_advanced_multiformat_worker_LDADD =  \
	$(LDADD)
datawizard_interfaces_multiformat_advanced_multiformat_worker_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_datawizard_interfaces_multiformat_advanced_same_handle_OBJECTS =  \
	generic.$(OBJEXT) same_handle.$(OBJEXT)
datawizard_interfaces_multiformat_advanced_same_handle_OBJECTS = $(am_datawizard_interfaces_multiformat_advanced_same_handle_OBJECTS)
datawizard_interfaces_multiformat_advanced_same_handle_LDADD =  \
	$(LDADD)
datawizard_interfaces_multiformat_advanced_same_handle_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__datawizard_interfaces_multiformat_multiformat_interface_SOURCES_DIST =  \
	datawizard/interfaces/test_interfaces.c \
	datawizard/interfaces/multiformat/multiformat_interface.c \
	datawizard/interfaces/multiformat/multiformat_conversion_codelets.c \
	datawizard/interfaces/multiformat/multiformat_cuda.cu \
	datawizard/interfaces/multiformat/multiformat_conversion_codelets_cuda.cu \
	datawizard/interfaces/multiformat/multiformat_opencl.c \
	datawizard/interfaces/multiformat/multiformat_conversion_codelets_opencl.c
am__objects_15 = datawizard/interfaces/multiformat/multiformat_cuda.$(OBJEXT) \
	datawizard/interfaces/multiformat/multiformat_conversion_codelets_cuda.$(OBJEXT)
#am__objects_16 = multiformat_opencl.$(OBJEXT) \
#	multiformat_conversion_codelets_opencl.$(OBJEXT)
am_datawizard_interfaces_multiformat_multiformat_interface_OBJECTS =  \
	test_interfaces.$(OBJEXT) multiformat_interface.$(OBJEXT) \
	multiformat_conversion_codelets.$(OBJEXT) $(am__objects_15) \
	$(am__objects_16)
datawizard_interfaces_multiformat_multiformat_interface_OBJECTS = $(am_datawizard_interfaces_multiformat_multiformat_interface_OBJECTS)
datawizard_interfaces_multiformat_multiformat_interface_LDADD =  \
	$(LDADD)
datawizard_interfaces_multiformat_multiformat_interface_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__datawizard_interfaces_variable_variable_interface_SOURCES_DIST =  \
	datawizard/interfaces/test_interfaces.c \
	datawizard/interfaces/variable/variable_interface.c \
	datawizard/interfaces/variable/variable_cuda.cu \
	datawizard/interfaces/variable/variable_opencl.c
am__objects_17 = datawizard/interfaces/variable/variable_cuda.$(OBJEXT)
#am__objects_18 = variable_opencl.$(OBJEXT)
am_datawizard_interfaces_variable_variable_interface_OBJECTS =  \
	test_interfaces.$(OBJEXT) variable_interface.$(OBJEXT) \
	$(am__objects_17) $(am__objects_18)
datawizard_interfaces_variable_variable_interface_OBJECTS = $(am_datawizard_interfaces_variable_variable_interface_OBJECTS)
datawizard_interfaces_variable_variable_interface_LDADD = $(LDADD)
datawizard_interfaces_variable_variable_interface_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__datawizard_interfaces_vector_vector_interface_SOURCES_DIST =  \
	datawizard/interfaces/vector/vector_interface.c \
	datawizard/interfaces/test_interfaces.c \
	datawizard/interfaces/vector/vector_cuda.cu \
	datawizard/interfaces/vector/vector_opencl.c
am__objects_19 = datawizard/interfaces/vector/vector_cuda.$(OBJEXT)
#am__objects_20 = vector_opencl.$(OBJEXT)
am_datawizard_interfaces_vector_vector_interface_OBJECTS =  \
	vector_interface.$(OBJEXT) test_interfaces.$(OBJEXT) \
	$(am__objects_19) $(am__objects_20)
datawizard_interfaces_vector_vector_interface_OBJECTS =  \
	$(am_datawizard_interfaces_vector_vector_interface_OBJECTS)
datawizard_interfaces_vector_vector_interface_LDADD = $(LDADD)
datawizard_interfaces_vector_vector_interface_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_datawizard_interfaces_void_void_interface_OBJECTS =  \
	test_interfaces.$(OBJEXT) void_interface.$(OBJEXT)
datawizard_interfaces_void_void_interface_OBJECTS =  \
	$(am_datawizard_interfaces_void_void_interface_OBJECTS)
datawizard_interfaces_void_void_interface_LDADD = $(LDADD)
datawizard_interfaces_void_void_interface_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_invalidate_pending_requests_SOURCES =  \
	datawizard/invalidate_pending_requests.c
datawizard_invalidate_pending_requests_OBJECTS =  \
	invalidate_pending_requests.$(OBJEXT)
datawizard_invalidate_pending_requests_LDADD = $(LDADD)
datawizard_invalidate_pending_requests_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_lazy_allocation_SOURCES = datawizard/lazy_allocation.c
datawizard_lazy_allocation_OBJECTS = lazy_allocation.$(OBJEXT)
datawizard_lazy_allocation_LDADD = $(LDADD)
datawizard_lazy_allocation_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_lazy_unregister_SOURCES = datawizard/lazy_unregister.c
datawizard_lazy_unregister_OBJECTS = lazy_unregister.$(OBJEXT)
datawizard_lazy_unregister_LDADD = $(LDADD)
datawizard_lazy_unregister_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_locality_SOURCES = datawizard/locality.c
datawizard_locality_OBJECTS = locality.$(OBJEXT)
datawizard_locality_LDADD = $(LDADD)
datawizard_locality_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_manual_reduction_SOURCES = datawizard/manual_reduction.c
datawizard_manual_reduction_OBJECTS = manual_reduction.$(OBJEXT)
datawizard_manual_reduction_LDADD = $(LDADD)
datawizard_manual_reduction_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__datawizard_mpi_like_SOURCES_DIST = datawizard/mpi_like.c \
	datawizard/cuda_codelet_unsigned_inc.cu \
	datawizard/opencl_codelet_unsigned_inc.c
am__objects_21 = datawizard/cuda_codelet_unsigned_inc.$(OBJEXT)
#am__objects_22 =  \
#	opencl_codelet_unsigned_inc.$(OBJEXT)
am_datawizard_mpi_like_OBJECTS = mpi_like.$(OBJEXT) $(am__objects_21) \
	$(am__objects_22)
datawizard_mpi_like_OBJECTS = $(am_datawizard_mpi_like_OBJECTS)
datawizard_mpi_like_LDADD = $(LDADD)
datawizard_mpi_like_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__datawizard_mpi_like_async_SOURCES_DIST =  \
	datawizard/mpi_like_async.c \
	datawizard/cuda_codelet_unsigned_inc.cu \
	datawizard/opencl_codelet_unsigned_inc.c
am_datawizard_mpi_like_async_OBJECTS = mpi_like_async.$(OBJEXT) \
	$(am__objects_21) $(am__objects_22)
datawizard_mpi_like_async_OBJECTS =  \
	$(am_datawizard_mpi_like_async_OBJECTS)
datawizard_mpi_like_async_LDADD = $(LDADD)
datawizard_mpi_like_async_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_no_unregister_SOURCES = datawizard/no_unregister.c
datawizard_no_unregister_OBJECTS = no_unregister.$(OBJEXT)
datawizard_no_unregister_LDADD = $(LDADD)
datawizard_no_unregister_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_noreclaim_SOURCES = datawizard/noreclaim.c
datawizard_noreclaim_OBJECTS = noreclaim.$(OBJEXT)
datawizard_noreclaim_LDADD = $(LDADD)
datawizard_noreclaim_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_nowhere_SOURCES = datawizard/nowhere.c
datawizard_nowhere_OBJECTS = nowhere.$(OBJEXT)
datawizard_nowhere_LDADD = $(LDADD)
datawizard_nowhere_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_numa_overflow_SOURCES = datawizard/numa_overflow.c
datawizard_numa_overflow_OBJECTS = numa_overflow.$(OBJEXT)
datawizard_numa_overflow_LDADD = $(LDADD)
datawizard_numa_overflow_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__datawizard_partition_dep_SOURCES_DIST =  \
	datawizard/partition_dep.c datawizard/scal.c \
	datawizard/scal_cuda.cu datawizard/scal_opencl.cl
am_datawizard_partition_dep_OBJECTS = partition_dep.$(OBJEXT) \
	scal.$(OBJEXT) $(am__objects_3) $(am__objects_4)
datawizard_partition_dep_OBJECTS =  \
	$(am_datawizard_partition_dep_OBJECTS)
datawizard_partition_dep_LDADD = $(LDADD)
datawizard_partition_dep_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_partition_init_SOURCES = datawizard/partition_init.c
datawizard_partition_init_OBJECTS = partition_init.$(OBJEXT)
datawizard_partition_init_LDADD = $(LDADD)
datawizard_partition_init_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__datawizard_partition_lazy_SOURCES_DIST =  \
	datawizard/partition_lazy.c datawizard/scal.c \
	datawizard/scal_cuda.cu datawizard/scal_opencl.cl
am_datawizard_partition_lazy_OBJECTS = partition_lazy.$(OBJEXT) \
	scal.$(OBJEXT) $(am__objects_3) $(am__objects_4)
datawizard_partition_lazy_OBJECTS =  \
	$(am_datawizard_partition_lazy_OBJECTS)
datawizard_partition_lazy_LDADD = $(LDADD)
datawizard_partition_lazy_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_partitioned_acquire_SOURCES =  \
	datawizard/partitioned_acquire.c
datawizard_partitioned_acquire_OBJECTS =  \
	partitioned_acquire.$(OBJEXT)
datawizard_partitioned_acquire_LDADD = $(LDADD)
datawizard_partitioned_acquire_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_partitioned_initialization_SOURCES =  \
	datawizard/partitioned_initialization.c
datawizard_partitioned_initialization_OBJECTS =  \
	partitioned_initialization.$(OBJEXT)
datawizard_partitioned_initialization_LDADD = $(LDADD)
datawizard_partitioned_initialization_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_readers_and_writers_SOURCES =  \
	datawizard/readers_and_writers.c
datawizard_readers_and_writers_OBJECTS =  \
	readers_and_writers.$(OBJEXT)
datawizard_readers_and_writers_LDADD = $(LDADD)
datawizard_readers_and_writers_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_readonly_SOURCES = datawizard/readonly.c
datawizard_readonly_OBJECTS = readonly.$(OBJEXT)
datawizard_readonly_LDADD = $(LDADD)
datawizard_readonly_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_reclaim_SOURCES = datawizard/reclaim.c
datawizard_reclaim_OBJECTS = reclaim.$(OBJEXT)
datawizard_reclaim_LDADD = $(LDADD)
datawizard_reclaim_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_redux_acquire_SOURCES = datawizard/redux_acquire.c
datawizard_redux_acquire_OBJECTS = redux_acquire.$(OBJEXT)
datawizard_redux_acquire_LDADD = $(LDADD)
datawizard_redux_acquire_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__datawizard_scratch_SOURCES_DIST = datawizard/scratch.c \
	datawizard/scratch_cuda.cu datawizard/scratch_opencl.c
am__objects_23 =  \
	datawizard/scratch_cuda.$(OBJEXT)
#am__objects_24 = scratch_opencl.$(OBJEXT)
am_datawizard_scratch_OBJECTS = scratch.$(OBJEXT) $(am__objects_23) \
	$(am__objects_24)
datawizard_scratch_OBJECTS = $(am_datawizard_scratch_OBJECTS)
datawizard_scratch_LDADD = $(LDADD)
datawizard_scratch_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_scratch_reuse_SOURCES = datawizard/scratch_reuse.c
datawizard_scratch_reuse_OBJECTS = scratch_reuse.$(OBJEXT)
datawizard_scratch_reuse_LDADD = $(LDADD)
datawizard_scratch_reuse_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_simgrid_locality_SOURCES = datawizard/simgrid-locality.c
datawizard_simgrid_locality_OBJECTS = simgrid-locality.$(OBJEXT)
datawizard_simgrid_locality_LDADD = $(LDADD)
datawizard_simgrid_locality_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__datawizard_specific_node_SOURCES_DIST =  \
	datawizard/specific_node.c \
	datawizard/cuda_codelet_unsigned_inc.cu \
	datawizard/opencl_codelet_unsigned_inc.c
am_datawizard_specific_node_OBJECTS = specific_node.$(OBJEXT) \
	$(am__objects_21) $(am__objects_22)
datawizard_specific_node_OBJECTS =  \
	$(am_datawizard_specific_node_OBJECTS)
datawizard_specific_node_LDADD = $(LDADD)
datawizard_specific_node_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__datawizard_sync_and_notify_data_SOURCES_DIST =  \
	datawizard/sync_and_notify_data.c \
	datawizard/sync_and_notify_data_kernels.cu \
	datawizard/sync_and_notify_data_opencl.c
am__objects_25 = datawizard/sync_and_notify_data_kernels.$(OBJEXT)
#am__objects_26 =  \
#	sync_and_notify_data_opencl.$(OBJEXT)
am_datawizard_sync_and_notify_data_OBJECTS =  \
	sync_and_notify_data.$(OBJEXT) $(am__objects_25) \
	$(am__objects_26)
datawizard_sync_and_notify_data_OBJECTS =  \
	$(am_datawizard_sync_and_notify_data_OBJECTS)
datawizard_sync_and_notify_data_LDADD = $(LDADD)
datawizard_sync_and_notify_data_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__datawizard_sync_and_notify_data_implicit_SOURCES_DIST =  \
	datawizard/sync_and_notify_data_implicit.c \
	datawizard/sync_and_notify_data_kernels.cu \
	datawizard/sync_and_notify_data_opencl.c
am_datawizard_sync_and_notify_data_implicit_OBJECTS =  \
	sync_and_notify_data_implicit.$(OBJEXT) $(am__objects_25) \
	$(am__objects_26)
datawizard_sync_and_notify_data_implicit_OBJECTS =  \
	$(am_datawizard_sync_and_notify_data_implicit_OBJECTS)
datawizard_sync_and_notify_data_implicit_LDADD = $(LDADD)
datawizard_sync_and_notify_data_implicit_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_sync_with_data_with_mem_SOURCES =  \
	datawizard/sync_with_data_with_mem.c
datawizard_sync_with_data_with_mem_OBJECTS =  \
	sync_with_data_with_mem.$(OBJEXT)
datawizard_sync_with_data_with_mem_LDADD = $(LDADD)
datawizard_sync_with_data_with_mem_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_sync_with_data_with_mem_non_blocking_SOURCES =  \
	datawizard/sync_with_data_with_mem_non_blocking.c
datawizard_sync_with_data_with_mem_non_blocking_OBJECTS =  \
	sync_with_data_with_mem_non_blocking.$(OBJEXT)
datawizard_sync_with_data_with_mem_non_blocking_LDADD = $(LDADD)
datawizard_sync_with_data_with_mem_non_blocking_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_sync_with_data_with_mem_non_blocking_implicit_SOURCES =  \
	datawizard/sync_with_data_with_mem_non_blocking_implicit.c
datawizard_sync_with_data_with_mem_non_blocking_implicit_OBJECTS =  \
	sync_with_data_with_mem_non_blocking_implicit.$(OBJEXT)
datawizard_sync_with_data_with_mem_non_blocking_implicit_LDADD =  \
	$(LDADD)
datawizard_sync_with_data_with_mem_non_blocking_implicit_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_task_with_multiple_time_the_same_handle_SOURCES =  \
	datawizard/task_with_multiple_time_the_same_handle.c
datawizard_task_with_multiple_time_the_same_handle_OBJECTS =  \
	task_with_multiple_time_the_same_handle.$(OBJEXT)
datawizard_task_with_multiple_time_the_same_handle_LDADD = $(LDADD)
datawizard_task_with_multiple_time_the_same_handle_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_temporary_partition_SOURCES =  \
	datawizard/temporary_partition.c
datawizard_temporary_partition_OBJECTS =  \
	temporary_partition.$(OBJEXT)
datawizard_temporary_partition_LDADD = $(LDADD)
datawizard_temporary_partition_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_temporary_partition_implicit_SOURCES =  \
	datawizard/temporary_partition_implicit.c
datawizard_temporary_partition_implicit_OBJECTS =  \
	temporary_partition_implicit.$(OBJEXT)
datawizard_temporary_partition_implicit_LDADD = $(LDADD)
datawizard_temporary_partition_implicit_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_datawizard_test_arbiter_OBJECTS = test_arbiter.$(OBJEXT)
datawizard_test_arbiter_OBJECTS =  \
	$(am_datawizard_test_arbiter_OBJECTS)
datawizard_test_arbiter_LDADD = $(LDADD)
datawizard_test_arbiter_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_unpartition_SOURCES = datawizard/unpartition.c
datawizard_unpartition_OBJECTS = unpartition.$(OBJEXT)
datawizard_unpartition_LDADD = $(LDADD)
datawizard_unpartition_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_user_interaction_implicit_SOURCES =  \
	datawizard/user_interaction_implicit.c
datawizard_user_interaction_implicit_OBJECTS =  \
	user_interaction_implicit.$(OBJEXT)
datawizard_user_interaction_implicit_LDADD = $(LDADD)
datawizard_user_interaction_implicit_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_variable_parameters_SOURCES =  \
	datawizard/variable_parameters.c
datawizard_variable_parameters_OBJECTS =  \
	variable_parameters.$(OBJEXT)
datawizard_variable_parameters_LDADD = $(LDADD)
datawizard_variable_parameters_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_variable_size_SOURCES = datawizard/variable_size.c
datawizard_variable_size_OBJECTS = variable_size.$(OBJEXT)
datawizard_variable_size_LDADD = $(LDADD)
datawizard_variable_size_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
datawizard_write_only_tmp_buffer_SOURCES =  \
	datawizard/write_only_tmp_buffer.c
datawizard_write_only_tmp_buffer_OBJECTS =  \
	write_only_tmp_buffer.$(OBJEXT)
datawizard_write_only_tmp_buffer_LDADD = $(LDADD)
datawizard_write_only_tmp_buffer_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_datawizard_wt_broadcast_OBJECTS = wt_broadcast.$(OBJEXT)
datawizard_wt_broadcast_OBJECTS =  \
	$(am_datawizard_wt_broadcast_OBJECTS)
datawizard_wt_broadcast_LDADD = $(LDADD)
datawizard_wt_broadcast_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_datawizard_wt_host_OBJECTS = wt_host.$(OBJEXT)
datawizard_wt_host_OBJECTS = $(am_datawizard_wt_host_OBJECTS)
datawizard_wt_host_LDADD = $(LDADD)
datawizard_wt_host_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
disk_disk_compute_SOURCES = disk/disk_compute.c
disk_disk_compute_OBJECTS = disk_compute.$(OBJEXT)
disk_disk_compute_LDADD = $(LDADD)
disk_disk_compute_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
disk_disk_copy_SOURCES = disk/disk_copy.c
disk_disk_copy_OBJECTS = disk_copy.$(OBJEXT)
disk_disk_copy_LDADD = $(LDADD)
disk_disk_copy_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
disk_disk_copy_to_disk_SOURCES = disk/disk_copy_to_disk.c
disk_disk_copy_to_disk_OBJECTS = disk_copy_to_disk.$(OBJEXT)
disk_disk_copy_to_disk_LDADD = $(LDADD)
disk_disk_copy_to_disk_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
disk_disk_copy_unpack_SOURCES = disk/disk_copy_unpack.c
disk_disk_copy_unpack_OBJECTS = disk_copy_unpack.$(OBJEXT)
disk_disk_copy_unpack_LDADD = $(LDADD)
disk_disk_copy_unpack_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
disk_disk_pack_SOURCES = disk/disk_pack.c
disk_disk_pack_OBJECTS = disk_pack.$(OBJEXT)
disk_disk_pack_LDADD = $(LDADD)
disk_disk_pack_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
disk_mem_reclaim_SOURCES = disk/mem_reclaim.c
disk_mem_reclaim_OBJECTS = mem_reclaim.$(OBJEXT)
disk_mem_reclaim_LDADD = $(LDADD)
disk_mem_reclaim_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
errorcheck_invalid_blocking_calls_SOURCES =  \
	errorcheck/invalid_blocking_calls.c
errorcheck_invalid_blocking_calls_OBJECTS =  \
	invalid_blocking_calls.$(OBJEXT)
errorcheck_invalid_blocking_calls_LDADD = $(LDADD)
errorcheck_invalid_blocking_calls_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
errorcheck_invalid_tasks_SOURCES = errorcheck/invalid_tasks.c
errorcheck_invalid_tasks_OBJECTS = invalid_tasks.$(OBJEXT)
errorcheck_invalid_tasks_LDADD = $(LDADD)
errorcheck_invalid_tasks_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
errorcheck_starpu_init_noworker_SOURCES =  \
	errorcheck/starpu_init_noworker.c
errorcheck_starpu_init_noworker_OBJECTS =  \
	starpu_init_noworker.$(OBJEXT)
errorcheck_starpu_init_noworker_LDADD = $(LDADD)
errorcheck_starpu_init_noworker_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
errorcheck_workers_cpuid_SOURCES = errorcheck/workers_cpuid.c
errorcheck_workers_cpuid_OBJECTS = workers_cpuid.$(OBJEXT)
errorcheck_workers_cpuid_LDADD = $(LDADD)
errorcheck_workers_cpuid_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__fortran90_init_01_SOURCES_DIST =  \
	$(top_srcdir)/include/starpu_mod.f90 fortran90/init_01.f90
#am_fortran90_init_01_OBJECTS =  \
#	starpu_mod.$(OBJEXT) init_01.$(OBJEXT)
fortran90_init_01_OBJECTS = $(am_fortran90_init_01_OBJECTS)
fortran90_init_01_LDADD = $(LDADD)
fortran90_init_01_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
helper_cublas_init_SOURCES = helper/cublas_init.c
helper_cublas_init_OBJECTS = cublas_init.$(OBJEXT)
helper_cublas_init_LDADD = $(LDADD)
helper_cublas_init_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
helper_cusparse_init_SOURCES = helper/cusparse_init.c
helper_cusparse_init_OBJECTS = cusparse_init.$(OBJEXT)
helper_cusparse_init_LDADD = $(LDADD)
helper_cusparse_init_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
helper_execute_on_all_SOURCES = helper/execute_on_all.c
helper_execute_on_all_OBJECTS = execute_on_all.$(OBJEXT)
helper_execute_on_all_LDADD = $(LDADD)
helper_execute_on_all_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
helper_pinned_memory_SOURCES = helper/pinned_memory.c
helper_pinned_memory_OBJECTS = pinned_memory.$(OBJEXT)
helper_pinned_memory_LDADD = $(LDADD)
helper_pinned_memory_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
helper_starpu_create_sync_task_SOURCES =  \
	helper/starpu_create_sync_task.c
helper_starpu_create_sync_task_OBJECTS =  \
	starpu_create_sync_task.$(OBJEXT)
helper_starpu_create_sync_task_LDADD = $(LDADD)
helper_starpu_create_sync_task_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
helper_starpu_data_cpy_SOURCES = helper/starpu_data_cpy.c
helper_starpu_data_cpy_OBJECTS = starpu_data_cpy.$(OBJEXT)
helper_starpu_data_cpy_LDADD = $(LDADD)
helper_starpu_data_cpy_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
loader_SOURCES = loader.c
loader_OBJECTS = loader.$(OBJEXT)
loader_LDADD = $(LDADD)
loader_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
main_bind_SOURCES = main/bind.c
main_bind_OBJECTS = bind.$(OBJEXT)
main_bind_LDADD = $(LDADD)
main_bind_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
main_callback_SOURCES = main/callback.c
main_callback_OBJECTS = callback.$(OBJEXT)
main_callback_LDADD = $(LDADD)
main_callback_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
main_codelet_null_callback_SOURCES = main/codelet_null_callback.c
main_codelet_null_callback_OBJECTS = codelet_null_callback.$(OBJEXT)
main_codelet_null_callback_LDADD = $(LDADD)
main_codelet_null_callback_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_declare_deps_after_submission_SOURCES =  \
	main/declare_deps_after_submission.c
main_declare_deps_after_submission_OBJECTS =  \
	declare_deps_after_submission.$(OBJEXT)
main_declare_deps_after_submission_LDADD = $(LDADD)
main_declare_deps_after_submission_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_declare_deps_after_submission_synchronous_SOURCES =  \
	main/declare_deps_after_submission_synchronous.c
main_declare_deps_after_submission_synchronous_OBJECTS =  \
	declare_deps_after_submission_synchronous.$(OBJEXT)
main_declare_deps_after_submission_synchronous_LDADD = $(LDADD)
main_declare_deps_after_submission_synchronous_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_declare_deps_in_callback_SOURCES =  \
	main/declare_deps_in_callback.c
main_declare_deps_in_callback_OBJECTS =  \
	declare_deps_in_callback.$(OBJEXT)
main_declare_deps_in_callback_LDADD = $(LDADD)
main_declare_deps_in_callback_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_deploop_SOURCES = main/deploop.c
main_deploop_OBJECTS = deploop.$(OBJEXT)
main_deploop_LDADD = $(LDADD)
main_deploop_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
main_deprecated_func_SOURCES = main/deprecated_func.c
main_deprecated_func_OBJECTS =  \
	main_deprecated_func-deprecated_func.$(OBJEXT)
main_deprecated_func_LDADD = $(LDADD)
main_deprecated_func_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_deprecated_func_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(main_deprecated_func_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
main_display_binding_SOURCES = main/display_binding.c
main_display_binding_OBJECTS = display_binding.$(OBJEXT)
main_display_binding_LDADD = $(LDADD)
main_display_binding_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_driver_api_init_run_deinit_SOURCES =  \
	main/driver_api/init_run_deinit.c
main_driver_api_init_run_deinit_OBJECTS = init_run_deinit.$(OBJEXT)
main_driver_api_init_run_deinit_LDADD = $(LDADD)
main_driver_api_init_run_deinit_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_driver_api_run_driver_SOURCES = main/driver_api/run_driver.c
main_driver_api_run_driver_OBJECTS = run_driver.$(OBJEXT)
main_driver_api_run_driver_LDADD = $(LDADD)
main_driver_api_run_driver_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_empty_task_SOURCES = main/empty_task.c
main_empty_task_OBJECTS = empty_task.$(OBJEXT)
main_empty_task_LDADD = $(LDADD)
main_empty_task_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
main_empty_task_chain_SOURCES = main/empty_task_chain.c
main_empty_task_chain_OBJECTS = empty_task_chain.$(OBJEXT)
main_empty_task_chain_LDADD = $(LDADD)
main_empty_task_chain_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_empty_task_sync_point_SOURCES = main/empty_task_sync_point.c
main_empty_task_sync_point_OBJECTS = empty_task_sync_point.$(OBJEXT)
main_empty_task_sync_point_LDADD = $(LDADD)
main_empty_task_sync_point_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_empty_task_sync_point_tasks_SOURCES =  \
	main/empty_task_sync_point_tasks.c
main_empty_task_sync_point_tasks_OBJECTS =  \
	empty_task_sync_point_tasks.$(OBJEXT)
main_empty_task_sync_point_tasks_LDADD = $(LDADD)
main_empty_task_sync_point_tasks_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_execute_on_a_specific_worker_SOURCES =  \
	main/execute_on_a_specific_worker.c
main_execute_on_a_specific_worker_OBJECTS =  \
	execute_on_a_specific_worker.$(OBJEXT)
main_execute_on_a_specific_worker_LDADD = $(LDADD)
main_execute_on_a_specific_worker_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_execute_schedule_SOURCES = main/execute_schedule.c
main_execute_schedule_OBJECTS = execute_schedule.$(OBJEXT)
main_execute_schedule_LDADD = $(LDADD)
main_execute_schedule_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_get_children_tasks_SOURCES = main/get_children_tasks.c
main_get_children_tasks_OBJECTS = get_children_tasks.$(OBJEXT)
main_get_children_tasks_LDADD = $(LDADD)
main_get_children_tasks_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_get_current_task_SOURCES = main/get_current_task.c
main_get_current_task_OBJECTS = get_current_task.$(OBJEXT)
main_get_current_task_LDADD = $(LDADD)
main_get_current_task_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_hwloc_cpuset_SOURCES = main/hwloc_cpuset.c
main_hwloc_cpuset_OBJECTS = hwloc_cpuset.$(OBJEXT)
main_hwloc_cpuset_LDADD = $(LDADD)
main_hwloc_cpuset_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
main_insert_task_SOURCES = main/insert_task.c
main_insert_task_OBJECTS = insert_task.$(OBJEXT)
main_insert_task_LDADD = $(LDADD)
main_insert_task_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
main_insert_task_array_SOURCES = main/insert_task_array.c
main_insert_task_array_OBJECTS = insert_task_array.$(OBJEXT)
main_insert_task_array_LDADD = $(LDADD)
main_insert_task_array_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_insert_task_dyn_handles_SOURCES = main/insert_task_dyn_handles.c
main_insert_task_dyn_handles_OBJECTS =  \
	insert_task_dyn_handles.$(OBJEXT)
main_insert_task_dyn_handles_LDADD = $(LDADD)
main_insert_task_dyn_handles_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_insert_task_many_SOURCES = main/insert_task_many.c
main_insert_task_many_OBJECTS = insert_task_many.$(OBJEXT)
main_insert_task_many_LDADD = $(LDADD)
main_insert_task_many_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_insert_task_nullcodelet_SOURCES = main/insert_task_nullcodelet.c
main_insert_task_nullcodelet_OBJECTS =  \
	insert_task_nullcodelet.$(OBJEXT)
main_insert_task_nullcodelet_LDADD = $(LDADD)
main_insert_task_nullcodelet_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_insert_task_pack_SOURCES = main/insert_task_pack.c
main_insert_task_pack_OBJECTS = insert_task_pack.$(OBJEXT)
main_insert_task_pack_LDADD = $(LDADD)
main_insert_task_pack_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_insert_task_value_SOURCES = main/insert_task_value.c
main_insert_task_value_OBJECTS = insert_task_value.$(OBJEXT)
main_insert_task_value_LDADD = $(LDADD)
main_insert_task_value_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__main_insert_task_where_SOURCES_DIST = main/insert_task_where.c \
	main/increment.cu
am__objects_27 = main/increment.$(OBJEXT)
am_main_insert_task_where_OBJECTS = insert_task_where.$(OBJEXT) \
	$(am__objects_27)
main_insert_task_where_OBJECTS = $(am_main_insert_task_where_OBJECTS)
main_insert_task_where_LDADD = $(LDADD)
main_insert_task_where_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_job_SOURCES = main/job.c
main_job_OBJECTS = job.$(OBJEXT)
main_job_LDADD = $(LDADD)
main_job_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
main_mkdtemp_SOURCES = main/mkdtemp.c
main_mkdtemp_OBJECTS = mkdtemp.$(OBJEXT)
main_mkdtemp_LDADD = $(LDADD)
main_mkdtemp_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
main_multithreaded_SOURCES = main/multithreaded.c
main_multithreaded_OBJECTS = multithreaded.$(OBJEXT)
main_multithreaded_LDADD = $(LDADD)
main_multithreaded_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_multithreaded_init_SOURCES = main/multithreaded_init.c
main_multithreaded_init_OBJECTS = multithreaded_init.$(OBJEXT)
main_multithreaded_init_LDADD = $(LDADD)
main_multithreaded_init_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_pack_SOURCES = main/pack.c
main_pack_OBJECTS = pack.$(OBJEXT)
main_pack_LDADD = $(LDADD)
main_pack_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
main_pause_resume_SOURCES = main/pause_resume.c
main_pause_resume_OBJECTS = pause_resume.$(OBJEXT)
main_pause_resume_LDADD = $(LDADD)
main_pause_resume_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
main_regenerate_SOURCES = main/regenerate.c
main_regenerate_OBJECTS = regenerate.$(OBJEXT)
main_regenerate_LDADD = $(LDADD)
main_regenerate_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
main_regenerate_pipeline_SOURCES = main/regenerate_pipeline.c
main_regenerate_pipeline_OBJECTS = regenerate_pipeline.$(OBJEXT)
main_regenerate_pipeline_LDADD = $(LDADD)
main_regenerate_pipeline_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_restart_SOURCES = main/restart.c
main_restart_OBJECTS = restart.$(OBJEXT)
main_restart_LDADD = $(LDADD)
main_restart_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
main_starpu_init_SOURCES = main/starpu_init.c
main_starpu_init_OBJECTS = starpu_init.$(OBJEXT)
main_starpu_init_LDADD = $(LDADD)
main_starpu_init_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
main_starpu_task_bundle_SOURCES = main/starpu_task_bundle.c
main_starpu_task_bundle_OBJECTS = starpu_task_bundle.$(OBJEXT)
main_starpu_task_bundle_LDADD = $(LDADD)
main_starpu_task_bundle_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_starpu_task_wait_SOURCES = main/starpu_task_wait.c
main_starpu_task_wait_OBJECTS = starpu_task_wait.$(OBJEXT)
main_starpu_task_wait_LDADD = $(LDADD)
main_starpu_task_wait_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_starpu_task_wait_for_all_SOURCES =  \
	main/starpu_task_wait_for_all.c
main_starpu_task_wait_for_all_OBJECTS =  \
	starpu_task_wait_for_all.$(OBJEXT)
main_starpu_task_wait_for_all_LDADD = $(LDADD)
main_starpu_task_wait_for_all_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_starpu_worker_exists_SOURCES = main/starpu_worker_exists.c
main_starpu_worker_exists_OBJECTS = starpu_worker_exists.$(OBJEXT)
main_starpu_worker_exists_LDADD = $(LDADD)
main_starpu_worker_exists_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_static_restartable_SOURCES = main/static_restartable.c
main_static_restartable_OBJECTS = static_restartable.$(OBJEXT)
main_static_restartable_LDADD = $(LDADD)
main_static_restartable_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_static_restartable_tag_SOURCES = main/static_restartable_tag.c
main_static_restartable_tag_OBJECTS =  \
	static_restartable_tag.$(OBJEXT)
main_static_restartable_tag_LDADD = $(LDADD)
main_static_restartable_tag_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_static_restartable_using_initializer_SOURCES =  \
	main/static_restartable_using_initializer.c
main_static_restartable_using_initializer_OBJECTS =  \
	static_restartable_using_initializer.$(OBJEXT)
main_static_restartable_using_initializer_LDADD = $(LDADD)
main_static_restartable_using_initializer_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__main_subgraph_repeat_SOURCES_DIST = main/subgraph_repeat.c \
	main/increment_codelet.c main/increment.cu
am_main_subgraph_repeat_OBJECTS = subgraph_repeat.$(OBJEXT) \
	increment_codelet.$(OBJEXT) $(am__objects_27)
main_subgraph_repeat_OBJECTS = $(am_main_subgraph_repeat_OBJECTS)
main_subgraph_repeat_LDADD = $(LDADD)
main_subgraph_repeat_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__main_subgraph_repeat_regenerate_SOURCES_DIST =  \
	main/subgraph_repeat_regenerate.c main/increment_codelet.c \
	main/increment.cu
am_main_subgraph_repeat_regenerate_OBJECTS =  \
	subgraph_repeat_regenerate.$(OBJEXT) \
	increment_codelet.$(OBJEXT) $(am__objects_27)
main_subgraph_repeat_regenerate_OBJECTS =  \
	$(am_main_subgraph_repeat_regenerate_OBJECTS)
main_subgraph_repeat_regenerate_LDADD = $(LDADD)
main_subgraph_repeat_regenerate_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__main_subgraph_repeat_regenerate_tag_SOURCES_DIST =  \
	main/subgraph_repeat_regenerate_tag.c main/increment_codelet.c \
	main/increment.cu
am_main_subgraph_repeat_regenerate_tag_OBJECTS =  \
	subgraph_repeat_regenerate_tag.$(OBJEXT) \
	increment_codelet.$(OBJEXT) $(am__objects_27)
main_subgraph_repeat_regenerate_tag_OBJECTS =  \
	$(am_main_subgraph_repeat_regenerate_tag_OBJECTS)
main_subgraph_repeat_regenerate_tag_LDADD = $(LDADD)
main_subgraph_repeat_regenerate_tag_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__main_subgraph_repeat_regenerate_tag_cycle_SOURCES_DIST =  \
	main/subgraph_repeat_regenerate_tag_cycle.c \
	main/increment_codelet.c main/increment.cu
am_main_subgraph_repeat_regenerate_tag_cycle_OBJECTS =  \
	subgraph_repeat_regenerate_tag_cycle.$(OBJEXT) \
	increment_codelet.$(OBJEXT) $(am__objects_27)
main_subgraph_repeat_regenerate_tag_cycle_OBJECTS =  \
	$(am_main_subgraph_repeat_regenerate_tag_cycle_OBJECTS)
main_subgraph_repeat_regenerate_tag_cycle_LDADD = $(LDADD)
main_subgraph_repeat_regenerate_tag_cycle_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__main_subgraph_repeat_tag_SOURCES_DIST =  \
	main/subgraph_repeat_tag.c main/increment_codelet.c \
	main/increment.cu
am_main_subgraph_repeat_tag_OBJECTS = subgraph_repeat_tag.$(OBJEXT) \
	increment_codelet.$(OBJEXT) $(am__objects_27)
main_subgraph_repeat_tag_OBJECTS =  \
	$(am_main_subgraph_repeat_tag_OBJECTS)
main_subgraph_repeat_tag_LDADD = $(LDADD)
main_subgraph_repeat_tag_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_submit_SOURCES = main/submit.c
main_submit_OBJECTS = submit.$(OBJEXT)
main_submit_LDADD = $(LDADD)
main_submit_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
main_tag_get_task_SOURCES = main/tag_get_task.c
main_tag_get_task_OBJECTS = tag_get_task.$(OBJEXT)
main_tag_get_task_LDADD = $(LDADD)
main_tag_get_task_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
main_tag_task_data_deps_SOURCES = main/tag_task_data_deps.c
main_tag_task_data_deps_OBJECTS = tag_task_data_deps.$(OBJEXT)
main_tag_task_data_deps_LDADD = $(LDADD)
main_tag_task_data_deps_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_tag_wait_api_SOURCES = main/tag_wait_api.c
main_tag_wait_api_OBJECTS = tag_wait_api.$(OBJEXT)
main_tag_wait_api_LDADD = $(LDADD)
main_tag_wait_api_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
main_task_end_dep_SOURCES = main/task_end_dep.c
main_task_end_dep_OBJECTS = task_end_dep.$(OBJEXT)
main_task_end_dep_LDADD = $(LDADD)
main_task_end_dep_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
main_task_wait_api_SOURCES = main/task_wait_api.c
main_task_wait_api_OBJECTS = task_wait_api.$(OBJEXT)
main_task_wait_api_LDADD = $(LDADD)
main_task_wait_api_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
main_wait_all_regenerable_tasks_SOURCES =  \
	main/wait_all_regenerable_tasks.c
main_wait_all_regenerable_tasks_OBJECTS =  \
	wait_all_regenerable_tasks.$(OBJEXT)
main_wait_all_regenerable_tasks_LDADD = $(LDADD)
main_wait_all_regenerable_tasks_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
microbenchs_async_tasks_overhead_SOURCES =  \
	microbenchs/async_tasks_overhead.c
microbenchs_async_tasks_overhead_OBJECTS =  \
	async_tasks_overhead.$(OBJEXT)
microbenchs_async_tasks_overhead_LDADD = $(LDADD)
microbenchs_async_tasks_overhead_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
microbenchs_bandwidth_SOURCES = microbenchs/bandwidth.c
microbenchs_bandwidth_OBJECTS = bandwidth.$(OBJEXT)
microbenchs_bandwidth_LDADD = $(LDADD)
microbenchs_bandwidth_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
microbenchs_display_structures_size_SOURCES =  \
	microbenchs/display_structures_size.c
microbenchs_display_structures_size_OBJECTS =  \
	display_structures_size.$(OBJEXT)
microbenchs_display_structures_size_LDADD = $(LDADD)
microbenchs_display_structures_size_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
microbenchs_local_pingpong_SOURCES = microbenchs/local_pingpong.c
microbenchs_local_pingpong_OBJECTS = local_pingpong.$(OBJEXT)
microbenchs_local_pingpong_LDADD = $(LDADD)
microbenchs_local_pingpong_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
microbenchs_matrix_as_vector_SOURCES = microbenchs/matrix_as_vector.c
microbenchs_matrix_as_vector_OBJECTS = matrix_as_vector.$(OBJEXT)
microbenchs_matrix_as_vector_LDADD = $(LDADD)
microbenchs_matrix_as_vector_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
microbenchs_parallel_dependent_homogeneous_tasks_data_SOURCES =  \
	microbenchs/parallel_dependent_homogeneous_tasks_data.c
microbenchs_parallel_dependent_homogeneous_tasks_data_OBJECTS =  \
	parallel_dependent_homogeneous_tasks_data.$(OBJEXT)
microbenchs_parallel_dependent_homogeneous_tasks_data_LDADD =  \
	$(LDADD)
microbenchs_parallel_dependent_homogeneous_tasks_data_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
microbenchs_parallel_independent_heterogeneous_tasks_SOURCES =  \
	microbenchs/parallel_independent_heterogeneous_tasks.c
microbenchs_parallel_independent_heterogeneous_tasks_OBJECTS =  \
	parallel_independent_heterogeneous_tasks.$(OBJEXT)
microbenchs_parallel_independent_heterogeneous_tasks_LDADD = $(LDADD)
microbenchs_parallel_independent_heterogeneous_tasks_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
microbenchs_parallel_independent_heterogeneous_tasks_data_SOURCES =  \
	microbenchs/parallel_independent_heterogeneous_tasks_data.c
microbenchs_parallel_independent_heterogeneous_tasks_data_OBJECTS =  \
	parallel_independent_heterogeneous_tasks_data.$(OBJEXT)
microbenchs_parallel_independent_heterogeneous_tasks_data_LDADD =  \
	$(LDADD)
microbenchs_parallel_independent_heterogeneous_tasks_data_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
microbenchs_parallel_independent_homogeneous_tasks_SOURCES =  \
	microbenchs/parallel_independent_homogeneous_tasks.c
microbenchs_parallel_independent_homogeneous_tasks_OBJECTS =  \
	parallel_independent_homogeneous_tasks.$(OBJEXT)
microbenchs_parallel_independent_homogeneous_tasks_LDADD = $(LDADD)
microbenchs_parallel_independent_homogeneous_tasks_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
microbenchs_parallel_independent_homogeneous_tasks_data_SOURCES =  \
	microbenchs/parallel_independent_homogeneous_tasks_data.c
microbenchs_parallel_independent_homogeneous_tasks_data_OBJECTS =  \
	parallel_independent_homogeneous_tasks_data.$(OBJEXT)
microbenchs_parallel_independent_homogeneous_tasks_data_LDADD =  \
	$(LDADD)
microbenchs_parallel_independent_homogeneous_tasks_data_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
microbenchs_parallel_redux_heterogeneous_tasks_data_SOURCES =  \
	microbenchs/parallel_redux_heterogeneous_tasks_data.c
microbenchs_parallel_redux_heterogeneous_tasks_data_OBJECTS =  \
	parallel_redux_heterogeneous_tasks_data.$(OBJEXT)
microbenchs_parallel_redux_heterogeneous_tasks_data_LDADD = $(LDADD)
microbenchs_parallel_redux_heterogeneous_tasks_data_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
microbenchs_parallel_redux_homogeneous_tasks_data_SOURCES =  \
	microbenchs/parallel_redux_homogeneous_tasks_data.c
microbenchs_parallel_redux_homogeneous_tasks_data_OBJECTS =  \
	parallel_redux_homogeneous_tasks_data.$(OBJEXT)
microbenchs_parallel_redux_homogeneous_tasks_data_LDADD = $(LDADD)
microbenchs_parallel_redux_homogeneous_tasks_data_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
microbenchs_prefetch_data_on_node_SOURCES =  \
	microbenchs/prefetch_data_on_node.c
microbenchs_prefetch_data_on_node_OBJECTS =  \
	prefetch_data_on_node.$(OBJEXT)
microbenchs_prefetch_data_on_node_LDADD = $(LDADD)
microbenchs_prefetch_data_on_node_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
microbenchs_redundant_buffer_SOURCES = microbenchs/redundant_buffer.c
microbenchs_redundant_buffer_OBJECTS = redundant_buffer.$(OBJEXT)
microbenchs_redundant_buffer_LDADD = $(LDADD)
microbenchs_redundant_buffer_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
microbenchs_sync_tasks_overhead_SOURCES =  \
	microbenchs/sync_tasks_overhead.c
microbenchs_sync_tasks_overhead_OBJECTS =  \
	sync_tasks_overhead.$(OBJEXT)
microbenchs_sync_tasks_overhead_LDADD = $(LDADD)
microbenchs_sync_tasks_overhead_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
microbenchs_tasks_overhead_SOURCES = microbenchs/tasks_overhead.c
microbenchs_tasks_overhead_OBJECTS = tasks_overhead.$(OBJEXT)
microbenchs_tasks_overhead_LDADD = $(LDADD)
microbenchs_tasks_overhead_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
microbenchs_tasks_size_overhead_SOURCES =  \
	microbenchs/tasks_size_overhead.c
microbenchs_tasks_size_overhead_OBJECTS =  \
	tasks_size_overhead.$(OBJEXT)
microbenchs_tasks_size_overhead_LDADD = $(LDADD)
microbenchs_tasks_size_overhead_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
model_checking_prio_list_SOURCES = model-checking/prio_list.c
model_checking_prio_list_OBJECTS = prio_list.$(OBJEXT)
model_checking_prio_list_DEPENDENCIES =
model_checking_prio_list_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(model_checking_prio_list_LDFLAGS) \
	$(LDFLAGS) -o $@
model_checking_starpu_barrier_SOURCES =  \
	model-checking/starpu_barrier.c
model_checking_starpu_barrier_OBJECTS = starpu_barrier.$(OBJEXT)
model_checking_starpu_barrier_DEPENDENCIES =
model_checking_starpu_barrier_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) \
	$(model_checking_starpu_barrier_LDFLAGS) $(LDFLAGS) -o $@
am_openmp_api_01_OBJECTS = api_01.$(OBJEXT)
openmp_api_01_OBJECTS = $(am_openmp_api_01_OBJECTS)
openmp_api_01_LDADD = $(LDADD)
openmp_api_01_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_openmp_array_slice_01_OBJECTS = array_slice_01.$(OBJEXT)
openmp_array_slice_01_OBJECTS = $(am_openmp_array_slice_01_OBJECTS)
openmp_array_slice_01_LDADD = $(LDADD)
openmp_array_slice_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_cuda_task_01_OBJECTS = cuda_task_01.$(OBJEXT)
openmp_cuda_task_01_OBJECTS = $(am_openmp_cuda_task_01_OBJECTS)
openmp_cuda_task_01_LDADD = $(LDADD)
openmp_cuda_task_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_environment_OBJECTS = environment.$(OBJEXT)
openmp_environment_OBJECTS = $(am_openmp_environment_OBJECTS)
openmp_environment_LDADD = $(LDADD)
openmp_environment_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_init_exit_01_OBJECTS = init_exit_01.$(OBJEXT)
openmp_init_exit_01_OBJECTS = $(am_openmp_init_exit_01_OBJECTS)
openmp_init_exit_01_LDADD = $(LDADD)
openmp_init_exit_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_init_exit_02_OBJECTS = init_exit_02.$(OBJEXT)
openmp_init_exit_02_OBJECTS = $(am_openmp_init_exit_02_OBJECTS)
openmp_init_exit_02_LDADD = $(LDADD)
openmp_init_exit_02_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_parallel_01_OBJECTS = parallel_01.$(OBJEXT)
openmp_parallel_01_OBJECTS = $(am_openmp_parallel_01_OBJECTS)
openmp_parallel_01_LDADD = $(LDADD)
openmp_parallel_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_parallel_02_OBJECTS = parallel_02.$(OBJEXT)
openmp_parallel_02_OBJECTS = $(am_openmp_parallel_02_OBJECTS)
openmp_parallel_02_LDADD = $(LDADD)
openmp_parallel_02_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_parallel_03_OBJECTS = parallel_03.$(OBJEXT)
openmp_parallel_03_OBJECTS = $(am_openmp_parallel_03_OBJECTS)
openmp_parallel_03_LDADD = $(LDADD)
openmp_parallel_03_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_parallel_barrier_01_OBJECTS = parallel_barrier_01.$(OBJEXT)
openmp_parallel_barrier_01_OBJECTS =  \
	$(am_openmp_parallel_barrier_01_OBJECTS)
openmp_parallel_barrier_01_LDADD = $(LDADD)
openmp_parallel_barrier_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_parallel_critical_01_OBJECTS =  \
	parallel_critical_01.$(OBJEXT)
openmp_parallel_critical_01_OBJECTS =  \
	$(am_openmp_parallel_critical_01_OBJECTS)
openmp_parallel_critical_01_LDADD = $(LDADD)
openmp_parallel_critical_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_parallel_critical_inline_01_OBJECTS =  \
	parallel_critical_inline_01.$(OBJEXT)
openmp_parallel_critical_inline_01_OBJECTS =  \
	$(am_openmp_parallel_critical_inline_01_OBJECTS)
openmp_parallel_critical_inline_01_LDADD = $(LDADD)
openmp_parallel_critical_inline_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_parallel_critical_named_01_OBJECTS =  \
	parallel_critical_named_01.$(OBJEXT)
openmp_parallel_critical_named_01_OBJECTS =  \
	$(am_openmp_parallel_critical_named_01_OBJECTS)
openmp_parallel_critical_named_01_LDADD = $(LDADD)
openmp_parallel_critical_named_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_parallel_critical_named_inline_01_OBJECTS =  \
	parallel_critical_named_inline_01.$(OBJEXT)
openmp_parallel_critical_named_inline_01_OBJECTS =  \
	$(am_openmp_parallel_critical_named_inline_01_OBJECTS)
openmp_parallel_critical_named_inline_01_LDADD = $(LDADD)
openmp_parallel_critical_named_inline_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_parallel_for_01_OBJECTS = parallel_for_01.$(OBJEXT)
openmp_parallel_for_01_OBJECTS = $(am_openmp_parallel_for_01_OBJECTS)
openmp_parallel_for_01_LDADD = $(LDADD)
openmp_parallel_for_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_parallel_for_02_OBJECTS = parallel_for_02.$(OBJEXT)
openmp_parallel_for_02_OBJECTS = $(am_openmp_parallel_for_02_OBJECTS)
openmp_parallel_for_02_LDADD = $(LDADD)
openmp_parallel_for_02_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_parallel_for_ordered_01_OBJECTS =  \
	parallel_for_ordered_01.$(OBJEXT)
openmp_parallel_for_ordered_01_OBJECTS =  \
	$(am_openmp_parallel_for_ordered_01_OBJECTS)
openmp_parallel_for_ordered_01_LDADD = $(LDADD)
openmp_parallel_for_ordered_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_parallel_master_01_OBJECTS = parallel_master_01.$(OBJEXT)
openmp_parallel_master_01_OBJECTS =  \
	$(am_openmp_parallel_master_01_OBJECTS)
openmp_parallel_master_01_LDADD = $(LDADD)
openmp_parallel_master_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_parallel_master_inline_01_OBJECTS =  \
	parallel_master_inline_01.$(OBJEXT)
openmp_parallel_master_inline_01_OBJECTS =  \
	$(am_openmp_parallel_master_inline_01_OBJECTS)
openmp_parallel_master_inline_01_LDADD = $(LDADD)
openmp_parallel_master_inline_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_parallel_nested_lock_01_OBJECTS =  \
	parallel_nested_lock_01.$(OBJEXT)
openmp_parallel_nested_lock_01_OBJECTS =  \
	$(am_openmp_parallel_nested_lock_01_OBJECTS)
openmp_parallel_nested_lock_01_LDADD = $(LDADD)
openmp_parallel_nested_lock_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_parallel_sections_01_OBJECTS =  \
	parallel_sections_01.$(OBJEXT)
openmp_parallel_sections_01_OBJECTS =  \
	$(am_openmp_parallel_sections_01_OBJECTS)
openmp_parallel_sections_01_LDADD = $(LDADD)
openmp_parallel_sections_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_parallel_sections_combined_01_OBJECTS =  \
	parallel_sections_combined_01.$(OBJEXT)
openmp_parallel_sections_combined_01_OBJECTS =  \
	$(am_openmp_parallel_sections_combined_01_OBJECTS)
openmp_parallel_sections_combined_01_LDADD = $(LDADD)
openmp_parallel_sections_combined_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_parallel_simple_lock_01_OBJECTS =  \
	parallel_simple_lock_01.$(OBJEXT)
openmp_parallel_simple_lock_01_OBJECTS =  \
	$(am_openmp_parallel_simple_lock_01_OBJECTS)
openmp_parallel_simple_lock_01_LDADD = $(LDADD)
openmp_parallel_simple_lock_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_parallel_single_copyprivate_01_OBJECTS =  \
	parallel_single_copyprivate_01.$(OBJEXT)
openmp_parallel_single_copyprivate_01_OBJECTS =  \
	$(am_openmp_parallel_single_copyprivate_01_OBJECTS)
openmp_parallel_single_copyprivate_01_LDADD = $(LDADD)
openmp_parallel_single_copyprivate_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_parallel_single_copyprivate_inline_01_OBJECTS =  \
	parallel_single_copyprivate_inline_01.$(OBJEXT)
openmp_parallel_single_copyprivate_inline_01_OBJECTS =  \
	$(am_openmp_parallel_single_copyprivate_inline_01_OBJECTS)
openmp_parallel_single_copyprivate_inline_01_LDADD = $(LDADD)
openmp_parallel_single_copyprivate_inline_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_parallel_single_inline_01_OBJECTS =  \
	parallel_single_inline_01.$(OBJEXT)
openmp_parallel_single_inline_01_OBJECTS =  \
	$(am_openmp_parallel_single_inline_01_OBJECTS)
openmp_parallel_single_inline_01_LDADD = $(LDADD)
openmp_parallel_single_inline_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_parallel_single_nowait_01_OBJECTS =  \
	parallel_single_nowait_01.$(OBJEXT)
openmp_parallel_single_nowait_01_OBJECTS =  \
	$(am_openmp_parallel_single_nowait_01_OBJECTS)
openmp_parallel_single_nowait_01_LDADD = $(LDADD)
openmp_parallel_single_nowait_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_parallel_single_wait_01_OBJECTS =  \
	parallel_single_wait_01.$(OBJEXT)
openmp_parallel_single_wait_01_OBJECTS =  \
	$(am_openmp_parallel_single_wait_01_OBJECTS)
openmp_parallel_single_wait_01_LDADD = $(LDADD)
openmp_parallel_single_wait_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_task_01_OBJECTS = task_01.$(OBJEXT)
openmp_task_01_OBJECTS = $(am_openmp_task_01_OBJECTS)
openmp_task_01_LDADD = $(LDADD)
openmp_task_01_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_openmp_task_02_OBJECTS = task_02.$(OBJEXT)
openmp_task_02_OBJECTS = $(am_openmp_task_02_OBJECTS)
openmp_task_02_LDADD = $(LDADD)
openmp_task_02_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_openmp_task_03_OBJECTS = task_03.$(OBJEXT)
openmp_task_03_OBJECTS = $(am_openmp_task_03_OBJECTS)
openmp_task_03_LDADD = $(LDADD)
openmp_task_03_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_openmp_taskgroup_01_OBJECTS = taskgroup_01.$(OBJEXT)
openmp_taskgroup_01_OBJECTS = $(am_openmp_taskgroup_01_OBJECTS)
openmp_taskgroup_01_LDADD = $(LDADD)
openmp_taskgroup_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_taskgroup_02_OBJECTS = taskgroup_02.$(OBJEXT)
openmp_taskgroup_02_OBJECTS = $(am_openmp_taskgroup_02_OBJECTS)
openmp_taskgroup_02_LDADD = $(LDADD)
openmp_taskgroup_02_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_openmp_taskloop_OBJECTS = taskloop.$(OBJEXT)
openmp_taskloop_OBJECTS = $(am_openmp_taskloop_OBJECTS)
openmp_taskloop_LDADD = $(LDADD)
openmp_taskloop_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_openmp_taskwait_01_OBJECTS = taskwait_01.$(OBJEXT)
openmp_taskwait_01_OBJECTS = $(am_openmp_taskwait_01_OBJECTS)
openmp_taskwait_01_LDADD = $(LDADD)
openmp_taskwait_01_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__overlap_gpu_concurrency_SOURCES_DIST = overlap/gpu_concurrency.c \
	overlap/long_kernel.cu
am__objects_28 = overlap/long_kernel.$(OBJEXT)
am_overlap_gpu_concurrency_OBJECTS = gpu_concurrency.$(OBJEXT) \
	$(am__objects_28)
overlap_gpu_concurrency_OBJECTS =  \
	$(am_overlap_gpu_concurrency_OBJECTS)
overlap_gpu_concurrency_LDADD = $(LDADD)
overlap_gpu_concurrency_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
overlap_overlap_SOURCES = overlap/overlap.c
overlap_overlap_OBJECTS = overlap.$(OBJEXT)
overlap_overlap_LDADD = $(LDADD)
overlap_overlap_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
parallel_tasks_cuda_only_SOURCES = parallel_tasks/cuda_only.c
parallel_tasks_cuda_only_OBJECTS = cuda_only.$(OBJEXT)
parallel_tasks_cuda_only_LDADD = $(LDADD)
parallel_tasks_cuda_only_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
parallel_tasks_explicit_combined_worker_SOURCES =  \
	parallel_tasks/explicit_combined_worker.c
parallel_tasks_explicit_combined_worker_OBJECTS =  \
	explicit_combined_worker.$(OBJEXT)
parallel_tasks_explicit_combined_worker_LDADD = $(LDADD)
parallel_tasks_explicit_combined_worker_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
parallel_tasks_parallel_kernels_SOURCES =  \
	parallel_tasks/parallel_kernels.c
parallel_tasks_parallel_kernels_OBJECTS = parallel_kernels.$(OBJEXT)
parallel_tasks_parallel_kernels_LDADD = $(LDADD)
parallel_tasks_parallel_kernels_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
parallel_tasks_parallel_kernels_spmd_SOURCES =  \
	parallel_tasks/parallel_kernels_spmd.c
parallel_tasks_parallel_kernels_spmd_OBJECTS =  \
	parallel_kernels_spmd.$(OBJEXT)
parallel_tasks_parallel_kernels_spmd_LDADD = $(LDADD)
parallel_tasks_parallel_kernels_spmd_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
parallel_tasks_parallel_kernels_trivial_SOURCES =  \
	parallel_tasks/parallel_kernels_trivial.c
parallel_tasks_parallel_kernels_trivial_OBJECTS =  \
	parallel_kernels_trivial.$(OBJEXT)
parallel_tasks_parallel_kernels_trivial_LDADD = $(LDADD)
parallel_tasks_parallel_kernels_trivial_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
parallel_tasks_spmd_peager_SOURCES = parallel_tasks/spmd_peager.c
parallel_tasks_spmd_peager_OBJECTS = spmd_peager.$(OBJEXT)
parallel_tasks_spmd_peager_LDADD = $(LDADD)
parallel_tasks_spmd_peager_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_perfmodels_feed_OBJECTS = feed.$(OBJEXT)
perfmodels_feed_OBJECTS = $(am_perfmodels_feed_OBJECTS)
perfmodels_feed_LDADD = $(LDADD)
perfmodels_feed_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
perfmodels_memory_SOURCES = perfmodels/memory.c
perfmodels_memory_OBJECTS = memory.$(OBJEXT)
perfmodels_memory_LDADD = $(LDADD)
perfmodels_memory_DEPENDENCIES = $(top_builddir)/src/libstarpu-1.3.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__perfmodels_non_linear_regression_based_SOURCES_DIST =  \
	perfmodels/non_linear_regression_based.c \
	perfmodels/opencl_memset.c
#am__objects_29 = opencl_memset.$(OBJEXT)
am_perfmodels_non_linear_regression_based_OBJECTS =  \
	non_linear_regression_based.$(OBJEXT) $(am__objects_29)
perfmodels_non_linear_regression_based_OBJECTS =  \
	$(am_perfmodels_non_linear_regression_based_OBJECTS)
perfmodels_non_linear_regression_based_LDADD = $(LDADD)
perfmodels_non_linear_regression_based_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__perfmodels_regression_based_SOURCES_DIST =  \
	perfmodels/regression_based.c perfmodels/opencl_memset.c
am_perfmodels_regression_based_OBJECTS = regression_based.$(OBJEXT) \
	$(am__objects_29)
perfmodels_regression_based_OBJECTS =  \
	$(am_perfmodels_regression_based_OBJECTS)
perfmodels_regression_based_LDADD = $(LDADD)
perfmodels_regression_based_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
perfmodels_user_base_SOURCES = perfmodels/user_base.c
perfmodels_user_base_OBJECTS = user_base.$(OBJEXT)
perfmodels_user_base_LDADD = $(LDADD)
perfmodels_user_base_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
perfmodels_valid_model_SOURCES = perfmodels/valid_model.c
perfmodels_valid_model_OBJECTS = valid_model.$(OBJEXT)
perfmodels_valid_model_LDADD = $(LDADD)
perfmodels_valid_model_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
perfmodels_value_nan_SOURCES = perfmodels/value_nan.c
perfmodels_value_nan_OBJECTS = value_nan.$(OBJEXT)
perfmodels_value_nan_LDADD = $(LDADD)
perfmodels_value_nan_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_sched_ctx_sched_ctx_hierarchy_OBJECTS =  \
	sched_ctx_hierarchy.$(OBJEXT)
sched_ctx_sched_ctx_hierarchy_OBJECTS =  \
	$(am_sched_ctx_sched_ctx_hierarchy_OBJECTS)
sched_ctx_sched_ctx_hierarchy_LDADD = $(LDADD)
sched_ctx_sched_ctx_hierarchy_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_sched_ctx_sched_ctx_list_OBJECTS = sched_ctx_list.$(OBJEXT)
sched_ctx_sched_ctx_list_OBJECTS =  \
	$(am_sched_ctx_sched_ctx_list_OBJECTS)
sched_ctx_sched_ctx_list_LDADD = $(LDADD)
sched_ctx_sched_ctx_list_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_sched_ctx_sched_ctx_policy_data_OBJECTS =  \
	sched_ctx_policy_data.$(OBJEXT)
sched_ctx_sched_ctx_policy_data_OBJECTS =  \
	$(am_sched_ctx_sched_ctx_policy_data_OBJECTS)
sched_ctx_sched_ctx_policy_data_LDADD = $(LDADD)
sched_ctx_sched_ctx_policy_data_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
sched_policies_data_locality_SOURCES = sched_policies/data_locality.c
sched_policies_data_locality_OBJECTS = data_locality.$(OBJEXT)
sched_policies_data_locality_LDADD = $(LDADD)
sched_policies_data_locality_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
sched_policies_execute_all_tasks_SOURCES =  \
	sched_policies/execute_all_tasks.c
sched_policies_execute_all_tasks_OBJECTS =  \
	execute_all_tasks.$(OBJEXT)
sched_policies_execute_all_tasks_LDADD = $(LDADD)
sched_policies_execute_all_tasks_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
sched_policies_execute_all_tasks_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) \
	$(sched_policies_execute_all_tasks_LDFLAGS) $(LDFLAGS) -o $@
sched_policies_prio_SOURCES = sched_policies/prio.c
sched_policies_prio_OBJECTS = prio.$(OBJEXT)
sched_policies_prio_LDADD = $(LDADD)
sched_policies_prio_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
sched_policies_simple_cpu_gpu_sched_SOURCES =  \
	sched_policies/simple_cpu_gpu_sched.c
sched_policies_simple_cpu_gpu_sched_OBJECTS =  \
	simple_cpu_gpu_sched.$(OBJEXT)
sched_policies_simple_cpu_gpu_sched_LDADD = $(LDADD)
sched_policies_simple_cpu_gpu_sched_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
sched_policies_simple_deps_SOURCES = sched_policies/simple_deps.c
sched_policies_simple_deps_OBJECTS = simple_deps.$(OBJEXT)
sched_policies_simple_deps_LDADD = $(LDADD)
sched_policies_simple_deps_DEPENDENCIES =  \
	$(top_builddir)/src/libstarpu-1.3.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(examplebin_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src/common -I$(top_builddir)/include -I$(top_builddir)/starpurm/include
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/acquire_cb.Po \
	./$(DEPDIR)/acquire_cb_insert.Po \
	./$(DEPDIR)/acquire_release.Po ./$(DEPDIR)/acquire_release2.Po \
	./$(DEPDIR)/acquire_release_opencl.Po \
	./$(DEPDIR)/acquire_try.Po ./$(DEPDIR)/allocate.Po \
	./$(DEPDIR)/api_01.Po ./$(DEPDIR)/array_slice_01.Po \
	./$(DEPDIR)/async_tasks_overhead.Po ./$(DEPDIR)/bandwidth.Po \
	./$(DEPDIR)/bcsr.Po ./$(DEPDIR)/bcsr_interface.Po \
	./$(DEPDIR)/bcsr_opencl.Po ./$(DEPDIR)/bind.Po \
	./$(DEPDIR)/block_interface.Po ./$(DEPDIR)/block_opencl.Po \
	./$(DEPDIR)/cache.Po ./$(DEPDIR)/callback.Po \
	./$(DEPDIR)/codelet_null_callback.Po ./$(DEPDIR)/commute.Po \
	./$(DEPDIR)/commute2.Po ./$(DEPDIR)/coo_interface.Po \
	./$(DEPDIR)/coo_opencl.Po ./$(DEPDIR)/copy.Po \
	./$(DEPDIR)/copy_interfaces.Po \
	./$(DEPDIR)/critical_section_with_void_interface.Po \
	./$(DEPDIR)/csr_interface.Po ./$(DEPDIR)/csr_opencl.Po \
	./$(DEPDIR)/cublas_init.Po ./$(DEPDIR)/cuda_only.Po \
	./$(DEPDIR)/cuda_task_01.Po ./$(DEPDIR)/cusparse_init.Po \
	./$(DEPDIR)/data_implicit_deps.Po \
	./$(DEPDIR)/data_invalidation.Po ./$(DEPDIR)/data_locality.Po \
	./$(DEPDIR)/data_lookup.Po \
	./$(DEPDIR)/declare_deps_after_submission.Po \
	./$(DEPDIR)/declare_deps_after_submission_synchronous.Po \
	./$(DEPDIR)/declare_deps_in_callback.Po ./$(DEPDIR)/deploop.Po \
	./$(DEPDIR)/deps.Po ./$(DEPDIR)/dining_philosophers.Po \
	./$(DEPDIR)/disk_compute.Po ./$(DEPDIR)/disk_copy.Po \
	./$(DEPDIR)/disk_copy_to_disk.Po \
	./$(DEPDIR)/disk_copy_unpack.Po ./$(DEPDIR)/disk_pack.Po \
	./$(DEPDIR)/display_binding.Po \
	./$(DEPDIR)/display_structures_size.Po \
	./$(DEPDIR)/double_parameter.Po ./$(DEPDIR)/dsm_stress.Po \
	./$(DEPDIR)/empty_task.Po ./$(DEPDIR)/empty_task_chain.Po \
	./$(DEPDIR)/empty_task_sync_point.Po \
	./$(DEPDIR)/empty_task_sync_point_tasks.Po \
	./$(DEPDIR)/environment.Po ./$(DEPDIR)/execute_all_tasks.Po \
	./$(DEPDIR)/execute_on_a_specific_worker.Po \
	./$(DEPDIR)/execute_on_all.Po ./$(DEPDIR)/execute_schedule.Po \
	./$(DEPDIR)/explicit_combined_worker.Po ./$(DEPDIR)/feed.Po \
	./$(DEPDIR)/generic.Po ./$(DEPDIR)/get_children_tasks.Po \
	./$(DEPDIR)/get_current_task.Po ./$(DEPDIR)/gpu_concurrency.Po \
	./$(DEPDIR)/gpu_ptr_register.Po ./$(DEPDIR)/gpu_register.Po \
	./$(DEPDIR)/handle_to_pointer.Po ./$(DEPDIR)/hwloc_cpuset.Po \
	./$(DEPDIR)/in_place_partition.Po \
	./$(DEPDIR)/increment_codelet.Po ./$(DEPDIR)/increment_init.Po \
	./$(DEPDIR)/increment_redux.Po \
	./$(DEPDIR)/increment_redux_lazy.Po \
	./$(DEPDIR)/increment_redux_v2.Po ./$(DEPDIR)/init_exit_01.Po \
	./$(DEPDIR)/init_exit_02.Po ./$(DEPDIR)/init_run_deinit.Po \
	./$(DEPDIR)/insert_task.Po ./$(DEPDIR)/insert_task_array.Po \
	./$(DEPDIR)/insert_task_dyn_handles.Po \
	./$(DEPDIR)/insert_task_many.Po \
	./$(DEPDIR)/insert_task_nullcodelet.Po \
	./$(DEPDIR)/insert_task_pack.Po \
	./$(DEPDIR)/insert_task_value.Po \
	./$(DEPDIR)/insert_task_where.Po \
	./$(DEPDIR)/invalid_blocking_calls.Po \
	./$(DEPDIR)/invalid_tasks.Po \
	./$(DEPDIR)/invalidate_pending_requests.Po ./$(DEPDIR)/job.Po \
	./$(DEPDIR)/lazy_allocation.Po ./$(DEPDIR)/lazy_unregister.Po \
	./$(DEPDIR)/loader.Po ./$(DEPDIR)/local_pingpong.Po \
	./$(DEPDIR)/locality.Po \
	./$(DEPDIR)/main_deprecated_func-deprecated_func.Po \
	./$(DEPDIR)/manual_reduction.Po \
	./$(DEPDIR)/matrix_as_vector.Po \
	./$(DEPDIR)/matrix_interface.Po ./$(DEPDIR)/matrix_opencl.Po \
	./$(DEPDIR)/mem_reclaim.Po ./$(DEPDIR)/memory.Po \
	./$(DEPDIR)/mkdtemp.Po ./$(DEPDIR)/mpi_like.Po \
	./$(DEPDIR)/mpi_like_async.Po \
	./$(DEPDIR)/multiformat_conversion_codelets.Po \
	./$(DEPDIR)/multiformat_conversion_codelets_opencl.Po \
	./$(DEPDIR)/multiformat_cuda_opencl.Po \
	./$(DEPDIR)/multiformat_data_release.Po \
	./$(DEPDIR)/multiformat_handle_conversion.Po \
	./$(DEPDIR)/multiformat_interface.Po \
	./$(DEPDIR)/multiformat_opencl.Po \
	./$(DEPDIR)/multiformat_worker.Po ./$(DEPDIR)/multithreaded.Po \
	./$(DEPDIR)/multithreaded_init.Po ./$(DEPDIR)/no_unregister.Po \
	./$(DEPDIR)/non_linear_regression_based.Po \
	./$(DEPDIR)/noreclaim.Po ./$(DEPDIR)/nowhere.Po \
	./$(DEPDIR)/numa_overflow.Po \
	./$(DEPDIR)/opencl_codelet_unsigned_inc.Po \
	./$(DEPDIR)/opencl_memset.Po ./$(DEPDIR)/overlap.Po \
	./$(DEPDIR)/pack.Po ./$(DEPDIR)/parallel_01.Po \
	./$(DEPDIR)/parallel_02.Po ./$(DEPDIR)/parallel_03.Po \
	./$(DEPDIR)/parallel_barrier_01.Po \
	./$(DEPDIR)/parallel_critical_01.Po \
	./$(DEPDIR)/parallel_critical_inline_01.Po \
	./$(DEPDIR)/parallel_critical_named_01.Po \
	./$(DEPDIR)/parallel_critical_named_inline_01.Po \
	./$(DEPDIR)/parallel_dependent_homogeneous_tasks_data.Po \
	./$(DEPDIR)/parallel_for_01.Po ./$(DEPDIR)/parallel_for_02.Po \
	./$(DEPDIR)/parallel_for_ordered_01.Po \
	./$(DEPDIR)/parallel_independent_heterogeneous_tasks.Po \
	./$(DEPDIR)/parallel_independent_heterogeneous_tasks_data.Po \
	./$(DEPDIR)/parallel_independent_homogeneous_tasks.Po \
	./$(DEPDIR)/parallel_independent_homogeneous_tasks_data.Po \
	./$(DEPDIR)/parallel_kernels.Po \
	./$(DEPDIR)/parallel_kernels_spmd.Po \
	./$(DEPDIR)/parallel_kernels_trivial.Po \
	./$(DEPDIR)/parallel_master_01.Po \
	./$(DEPDIR)/parallel_master_inline_01.Po \
	./$(DEPDIR)/parallel_nested_lock_01.Po \
	./$(DEPDIR)/parallel_redux_heterogeneous_tasks_data.Po \
	./$(DEPDIR)/parallel_redux_homogeneous_tasks_data.Po \
	./$(DEPDIR)/parallel_sections_01.Po \
	./$(DEPDIR)/parallel_sections_combined_01.Po \
	./$(DEPDIR)/parallel_simple_lock_01.Po \
	./$(DEPDIR)/parallel_single_copyprivate_01.Po \
	./$(DEPDIR)/parallel_single_copyprivate_inline_01.Po \
	./$(DEPDIR)/parallel_single_inline_01.Po \
	./$(DEPDIR)/parallel_single_nowait_01.Po \
	./$(DEPDIR)/parallel_single_wait_01.Po \
	./$(DEPDIR)/partition_dep.Po ./$(DEPDIR)/partition_init.Po \
	./$(DEPDIR)/partition_lazy.Po \
	./$(DEPDIR)/partitioned_acquire.Po \
	./$(DEPDIR)/partitioned_initialization.Po \
	./$(DEPDIR)/pause_resume.Po ./$(DEPDIR)/pinned_memory.Po \
	./$(DEPDIR)/prefetch_data_on_node.Po ./$(DEPDIR)/prio.Po \
	./$(DEPDIR)/prio_list.Po ./$(DEPDIR)/readers_and_writers.Po \
	./$(DEPDIR)/readonly.Po ./$(DEPDIR)/reclaim.Po \
	./$(DEPDIR)/redundant_buffer.Po ./$(DEPDIR)/redux_acquire.Po \
	./$(DEPDIR)/regenerate.Po ./$(DEPDIR)/regenerate_pipeline.Po \
	./$(DEPDIR)/regression_based.Po ./$(DEPDIR)/restart.Po \
	./$(DEPDIR)/run_driver.Po ./$(DEPDIR)/same_handle.Po \
	./$(DEPDIR)/scal.Po ./$(DEPDIR)/sched_ctx_hierarchy.Po \
	./$(DEPDIR)/sched_ctx_list.Po \
	./$(DEPDIR)/sched_ctx_policy_data.Po ./$(DEPDIR)/scratch.Po \
	./$(DEPDIR)/scratch_opencl.Po ./$(DEPDIR)/scratch_reuse.Po \
	./$(DEPDIR)/simgrid-locality.Po \
	./$(DEPDIR)/simple_cpu_gpu_sched.Po ./$(DEPDIR)/simple_deps.Po \
	./$(DEPDIR)/specific_node.Po ./$(DEPDIR)/spmd_peager.Po \
	./$(DEPDIR)/starpu_barrier.Po \
	./$(DEPDIR)/starpu_create_sync_task.Po \
	./$(DEPDIR)/starpu_data_cpy.Po ./$(DEPDIR)/starpu_init.Po \
	./$(DEPDIR)/starpu_init_noworker.Po \
	./$(DEPDIR)/starpu_task_bundle.Po \
	./$(DEPDIR)/starpu_task_wait.Po \
	./$(DEPDIR)/starpu_task_wait_for_all.Po \
	./$(DEPDIR)/starpu_worker_exists.Po \
	./$(DEPDIR)/static_restartable.Po \
	./$(DEPDIR)/static_restartable_tag.Po \
	./$(DEPDIR)/static_restartable_using_initializer.Po \
	./$(DEPDIR)/subgraph_repeat.Po \
	./$(DEPDIR)/subgraph_repeat_regenerate.Po \
	./$(DEPDIR)/subgraph_repeat_regenerate_tag.Po \
	./$(DEPDIR)/subgraph_repeat_regenerate_tag_cycle.Po \
	./$(DEPDIR)/subgraph_repeat_tag.Po ./$(DEPDIR)/submit.Po \
	./$(DEPDIR)/sync_and_notify_data.Po \
	./$(DEPDIR)/sync_and_notify_data_implicit.Po \
	./$(DEPDIR)/sync_and_notify_data_opencl.Po \
	./$(DEPDIR)/sync_tasks_overhead.Po \
	./$(DEPDIR)/sync_with_data_with_mem.Po \
	./$(DEPDIR)/sync_with_data_with_mem_non_blocking.Po \
	./$(DEPDIR)/sync_with_data_with_mem_non_blocking_implicit.Po \
	./$(DEPDIR)/tag_get_task.Po ./$(DEPDIR)/tag_task_data_deps.Po \
	./$(DEPDIR)/tag_wait_api.Po ./$(DEPDIR)/task_01.Po \
	./$(DEPDIR)/task_02.Po ./$(DEPDIR)/task_03.Po \
	./$(DEPDIR)/task_end_dep.Po ./$(DEPDIR)/task_wait_api.Po \
	./$(DEPDIR)/task_with_multiple_time_the_same_handle.Po \
	./$(DEPDIR)/taskgroup_01.Po ./$(DEPDIR)/taskgroup_02.Po \
	./$(DEPDIR)/taskloop.Po ./$(DEPDIR)/tasks_overhead.Po \
	./$(DEPDIR)/tasks_size_overhead.Po ./$(DEPDIR)/taskwait_01.Po \
	./$(DEPDIR)/temporary_partition.Po \
	./$(DEPDIR)/temporary_partition_implicit.Po \
	./$(DEPDIR)/test_arbiter.Po ./$(DEPDIR)/test_interfaces.Po \
	./$(DEPDIR)/unpartition.Po ./$(DEPDIR)/user_base.Po \
	./$(DEPDIR)/user_interaction_implicit.Po \
	./$(DEPDIR)/valid_model.Po ./$(DEPDIR)/value_nan.Po \
	./$(DEPDIR)/variable_interface.Po \
	./$(DEPDIR)/variable_opencl.Po \
	./$(DEPDIR)/variable_parameters.Po \
	./$(DEPDIR)/variable_size.Po ./$(DEPDIR)/vector_interface.Po \
	./$(DEPDIR)/vector_opencl.Po ./$(DEPDIR)/void_interface.Po \
	./$(DEPDIR)/wait_all_regenerable_tasks.Po \
	./$(DEPDIR)/workers_cpuid.Po \
	./$(DEPDIR)/write_only_tmp_buffer.Po \
	./$(DEPDIR)/wt_broadcast.Po ./$(DEPDIR)/wt_host.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
FCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)
LTFCCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(FC) $(AM_FCFLAGS) $(FCFLAGS)
AM_V_FC = $(am__v_FC_$(V))
am__v_FC_ = $(am__v_FC_$(AM_DEFAULT_VERBOSITY))
am__v_FC_0 = @echo "  FC      " $@;
am__v_FC_1 = 
FCLD = $(FC)
FCLINK = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_FCLD = $(am__v_FCLD_$(V))
am__v_FCLD_ = $(am__v_FCLD_$(AM_DEFAULT_VERBOSITY))
am__v_FCLD_0 = @echo "  FCLD    " $@;
am__v_FCLD_1 = 
SOURCES = datawizard/acquire_cb.c datawizard/acquire_cb_insert.c \
	$(datawizard_acquire_release_SOURCES) \
	$(datawizard_acquire_release2_SOURCES) \
	datawizard/acquire_try.c datawizard/allocate.c \
	datawizard/bcsr.c datawizard/cache.c datawizard/commute.c \
	datawizard/commute2.c datawizard/copy.c \
	datawizard/critical_section_with_void_interface.c \
	datawizard/data_implicit_deps.c datawizard/data_invalidation.c \
	datawizard/data_lookup.c datawizard/deps.c \
	datawizard/dining_philosophers.c datawizard/double_parameter.c \
	datawizard/dsm_stress.c $(datawizard_gpu_ptr_register_SOURCES) \
	$(datawizard_gpu_register_SOURCES) \
	datawizard/handle_to_pointer.c \
	$(datawizard_in_place_partition_SOURCES) \
	datawizard/increment_init.c datawizard/increment_redux.c \
	datawizard/increment_redux_lazy.c \
	datawizard/increment_redux_v2.c \
	$(datawizard_interfaces_bcsr_bcsr_interface_SOURCES) \
	$(datawizard_interfaces_block_block_interface_SOURCES) \
	$(datawizard_interfaces_coo_coo_interface_SOURCES) \
	datawizard/interfaces/copy_interfaces.c \
	$(datawizard_interfaces_csr_csr_interface_SOURCES) \
	$(datawizard_interfaces_matrix_matrix_interface_SOURCES) \
	$(datawizard_interfaces_multiformat_advanced_multiformat_cuda_opencl_SOURCES) \
	$(datawizard_interfaces_multiformat_advanced_multiformat_data_release_SOURCES) \
	$(datawizard_interfaces_multiformat_advanced_multiformat_handle_conversion_SOURCES) \
	$(datawizard_interfaces_multiformat_advanced_multiformat_worker_SOURCES) \
	$(datawizard_interfaces_multiformat_advanced_same_handle_SOURCES) \
	$(datawizard_interfaces_multiformat_multiformat_interface_SOURCES) \
	$(datawizard_interfaces_variable_variable_interface_SOURCES) \
	$(datawizard_interfaces_vector_vector_interface_SOURCES) \
	$(datawizard_interfaces_void_void_interface_SOURCES) \
	datawizard/invalidate_pending_requests.c \
	datawizard/lazy_allocation.c datawizard/lazy_unregister.c \
	datawizard/locality.c datawizard/manual_reduction.c \
	$(datawizard_mpi_like_SOURCES) \
	$(datawizard_mpi_like_async_SOURCES) \
	datawizard/no_unregister.c datawizard/noreclaim.c \
	datawizard/nowhere.c datawizard/numa_overflow.c \
	$(datawizard_partition_dep_SOURCES) \
	datawizard/partition_init.c \
	$(datawizard_partition_lazy_SOURCES) \
	datawizard/partitioned_acquire.c \
	datawizard/partitioned_initialization.c \
	datawizard/readers_and_writers.c datawizard/readonly.c \
	datawizard/reclaim.c datawizard/redux_acquire.c \
	$(datawizard_scratch_SOURCES) datawizard/scratch_reuse.c \
	datawizard/simgrid-locality.c \
	$(datawizard_specific_node_SOURCES) \
	$(datawizard_sync_and_notify_data_SOURCES) \
	$(datawizard_sync_and_notify_data_implicit_SOURCES) \
	datawizard/sync_with_data_with_mem.c \
	datawizard/sync_with_data_with_mem_non_blocking.c \
	datawizard/sync_with_data_with_mem_non_blocking_implicit.c \
	datawizard/task_with_multiple_time_the_same_handle.c \
	datawizard/temporary_partition.c \
	datawizard/temporary_partition_implicit.c \
	$(datawizard_test_arbiter_SOURCES) datawizard/unpartition.c \
	datawizard/user_interaction_implicit.c \
	datawizard/variable_parameters.c datawizard/variable_size.c \
	datawizard/write_only_tmp_buffer.c \
	$(datawizard_wt_broadcast_SOURCES) \
	$(datawizard_wt_host_SOURCES) disk/disk_compute.c \
	disk/disk_copy.c disk/disk_copy_to_disk.c \
	disk/disk_copy_unpack.c disk/disk_pack.c disk/mem_reclaim.c \
	errorcheck/invalid_blocking_calls.c errorcheck/invalid_tasks.c \
	errorcheck/starpu_init_noworker.c errorcheck/workers_cpuid.c \
	$(fortran90_init_01_SOURCES) helper/cublas_init.c \
	helper/cusparse_init.c helper/execute_on_all.c \
	helper/pinned_memory.c helper/starpu_create_sync_task.c \
	helper/starpu_data_cpy.c loader.c main/bind.c main/callback.c \
	main/codelet_null_callback.c \
	main/declare_deps_after_submission.c \
	main/declare_deps_after_submission_synchronous.c \
	main/declare_deps_in_callback.c main/deploop.c \
	main/deprecated_func.c main/display_binding.c \
	main/driver_api/init_run_deinit.c main/driver_api/run_driver.c \
	main/empty_task.c main/empty_task_chain.c \
	main/empty_task_sync_point.c \
	main/empty_task_sync_point_tasks.c \
	main/execute_on_a_specific_worker.c main/execute_schedule.c \
	main/get_children_tasks.c main/get_current_task.c \
	main/hwloc_cpuset.c main/insert_task.c \
	main/insert_task_array.c main/insert_task_dyn_handles.c \
	main/insert_task_many.c main/insert_task_nullcodelet.c \
	main/insert_task_pack.c main/insert_task_value.c \
	$(main_insert_task_where_SOURCES) main/job.c main/mkdtemp.c \
	main/multithreaded.c main/multithreaded_init.c main/pack.c \
	main/pause_resume.c main/regenerate.c \
	main/regenerate_pipeline.c main/restart.c main/starpu_init.c \
	main/starpu_task_bundle.c main/starpu_task_wait.c \
	main/starpu_task_wait_for_all.c main/starpu_worker_exists.c \
	main/static_restartable.c main/static_restartable_tag.c \
	main/static_restartable_using_initializer.c \
	$(main_subgraph_repeat_SOURCES) \
	$(main_subgraph_repeat_regenerate_SOURCES) \
	$(main_subgraph_repeat_regenerate_tag_SOURCES) \
	$(main_subgraph_repeat_regenerate_tag_cycle_SOURCES) \
	$(main_subgraph_repeat_tag_SOURCES) main/submit.c \
	main/tag_get_task.c main/tag_task_data_deps.c \
	main/tag_wait_api.c main/task_end_dep.c main/task_wait_api.c \
	main/wait_all_regenerable_tasks.c \
	microbenchs/async_tasks_overhead.c microbenchs/bandwidth.c \
	microbenchs/display_structures_size.c \
	microbenchs/local_pingpong.c microbenchs/matrix_as_vector.c \
	microbenchs/parallel_dependent_homogeneous_tasks_data.c \
	microbenchs/parallel_independent_heterogeneous_tasks.c \
	microbenchs/parallel_independent_heterogeneous_tasks_data.c \
	microbenchs/parallel_independent_homogeneous_tasks.c \
	microbenchs/parallel_independent_homogeneous_tasks_data.c \
	microbenchs/parallel_redux_heterogeneous_tasks_data.c \
	microbenchs/parallel_redux_homogeneous_tasks_data.c \
	microbenchs/prefetch_data_on_node.c \
	microbenchs/redundant_buffer.c \
	microbenchs/sync_tasks_overhead.c microbenchs/tasks_overhead.c \
	microbenchs/tasks_size_overhead.c model-checking/prio_list.c \
	model-checking/starpu_barrier.c $(openmp_api_01_SOURCES) \
	$(openmp_array_slice_01_SOURCES) \
	$(openmp_cuda_task_01_SOURCES) $(openmp_environment_SOURCES) \
	$(openmp_init_exit_01_SOURCES) $(openmp_init_exit_02_SOURCES) \
	$(openmp_parallel_01_SOURCES) $(openmp_parallel_02_SOURCES) \
	$(openmp_parallel_03_SOURCES) \
	$(openmp_parallel_barrier_01_SOURCES) \
	$(openmp_parallel_critical_01_SOURCES) \
	$(openmp_parallel_critical_inline_01_SOURCES) \
	$(openmp_parallel_critical_named_01_SOURCES) \
	$(openmp_parallel_critical_named_inline_01_SOURCES) \
	$(openmp_parallel_for_01_SOURCES) \
	$(openmp_parallel_for_02_SOURCES) \
	$(openmp_parallel_for_ordered_01_SOURCES) \
	$(openmp_parallel_master_01_SOURCES) \
	$(openmp_parallel_master_inline_01_SOURCES) \
	$(openmp_parallel_nested_lock_01_SOURCES) \
	$(openmp_parallel_sections_01_SOURCES) \
	$(openmp_parallel_sections_combined_01_SOURCES) \
	$(openmp_parallel_simple_lock_01_SOURCES) \
	$(openmp_parallel_single_copyprivate_01_SOURCES) \
	$(openmp_parallel_single_copyprivate_inline_01_SOURCES) \
	$(openmp_parallel_single_inline_01_SOURCES) \
	$(openmp_parallel_single_nowait_01_SOURCES) \
	$(openmp_parallel_single_wait_01_SOURCES) \
	$(openmp_task_01_SOURCES) $(openmp_task_02_SOURCES) \
	$(openmp_task_03_SOURCES) $(openmp_taskgroup_01_SOURCES) \
	$(openmp_taskgroup_02_SOURCES) $(openmp_taskloop_SOURCES) \
	$(openmp_taskwait_01_SOURCES) \
	$(overlap_gpu_concurrency_SOURCES) overlap/overlap.c \
	parallel_tasks/cuda_only.c \
	parallel_tasks/explicit_combined_worker.c \
	parallel_tasks/parallel_kernels.c \
	parallel_tasks/parallel_kernels_spmd.c \
	parallel_tasks/parallel_kernels_trivial.c \
	parallel_tasks/spmd_peager.c $(perfmodels_feed_SOURCES) \
	perfmodels/memory.c \
	$(perfmodels_non_linear_regression_based_SOURCES) \
	$(perfmodels_regression_based_SOURCES) perfmodels/user_base.c \
	perfmodels/valid_model.c perfmodels/value_nan.c \
	$(sched_ctx_sched_ctx_hierarchy_SOURCES) \
	$(sched_ctx_sched_ctx_list_SOURCES) \
	$(sched_ctx_sched_ctx_policy_data_SOURCES) \
	sched_policies/data_locality.c \
	sched_policies/execute_all_tasks.c sched_policies/prio.c \
	sched_policies/simple_cpu_gpu_sched.c \
	sched_policies/simple_deps.c
DIST_SOURCES = datawizard/acquire_cb.c datawizard/acquire_cb_insert.c \
	$(am__datawizard_acquire_release_SOURCES_DIST) \
	$(am__datawizard_acquire_release2_SOURCES_DIST) \
	datawizard/acquire_try.c datawizard/allocate.c \
	datawizard/bcsr.c datawizard/cache.c datawizard/commute.c \
	datawizard/commute2.c datawizard/copy.c \
	datawizard/critical_section_with_void_interface.c \
	datawizard/data_implicit_deps.c datawizard/data_invalidation.c \
	datawizard/data_lookup.c datawizard/deps.c \
	datawizard/dining_philosophers.c datawizard/double_parameter.c \
	datawizard/dsm_stress.c \
	$(am__datawizard_gpu_ptr_register_SOURCES_DIST) \
	$(am__datawizard_gpu_register_SOURCES_DIST) \
	datawizard/handle_to_pointer.c \
	$(am__datawizard_in_place_partition_SOURCES_DIST) \
	datawizard/increment_init.c datawizard/increment_redux.c \
	datawizard/increment_redux_lazy.c \
	datawizard/increment_redux_v2.c \
	$(am__datawizard_interfaces_bcsr_bcsr_interface_SOURCES_DIST) \
	$(am__datawizard_interfaces_block_block_interface_SOURCES_DIST) \
	$(am__datawizard_interfaces_coo_coo_interface_SOURCES_DIST) \
	datawizard/interfaces/copy_interfaces.c \
	$(am__datawizard_interfaces_csr_csr_interface_SOURCES_DIST) \
	$(am__datawizard_interfaces_matrix_matrix_interface_SOURCES_DIST) \
	$(datawizard_interfaces_multiformat_advanced_multiformat_cuda_opencl_SOURCES) \
	$(datawizard_interfaces_multiformat_advanced_multiformat_data_release_SOURCES) \
	$(datawizard_interfaces_multiformat_advanced_multiformat_handle_conversion_SOURCES) \
	$(datawizard_interfaces_multiformat_advanced_multiformat_worker_SOURCES) \
	$(datawizard_interfaces_multiformat_advanced_same_handle_SOURCES) \
	$(am__datawizard_interfaces_multiformat_multiformat_interface_SOURCES_DIST) \
	$(am__datawizard_interfaces_variable_variable_interface_SOURCES_DIST) \
	$(am__datawizard_interfaces_vector_vector_interface_SOURCES_DIST) \
	$(datawizard_interfaces_void_void_interface_SOURCES) \
	datawizard/invalidate_pending_requests.c \
	datawizard/lazy_allocation.c datawizard/lazy_unregister.c \
	datawizard/locality.c datawizard/manual_reduction.c \
	$(am__datawizard_mpi_like_SOURCES_DIST) \
	$(am__datawizard_mpi_like_async_SOURCES_DIST) \
	datawizard/no_unregister.c datawizard/noreclaim.c \
	datawizard/nowhere.c datawizard/numa_overflow.c \
	$(am__datawizard_partition_dep_SOURCES_DIST) \
	datawizard/partition_init.c \
	$(am__datawizard_partition_lazy_SOURCES_DIST) \
	datawizard/partitioned_acquire.c \
	datawizard/partitioned_initialization.c \
	datawizard/readers_and_writers.c datawizard/readonly.c \
	datawizard/reclaim.c datawizard/redux_acquire.c \
	$(am__datawizard_scratch_SOURCES_DIST) \
	datawizard/scratch_reuse.c datawizard/simgrid-locality.c \
	$(am__datawizard_specific_node_SOURCES_DIST) \
	$(am__datawizard_sync_and_notify_data_SOURCES_DIST) \
	$(am__datawizard_sync_and_notify_data_implicit_SOURCES_DIST) \
	datawizard/sync_with_data_with_mem.c \
	datawizard/sync_with_data_with_mem_non_blocking.c \
	datawizard/sync_with_data_with_mem_non_blocking_implicit.c \
	datawizard/task_with_multiple_time_the_same_handle.c \
	datawizard/temporary_partition.c \
	datawizard/temporary_partition_implicit.c \
	$(datawizard_test_arbiter_SOURCES) datawizard/unpartition.c \
	datawizard/user_interaction_implicit.c \
	datawizard/variable_parameters.c datawizard/variable_size.c \
	datawizard/write_only_tmp_buffer.c \
	$(datawizard_wt_broadcast_SOURCES) \
	$(datawizard_wt_host_SOURCES) disk/disk_compute.c \
	disk/disk_copy.c disk/disk_copy_to_disk.c \
	disk/disk_copy_unpack.c disk/disk_pack.c disk/mem_reclaim.c \
	errorcheck/invalid_blocking_calls.c errorcheck/invalid_tasks.c \
	errorcheck/starpu_init_noworker.c errorcheck/workers_cpuid.c \
	$(am__fortran90_init_01_SOURCES_DIST) helper/cublas_init.c \
	helper/cusparse_init.c helper/execute_on_all.c \
	helper/pinned_memory.c helper/starpu_create_sync_task.c \
	helper/starpu_data_cpy.c loader.c main/bind.c main/callback.c \
	main/codelet_null_callback.c \
	main/declare_deps_after_submission.c \
	main/declare_deps_after_submission_synchronous.c \
	main/declare_deps_in_callback.c main/deploop.c \
	main/deprecated_func.c main/display_binding.c \
	main/driver_api/init_run_deinit.c main/driver_api/run_driver.c \
	main/empty_task.c main/empty_task_chain.c \
	main/empty_task_sync_point.c \
	main/empty_task_sync_point_tasks.c \
	main/execute_on_a_specific_worker.c main/execute_schedule.c \
	main/get_children_tasks.c main/get_current_task.c \
	main/hwloc_cpuset.c main/insert_task.c \
	main/insert_task_array.c main/insert_task_dyn_handles.c \
	main/insert_task_many.c main/insert_task_nullcodelet.c \
	main/insert_task_pack.c main/insert_task_value.c \
	$(am__main_insert_task_where_SOURCES_DIST) main/job.c \
	main/mkdtemp.c main/multithreaded.c main/multithreaded_init.c \
	main/pack.c main/pause_resume.c main/regenerate.c \
	main/regenerate_pipeline.c main/restart.c main/starpu_init.c \
	main/starpu_task_bundle.c main/starpu_task_wait.c \
	main/starpu_task_wait_for_all.c main/starpu_worker_exists.c \
	main/static_restartable.c main/static_restartable_tag.c \
	main/static_restartable_using_initializer.c \
	$(am__main_subgraph_repeat_SOURCES_DIST) \
	$(am__main_subgraph_repeat_regenerate_SOURCES_DIST) \
	$(am__main_subgraph_repeat_regenerate_tag_SOURCES_DIST) \
	$(am__main_subgraph_repeat_regenerate_tag_cycle_SOURCES_DIST) \
	$(am__main_subgraph_repeat_tag_SOURCES_DIST) main/submit.c \
	main/tag_get_task.c main/tag_task_data_deps.c \
	main/tag_wait_api.c main/task_end_dep.c main/task_wait_api.c \
	main/wait_all_regenerable_tasks.c \
	microbenchs/async_tasks_overhead.c microbenchs/bandwidth.c \
	microbenchs/display_structures_size.c \
	microbenchs/local_pingpong.c microbenchs/matrix_as_vector.c \
	microbenchs/parallel_dependent_homogeneous_tasks_data.c \
	microbenchs/parallel_independent_heterogeneous_tasks.c \
	microbenchs/parallel_independent_heterogeneous_tasks_data.c \
	microbenchs/parallel_independent_homogeneous_tasks.c \
	microbenchs/parallel_independent_homogeneous_tasks_data.c \
	microbenchs/parallel_redux_heterogeneous_tasks_data.c \
	microbenchs/parallel_redux_homogeneous_tasks_data.c \
	microbenchs/prefetch_data_on_node.c \
	microbenchs/redundant_buffer.c \
	microbenchs/sync_tasks_overhead.c microbenchs/tasks_overhead.c \
	microbenchs/tasks_size_overhead.c model-checking/prio_list.c \
	model-checking/starpu_barrier.c $(openmp_api_01_SOURCES) \
	$(openmp_array_slice_01_SOURCES) \
	$(openmp_cuda_task_01_SOURCES) $(openmp_environment_SOURCES) \
	$(openmp_init_exit_01_SOURCES) $(openmp_init_exit_02_SOURCES) \
	$(openmp_parallel_01_SOURCES) $(openmp_parallel_02_SOURCES) \
	$(openmp_parallel_03_SOURCES) \
	$(openmp_parallel_barrier_01_SOURCES) \
	$(openmp_parallel_critical_01_SOURCES) \
	$(openmp_parallel_critical_inline_01_SOURCES) \
	$(openmp_parallel_critical_named_01_SOURCES) \
	$(openmp_parallel_critical_named_inline_01_SOURCES) \
	$(openmp_parallel_for_01_SOURCES) \
	$(openmp_parallel_for_02_SOURCES) \
	$(openmp_parallel_for_ordered_01_SOURCES) \
	$(openmp_parallel_master_01_SOURCES) \
	$(openmp_parallel_master_inline_01_SOURCES) \
	$(openmp_parallel_nested_lock_01_SOURCES) \
	$(openmp_parallel_sections_01_SOURCES) \
	$(openmp_parallel_sections_combined_01_SOURCES) \
	$(openmp_parallel_simple_lock_01_SOURCES) \
	$(openmp_parallel_single_copyprivate_01_SOURCES) \
	$(openmp_parallel_single_copyprivate_inline_01_SOURCES) \
	$(openmp_parallel_single_inline_01_SOURCES) \
	$(openmp_parallel_single_nowait_01_SOURCES) \
	$(openmp_parallel_single_wait_01_SOURCES) \
	$(openmp_task_01_SOURCES) $(openmp_task_02_SOURCES) \
	$(openmp_task_03_SOURCES) $(openmp_taskgroup_01_SOURCES) \
	$(openmp_taskgroup_02_SOURCES) $(openmp_taskloop_SOURCES) \
	$(openmp_taskwait_01_SOURCES) \
	$(am__overlap_gpu_concurrency_SOURCES_DIST) overlap/overlap.c \
	parallel_tasks/cuda_only.c \
	parallel_tasks/explicit_combined_worker.c \
	parallel_tasks/parallel_kernels.c \
	parallel_tasks/parallel_kernels_spmd.c \
	parallel_tasks/parallel_kernels_trivial.c \
	parallel_tasks/spmd_peager.c $(perfmodels_feed_SOURCES) \
	perfmodels/memory.c \
	$(am__perfmodels_non_linear_regression_based_SOURCES_DIST) \
	$(am__perfmodels_regression_based_SOURCES_DIST) \
	perfmodels/user_base.c perfmodels/valid_model.c \
	perfmodels/value_nan.c \
	$(sched_ctx_sched_ctx_hierarchy_SOURCES) \
	$(sched_ctx_sched_ctx_list_SOURCES) \
	$(sched_ctx_sched_ctx_policy_data_SOURCES) \
	sched_policies/data_locality.c \
	sched_policies/execute_all_tasks.c sched_policies/prio.c \
	sched_policies/simple_cpu_gpu_sched.c \
	sched_policies/simple_deps.c
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(nobase_STARPU_OPENCL_DATA_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir distdir-am
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'
RECHECK_LOGS = $(TEST_LOGS)
am__EXEEXT_10 = microbenchs/parallel_independent_homogeneous_tasks.sh \
	microbenchs/parallel_independent_heterogeneous_tasks.sh \
	microbenchs/parallel_independent_homogeneous_tasks_data.sh \
	microbenchs/parallel_independent_heterogeneous_tasks_data.sh \
	microbenchs/parallel_redux_homogeneous_tasks_data.sh \
	microbenchs/parallel_redux_heterogeneous_tasks_data.sh \
	microbenchs/parallel_dependent_homogeneous_tasks_data.sh
#am__EXEEXT_11 = $(am__EXEEXT_10)
am__EXEEXT_12 = $(am__append_3) $(am__append_9) $(am__EXEEXT_11) \
	$(am__append_11) $(am__append_13)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/loader-cross.sh.in \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/test-driver \
	$(top_srcdir)/starpu-mynvcc.mk $(top_srcdir)/starpu.mk
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
pkglibdir = ${libdir}/starpu
ACLOCAL = ${SHELL} '/home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9/build-aux/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AS = as
ATLASDIR = 
AUTOCONF = ${SHELL} '/home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9/build-aux/missing' autoconf
AUTOHEADER = ${SHELL} '/home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9/build-aux/missing' autoheader
AUTOMAKE = ${SHELL} '/home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9/build-aux/missing' automake-1.16
AWK = gawk
BLAS_LIB = openblas
BLAS_LIBS = 
BLAS_OPENBLAS_CFLAGS = -I/usr/include/x86_64-linux-gnu
BLAS_OPENBLAS_LIBS = -L/usr/lib/x86_64-linux-gnu/openblas -lblas
CC = /opt/ecrc/gcc/10.2.0/ub18/bin/gcc
CCDEPMODE = depmode=gcc3
CC_OR_MPICC = /opt/ecrc/gcc/10.2.0/ub18/bin/gcc
CFLAGS = -O3 -g -O2 -gdwarf-2 -g3  -I/usr/include/x86_64-linux-gnu -I/usr/include/x86_64-linux-gnu 
COVERAGE = no
CPP = /opt/ecrc/gcc/10.2.0/ub18/bin/gcc -E
CPPFLAGS = -D_FORTIFY_SOURCE=1 -I/home/gengz/gpu-v2/exageostat/installdir/include -D_GNU_SOURCE 
CXX = /opt/ecrc/gcc/10.2.0/ub18/bin/g++
CXXCPP = /opt/ecrc/gcc/10.2.0/ub18/bin/g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O3 -g -O2 -gdwarf-2 -g3
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DGELS_LIBS = 
DLB_CFLAGS = 
DLB_LIBS = 
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = /opt/ecrc/gcc/10.2.0/ub18/bin/gfortran
FC = /opt/ecrc/gcc/10.2.0/ub18/bin/gfortran
FCFLAGS = -O3 -g -O2 -gdwarf-2 -g3
FFLAGS = -O3 -g -O2 -gdwarf-2 -g3
FFTWF_CFLAGS = 
FFTWF_LIBS = -lfftw3f
FFTWL_CFLAGS = 
FFTWL_LIBS = -lfftw3l
FFTW_CFLAGS = 
FFTW_LIBS = -lfftw3
FGREP = /bin/grep -F
FXTDIR = 
FXT_CFLAGS = 
FXT_LDFLAGS = 
FXT_LIBS = 
GDB = /usr/bin/gdb
GLOBAL_AM_CFLAGS =  -Wall -Werror=implicit -Werror=implicit-function-declaration
GOTODIR = 
GREP = /bin/grep
HAVE_CXX11 = 1
HAVE_FFTWFL = 1
HELP2MAN = 
HWLOC_CFLAGS = -I/home/gengz/gpu-v2/exageostat/installdir/include -I/usr/include/libxml2
HWLOC_LIBS = -L/home/gengz/gpu-v2/exageostat/installdir/lib -lhwloc
HWLOC_REQUIRES = hwloc
ICC = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = -L/home/gengz/gpu-v2/exageostat/installdir/lib -gdwarf-2 -g3
LIBOBJS = 
LIBS = -lrt -lrt -lm  -lpthread -lopenblas -L/usr/lib/x86_64-linux-gnu/openblas -lblas 
LIBSOCL_INTERFACE_AGE = 0
LIBSOCL_INTERFACE_CURRENT = 0
LIBSOCL_INTERFACE_REVISION = 3
LIBSTARPUFFT_INTERFACE_AGE = 0
LIBSTARPUFFT_INTERFACE_CURRENT = 2
LIBSTARPUFFT_INTERFACE_REVISION = 1
LIBSTARPUMPI_INTERFACE_AGE = 0
LIBSTARPUMPI_INTERFACE_CURRENT = 3
LIBSTARPUMPI_INTERFACE_REVISION = 2
LIBSTARPURM_INTERFACE_AGE = 0
LIBSTARPURM_INTERFACE_CURRENT = 2
LIBSTARPURM_INTERFACE_REVISION = 0
LIBSTARPU_INTERFACE_AGE = 0
LIBSTARPU_INTERFACE_CURRENT = 8
LIBSTARPU_INTERFACE_REVISION = 0
LIBSTARPU_LDFLAGS =   -lcudart -lcublas -lcudart -lcusparse -lnvidia-ml -lstdc++ -L/home/gengz/gpu-v2/exageostat/installdir/lib -lhwloc            
LIBSTARPU_LINK = libstarpu-1.3.la
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAGMA_CFLAGS = 
MAGMA_LIBS = 
MAKEINFO = ${SHELL} '/home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9/build-aux/missing' makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MPICC = no
MPICC_LDFLAGS = 
MPICXX = no
MPIEXEC = /usr/bin/mpiexec
MPIEXEC_ARGS = 
MPIFORT = 
NM = /usr/bin/nm -B
NMAD_CFLAGS = 
NMAD_LIBS = 
NMEDIT = 
NVCC = /opt/ecrc/cuda/11.4/bin/nvcc
NVCCFLAGS = -std=c++11  -Wno-deprecated-gpu-targets -m64 $(am__append_1)
NVCC_CC = 
OBJDUMP = objdump
OBJEXT = o
OPENBLAS_CFLAGS = -I/usr/include/x86_64-linux-gnu
OPENBLAS_LIBS = -lopenblas
OPENMP_CFLAGS = 
OTOOL = 
OTOOL64 = 
PACKAGE = starpu
PACKAGE_BUGREPORT = starpu-devel@inria.fr
PACKAGE_NAME = StarPU
PACKAGE_STRING = StarPU 1.3.9
PACKAGE_TARNAME = starpu
PACKAGE_URL = http://gitlab.inria.fr/starpu/starpu
PACKAGE_VERSION = 1.3.9
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
POTI_CFLAGS = 
POTI_LIBS = 
PROG_DATE = date
PROG_FIND = /usr/bin/find
PROG_STAT = stat
RANLIB = ranlib
REALBASH = /bin/bash
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SIMGRID_CFLAGS = 
SIMGRID_LIBS = 
SIMGRID_MC = 
SOCL_OCL_LIB_OPENCL_DIR = 
SOCL_VENDORS = vendors/install/socl.icd vendors/nvidia.icd
STARPU_BLAS_LDFLAGS = 
STARPU_BUILD_DIR = /home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9
STARPU_COI_CPPFLAGS = 
STARPU_COI_LDFLAGS = 
STARPU_CUDA_CPPFLAGS = 
STARPU_CUDA_FORTRAN_LDFLAGS = 
STARPU_CUDA_LDFLAGS =  -lcudart -lcublas -lcudart -lcusparse -lnvidia-ml -lstdc++
STARPU_CUFFT_LDFLAGS = -lcufft
STARPU_CURAND_LDFLAGS =  -lcurand
STARPU_EFFECTIVE_VERSION = 1.3
STARPU_EXPORTED_LIBS =  -lpthread
STARPU_EXPORT_DYNAMIC = 
STARPU_GLPK_LDFLAGS =  
STARPU_HAVE_CXX11 = 1
STARPU_HAVE_F77_H = no
STARPU_HAVE_FFTW = 1
STARPU_HAVE_FFTWF = 1
STARPU_HAVE_HWLOC = 1
STARPU_HAVE_MAGMA = 
STARPU_HDF5_LDFLAGS = 
STARPU_LAPACK_LDFLAGS = 
STARPU_LEVELDB_LDFLAGS = 
STARPU_LIBNUMA_LDFLAGS =  
STARPU_MAJOR_VERSION = 1
STARPU_MINOR_VERSION = 3
STARPU_MS_LIB = 
STARPU_MS_LIB_ARCH = X64
STARPU_OPENBLAS = 1
STARPU_OPENBLAS_LDFLAGS = 
STARPU_OPENCL_CPPFLAGS = 
STARPU_OPENCL_DATAdir = 
STARPU_OPENCL_LDFLAGS = 
STARPU_OPENGL_RENDER = no
STARPU_OPENGL_RENDER_LDFLAGS = 
STARPU_PERF_DEBUG = no
STARPU_RELEASE_VERSION = 9
STARPU_SCIF_CPPFLAGS = 
STARPU_SCIF_LDFLAGS = 
STARPU_SC_HYPERVISOR = 
STARPU_SC_HYPERVISOR_DEBUG = no
STARPU_SRC_DIR = /home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9/.
STARPU_USE_CPU = yes
STARPU_USE_CUDA = yes
STARPU_USE_FXT = no
STARPU_USE_OPENCL = no
STRIP = strip
VERSION = 1.3.9
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
abs_builddir = /home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9/tests
abs_srcdir = /home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9/tests
abs_top_builddir = /home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9
abs_top_srcdir = /home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9
ac_ct_AR = ar
ac_ct_CC = /opt/ecrc/gcc/10.2.0/ub18/bin/gcc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
ac_ct_F77 = 
ac_ct_FC = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
doxygencommand = 
dvidir = ${docdir}
epstopdfcommand = /usr/bin/epstopdf
exec_prefix = ${prefix}
gitcommand = /usr/bin/git
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
mpicc_path = no
mpicxx_path = no
mpiexec_path = /usr/bin/mpiexec
mpifort_path = 
oldincludedir = /usr/include
pdfdir = ${docdir}
pdflatexcommand = /usr/bin/pdflatex
prefix = /home/gengz/gpu-v2/exageostat/installdir
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-pc-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
#MPI_LAUNCHER = $(MPIEXEC)  $(MPIEXEC_ARGS) -np 4
#MPI_RUN_ARGS = STARPU_WORKERS_NOBIND=1 STARPU_NCPU=4 STARPU_NMPIMSTHREADS=4
V_nvcc_ = $(V_nvcc_$(AM_DEFAULT_VERBOSITY))
V_nvcc_0 = @echo "  NVCC    " $@;
V_nvcc_1 = 
V_nvcc = $(V_nvcc_$(V))
V_icc_ = $(V_icc_$(AM_DEFAULT_VERBOSITY))
V_icc_0 = @echo "  ICC     " $@;
V_icc_1 = 
V_icc = $(V_icc_$(V))
#STARPU_PERF_MODEL_DIR = $(abs_top_srcdir)/tools/perfmodels/sampling
#STARPU_HOSTNAME = mirage
#MALLOC_PERTURB_ = 0
#STARPU_SIMGRID = 1
#STARPU_QUICK_CHECK = 1
#STARPU_LONG_CHECK = 1

# StarPU --- Runtime system for heterogeneous multicore architectures.
#
# Copyright (C) 2009-2021  UniversitÃ© de Bordeaux, CNRS (LaBRI UMR 5800), Inria
#
# StarPU is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or (at
# your option) any later version.
#
# StarPU is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# See the GNU Lesser General Public License in COPYING.LGPL for more details.
#
AM_CFLAGS = $(HWLOC_CFLAGS) $(FXT_CFLAGS) -Wall $(STARPU_CUDA_CPPFLAGS) $(STARPU_OPENCL_CPPFLAGS) $(STARPU_COI_CPPFLAGS) $(STARPU_SCIF_CPPFLAGS) $(GLOBAL_AM_CFLAGS) -Wno-unused
AM_CXXFLAGS = $(HWLOC_CFLAGS) $(FXT_CFLAGS) -Wall $(STARPU_CUDA_CPPFLAGS) $(STARPU_OPENCL_CPPFLAGS) $(STARPU_COI_CPPFLAGS) $(STARPU_SCIF_CPPFLAGS) $(GLOBAL_AM_CXXFLAGS) -Wno-unused
LDADD = $(top_builddir)/src/libstarpu-1.3.la $(HWLOC_LIBS) $(FXT_LIBS)
AM_CPPFLAGS = -I$(top_srcdir)/include/ -I$(top_builddir)/src -I$(top_srcdir)/src/
AM_LDFLAGS =  $(STARPU_OPENCL_LDFLAGS) $(STARPU_CUDA_LDFLAGS) $(STARPU_COI_LDFLAGS) $(STARPU_SCIF_LDFLAGS) $(FXT_LDFLAGS)
EXTRA_DIST = \
	helper.h				\
	datawizard/locality.sh			\
	main/increment_codelet.h		\
	overlap/overlap.sh			\
	datawizard/scal.h			\
	datawizard/mpi_like.h			\
	regression/profiles.in			\
	regression/regression.sh.in		\
	regression/profiles.build.only.in	\
	microbenchs/tasks_data_overhead.sh	\
	microbenchs/sync_tasks_data_overhead.sh	\
	microbenchs/async_tasks_data_overhead.sh	\
	microbenchs/tasks_size_overhead.sh	\
	microbenchs/tasks_size_overhead_sched.sh	\
	microbenchs/tasks_size_overhead_scheds.sh	\
	microbenchs/tasks_size_overhead.gp	\
	microbenchs/parallel_dependent_homogeneous_tasks_data.sh	\
	microbenchs/parallel_independent_heterogeneous_tasks_data.sh	\
	microbenchs/parallel_independent_heterogeneous_tasks.sh	\
	microbenchs/parallel_independent_homogeneous_tasks_data.sh	\
	microbenchs/parallel_independent_homogeneous_tasks.sh	\
	microbenchs/bandwidth_scheds.sh		\
	datawizard/scratch_opencl_kernel.cl     \
	datawizard/sync_and_notify_data_opencl_codelet.cl\
	datawizard/opencl_codelet_unsigned_inc_kernel.cl \
	coverage/coverage.sh			\
	datawizard/acquire_release_opencl_kernel.cl \
	datawizard/interfaces/test_interfaces.h	\
	datawizard/interfaces/bcsr/bcsr_opencl_kernel.cl \
	datawizard/interfaces/coo/coo_opencl_kernel.cl \
	datawizard/interfaces/matrix/matrix_opencl_kernel.cl \
	datawizard/interfaces/variable/variable_opencl_kernel.cl \
	datawizard/interfaces/vector/vector_opencl_kernel.cl \
	datawizard/interfaces/multiformat/multiformat_types.h \
	datawizard/interfaces/multiformat/multiformat_opencl_kernel.cl \
	datawizard/interfaces/multiformat/multiformat_conversion_codelets_kernel.cl \
	datawizard/interfaces/multiformat/advanced/generic.h \
	datawizard/interfaces/csr/csr_opencl_kernel.cl \
	datawizard/interfaces/block/block_opencl_kernel.cl \
	perfmodels/opencl_memset_kernel.cl \
	$(MICROBENCHS:=.sh) \
	microbenchs/microbench.sh \
	model-checking/platform.xml \
	model-checking/prio_list.sh \
	model-checking/barrier.sh \
	model-checking/starpu-mc.sh.in

CLEANFILES = \
	*.gcno *.gcda *.linkinfo core starpu_idle_microsec.log *.mod *.png *.output tasks.rec perfs.rec */perfs.rec */*/perfs.rec perfs2.rec bandwidth-*.dat bandwidth.gp bandwidth.eps bandwidth.svg

BUILT_SOURCES = 
SUBDIRS = 
examplebindir = $(libdir)/starpu/examples
#nobase_STARPU_OPENCL_DATA_DATA = datawizard/acquire_release_opencl_kernel.cl \
#	datawizard/scratch_opencl_kernel.cl \
#	datawizard/opencl_codelet_unsigned_inc_kernel.cl \
#	datawizard/sync_and_notify_data_opencl_codelet.cl \
#	datawizard/interfaces/block/block_opencl_kernel.cl \
#	datawizard/interfaces/bcsr/bcsr_opencl_kernel.cl \
#	datawizard/interfaces/coo/coo_opencl_kernel.cl \
#	datawizard/interfaces/csr/csr_opencl_kernel.cl \
#	datawizard/interfaces/vector/vector_opencl_kernel.cl \
#	datawizard/interfaces/matrix/matrix_opencl_kernel.cl \
#	datawizard/interfaces/multiformat/multiformat_opencl_kernel.cl \
#	datawizard/interfaces/multiformat/multiformat_conversion_codelets_kernel.cl \
#	datawizard/interfaces/variable/variable_opencl_kernel.cl \
#	perfmodels/opencl_memset_kernel.cl

# StarPU --- Runtime system for heterogeneous multicore architectures.
#
# Copyright (C) 2016-2021  UniversitÃ© de Bordeaux, CNRS (LaBRI UMR 5800), Inria
#
# StarPU is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or (at
# your option) any later version.
#
# StarPU is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# See the GNU Lesser General Public License in COPYING.LGPL for more details.
#
# Avoid using nvcc when making a coverity build, nvcc produces millions of
# lines of code which we don't want to analyze.  Instead, build dumb .o files
# containing empty functions.
#V_mynvcc_ = $(V_mynvcc_$(AM_DEFAULT_VERBOSITY))
#V_mynvcc_0 = @echo "  myNVCC  " $@;
#V_mynvcc_1 = 
#V_mynvcc = $(V_mynvcc_$(V))
testbindir = $(libdir)/starpu/tests
LOADER = loader
#LOADER = 
LOADER_BIN = $(abs_top_builddir)/tests/$(LOADER)
#LOADER_BIN = $(top_builddir)/tests/loader-cross.sh
LOADER_BIN2 = $(LOADER_BIN)
#LOADER_BIN2 = $(MPI_LAUNCHER) $(LOADER_BIN)
#TESTS_ENVIRONMENT = $(MPI_RUN_ARGS) top_builddir="$(abs_top_builddir)" top_srcdir="$(abs_top_srcdir)" $(LOADER_BIN2)
TESTS_ENVIRONMENT = $(MPI_RUN_ARGS) top_builddir="$(abs_top_builddir)" top_srcdir="$(abs_top_srcdir)"
LOG_COMPILER = $(LOADER_BIN2)
SHELL_TESTS = $(am__append_3) $(am__append_9) $(am__append_10) \
	$(am__append_11) $(am__append_13)
myPROGRAMS = main/callback main/bind main/mkdtemp \
	main/execute_schedule main/insert_task_pack \
	main/insert_task_nullcodelet main/multithreaded_init \
	main/empty_task main/empty_task_chain \
	main/starpu_worker_exists main/codelet_null_callback \
	datawizard/allocate datawizard/acquire_cb datawizard/deps \
	datawizard/user_interaction_implicit \
	datawizard/interfaces/copy_interfaces datawizard/numa_overflow \
	datawizard/locality datawizard/variable_size \
	errorcheck/starpu_init_noworker errorcheck/invalid_tasks \
	helper/cublas_init helper/cusparse_init helper/pinned_memory \
	helper/execute_on_all microbenchs/display_structures_size \
	microbenchs/local_pingpong overlap/overlap \
	sched_ctx/sched_ctx_list sched_ctx/sched_ctx_policy_data \
	openmp/init_exit_01 openmp/init_exit_02 openmp/environment \
	openmp/api_01 openmp/parallel_01 openmp/parallel_02 \
	openmp/parallel_03 openmp/parallel_barrier_01 \
	openmp/parallel_master_01 openmp/parallel_master_inline_01 \
	openmp/parallel_single_wait_01 \
	openmp/parallel_single_nowait_01 \
	openmp/parallel_single_inline_01 \
	openmp/parallel_single_copyprivate_01 \
	openmp/parallel_single_copyprivate_inline_01 \
	openmp/parallel_critical_01 openmp/parallel_critical_inline_01 \
	openmp/parallel_critical_named_01 \
	openmp/parallel_critical_named_inline_01 \
	openmp/parallel_simple_lock_01 openmp/parallel_nested_lock_01 \
	openmp/parallel_for_01 openmp/parallel_for_02 \
	openmp/parallel_for_ordered_01 openmp/parallel_sections_01 \
	openmp/parallel_sections_combined_01 openmp/task_01 \
	openmp/task_02 openmp/task_03 openmp/taskloop \
	openmp/taskwait_01 openmp/taskgroup_01 openmp/taskgroup_02 \
	openmp/array_slice_01 openmp/cuda_task_01 perfmodels/value_nan \
	$(am__append_4) $(am__append_5) $(am__append_6) \
	$(am__append_7)
MICROBENCHS = \
	microbenchs/parallel_independent_homogeneous_tasks      \
	microbenchs/parallel_independent_heterogeneous_tasks    \
	microbenchs/parallel_independent_homogeneous_tasks_data	\
	microbenchs/parallel_independent_heterogeneous_tasks_data \
	microbenchs/parallel_redux_homogeneous_tasks_data \
	microbenchs/parallel_redux_heterogeneous_tasks_data \
	microbenchs/parallel_dependent_homogeneous_tasks_data

examplebin_SCRIPTS = \
	microbenchs/tasks_data_overhead.sh \
	microbenchs/sync_tasks_data_overhead.sh \
	microbenchs/async_tasks_data_overhead.sh \
	microbenchs/tasks_size_overhead.gp \
	microbenchs/tasks_size_overhead.sh


################################
# Simgrid Model Checking tests #
################################
#model_checking_prio_list_LDADD = 
#model_checking_prio_list_LDFLAGS = 
#model_checking_starpu_barrier_LDADD = 
#model_checking_starpu_barrier_LDFLAGS = 
#SHELL_TESTS += model-checking/barrier.sh

#######################
# Source files        #
#######################
datawizard_acquire_release_SOURCES = datawizard/acquire_release.c \
	$(am__append_14) $(am__append_15)
datawizard_acquire_release2_SOURCES = datawizard/acquire_release2.c \
	$(am__append_16) $(am__append_17)
datawizard_scratch_SOURCES = datawizard/scratch.c $(am__append_18) \
	$(am__append_19)
datawizard_mpi_like_SOURCES = datawizard/mpi_like.c $(am__append_20) \
	$(am__append_21)
datawizard_mpi_like_async_SOURCES = datawizard/mpi_like_async.c \
	$(am__append_22) $(am__append_23)
datawizard_sync_and_notify_data_SOURCES =  \
	datawizard/sync_and_notify_data.c $(am__append_24) \
	$(am__append_25)
datawizard_sync_and_notify_data_implicit_SOURCES =  \
	datawizard/sync_and_notify_data_implicit.c $(am__append_26) \
	$(am__append_27)
datawizard_in_place_partition_SOURCES =  \
	datawizard/in_place_partition.c datawizard/scal.c \
	$(am__append_28) $(am__append_29)
datawizard_partition_dep_SOURCES = datawizard/partition_dep.c \
	datawizard/scal.c $(am__append_30) $(am__append_31)
datawizard_partition_lazy_SOURCES = datawizard/partition_lazy.c \
	datawizard/scal.c $(am__append_32) $(am__append_33)
datawizard_gpu_register_SOURCES = datawizard/gpu_register.c \
	datawizard/scal.c $(am__append_34) $(am__append_35)
datawizard_gpu_ptr_register_SOURCES = datawizard/gpu_ptr_register.c \
	datawizard/scal.c $(am__append_36) $(am__append_37)
datawizard_wt_host_SOURCES = \
	datawizard/wt_host.c

datawizard_wt_broadcast_SOURCES = \
	datawizard/wt_broadcast.c

datawizard_specific_node_SOURCES = datawizard/specific_node.c \
	$(am__append_38) $(am__append_39)
datawizard_test_arbiter_SOURCES = \
	datawizard/test_arbiter.cpp

main_deprecated_func_CFLAGS = $(AM_CFLAGS) -Wno-deprecated-declarations
main_insert_task_where_SOURCES = main/insert_task_where.c \
	$(am__append_40)
main_subgraph_repeat_SOURCES = main/subgraph_repeat.c \
	main/increment_codelet.c $(am__append_41)
main_subgraph_repeat_tag_SOURCES = main/subgraph_repeat_tag.c \
	main/increment_codelet.c $(am__append_42)
main_subgraph_repeat_regenerate_SOURCES =  \
	main/subgraph_repeat_regenerate.c main/increment_codelet.c \
	$(am__append_43)
main_subgraph_repeat_regenerate_tag_SOURCES =  \
	main/subgraph_repeat_regenerate_tag.c main/increment_codelet.c \
	$(am__append_44)
main_subgraph_repeat_regenerate_tag_cycle_SOURCES =  \
	main/subgraph_repeat_regenerate_tag_cycle.c \
	main/increment_codelet.c $(am__append_45)
sched_ctx_sched_ctx_list_SOURCES = \
	sched_ctx/sched_ctx_list.c

sched_ctx_sched_ctx_policy_data_SOURCES = \
	sched_ctx/sched_ctx_policy_data.c

sched_ctx_sched_ctx_hierarchy_SOURCES = \
	sched_ctx/sched_ctx_hierarchy.c

openmp_init_exit_01_SOURCES = \
	openmp/init_exit_01.c

openmp_init_exit_02_SOURCES = \
	openmp/init_exit_02.c

openmp_environment_SOURCES = \
	openmp/environment.c

openmp_api_01_SOURCES = \
	openmp/api_01.c

openmp_parallel_01_SOURCES = \
	openmp/parallel_01.c

openmp_parallel_02_SOURCES = \
	openmp/parallel_02.c

openmp_parallel_03_SOURCES = \
	openmp/parallel_03.c

openmp_parallel_barrier_01_SOURCES = \
	openmp/parallel_barrier_01.c

openmp_parallel_master_01_SOURCES = \
	openmp/parallel_master_01.c

openmp_parallel_master_inline_01_SOURCES = \
	openmp/parallel_master_inline_01.c

openmp_parallel_single_wait_01_SOURCES = \
	openmp/parallel_single_wait_01.c

openmp_parallel_single_nowait_01_SOURCES = \
	openmp/parallel_single_nowait_01.c

openmp_parallel_single_inline_01_SOURCES = \
	openmp/parallel_single_inline_01.c

openmp_parallel_single_copyprivate_01_SOURCES = \
	openmp/parallel_single_copyprivate_01.c

openmp_parallel_single_copyprivate_inline_01_SOURCES = \
	openmp/parallel_single_copyprivate_inline_01.c

openmp_parallel_critical_01_SOURCES = \
	openmp/parallel_critical_01.c

openmp_parallel_critical_inline_01_SOURCES = \
	openmp/parallel_critical_inline_01.c

openmp_parallel_critical_named_01_SOURCES = \
	openmp/parallel_critical_named_01.c

openmp_parallel_critical_named_inline_01_SOURCES = \
	openmp/parallel_critical_named_inline_01.c

openmp_parallel_simple_lock_01_SOURCES = \
	openmp/parallel_simple_lock_01.c

openmp_parallel_nested_lock_01_SOURCES = \
	openmp/parallel_nested_lock_01.c

openmp_parallel_for_01_SOURCES = \
	openmp/parallel_for_01.c

openmp_parallel_for_02_SOURCES = \
	openmp/parallel_for_02.c

openmp_parallel_for_ordered_01_SOURCES = \
	openmp/parallel_for_ordered_01.c

openmp_parallel_sections_01_SOURCES = \
	openmp/parallel_sections_01.c

openmp_parallel_sections_combined_01_SOURCES = \
	openmp/parallel_sections_combined_01.c

openmp_task_01_SOURCES = \
	openmp/task_01.c

openmp_task_02_SOURCES = \
	openmp/task_02.c

openmp_task_03_SOURCES = \
	openmp/task_03.c

openmp_taskloop_SOURCES = \
	openmp/taskloop.c

openmp_taskwait_01_SOURCES = \
	openmp/taskwait_01.c

openmp_taskgroup_01_SOURCES = \
	openmp/taskgroup_01.c

openmp_taskgroup_02_SOURCES = \
	openmp/taskgroup_02.c

openmp_array_slice_01_SOURCES = \
	openmp/array_slice_01.c

openmp_cuda_task_01_SOURCES = \
	openmp/cuda_task_01.c

#fortran90_init_01_SOURCES = \
#	$(top_srcdir)/include/starpu_mod.f90	\
#	fortran90/init_01.f90


###################
# Block interface #
###################
datawizard_interfaces_block_block_interface_SOURCES =  \
	datawizard/interfaces/test_interfaces.c \
	datawizard/interfaces/block/block_interface.c $(am__append_46) \
	$(am__append_47)

##################
# BSCR interface #
##################
datawizard_interfaces_bcsr_bcsr_interface_SOURCES =  \
	datawizard/interfaces/test_interfaces.c \
	datawizard/interfaces/bcsr/bcsr_interface.c $(am__append_48) \
	$(am__append_49)

#################
# COO interface #
#################
datawizard_interfaces_coo_coo_interface_SOURCES =  \
	datawizard/interfaces/test_interfaces.c \
	datawizard/interfaces/coo/coo_interface.c $(am__append_50) \
	$(am__append_51)

#################
# CSR interface #
#################
datawizard_interfaces_csr_csr_interface_SOURCES =  \
	datawizard/interfaces/test_interfaces.c \
	datawizard/interfaces/csr/csr_interface.c $(am__append_52) \
	$(am__append_53)
datawizard_interfaces_vector_vector_interface_SOURCES =  \
	datawizard/interfaces/vector/vector_interface.c \
	datawizard/interfaces/test_interfaces.c $(am__append_54) \
	$(am__append_55)

####################
# Matrix interface #
####################
datawizard_interfaces_matrix_matrix_interface_SOURCES =  \
	datawizard/interfaces/test_interfaces.c \
	datawizard/interfaces/matrix/matrix_interface.c \
	$(am__append_56) $(am__append_57)

#########################
# Multiformat interface #
#########################
datawizard_interfaces_multiformat_multiformat_interface_SOURCES =  \
	datawizard/interfaces/test_interfaces.c \
	datawizard/interfaces/multiformat/multiformat_interface.c \
	datawizard/interfaces/multiformat/multiformat_conversion_codelets.c \
	$(am__append_58) $(am__append_59)
datawizard_interfaces_multiformat_advanced_multiformat_cuda_opencl_SOURCES = \
	datawizard/interfaces/multiformat/advanced/generic.c               \
	datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl.c

datawizard_interfaces_multiformat_advanced_multiformat_data_release_SOURCES = \
	datawizard/interfaces/multiformat/advanced/generic.c                  \
	datawizard/interfaces/multiformat/advanced/multiformat_data_release.c

datawizard_interfaces_multiformat_advanced_multiformat_worker_SOURCES = \
	datawizard/interfaces/multiformat/advanced/generic.c               \
	datawizard/interfaces/multiformat/advanced/multiformat_worker.c

datawizard_interfaces_multiformat_advanced_multiformat_handle_conversion_SOURCES = \
	datawizard/interfaces/multiformat/advanced/generic.c \
	datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion.c

datawizard_interfaces_multiformat_advanced_same_handle_SOURCES = \
	datawizard/interfaces/multiformat/advanced/generic.c               \
	datawizard/interfaces/multiformat/advanced/same_handle.c

datawizard_interfaces_variable_variable_interface_SOURCES =  \
	datawizard/interfaces/test_interfaces.c \
	datawizard/interfaces/variable/variable_interface.c \
	$(am__append_60) $(am__append_61)

##################
# Void interface #
##################
datawizard_interfaces_void_void_interface_SOURCES = \
	datawizard/interfaces/test_interfaces.c        \
	datawizard/interfaces/void/void_interface.c

overlap_gpu_concurrency_SOURCES = overlap/gpu_concurrency.c \
	$(am__append_62)
perfmodels_regression_based_SOURCES = perfmodels/regression_based.c \
	$(am__append_63)
perfmodels_non_linear_regression_based_SOURCES =  \
	perfmodels/non_linear_regression_based.c $(am__append_64)
perfmodels_feed_SOURCES = \
	perfmodels/feed.c

sched_policies_execute_all_tasks_LDFLAGS = $(AM_LDFLAGS) -lm
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .cu .cubin .f90 .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/starpu.mk $(top_srcdir)/starpu-mynvcc.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/starpu.mk $(top_srcdir)/starpu-mynvcc.mk $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
loader-cross.sh: $(top_builddir)/config.status $(srcdir)/loader-cross.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-examplebinPROGRAMS: $(examplebin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(examplebin_PROGRAMS)'; test -n "$(examplebindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(examplebindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(examplebindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(examplebindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(examplebindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-examplebinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(examplebin_PROGRAMS)'; test -n "$(examplebindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(examplebindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(examplebindir)" && rm -f $$files

clean-examplebinPROGRAMS:
	@list='$(examplebin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
datawizard/$(am__dirstamp):
	@$(MKDIR_P) datawizard
	@: > datawizard/$(am__dirstamp)

datawizard/acquire_cb$(EXEEXT): $(datawizard_acquire_cb_OBJECTS) $(datawizard_acquire_cb_DEPENDENCIES) $(EXTRA_datawizard_acquire_cb_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/acquire_cb$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_acquire_cb_OBJECTS) $(datawizard_acquire_cb_LDADD) $(LIBS)

datawizard/acquire_cb_insert$(EXEEXT): $(datawizard_acquire_cb_insert_OBJECTS) $(datawizard_acquire_cb_insert_DEPENDENCIES) $(EXTRA_datawizard_acquire_cb_insert_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/acquire_cb_insert$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_acquire_cb_insert_OBJECTS) $(datawizard_acquire_cb_insert_LDADD) $(LIBS)
datawizard/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) datawizard/$(DEPDIR)
	@: > datawizard/$(DEPDIR)/$(am__dirstamp)
datawizard/acquire_release_cuda.$(OBJEXT): datawizard/$(am__dirstamp) \
	datawizard/$(DEPDIR)/$(am__dirstamp)

datawizard/acquire_release$(EXEEXT): $(datawizard_acquire_release_OBJECTS) $(datawizard_acquire_release_DEPENDENCIES) $(EXTRA_datawizard_acquire_release_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/acquire_release$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_acquire_release_OBJECTS) $(datawizard_acquire_release_LDADD) $(LIBS)

datawizard/acquire_release2$(EXEEXT): $(datawizard_acquire_release2_OBJECTS) $(datawizard_acquire_release2_DEPENDENCIES) $(EXTRA_datawizard_acquire_release2_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/acquire_release2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_acquire_release2_OBJECTS) $(datawizard_acquire_release2_LDADD) $(LIBS)

datawizard/acquire_try$(EXEEXT): $(datawizard_acquire_try_OBJECTS) $(datawizard_acquire_try_DEPENDENCIES) $(EXTRA_datawizard_acquire_try_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/acquire_try$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_acquire_try_OBJECTS) $(datawizard_acquire_try_LDADD) $(LIBS)

datawizard/allocate$(EXEEXT): $(datawizard_allocate_OBJECTS) $(datawizard_allocate_DEPENDENCIES) $(EXTRA_datawizard_allocate_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/allocate$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_allocate_OBJECTS) $(datawizard_allocate_LDADD) $(LIBS)

datawizard/bcsr$(EXEEXT): $(datawizard_bcsr_OBJECTS) $(datawizard_bcsr_DEPENDENCIES) $(EXTRA_datawizard_bcsr_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/bcsr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_bcsr_OBJECTS) $(datawizard_bcsr_LDADD) $(LIBS)

datawizard/cache$(EXEEXT): $(datawizard_cache_OBJECTS) $(datawizard_cache_DEPENDENCIES) $(EXTRA_datawizard_cache_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/cache$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_cache_OBJECTS) $(datawizard_cache_LDADD) $(LIBS)

datawizard/commute$(EXEEXT): $(datawizard_commute_OBJECTS) $(datawizard_commute_DEPENDENCIES) $(EXTRA_datawizard_commute_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/commute$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_commute_OBJECTS) $(datawizard_commute_LDADD) $(LIBS)

datawizard/commute2$(EXEEXT): $(datawizard_commute2_OBJECTS) $(datawizard_commute2_DEPENDENCIES) $(EXTRA_datawizard_commute2_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/commute2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_commute2_OBJECTS) $(datawizard_commute2_LDADD) $(LIBS)

datawizard/copy$(EXEEXT): $(datawizard_copy_OBJECTS) $(datawizard_copy_DEPENDENCIES) $(EXTRA_datawizard_copy_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/copy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_copy_OBJECTS) $(datawizard_copy_LDADD) $(LIBS)

datawizard/critical_section_with_void_interface$(EXEEXT): $(datawizard_critical_section_with_void_interface_OBJECTS) $(datawizard_critical_section_with_void_interface_DEPENDENCIES) $(EXTRA_datawizard_critical_section_with_void_interface_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/critical_section_with_void_interface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_critical_section_with_void_interface_OBJECTS) $(datawizard_critical_section_with_void_interface_LDADD) $(LIBS)

datawizard/data_implicit_deps$(EXEEXT): $(datawizard_data_implicit_deps_OBJECTS) $(datawizard_data_implicit_deps_DEPENDENCIES) $(EXTRA_datawizard_data_implicit_deps_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/data_implicit_deps$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_data_implicit_deps_OBJECTS) $(datawizard_data_implicit_deps_LDADD) $(LIBS)

datawizard/data_invalidation$(EXEEXT): $(datawizard_data_invalidation_OBJECTS) $(datawizard_data_invalidation_DEPENDENCIES) $(EXTRA_datawizard_data_invalidation_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/data_invalidation$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_data_invalidation_OBJECTS) $(datawizard_data_invalidation_LDADD) $(LIBS)

datawizard/data_lookup$(EXEEXT): $(datawizard_data_lookup_OBJECTS) $(datawizard_data_lookup_DEPENDENCIES) $(EXTRA_datawizard_data_lookup_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/data_lookup$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_data_lookup_OBJECTS) $(datawizard_data_lookup_LDADD) $(LIBS)

datawizard/deps$(EXEEXT): $(datawizard_deps_OBJECTS) $(datawizard_deps_DEPENDENCIES) $(EXTRA_datawizard_deps_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/deps$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_deps_OBJECTS) $(datawizard_deps_LDADD) $(LIBS)

datawizard/dining_philosophers$(EXEEXT): $(datawizard_dining_philosophers_OBJECTS) $(datawizard_dining_philosophers_DEPENDENCIES) $(EXTRA_datawizard_dining_philosophers_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/dining_philosophers$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_dining_philosophers_OBJECTS) $(datawizard_dining_philosophers_LDADD) $(LIBS)

datawizard/double_parameter$(EXEEXT): $(datawizard_double_parameter_OBJECTS) $(datawizard_double_parameter_DEPENDENCIES) $(EXTRA_datawizard_double_parameter_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/double_parameter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_double_parameter_OBJECTS) $(datawizard_double_parameter_LDADD) $(LIBS)

datawizard/dsm_stress$(EXEEXT): $(datawizard_dsm_stress_OBJECTS) $(datawizard_dsm_stress_DEPENDENCIES) $(EXTRA_datawizard_dsm_stress_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/dsm_stress$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_dsm_stress_OBJECTS) $(datawizard_dsm_stress_LDADD) $(LIBS)
datawizard/scal_cuda.$(OBJEXT): datawizard/$(am__dirstamp) \
	datawizard/$(DEPDIR)/$(am__dirstamp)

datawizard/gpu_ptr_register$(EXEEXT): $(datawizard_gpu_ptr_register_OBJECTS) $(datawizard_gpu_ptr_register_DEPENDENCIES) $(EXTRA_datawizard_gpu_ptr_register_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/gpu_ptr_register$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_gpu_ptr_register_OBJECTS) $(datawizard_gpu_ptr_register_LDADD) $(LIBS)

datawizard/gpu_register$(EXEEXT): $(datawizard_gpu_register_OBJECTS) $(datawizard_gpu_register_DEPENDENCIES) $(EXTRA_datawizard_gpu_register_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/gpu_register$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_gpu_register_OBJECTS) $(datawizard_gpu_register_LDADD) $(LIBS)

datawizard/handle_to_pointer$(EXEEXT): $(datawizard_handle_to_pointer_OBJECTS) $(datawizard_handle_to_pointer_DEPENDENCIES) $(EXTRA_datawizard_handle_to_pointer_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/handle_to_pointer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_handle_to_pointer_OBJECTS) $(datawizard_handle_to_pointer_LDADD) $(LIBS)

datawizard/in_place_partition$(EXEEXT): $(datawizard_in_place_partition_OBJECTS) $(datawizard_in_place_partition_DEPENDENCIES) $(EXTRA_datawizard_in_place_partition_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/in_place_partition$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_in_place_partition_OBJECTS) $(datawizard_in_place_partition_LDADD) $(LIBS)

datawizard/increment_init$(EXEEXT): $(datawizard_increment_init_OBJECTS) $(datawizard_increment_init_DEPENDENCIES) $(EXTRA_datawizard_increment_init_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/increment_init$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_increment_init_OBJECTS) $(datawizard_increment_init_LDADD) $(LIBS)

datawizard/increment_redux$(EXEEXT): $(datawizard_increment_redux_OBJECTS) $(datawizard_increment_redux_DEPENDENCIES) $(EXTRA_datawizard_increment_redux_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/increment_redux$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_increment_redux_OBJECTS) $(datawizard_increment_redux_LDADD) $(LIBS)

datawizard/increment_redux_lazy$(EXEEXT): $(datawizard_increment_redux_lazy_OBJECTS) $(datawizard_increment_redux_lazy_DEPENDENCIES) $(EXTRA_datawizard_increment_redux_lazy_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/increment_redux_lazy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_increment_redux_lazy_OBJECTS) $(datawizard_increment_redux_lazy_LDADD) $(LIBS)

datawizard/increment_redux_v2$(EXEEXT): $(datawizard_increment_redux_v2_OBJECTS) $(datawizard_increment_redux_v2_DEPENDENCIES) $(EXTRA_datawizard_increment_redux_v2_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/increment_redux_v2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_increment_redux_v2_OBJECTS) $(datawizard_increment_redux_v2_LDADD) $(LIBS)
datawizard/interfaces/bcsr/$(am__dirstamp):
	@$(MKDIR_P) datawizard/interfaces/bcsr
	@: > datawizard/interfaces/bcsr/$(am__dirstamp)
datawizard/interfaces/bcsr/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) datawizard/interfaces/bcsr/$(DEPDIR)
	@: > datawizard/interfaces/bcsr/$(DEPDIR)/$(am__dirstamp)
datawizard/interfaces/bcsr/bcsr_cuda.$(OBJEXT):  \
	datawizard/interfaces/bcsr/$(am__dirstamp) \
	datawizard/interfaces/bcsr/$(DEPDIR)/$(am__dirstamp)

datawizard/interfaces/bcsr/bcsr_interface$(EXEEXT): $(datawizard_interfaces_bcsr_bcsr_interface_OBJECTS) $(datawizard_interfaces_bcsr_bcsr_interface_DEPENDENCIES) $(EXTRA_datawizard_interfaces_bcsr_bcsr_interface_DEPENDENCIES) datawizard/interfaces/bcsr/$(am__dirstamp)
	@rm -f datawizard/interfaces/bcsr/bcsr_interface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_interfaces_bcsr_bcsr_interface_OBJECTS) $(datawizard_interfaces_bcsr_bcsr_interface_LDADD) $(LIBS)
datawizard/interfaces/block/$(am__dirstamp):
	@$(MKDIR_P) datawizard/interfaces/block
	@: > datawizard/interfaces/block/$(am__dirstamp)
datawizard/interfaces/block/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) datawizard/interfaces/block/$(DEPDIR)
	@: > datawizard/interfaces/block/$(DEPDIR)/$(am__dirstamp)
datawizard/interfaces/block/block_cuda.$(OBJEXT):  \
	datawizard/interfaces/block/$(am__dirstamp) \
	datawizard/interfaces/block/$(DEPDIR)/$(am__dirstamp)

datawizard/interfaces/block/block_interface$(EXEEXT): $(datawizard_interfaces_block_block_interface_OBJECTS) $(datawizard_interfaces_block_block_interface_DEPENDENCIES) $(EXTRA_datawizard_interfaces_block_block_interface_DEPENDENCIES) datawizard/interfaces/block/$(am__dirstamp)
	@rm -f datawizard/interfaces/block/block_interface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_interfaces_block_block_interface_OBJECTS) $(datawizard_interfaces_block_block_interface_LDADD) $(LIBS)
datawizard/interfaces/coo/$(am__dirstamp):
	@$(MKDIR_P) datawizard/interfaces/coo
	@: > datawizard/interfaces/coo/$(am__dirstamp)
datawizard/interfaces/coo/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) datawizard/interfaces/coo/$(DEPDIR)
	@: > datawizard/interfaces/coo/$(DEPDIR)/$(am__dirstamp)
datawizard/interfaces/coo/coo_cuda.$(OBJEXT):  \
	datawizard/interfaces/coo/$(am__dirstamp) \
	datawizard/interfaces/coo/$(DEPDIR)/$(am__dirstamp)

datawizard/interfaces/coo/coo_interface$(EXEEXT): $(datawizard_interfaces_coo_coo_interface_OBJECTS) $(datawizard_interfaces_coo_coo_interface_DEPENDENCIES) $(EXTRA_datawizard_interfaces_coo_coo_interface_DEPENDENCIES) datawizard/interfaces/coo/$(am__dirstamp)
	@rm -f datawizard/interfaces/coo/coo_interface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_interfaces_coo_coo_interface_OBJECTS) $(datawizard_interfaces_coo_coo_interface_LDADD) $(LIBS)
datawizard/interfaces/$(am__dirstamp):
	@$(MKDIR_P) datawizard/interfaces
	@: > datawizard/interfaces/$(am__dirstamp)

datawizard/interfaces/copy_interfaces$(EXEEXT): $(datawizard_interfaces_copy_interfaces_OBJECTS) $(datawizard_interfaces_copy_interfaces_DEPENDENCIES) $(EXTRA_datawizard_interfaces_copy_interfaces_DEPENDENCIES) datawizard/interfaces/$(am__dirstamp)
	@rm -f datawizard/interfaces/copy_interfaces$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_interfaces_copy_interfaces_OBJECTS) $(datawizard_interfaces_copy_interfaces_LDADD) $(LIBS)
datawizard/interfaces/csr/$(am__dirstamp):
	@$(MKDIR_P) datawizard/interfaces/csr
	@: > datawizard/interfaces/csr/$(am__dirstamp)
datawizard/interfaces/csr/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) datawizard/interfaces/csr/$(DEPDIR)
	@: > datawizard/interfaces/csr/$(DEPDIR)/$(am__dirstamp)
datawizard/interfaces/csr/csr_cuda.$(OBJEXT):  \
	datawizard/interfaces/csr/$(am__dirstamp) \
	datawizard/interfaces/csr/$(DEPDIR)/$(am__dirstamp)

datawizard/interfaces/csr/csr_interface$(EXEEXT): $(datawizard_interfaces_csr_csr_interface_OBJECTS) $(datawizard_interfaces_csr_csr_interface_DEPENDENCIES) $(EXTRA_datawizard_interfaces_csr_csr_interface_DEPENDENCIES) datawizard/interfaces/csr/$(am__dirstamp)
	@rm -f datawizard/interfaces/csr/csr_interface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_interfaces_csr_csr_interface_OBJECTS) $(datawizard_interfaces_csr_csr_interface_LDADD) $(LIBS)
datawizard/interfaces/matrix/$(am__dirstamp):
	@$(MKDIR_P) datawizard/interfaces/matrix
	@: > datawizard/interfaces/matrix/$(am__dirstamp)
datawizard/interfaces/matrix/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) datawizard/interfaces/matrix/$(DEPDIR)
	@: > datawizard/interfaces/matrix/$(DEPDIR)/$(am__dirstamp)
datawizard/interfaces/matrix/matrix_cuda.$(OBJEXT):  \
	datawizard/interfaces/matrix/$(am__dirstamp) \
	datawizard/interfaces/matrix/$(DEPDIR)/$(am__dirstamp)

datawizard/interfaces/matrix/matrix_interface$(EXEEXT): $(datawizard_interfaces_matrix_matrix_interface_OBJECTS) $(datawizard_interfaces_matrix_matrix_interface_DEPENDENCIES) $(EXTRA_datawizard_interfaces_matrix_matrix_interface_DEPENDENCIES) datawizard/interfaces/matrix/$(am__dirstamp)
	@rm -f datawizard/interfaces/matrix/matrix_interface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_interfaces_matrix_matrix_interface_OBJECTS) $(datawizard_interfaces_matrix_matrix_interface_LDADD) $(LIBS)
datawizard/interfaces/multiformat/advanced/$(am__dirstamp):
	@$(MKDIR_P) datawizard/interfaces/multiformat/advanced
	@: > datawizard/interfaces/multiformat/advanced/$(am__dirstamp)

datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl$(EXEEXT): $(datawizard_interfaces_multiformat_advanced_multiformat_cuda_opencl_OBJECTS) $(datawizard_interfaces_multiformat_advanced_multiformat_cuda_opencl_DEPENDENCIES) $(EXTRA_datawizard_interfaces_multiformat_advanced_multiformat_cuda_opencl_DEPENDENCIES) datawizard/interfaces/multiformat/advanced/$(am__dirstamp)
	@rm -f datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_interfaces_multiformat_advanced_multiformat_cuda_opencl_OBJECTS) $(datawizard_interfaces_multiformat_advanced_multiformat_cuda_opencl_LDADD) $(LIBS)

datawizard/interfaces/multiformat/advanced/multiformat_data_release$(EXEEXT): $(datawizard_interfaces_multiformat_advanced_multiformat_data_release_OBJECTS) $(datawizard_interfaces_multiformat_advanced_multiformat_data_release_DEPENDENCIES) $(EXTRA_datawizard_interfaces_multiformat_advanced_multiformat_data_release_DEPENDENCIES) datawizard/interfaces/multiformat/advanced/$(am__dirstamp)
	@rm -f datawizard/interfaces/multiformat/advanced/multiformat_data_release$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_interfaces_multiformat_advanced_multiformat_data_release_OBJECTS) $(datawizard_interfaces_multiformat_advanced_multiformat_data_release_LDADD) $(LIBS)

datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion$(EXEEXT): $(datawizard_interfaces_multiformat_advanced_multiformat_handle_conversion_OBJECTS) $(datawizard_interfaces_multiformat_advanced_multiformat_handle_conversion_DEPENDENCIES) $(EXTRA_datawizard_interfaces_multiformat_advanced_multiformat_handle_conversion_DEPENDENCIES) datawizard/interfaces/multiformat/advanced/$(am__dirstamp)
	@rm -f datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_interfaces_multiformat_advanced_multiformat_handle_conversion_OBJECTS) $(datawizard_interfaces_multiformat_advanced_multiformat_handle_conversion_LDADD) $(LIBS)

datawizard/interfaces/multiformat/advanced/multiformat_worker$(EXEEXT): $(datawizard_interfaces_multiformat_advanced_multiformat_worker_OBJECTS) $(datawizard_interfaces_multiformat_advanced_multiformat_worker_DEPENDENCIES) $(EXTRA_datawizard_interfaces_multiformat_advanced_multiformat_worker_DEPENDENCIES) datawizard/interfaces/multiformat/advanced/$(am__dirstamp)
	@rm -f datawizard/interfaces/multiformat/advanced/multiformat_worker$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_interfaces_multiformat_advanced_multiformat_worker_OBJECTS) $(datawizard_interfaces_multiformat_advanced_multiformat_worker_LDADD) $(LIBS)

datawizard/interfaces/multiformat/advanced/same_handle$(EXEEXT): $(datawizard_interfaces_multiformat_advanced_same_handle_OBJECTS) $(datawizard_interfaces_multiformat_advanced_same_handle_DEPENDENCIES) $(EXTRA_datawizard_interfaces_multiformat_advanced_same_handle_DEPENDENCIES) datawizard/interfaces/multiformat/advanced/$(am__dirstamp)
	@rm -f datawizard/interfaces/multiformat/advanced/same_handle$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_interfaces_multiformat_advanced_same_handle_OBJECTS) $(datawizard_interfaces_multiformat_advanced_same_handle_LDADD) $(LIBS)
datawizard/interfaces/multiformat/$(am__dirstamp):
	@$(MKDIR_P) datawizard/interfaces/multiformat
	@: > datawizard/interfaces/multiformat/$(am__dirstamp)
datawizard/interfaces/multiformat/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) datawizard/interfaces/multiformat/$(DEPDIR)
	@: > datawizard/interfaces/multiformat/$(DEPDIR)/$(am__dirstamp)
datawizard/interfaces/multiformat/multiformat_cuda.$(OBJEXT):  \
	datawizard/interfaces/multiformat/$(am__dirstamp) \
	datawizard/interfaces/multiformat/$(DEPDIR)/$(am__dirstamp)
datawizard/interfaces/multiformat/multiformat_conversion_codelets_cuda.$(OBJEXT):  \
	datawizard/interfaces/multiformat/$(am__dirstamp) \
	datawizard/interfaces/multiformat/$(DEPDIR)/$(am__dirstamp)

datawizard/interfaces/multiformat/multiformat_interface$(EXEEXT): $(datawizard_interfaces_multiformat_multiformat_interface_OBJECTS) $(datawizard_interfaces_multiformat_multiformat_interface_DEPENDENCIES) $(EXTRA_datawizard_interfaces_multiformat_multiformat_interface_DEPENDENCIES) datawizard/interfaces/multiformat/$(am__dirstamp)
	@rm -f datawizard/interfaces/multiformat/multiformat_interface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_interfaces_multiformat_multiformat_interface_OBJECTS) $(datawizard_interfaces_multiformat_multiformat_interface_LDADD) $(LIBS)
datawizard/interfaces/variable/$(am__dirstamp):
	@$(MKDIR_P) datawizard/interfaces/variable
	@: > datawizard/interfaces/variable/$(am__dirstamp)
datawizard/interfaces/variable/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) datawizard/interfaces/variable/$(DEPDIR)
	@: > datawizard/interfaces/variable/$(DEPDIR)/$(am__dirstamp)
datawizard/interfaces/variable/variable_cuda.$(OBJEXT):  \
	datawizard/interfaces/variable/$(am__dirstamp) \
	datawizard/interfaces/variable/$(DEPDIR)/$(am__dirstamp)

datawizard/interfaces/variable/variable_interface$(EXEEXT): $(datawizard_interfaces_variable_variable_interface_OBJECTS) $(datawizard_interfaces_variable_variable_interface_DEPENDENCIES) $(EXTRA_datawizard_interfaces_variable_variable_interface_DEPENDENCIES) datawizard/interfaces/variable/$(am__dirstamp)
	@rm -f datawizard/interfaces/variable/variable_interface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_interfaces_variable_variable_interface_OBJECTS) $(datawizard_interfaces_variable_variable_interface_LDADD) $(LIBS)
datawizard/interfaces/vector/$(am__dirstamp):
	@$(MKDIR_P) datawizard/interfaces/vector
	@: > datawizard/interfaces/vector/$(am__dirstamp)
datawizard/interfaces/vector/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) datawizard/interfaces/vector/$(DEPDIR)
	@: > datawizard/interfaces/vector/$(DEPDIR)/$(am__dirstamp)
datawizard/interfaces/vector/vector_cuda.$(OBJEXT):  \
	datawizard/interfaces/vector/$(am__dirstamp) \
	datawizard/interfaces/vector/$(DEPDIR)/$(am__dirstamp)

datawizard/interfaces/vector/vector_interface$(EXEEXT): $(datawizard_interfaces_vector_vector_interface_OBJECTS) $(datawizard_interfaces_vector_vector_interface_DEPENDENCIES) $(EXTRA_datawizard_interfaces_vector_vector_interface_DEPENDENCIES) datawizard/interfaces/vector/$(am__dirstamp)
	@rm -f datawizard/interfaces/vector/vector_interface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_interfaces_vector_vector_interface_OBJECTS) $(datawizard_interfaces_vector_vector_interface_LDADD) $(LIBS)
datawizard/interfaces/void/$(am__dirstamp):
	@$(MKDIR_P) datawizard/interfaces/void
	@: > datawizard/interfaces/void/$(am__dirstamp)

datawizard/interfaces/void/void_interface$(EXEEXT): $(datawizard_interfaces_void_void_interface_OBJECTS) $(datawizard_interfaces_void_void_interface_DEPENDENCIES) $(EXTRA_datawizard_interfaces_void_void_interface_DEPENDENCIES) datawizard/interfaces/void/$(am__dirstamp)
	@rm -f datawizard/interfaces/void/void_interface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_interfaces_void_void_interface_OBJECTS) $(datawizard_interfaces_void_void_interface_LDADD) $(LIBS)

datawizard/invalidate_pending_requests$(EXEEXT): $(datawizard_invalidate_pending_requests_OBJECTS) $(datawizard_invalidate_pending_requests_DEPENDENCIES) $(EXTRA_datawizard_invalidate_pending_requests_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/invalidate_pending_requests$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_invalidate_pending_requests_OBJECTS) $(datawizard_invalidate_pending_requests_LDADD) $(LIBS)

datawizard/lazy_allocation$(EXEEXT): $(datawizard_lazy_allocation_OBJECTS) $(datawizard_lazy_allocation_DEPENDENCIES) $(EXTRA_datawizard_lazy_allocation_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/lazy_allocation$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_lazy_allocation_OBJECTS) $(datawizard_lazy_allocation_LDADD) $(LIBS)

datawizard/lazy_unregister$(EXEEXT): $(datawizard_lazy_unregister_OBJECTS) $(datawizard_lazy_unregister_DEPENDENCIES) $(EXTRA_datawizard_lazy_unregister_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/lazy_unregister$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_lazy_unregister_OBJECTS) $(datawizard_lazy_unregister_LDADD) $(LIBS)

datawizard/locality$(EXEEXT): $(datawizard_locality_OBJECTS) $(datawizard_locality_DEPENDENCIES) $(EXTRA_datawizard_locality_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/locality$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_locality_OBJECTS) $(datawizard_locality_LDADD) $(LIBS)

datawizard/manual_reduction$(EXEEXT): $(datawizard_manual_reduction_OBJECTS) $(datawizard_manual_reduction_DEPENDENCIES) $(EXTRA_datawizard_manual_reduction_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/manual_reduction$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_manual_reduction_OBJECTS) $(datawizard_manual_reduction_LDADD) $(LIBS)
datawizard/cuda_codelet_unsigned_inc.$(OBJEXT):  \
	datawizard/$(am__dirstamp) \
	datawizard/$(DEPDIR)/$(am__dirstamp)

datawizard/mpi_like$(EXEEXT): $(datawizard_mpi_like_OBJECTS) $(datawizard_mpi_like_DEPENDENCIES) $(EXTRA_datawizard_mpi_like_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/mpi_like$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_mpi_like_OBJECTS) $(datawizard_mpi_like_LDADD) $(LIBS)

datawizard/mpi_like_async$(EXEEXT): $(datawizard_mpi_like_async_OBJECTS) $(datawizard_mpi_like_async_DEPENDENCIES) $(EXTRA_datawizard_mpi_like_async_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/mpi_like_async$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_mpi_like_async_OBJECTS) $(datawizard_mpi_like_async_LDADD) $(LIBS)

datawizard/no_unregister$(EXEEXT): $(datawizard_no_unregister_OBJECTS) $(datawizard_no_unregister_DEPENDENCIES) $(EXTRA_datawizard_no_unregister_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/no_unregister$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_no_unregister_OBJECTS) $(datawizard_no_unregister_LDADD) $(LIBS)

datawizard/noreclaim$(EXEEXT): $(datawizard_noreclaim_OBJECTS) $(datawizard_noreclaim_DEPENDENCIES) $(EXTRA_datawizard_noreclaim_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/noreclaim$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_noreclaim_OBJECTS) $(datawizard_noreclaim_LDADD) $(LIBS)

datawizard/nowhere$(EXEEXT): $(datawizard_nowhere_OBJECTS) $(datawizard_nowhere_DEPENDENCIES) $(EXTRA_datawizard_nowhere_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/nowhere$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_nowhere_OBJECTS) $(datawizard_nowhere_LDADD) $(LIBS)

datawizard/numa_overflow$(EXEEXT): $(datawizard_numa_overflow_OBJECTS) $(datawizard_numa_overflow_DEPENDENCIES) $(EXTRA_datawizard_numa_overflow_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/numa_overflow$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_numa_overflow_OBJECTS) $(datawizard_numa_overflow_LDADD) $(LIBS)

datawizard/partition_dep$(EXEEXT): $(datawizard_partition_dep_OBJECTS) $(datawizard_partition_dep_DEPENDENCIES) $(EXTRA_datawizard_partition_dep_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/partition_dep$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_partition_dep_OBJECTS) $(datawizard_partition_dep_LDADD) $(LIBS)

datawizard/partition_init$(EXEEXT): $(datawizard_partition_init_OBJECTS) $(datawizard_partition_init_DEPENDENCIES) $(EXTRA_datawizard_partition_init_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/partition_init$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_partition_init_OBJECTS) $(datawizard_partition_init_LDADD) $(LIBS)

datawizard/partition_lazy$(EXEEXT): $(datawizard_partition_lazy_OBJECTS) $(datawizard_partition_lazy_DEPENDENCIES) $(EXTRA_datawizard_partition_lazy_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/partition_lazy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_partition_lazy_OBJECTS) $(datawizard_partition_lazy_LDADD) $(LIBS)

datawizard/partitioned_acquire$(EXEEXT): $(datawizard_partitioned_acquire_OBJECTS) $(datawizard_partitioned_acquire_DEPENDENCIES) $(EXTRA_datawizard_partitioned_acquire_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/partitioned_acquire$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_partitioned_acquire_OBJECTS) $(datawizard_partitioned_acquire_LDADD) $(LIBS)

datawizard/partitioned_initialization$(EXEEXT): $(datawizard_partitioned_initialization_OBJECTS) $(datawizard_partitioned_initialization_DEPENDENCIES) $(EXTRA_datawizard_partitioned_initialization_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/partitioned_initialization$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_partitioned_initialization_OBJECTS) $(datawizard_partitioned_initialization_LDADD) $(LIBS)

datawizard/readers_and_writers$(EXEEXT): $(datawizard_readers_and_writers_OBJECTS) $(datawizard_readers_and_writers_DEPENDENCIES) $(EXTRA_datawizard_readers_and_writers_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/readers_and_writers$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_readers_and_writers_OBJECTS) $(datawizard_readers_and_writers_LDADD) $(LIBS)

datawizard/readonly$(EXEEXT): $(datawizard_readonly_OBJECTS) $(datawizard_readonly_DEPENDENCIES) $(EXTRA_datawizard_readonly_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/readonly$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_readonly_OBJECTS) $(datawizard_readonly_LDADD) $(LIBS)

datawizard/reclaim$(EXEEXT): $(datawizard_reclaim_OBJECTS) $(datawizard_reclaim_DEPENDENCIES) $(EXTRA_datawizard_reclaim_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/reclaim$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_reclaim_OBJECTS) $(datawizard_reclaim_LDADD) $(LIBS)

datawizard/redux_acquire$(EXEEXT): $(datawizard_redux_acquire_OBJECTS) $(datawizard_redux_acquire_DEPENDENCIES) $(EXTRA_datawizard_redux_acquire_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/redux_acquire$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_redux_acquire_OBJECTS) $(datawizard_redux_acquire_LDADD) $(LIBS)
datawizard/scratch_cuda.$(OBJEXT): datawizard/$(am__dirstamp) \
	datawizard/$(DEPDIR)/$(am__dirstamp)

datawizard/scratch$(EXEEXT): $(datawizard_scratch_OBJECTS) $(datawizard_scratch_DEPENDENCIES) $(EXTRA_datawizard_scratch_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/scratch$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_scratch_OBJECTS) $(datawizard_scratch_LDADD) $(LIBS)

datawizard/scratch_reuse$(EXEEXT): $(datawizard_scratch_reuse_OBJECTS) $(datawizard_scratch_reuse_DEPENDENCIES) $(EXTRA_datawizard_scratch_reuse_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/scratch_reuse$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_scratch_reuse_OBJECTS) $(datawizard_scratch_reuse_LDADD) $(LIBS)

datawizard/simgrid-locality$(EXEEXT): $(datawizard_simgrid_locality_OBJECTS) $(datawizard_simgrid_locality_DEPENDENCIES) $(EXTRA_datawizard_simgrid_locality_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/simgrid-locality$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_simgrid_locality_OBJECTS) $(datawizard_simgrid_locality_LDADD) $(LIBS)

datawizard/specific_node$(EXEEXT): $(datawizard_specific_node_OBJECTS) $(datawizard_specific_node_DEPENDENCIES) $(EXTRA_datawizard_specific_node_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/specific_node$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_specific_node_OBJECTS) $(datawizard_specific_node_LDADD) $(LIBS)
datawizard/sync_and_notify_data_kernels.$(OBJEXT):  \
	datawizard/$(am__dirstamp) \
	datawizard/$(DEPDIR)/$(am__dirstamp)

datawizard/sync_and_notify_data$(EXEEXT): $(datawizard_sync_and_notify_data_OBJECTS) $(datawizard_sync_and_notify_data_DEPENDENCIES) $(EXTRA_datawizard_sync_and_notify_data_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/sync_and_notify_data$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_sync_and_notify_data_OBJECTS) $(datawizard_sync_and_notify_data_LDADD) $(LIBS)

datawizard/sync_and_notify_data_implicit$(EXEEXT): $(datawizard_sync_and_notify_data_implicit_OBJECTS) $(datawizard_sync_and_notify_data_implicit_DEPENDENCIES) $(EXTRA_datawizard_sync_and_notify_data_implicit_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/sync_and_notify_data_implicit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_sync_and_notify_data_implicit_OBJECTS) $(datawizard_sync_and_notify_data_implicit_LDADD) $(LIBS)

datawizard/sync_with_data_with_mem$(EXEEXT): $(datawizard_sync_with_data_with_mem_OBJECTS) $(datawizard_sync_with_data_with_mem_DEPENDENCIES) $(EXTRA_datawizard_sync_with_data_with_mem_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/sync_with_data_with_mem$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_sync_with_data_with_mem_OBJECTS) $(datawizard_sync_with_data_with_mem_LDADD) $(LIBS)

datawizard/sync_with_data_with_mem_non_blocking$(EXEEXT): $(datawizard_sync_with_data_with_mem_non_blocking_OBJECTS) $(datawizard_sync_with_data_with_mem_non_blocking_DEPENDENCIES) $(EXTRA_datawizard_sync_with_data_with_mem_non_blocking_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/sync_with_data_with_mem_non_blocking$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_sync_with_data_with_mem_non_blocking_OBJECTS) $(datawizard_sync_with_data_with_mem_non_blocking_LDADD) $(LIBS)

datawizard/sync_with_data_with_mem_non_blocking_implicit$(EXEEXT): $(datawizard_sync_with_data_with_mem_non_blocking_implicit_OBJECTS) $(datawizard_sync_with_data_with_mem_non_blocking_implicit_DEPENDENCIES) $(EXTRA_datawizard_sync_with_data_with_mem_non_blocking_implicit_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/sync_with_data_with_mem_non_blocking_implicit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_sync_with_data_with_mem_non_blocking_implicit_OBJECTS) $(datawizard_sync_with_data_with_mem_non_blocking_implicit_LDADD) $(LIBS)

datawizard/task_with_multiple_time_the_same_handle$(EXEEXT): $(datawizard_task_with_multiple_time_the_same_handle_OBJECTS) $(datawizard_task_with_multiple_time_the_same_handle_DEPENDENCIES) $(EXTRA_datawizard_task_with_multiple_time_the_same_handle_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/task_with_multiple_time_the_same_handle$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_task_with_multiple_time_the_same_handle_OBJECTS) $(datawizard_task_with_multiple_time_the_same_handle_LDADD) $(LIBS)

datawizard/temporary_partition$(EXEEXT): $(datawizard_temporary_partition_OBJECTS) $(datawizard_temporary_partition_DEPENDENCIES) $(EXTRA_datawizard_temporary_partition_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/temporary_partition$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_temporary_partition_OBJECTS) $(datawizard_temporary_partition_LDADD) $(LIBS)

datawizard/temporary_partition_implicit$(EXEEXT): $(datawizard_temporary_partition_implicit_OBJECTS) $(datawizard_temporary_partition_implicit_DEPENDENCIES) $(EXTRA_datawizard_temporary_partition_implicit_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/temporary_partition_implicit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_temporary_partition_implicit_OBJECTS) $(datawizard_temporary_partition_implicit_LDADD) $(LIBS)

datawizard/test_arbiter$(EXEEXT): $(datawizard_test_arbiter_OBJECTS) $(datawizard_test_arbiter_DEPENDENCIES) $(EXTRA_datawizard_test_arbiter_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/test_arbiter$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(datawizard_test_arbiter_OBJECTS) $(datawizard_test_arbiter_LDADD) $(LIBS)

datawizard/unpartition$(EXEEXT): $(datawizard_unpartition_OBJECTS) $(datawizard_unpartition_DEPENDENCIES) $(EXTRA_datawizard_unpartition_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/unpartition$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_unpartition_OBJECTS) $(datawizard_unpartition_LDADD) $(LIBS)

datawizard/user_interaction_implicit$(EXEEXT): $(datawizard_user_interaction_implicit_OBJECTS) $(datawizard_user_interaction_implicit_DEPENDENCIES) $(EXTRA_datawizard_user_interaction_implicit_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/user_interaction_implicit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_user_interaction_implicit_OBJECTS) $(datawizard_user_interaction_implicit_LDADD) $(LIBS)

datawizard/variable_parameters$(EXEEXT): $(datawizard_variable_parameters_OBJECTS) $(datawizard_variable_parameters_DEPENDENCIES) $(EXTRA_datawizard_variable_parameters_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/variable_parameters$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_variable_parameters_OBJECTS) $(datawizard_variable_parameters_LDADD) $(LIBS)

datawizard/variable_size$(EXEEXT): $(datawizard_variable_size_OBJECTS) $(datawizard_variable_size_DEPENDENCIES) $(EXTRA_datawizard_variable_size_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/variable_size$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_variable_size_OBJECTS) $(datawizard_variable_size_LDADD) $(LIBS)

datawizard/write_only_tmp_buffer$(EXEEXT): $(datawizard_write_only_tmp_buffer_OBJECTS) $(datawizard_write_only_tmp_buffer_DEPENDENCIES) $(EXTRA_datawizard_write_only_tmp_buffer_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/write_only_tmp_buffer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_write_only_tmp_buffer_OBJECTS) $(datawizard_write_only_tmp_buffer_LDADD) $(LIBS)

datawizard/wt_broadcast$(EXEEXT): $(datawizard_wt_broadcast_OBJECTS) $(datawizard_wt_broadcast_DEPENDENCIES) $(EXTRA_datawizard_wt_broadcast_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/wt_broadcast$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_wt_broadcast_OBJECTS) $(datawizard_wt_broadcast_LDADD) $(LIBS)

datawizard/wt_host$(EXEEXT): $(datawizard_wt_host_OBJECTS) $(datawizard_wt_host_DEPENDENCIES) $(EXTRA_datawizard_wt_host_DEPENDENCIES) datawizard/$(am__dirstamp)
	@rm -f datawizard/wt_host$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(datawizard_wt_host_OBJECTS) $(datawizard_wt_host_LDADD) $(LIBS)
disk/$(am__dirstamp):
	@$(MKDIR_P) disk
	@: > disk/$(am__dirstamp)

disk/disk_compute$(EXEEXT): $(disk_disk_compute_OBJECTS) $(disk_disk_compute_DEPENDENCIES) $(EXTRA_disk_disk_compute_DEPENDENCIES) disk/$(am__dirstamp)
	@rm -f disk/disk_compute$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(disk_disk_compute_OBJECTS) $(disk_disk_compute_LDADD) $(LIBS)

disk/disk_copy$(EXEEXT): $(disk_disk_copy_OBJECTS) $(disk_disk_copy_DEPENDENCIES) $(EXTRA_disk_disk_copy_DEPENDENCIES) disk/$(am__dirstamp)
	@rm -f disk/disk_copy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(disk_disk_copy_OBJECTS) $(disk_disk_copy_LDADD) $(LIBS)

disk/disk_copy_to_disk$(EXEEXT): $(disk_disk_copy_to_disk_OBJECTS) $(disk_disk_copy_to_disk_DEPENDENCIES) $(EXTRA_disk_disk_copy_to_disk_DEPENDENCIES) disk/$(am__dirstamp)
	@rm -f disk/disk_copy_to_disk$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(disk_disk_copy_to_disk_OBJECTS) $(disk_disk_copy_to_disk_LDADD) $(LIBS)

disk/disk_copy_unpack$(EXEEXT): $(disk_disk_copy_unpack_OBJECTS) $(disk_disk_copy_unpack_DEPENDENCIES) $(EXTRA_disk_disk_copy_unpack_DEPENDENCIES) disk/$(am__dirstamp)
	@rm -f disk/disk_copy_unpack$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(disk_disk_copy_unpack_OBJECTS) $(disk_disk_copy_unpack_LDADD) $(LIBS)

disk/disk_pack$(EXEEXT): $(disk_disk_pack_OBJECTS) $(disk_disk_pack_DEPENDENCIES) $(EXTRA_disk_disk_pack_DEPENDENCIES) disk/$(am__dirstamp)
	@rm -f disk/disk_pack$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(disk_disk_pack_OBJECTS) $(disk_disk_pack_LDADD) $(LIBS)

disk/mem_reclaim$(EXEEXT): $(disk_mem_reclaim_OBJECTS) $(disk_mem_reclaim_DEPENDENCIES) $(EXTRA_disk_mem_reclaim_DEPENDENCIES) disk/$(am__dirstamp)
	@rm -f disk/mem_reclaim$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(disk_mem_reclaim_OBJECTS) $(disk_mem_reclaim_LDADD) $(LIBS)
errorcheck/$(am__dirstamp):
	@$(MKDIR_P) errorcheck
	@: > errorcheck/$(am__dirstamp)

errorcheck/invalid_blocking_calls$(EXEEXT): $(errorcheck_invalid_blocking_calls_OBJECTS) $(errorcheck_invalid_blocking_calls_DEPENDENCIES) $(EXTRA_errorcheck_invalid_blocking_calls_DEPENDENCIES) errorcheck/$(am__dirstamp)
	@rm -f errorcheck/invalid_blocking_calls$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errorcheck_invalid_blocking_calls_OBJECTS) $(errorcheck_invalid_blocking_calls_LDADD) $(LIBS)

errorcheck/invalid_tasks$(EXEEXT): $(errorcheck_invalid_tasks_OBJECTS) $(errorcheck_invalid_tasks_DEPENDENCIES) $(EXTRA_errorcheck_invalid_tasks_DEPENDENCIES) errorcheck/$(am__dirstamp)
	@rm -f errorcheck/invalid_tasks$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errorcheck_invalid_tasks_OBJECTS) $(errorcheck_invalid_tasks_LDADD) $(LIBS)

errorcheck/starpu_init_noworker$(EXEEXT): $(errorcheck_starpu_init_noworker_OBJECTS) $(errorcheck_starpu_init_noworker_DEPENDENCIES) $(EXTRA_errorcheck_starpu_init_noworker_DEPENDENCIES) errorcheck/$(am__dirstamp)
	@rm -f errorcheck/starpu_init_noworker$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errorcheck_starpu_init_noworker_OBJECTS) $(errorcheck_starpu_init_noworker_LDADD) $(LIBS)

errorcheck/workers_cpuid$(EXEEXT): $(errorcheck_workers_cpuid_OBJECTS) $(errorcheck_workers_cpuid_DEPENDENCIES) $(EXTRA_errorcheck_workers_cpuid_DEPENDENCIES) errorcheck/$(am__dirstamp)
	@rm -f errorcheck/workers_cpuid$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(errorcheck_workers_cpuid_OBJECTS) $(errorcheck_workers_cpuid_LDADD) $(LIBS)
fortran90/$(am__dirstamp):
	@$(MKDIR_P) fortran90
	@: > fortran90/$(am__dirstamp)

fortran90/init_01$(EXEEXT): $(fortran90_init_01_OBJECTS) $(fortran90_init_01_DEPENDENCIES) $(EXTRA_fortran90_init_01_DEPENDENCIES) fortran90/$(am__dirstamp)
	@rm -f fortran90/init_01$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(fortran90_init_01_OBJECTS) $(fortran90_init_01_LDADD) $(LIBS)
helper/$(am__dirstamp):
	@$(MKDIR_P) helper
	@: > helper/$(am__dirstamp)

helper/cublas_init$(EXEEXT): $(helper_cublas_init_OBJECTS) $(helper_cublas_init_DEPENDENCIES) $(EXTRA_helper_cublas_init_DEPENDENCIES) helper/$(am__dirstamp)
	@rm -f helper/cublas_init$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(helper_cublas_init_OBJECTS) $(helper_cublas_init_LDADD) $(LIBS)

helper/cusparse_init$(EXEEXT): $(helper_cusparse_init_OBJECTS) $(helper_cusparse_init_DEPENDENCIES) $(EXTRA_helper_cusparse_init_DEPENDENCIES) helper/$(am__dirstamp)
	@rm -f helper/cusparse_init$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(helper_cusparse_init_OBJECTS) $(helper_cusparse_init_LDADD) $(LIBS)

helper/execute_on_all$(EXEEXT): $(helper_execute_on_all_OBJECTS) $(helper_execute_on_all_DEPENDENCIES) $(EXTRA_helper_execute_on_all_DEPENDENCIES) helper/$(am__dirstamp)
	@rm -f helper/execute_on_all$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(helper_execute_on_all_OBJECTS) $(helper_execute_on_all_LDADD) $(LIBS)

helper/pinned_memory$(EXEEXT): $(helper_pinned_memory_OBJECTS) $(helper_pinned_memory_DEPENDENCIES) $(EXTRA_helper_pinned_memory_DEPENDENCIES) helper/$(am__dirstamp)
	@rm -f helper/pinned_memory$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(helper_pinned_memory_OBJECTS) $(helper_pinned_memory_LDADD) $(LIBS)

helper/starpu_create_sync_task$(EXEEXT): $(helper_starpu_create_sync_task_OBJECTS) $(helper_starpu_create_sync_task_DEPENDENCIES) $(EXTRA_helper_starpu_create_sync_task_DEPENDENCIES) helper/$(am__dirstamp)
	@rm -f helper/starpu_create_sync_task$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(helper_starpu_create_sync_task_OBJECTS) $(helper_starpu_create_sync_task_LDADD) $(LIBS)

helper/starpu_data_cpy$(EXEEXT): $(helper_starpu_data_cpy_OBJECTS) $(helper_starpu_data_cpy_DEPENDENCIES) $(EXTRA_helper_starpu_data_cpy_DEPENDENCIES) helper/$(am__dirstamp)
	@rm -f helper/starpu_data_cpy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(helper_starpu_data_cpy_OBJECTS) $(helper_starpu_data_cpy_LDADD) $(LIBS)

loader$(EXEEXT): $(loader_OBJECTS) $(loader_DEPENDENCIES) $(EXTRA_loader_DEPENDENCIES) 
	@rm -f loader$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(loader_OBJECTS) $(loader_LDADD) $(LIBS)
main/$(am__dirstamp):
	@$(MKDIR_P) main
	@: > main/$(am__dirstamp)

main/bind$(EXEEXT): $(main_bind_OBJECTS) $(main_bind_DEPENDENCIES) $(EXTRA_main_bind_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/bind$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_bind_OBJECTS) $(main_bind_LDADD) $(LIBS)

main/callback$(EXEEXT): $(main_callback_OBJECTS) $(main_callback_DEPENDENCIES) $(EXTRA_main_callback_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/callback$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_callback_OBJECTS) $(main_callback_LDADD) $(LIBS)

main/codelet_null_callback$(EXEEXT): $(main_codelet_null_callback_OBJECTS) $(main_codelet_null_callback_DEPENDENCIES) $(EXTRA_main_codelet_null_callback_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/codelet_null_callback$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_codelet_null_callback_OBJECTS) $(main_codelet_null_callback_LDADD) $(LIBS)

main/declare_deps_after_submission$(EXEEXT): $(main_declare_deps_after_submission_OBJECTS) $(main_declare_deps_after_submission_DEPENDENCIES) $(EXTRA_main_declare_deps_after_submission_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/declare_deps_after_submission$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_declare_deps_after_submission_OBJECTS) $(main_declare_deps_after_submission_LDADD) $(LIBS)

main/declare_deps_after_submission_synchronous$(EXEEXT): $(main_declare_deps_after_submission_synchronous_OBJECTS) $(main_declare_deps_after_submission_synchronous_DEPENDENCIES) $(EXTRA_main_declare_deps_after_submission_synchronous_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/declare_deps_after_submission_synchronous$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_declare_deps_after_submission_synchronous_OBJECTS) $(main_declare_deps_after_submission_synchronous_LDADD) $(LIBS)

main/declare_deps_in_callback$(EXEEXT): $(main_declare_deps_in_callback_OBJECTS) $(main_declare_deps_in_callback_DEPENDENCIES) $(EXTRA_main_declare_deps_in_callback_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/declare_deps_in_callback$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_declare_deps_in_callback_OBJECTS) $(main_declare_deps_in_callback_LDADD) $(LIBS)

main/deploop$(EXEEXT): $(main_deploop_OBJECTS) $(main_deploop_DEPENDENCIES) $(EXTRA_main_deploop_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/deploop$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_deploop_OBJECTS) $(main_deploop_LDADD) $(LIBS)

main/deprecated_func$(EXEEXT): $(main_deprecated_func_OBJECTS) $(main_deprecated_func_DEPENDENCIES) $(EXTRA_main_deprecated_func_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/deprecated_func$(EXEEXT)
	$(AM_V_CCLD)$(main_deprecated_func_LINK) $(main_deprecated_func_OBJECTS) $(main_deprecated_func_LDADD) $(LIBS)

main/display_binding$(EXEEXT): $(main_display_binding_OBJECTS) $(main_display_binding_DEPENDENCIES) $(EXTRA_main_display_binding_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/display_binding$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_display_binding_OBJECTS) $(main_display_binding_LDADD) $(LIBS)
main/driver_api/$(am__dirstamp):
	@$(MKDIR_P) main/driver_api
	@: > main/driver_api/$(am__dirstamp)

main/driver_api/init_run_deinit$(EXEEXT): $(main_driver_api_init_run_deinit_OBJECTS) $(main_driver_api_init_run_deinit_DEPENDENCIES) $(EXTRA_main_driver_api_init_run_deinit_DEPENDENCIES) main/driver_api/$(am__dirstamp)
	@rm -f main/driver_api/init_run_deinit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_driver_api_init_run_deinit_OBJECTS) $(main_driver_api_init_run_deinit_LDADD) $(LIBS)

main/driver_api/run_driver$(EXEEXT): $(main_driver_api_run_driver_OBJECTS) $(main_driver_api_run_driver_DEPENDENCIES) $(EXTRA_main_driver_api_run_driver_DEPENDENCIES) main/driver_api/$(am__dirstamp)
	@rm -f main/driver_api/run_driver$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_driver_api_run_driver_OBJECTS) $(main_driver_api_run_driver_LDADD) $(LIBS)

main/empty_task$(EXEEXT): $(main_empty_task_OBJECTS) $(main_empty_task_DEPENDENCIES) $(EXTRA_main_empty_task_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/empty_task$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_empty_task_OBJECTS) $(main_empty_task_LDADD) $(LIBS)

main/empty_task_chain$(EXEEXT): $(main_empty_task_chain_OBJECTS) $(main_empty_task_chain_DEPENDENCIES) $(EXTRA_main_empty_task_chain_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/empty_task_chain$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_empty_task_chain_OBJECTS) $(main_empty_task_chain_LDADD) $(LIBS)

main/empty_task_sync_point$(EXEEXT): $(main_empty_task_sync_point_OBJECTS) $(main_empty_task_sync_point_DEPENDENCIES) $(EXTRA_main_empty_task_sync_point_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/empty_task_sync_point$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_empty_task_sync_point_OBJECTS) $(main_empty_task_sync_point_LDADD) $(LIBS)

main/empty_task_sync_point_tasks$(EXEEXT): $(main_empty_task_sync_point_tasks_OBJECTS) $(main_empty_task_sync_point_tasks_DEPENDENCIES) $(EXTRA_main_empty_task_sync_point_tasks_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/empty_task_sync_point_tasks$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_empty_task_sync_point_tasks_OBJECTS) $(main_empty_task_sync_point_tasks_LDADD) $(LIBS)

main/execute_on_a_specific_worker$(EXEEXT): $(main_execute_on_a_specific_worker_OBJECTS) $(main_execute_on_a_specific_worker_DEPENDENCIES) $(EXTRA_main_execute_on_a_specific_worker_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/execute_on_a_specific_worker$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_execute_on_a_specific_worker_OBJECTS) $(main_execute_on_a_specific_worker_LDADD) $(LIBS)

main/execute_schedule$(EXEEXT): $(main_execute_schedule_OBJECTS) $(main_execute_schedule_DEPENDENCIES) $(EXTRA_main_execute_schedule_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/execute_schedule$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_execute_schedule_OBJECTS) $(main_execute_schedule_LDADD) $(LIBS)

main/get_children_tasks$(EXEEXT): $(main_get_children_tasks_OBJECTS) $(main_get_children_tasks_DEPENDENCIES) $(EXTRA_main_get_children_tasks_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/get_children_tasks$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_get_children_tasks_OBJECTS) $(main_get_children_tasks_LDADD) $(LIBS)

main/get_current_task$(EXEEXT): $(main_get_current_task_OBJECTS) $(main_get_current_task_DEPENDENCIES) $(EXTRA_main_get_current_task_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/get_current_task$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_get_current_task_OBJECTS) $(main_get_current_task_LDADD) $(LIBS)

main/hwloc_cpuset$(EXEEXT): $(main_hwloc_cpuset_OBJECTS) $(main_hwloc_cpuset_DEPENDENCIES) $(EXTRA_main_hwloc_cpuset_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/hwloc_cpuset$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_hwloc_cpuset_OBJECTS) $(main_hwloc_cpuset_LDADD) $(LIBS)

main/insert_task$(EXEEXT): $(main_insert_task_OBJECTS) $(main_insert_task_DEPENDENCIES) $(EXTRA_main_insert_task_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/insert_task$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_insert_task_OBJECTS) $(main_insert_task_LDADD) $(LIBS)

main/insert_task_array$(EXEEXT): $(main_insert_task_array_OBJECTS) $(main_insert_task_array_DEPENDENCIES) $(EXTRA_main_insert_task_array_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/insert_task_array$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_insert_task_array_OBJECTS) $(main_insert_task_array_LDADD) $(LIBS)

main/insert_task_dyn_handles$(EXEEXT): $(main_insert_task_dyn_handles_OBJECTS) $(main_insert_task_dyn_handles_DEPENDENCIES) $(EXTRA_main_insert_task_dyn_handles_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/insert_task_dyn_handles$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_insert_task_dyn_handles_OBJECTS) $(main_insert_task_dyn_handles_LDADD) $(LIBS)

main/insert_task_many$(EXEEXT): $(main_insert_task_many_OBJECTS) $(main_insert_task_many_DEPENDENCIES) $(EXTRA_main_insert_task_many_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/insert_task_many$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_insert_task_many_OBJECTS) $(main_insert_task_many_LDADD) $(LIBS)

main/insert_task_nullcodelet$(EXEEXT): $(main_insert_task_nullcodelet_OBJECTS) $(main_insert_task_nullcodelet_DEPENDENCIES) $(EXTRA_main_insert_task_nullcodelet_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/insert_task_nullcodelet$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_insert_task_nullcodelet_OBJECTS) $(main_insert_task_nullcodelet_LDADD) $(LIBS)

main/insert_task_pack$(EXEEXT): $(main_insert_task_pack_OBJECTS) $(main_insert_task_pack_DEPENDENCIES) $(EXTRA_main_insert_task_pack_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/insert_task_pack$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_insert_task_pack_OBJECTS) $(main_insert_task_pack_LDADD) $(LIBS)

main/insert_task_value$(EXEEXT): $(main_insert_task_value_OBJECTS) $(main_insert_task_value_DEPENDENCIES) $(EXTRA_main_insert_task_value_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/insert_task_value$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_insert_task_value_OBJECTS) $(main_insert_task_value_LDADD) $(LIBS)
main/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) main/$(DEPDIR)
	@: > main/$(DEPDIR)/$(am__dirstamp)
main/increment.$(OBJEXT): main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)

main/insert_task_where$(EXEEXT): $(main_insert_task_where_OBJECTS) $(main_insert_task_where_DEPENDENCIES) $(EXTRA_main_insert_task_where_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/insert_task_where$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_insert_task_where_OBJECTS) $(main_insert_task_where_LDADD) $(LIBS)

main/job$(EXEEXT): $(main_job_OBJECTS) $(main_job_DEPENDENCIES) $(EXTRA_main_job_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/job$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_job_OBJECTS) $(main_job_LDADD) $(LIBS)

main/mkdtemp$(EXEEXT): $(main_mkdtemp_OBJECTS) $(main_mkdtemp_DEPENDENCIES) $(EXTRA_main_mkdtemp_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/mkdtemp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_mkdtemp_OBJECTS) $(main_mkdtemp_LDADD) $(LIBS)

main/multithreaded$(EXEEXT): $(main_multithreaded_OBJECTS) $(main_multithreaded_DEPENDENCIES) $(EXTRA_main_multithreaded_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/multithreaded$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_multithreaded_OBJECTS) $(main_multithreaded_LDADD) $(LIBS)

main/multithreaded_init$(EXEEXT): $(main_multithreaded_init_OBJECTS) $(main_multithreaded_init_DEPENDENCIES) $(EXTRA_main_multithreaded_init_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/multithreaded_init$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_multithreaded_init_OBJECTS) $(main_multithreaded_init_LDADD) $(LIBS)

main/pack$(EXEEXT): $(main_pack_OBJECTS) $(main_pack_DEPENDENCIES) $(EXTRA_main_pack_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/pack$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_pack_OBJECTS) $(main_pack_LDADD) $(LIBS)

main/pause_resume$(EXEEXT): $(main_pause_resume_OBJECTS) $(main_pause_resume_DEPENDENCIES) $(EXTRA_main_pause_resume_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/pause_resume$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_pause_resume_OBJECTS) $(main_pause_resume_LDADD) $(LIBS)

main/regenerate$(EXEEXT): $(main_regenerate_OBJECTS) $(main_regenerate_DEPENDENCIES) $(EXTRA_main_regenerate_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/regenerate$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_regenerate_OBJECTS) $(main_regenerate_LDADD) $(LIBS)

main/regenerate_pipeline$(EXEEXT): $(main_regenerate_pipeline_OBJECTS) $(main_regenerate_pipeline_DEPENDENCIES) $(EXTRA_main_regenerate_pipeline_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/regenerate_pipeline$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_regenerate_pipeline_OBJECTS) $(main_regenerate_pipeline_LDADD) $(LIBS)

main/restart$(EXEEXT): $(main_restart_OBJECTS) $(main_restart_DEPENDENCIES) $(EXTRA_main_restart_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/restart$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_restart_OBJECTS) $(main_restart_LDADD) $(LIBS)

main/starpu_init$(EXEEXT): $(main_starpu_init_OBJECTS) $(main_starpu_init_DEPENDENCIES) $(EXTRA_main_starpu_init_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/starpu_init$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_starpu_init_OBJECTS) $(main_starpu_init_LDADD) $(LIBS)

main/starpu_task_bundle$(EXEEXT): $(main_starpu_task_bundle_OBJECTS) $(main_starpu_task_bundle_DEPENDENCIES) $(EXTRA_main_starpu_task_bundle_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/starpu_task_bundle$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_starpu_task_bundle_OBJECTS) $(main_starpu_task_bundle_LDADD) $(LIBS)

main/starpu_task_wait$(EXEEXT): $(main_starpu_task_wait_OBJECTS) $(main_starpu_task_wait_DEPENDENCIES) $(EXTRA_main_starpu_task_wait_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/starpu_task_wait$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_starpu_task_wait_OBJECTS) $(main_starpu_task_wait_LDADD) $(LIBS)

main/starpu_task_wait_for_all$(EXEEXT): $(main_starpu_task_wait_for_all_OBJECTS) $(main_starpu_task_wait_for_all_DEPENDENCIES) $(EXTRA_main_starpu_task_wait_for_all_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/starpu_task_wait_for_all$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_starpu_task_wait_for_all_OBJECTS) $(main_starpu_task_wait_for_all_LDADD) $(LIBS)

main/starpu_worker_exists$(EXEEXT): $(main_starpu_worker_exists_OBJECTS) $(main_starpu_worker_exists_DEPENDENCIES) $(EXTRA_main_starpu_worker_exists_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/starpu_worker_exists$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_starpu_worker_exists_OBJECTS) $(main_starpu_worker_exists_LDADD) $(LIBS)

main/static_restartable$(EXEEXT): $(main_static_restartable_OBJECTS) $(main_static_restartable_DEPENDENCIES) $(EXTRA_main_static_restartable_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/static_restartable$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_static_restartable_OBJECTS) $(main_static_restartable_LDADD) $(LIBS)

main/static_restartable_tag$(EXEEXT): $(main_static_restartable_tag_OBJECTS) $(main_static_restartable_tag_DEPENDENCIES) $(EXTRA_main_static_restartable_tag_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/static_restartable_tag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_static_restartable_tag_OBJECTS) $(main_static_restartable_tag_LDADD) $(LIBS)

main/static_restartable_using_initializer$(EXEEXT): $(main_static_restartable_using_initializer_OBJECTS) $(main_static_restartable_using_initializer_DEPENDENCIES) $(EXTRA_main_static_restartable_using_initializer_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/static_restartable_using_initializer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_static_restartable_using_initializer_OBJECTS) $(main_static_restartable_using_initializer_LDADD) $(LIBS)

main/subgraph_repeat$(EXEEXT): $(main_subgraph_repeat_OBJECTS) $(main_subgraph_repeat_DEPENDENCIES) $(EXTRA_main_subgraph_repeat_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/subgraph_repeat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_subgraph_repeat_OBJECTS) $(main_subgraph_repeat_LDADD) $(LIBS)

main/subgraph_repeat_regenerate$(EXEEXT): $(main_subgraph_repeat_regenerate_OBJECTS) $(main_subgraph_repeat_regenerate_DEPENDENCIES) $(EXTRA_main_subgraph_repeat_regenerate_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/subgraph_repeat_regenerate$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_subgraph_repeat_regenerate_OBJECTS) $(main_subgraph_repeat_regenerate_LDADD) $(LIBS)

main/subgraph_repeat_regenerate_tag$(EXEEXT): $(main_subgraph_repeat_regenerate_tag_OBJECTS) $(main_subgraph_repeat_regenerate_tag_DEPENDENCIES) $(EXTRA_main_subgraph_repeat_regenerate_tag_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/subgraph_repeat_regenerate_tag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_subgraph_repeat_regenerate_tag_OBJECTS) $(main_subgraph_repeat_regenerate_tag_LDADD) $(LIBS)

main/subgraph_repeat_regenerate_tag_cycle$(EXEEXT): $(main_subgraph_repeat_regenerate_tag_cycle_OBJECTS) $(main_subgraph_repeat_regenerate_tag_cycle_DEPENDENCIES) $(EXTRA_main_subgraph_repeat_regenerate_tag_cycle_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/subgraph_repeat_regenerate_tag_cycle$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_subgraph_repeat_regenerate_tag_cycle_OBJECTS) $(main_subgraph_repeat_regenerate_tag_cycle_LDADD) $(LIBS)

main/subgraph_repeat_tag$(EXEEXT): $(main_subgraph_repeat_tag_OBJECTS) $(main_subgraph_repeat_tag_DEPENDENCIES) $(EXTRA_main_subgraph_repeat_tag_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/subgraph_repeat_tag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_subgraph_repeat_tag_OBJECTS) $(main_subgraph_repeat_tag_LDADD) $(LIBS)

main/submit$(EXEEXT): $(main_submit_OBJECTS) $(main_submit_DEPENDENCIES) $(EXTRA_main_submit_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/submit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_submit_OBJECTS) $(main_submit_LDADD) $(LIBS)

main/tag_get_task$(EXEEXT): $(main_tag_get_task_OBJECTS) $(main_tag_get_task_DEPENDENCIES) $(EXTRA_main_tag_get_task_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/tag_get_task$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_tag_get_task_OBJECTS) $(main_tag_get_task_LDADD) $(LIBS)

main/tag_task_data_deps$(EXEEXT): $(main_tag_task_data_deps_OBJECTS) $(main_tag_task_data_deps_DEPENDENCIES) $(EXTRA_main_tag_task_data_deps_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/tag_task_data_deps$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_tag_task_data_deps_OBJECTS) $(main_tag_task_data_deps_LDADD) $(LIBS)

main/tag_wait_api$(EXEEXT): $(main_tag_wait_api_OBJECTS) $(main_tag_wait_api_DEPENDENCIES) $(EXTRA_main_tag_wait_api_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/tag_wait_api$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_tag_wait_api_OBJECTS) $(main_tag_wait_api_LDADD) $(LIBS)

main/task_end_dep$(EXEEXT): $(main_task_end_dep_OBJECTS) $(main_task_end_dep_DEPENDENCIES) $(EXTRA_main_task_end_dep_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/task_end_dep$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_task_end_dep_OBJECTS) $(main_task_end_dep_LDADD) $(LIBS)

main/task_wait_api$(EXEEXT): $(main_task_wait_api_OBJECTS) $(main_task_wait_api_DEPENDENCIES) $(EXTRA_main_task_wait_api_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/task_wait_api$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_task_wait_api_OBJECTS) $(main_task_wait_api_LDADD) $(LIBS)

main/wait_all_regenerable_tasks$(EXEEXT): $(main_wait_all_regenerable_tasks_OBJECTS) $(main_wait_all_regenerable_tasks_DEPENDENCIES) $(EXTRA_main_wait_all_regenerable_tasks_DEPENDENCIES) main/$(am__dirstamp)
	@rm -f main/wait_all_regenerable_tasks$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_wait_all_regenerable_tasks_OBJECTS) $(main_wait_all_regenerable_tasks_LDADD) $(LIBS)
microbenchs/$(am__dirstamp):
	@$(MKDIR_P) microbenchs
	@: > microbenchs/$(am__dirstamp)

microbenchs/async_tasks_overhead$(EXEEXT): $(microbenchs_async_tasks_overhead_OBJECTS) $(microbenchs_async_tasks_overhead_DEPENDENCIES) $(EXTRA_microbenchs_async_tasks_overhead_DEPENDENCIES) microbenchs/$(am__dirstamp)
	@rm -f microbenchs/async_tasks_overhead$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(microbenchs_async_tasks_overhead_OBJECTS) $(microbenchs_async_tasks_overhead_LDADD) $(LIBS)

microbenchs/bandwidth$(EXEEXT): $(microbenchs_bandwidth_OBJECTS) $(microbenchs_bandwidth_DEPENDENCIES) $(EXTRA_microbenchs_bandwidth_DEPENDENCIES) microbenchs/$(am__dirstamp)
	@rm -f microbenchs/bandwidth$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(microbenchs_bandwidth_OBJECTS) $(microbenchs_bandwidth_LDADD) $(LIBS)

microbenchs/display_structures_size$(EXEEXT): $(microbenchs_display_structures_size_OBJECTS) $(microbenchs_display_structures_size_DEPENDENCIES) $(EXTRA_microbenchs_display_structures_size_DEPENDENCIES) microbenchs/$(am__dirstamp)
	@rm -f microbenchs/display_structures_size$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(microbenchs_display_structures_size_OBJECTS) $(microbenchs_display_structures_size_LDADD) $(LIBS)

microbenchs/local_pingpong$(EXEEXT): $(microbenchs_local_pingpong_OBJECTS) $(microbenchs_local_pingpong_DEPENDENCIES) $(EXTRA_microbenchs_local_pingpong_DEPENDENCIES) microbenchs/$(am__dirstamp)
	@rm -f microbenchs/local_pingpong$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(microbenchs_local_pingpong_OBJECTS) $(microbenchs_local_pingpong_LDADD) $(LIBS)

microbenchs/matrix_as_vector$(EXEEXT): $(microbenchs_matrix_as_vector_OBJECTS) $(microbenchs_matrix_as_vector_DEPENDENCIES) $(EXTRA_microbenchs_matrix_as_vector_DEPENDENCIES) microbenchs/$(am__dirstamp)
	@rm -f microbenchs/matrix_as_vector$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(microbenchs_matrix_as_vector_OBJECTS) $(microbenchs_matrix_as_vector_LDADD) $(LIBS)

microbenchs/parallel_dependent_homogeneous_tasks_data$(EXEEXT): $(microbenchs_parallel_dependent_homogeneous_tasks_data_OBJECTS) $(microbenchs_parallel_dependent_homogeneous_tasks_data_DEPENDENCIES) $(EXTRA_microbenchs_parallel_dependent_homogeneous_tasks_data_DEPENDENCIES) microbenchs/$(am__dirstamp)
	@rm -f microbenchs/parallel_dependent_homogeneous_tasks_data$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(microbenchs_parallel_dependent_homogeneous_tasks_data_OBJECTS) $(microbenchs_parallel_dependent_homogeneous_tasks_data_LDADD) $(LIBS)

microbenchs/parallel_independent_heterogeneous_tasks$(EXEEXT): $(microbenchs_parallel_independent_heterogeneous_tasks_OBJECTS) $(microbenchs_parallel_independent_heterogeneous_tasks_DEPENDENCIES) $(EXTRA_microbenchs_parallel_independent_heterogeneous_tasks_DEPENDENCIES) microbenchs/$(am__dirstamp)
	@rm -f microbenchs/parallel_independent_heterogeneous_tasks$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(microbenchs_parallel_independent_heterogeneous_tasks_OBJECTS) $(microbenchs_parallel_independent_heterogeneous_tasks_LDADD) $(LIBS)

microbenchs/parallel_independent_heterogeneous_tasks_data$(EXEEXT): $(microbenchs_parallel_independent_heterogeneous_tasks_data_OBJECTS) $(microbenchs_parallel_independent_heterogeneous_tasks_data_DEPENDENCIES) $(EXTRA_microbenchs_parallel_independent_heterogeneous_tasks_data_DEPENDENCIES) microbenchs/$(am__dirstamp)
	@rm -f microbenchs/parallel_independent_heterogeneous_tasks_data$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(microbenchs_parallel_independent_heterogeneous_tasks_data_OBJECTS) $(microbenchs_parallel_independent_heterogeneous_tasks_data_LDADD) $(LIBS)

microbenchs/parallel_independent_homogeneous_tasks$(EXEEXT): $(microbenchs_parallel_independent_homogeneous_tasks_OBJECTS) $(microbenchs_parallel_independent_homogeneous_tasks_DEPENDENCIES) $(EXTRA_microbenchs_parallel_independent_homogeneous_tasks_DEPENDENCIES) microbenchs/$(am__dirstamp)
	@rm -f microbenchs/parallel_independent_homogeneous_tasks$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(microbenchs_parallel_independent_homogeneous_tasks_OBJECTS) $(microbenchs_parallel_independent_homogeneous_tasks_LDADD) $(LIBS)

microbenchs/parallel_independent_homogeneous_tasks_data$(EXEEXT): $(microbenchs_parallel_independent_homogeneous_tasks_data_OBJECTS) $(microbenchs_parallel_independent_homogeneous_tasks_data_DEPENDENCIES) $(EXTRA_microbenchs_parallel_independent_homogeneous_tasks_data_DEPENDENCIES) microbenchs/$(am__dirstamp)
	@rm -f microbenchs/parallel_independent_homogeneous_tasks_data$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(microbenchs_parallel_independent_homogeneous_tasks_data_OBJECTS) $(microbenchs_parallel_independent_homogeneous_tasks_data_LDADD) $(LIBS)

microbenchs/parallel_redux_heterogeneous_tasks_data$(EXEEXT): $(microbenchs_parallel_redux_heterogeneous_tasks_data_OBJECTS) $(microbenchs_parallel_redux_heterogeneous_tasks_data_DEPENDENCIES) $(EXTRA_microbenchs_parallel_redux_heterogeneous_tasks_data_DEPENDENCIES) microbenchs/$(am__dirstamp)
	@rm -f microbenchs/parallel_redux_heterogeneous_tasks_data$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(microbenchs_parallel_redux_heterogeneous_tasks_data_OBJECTS) $(microbenchs_parallel_redux_heterogeneous_tasks_data_LDADD) $(LIBS)

microbenchs/parallel_redux_homogeneous_tasks_data$(EXEEXT): $(microbenchs_parallel_redux_homogeneous_tasks_data_OBJECTS) $(microbenchs_parallel_redux_homogeneous_tasks_data_DEPENDENCIES) $(EXTRA_microbenchs_parallel_redux_homogeneous_tasks_data_DEPENDENCIES) microbenchs/$(am__dirstamp)
	@rm -f microbenchs/parallel_redux_homogeneous_tasks_data$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(microbenchs_parallel_redux_homogeneous_tasks_data_OBJECTS) $(microbenchs_parallel_redux_homogeneous_tasks_data_LDADD) $(LIBS)

microbenchs/prefetch_data_on_node$(EXEEXT): $(microbenchs_prefetch_data_on_node_OBJECTS) $(microbenchs_prefetch_data_on_node_DEPENDENCIES) $(EXTRA_microbenchs_prefetch_data_on_node_DEPENDENCIES) microbenchs/$(am__dirstamp)
	@rm -f microbenchs/prefetch_data_on_node$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(microbenchs_prefetch_data_on_node_OBJECTS) $(microbenchs_prefetch_data_on_node_LDADD) $(LIBS)

microbenchs/redundant_buffer$(EXEEXT): $(microbenchs_redundant_buffer_OBJECTS) $(microbenchs_redundant_buffer_DEPENDENCIES) $(EXTRA_microbenchs_redundant_buffer_DEPENDENCIES) microbenchs/$(am__dirstamp)
	@rm -f microbenchs/redundant_buffer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(microbenchs_redundant_buffer_OBJECTS) $(microbenchs_redundant_buffer_LDADD) $(LIBS)

microbenchs/sync_tasks_overhead$(EXEEXT): $(microbenchs_sync_tasks_overhead_OBJECTS) $(microbenchs_sync_tasks_overhead_DEPENDENCIES) $(EXTRA_microbenchs_sync_tasks_overhead_DEPENDENCIES) microbenchs/$(am__dirstamp)
	@rm -f microbenchs/sync_tasks_overhead$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(microbenchs_sync_tasks_overhead_OBJECTS) $(microbenchs_sync_tasks_overhead_LDADD) $(LIBS)

microbenchs/tasks_overhead$(EXEEXT): $(microbenchs_tasks_overhead_OBJECTS) $(microbenchs_tasks_overhead_DEPENDENCIES) $(EXTRA_microbenchs_tasks_overhead_DEPENDENCIES) microbenchs/$(am__dirstamp)
	@rm -f microbenchs/tasks_overhead$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(microbenchs_tasks_overhead_OBJECTS) $(microbenchs_tasks_overhead_LDADD) $(LIBS)

microbenchs/tasks_size_overhead$(EXEEXT): $(microbenchs_tasks_size_overhead_OBJECTS) $(microbenchs_tasks_size_overhead_DEPENDENCIES) $(EXTRA_microbenchs_tasks_size_overhead_DEPENDENCIES) microbenchs/$(am__dirstamp)
	@rm -f microbenchs/tasks_size_overhead$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(microbenchs_tasks_size_overhead_OBJECTS) $(microbenchs_tasks_size_overhead_LDADD) $(LIBS)
model-checking/$(am__dirstamp):
	@$(MKDIR_P) model-checking
	@: > model-checking/$(am__dirstamp)

model-checking/prio_list$(EXEEXT): $(model_checking_prio_list_OBJECTS) $(model_checking_prio_list_DEPENDENCIES) $(EXTRA_model_checking_prio_list_DEPENDENCIES) model-checking/$(am__dirstamp)
	@rm -f model-checking/prio_list$(EXEEXT)
	$(AM_V_CCLD)$(model_checking_prio_list_LINK) $(model_checking_prio_list_OBJECTS) $(model_checking_prio_list_LDADD) $(LIBS)

model-checking/starpu_barrier$(EXEEXT): $(model_checking_starpu_barrier_OBJECTS) $(model_checking_starpu_barrier_DEPENDENCIES) $(EXTRA_model_checking_starpu_barrier_DEPENDENCIES) model-checking/$(am__dirstamp)
	@rm -f model-checking/starpu_barrier$(EXEEXT)
	$(AM_V_CCLD)$(model_checking_starpu_barrier_LINK) $(model_checking_starpu_barrier_OBJECTS) $(model_checking_starpu_barrier_LDADD) $(LIBS)
openmp/$(am__dirstamp):
	@$(MKDIR_P) openmp
	@: > openmp/$(am__dirstamp)

openmp/api_01$(EXEEXT): $(openmp_api_01_OBJECTS) $(openmp_api_01_DEPENDENCIES) $(EXTRA_openmp_api_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/api_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_api_01_OBJECTS) $(openmp_api_01_LDADD) $(LIBS)

openmp/array_slice_01$(EXEEXT): $(openmp_array_slice_01_OBJECTS) $(openmp_array_slice_01_DEPENDENCIES) $(EXTRA_openmp_array_slice_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/array_slice_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_array_slice_01_OBJECTS) $(openmp_array_slice_01_LDADD) $(LIBS)

openmp/cuda_task_01$(EXEEXT): $(openmp_cuda_task_01_OBJECTS) $(openmp_cuda_task_01_DEPENDENCIES) $(EXTRA_openmp_cuda_task_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/cuda_task_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_cuda_task_01_OBJECTS) $(openmp_cuda_task_01_LDADD) $(LIBS)

openmp/environment$(EXEEXT): $(openmp_environment_OBJECTS) $(openmp_environment_DEPENDENCIES) $(EXTRA_openmp_environment_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/environment$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_environment_OBJECTS) $(openmp_environment_LDADD) $(LIBS)

openmp/init_exit_01$(EXEEXT): $(openmp_init_exit_01_OBJECTS) $(openmp_init_exit_01_DEPENDENCIES) $(EXTRA_openmp_init_exit_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/init_exit_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_init_exit_01_OBJECTS) $(openmp_init_exit_01_LDADD) $(LIBS)

openmp/init_exit_02$(EXEEXT): $(openmp_init_exit_02_OBJECTS) $(openmp_init_exit_02_DEPENDENCIES) $(EXTRA_openmp_init_exit_02_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/init_exit_02$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_init_exit_02_OBJECTS) $(openmp_init_exit_02_LDADD) $(LIBS)

openmp/parallel_01$(EXEEXT): $(openmp_parallel_01_OBJECTS) $(openmp_parallel_01_DEPENDENCIES) $(EXTRA_openmp_parallel_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/parallel_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_parallel_01_OBJECTS) $(openmp_parallel_01_LDADD) $(LIBS)

openmp/parallel_02$(EXEEXT): $(openmp_parallel_02_OBJECTS) $(openmp_parallel_02_DEPENDENCIES) $(EXTRA_openmp_parallel_02_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/parallel_02$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_parallel_02_OBJECTS) $(openmp_parallel_02_LDADD) $(LIBS)

openmp/parallel_03$(EXEEXT): $(openmp_parallel_03_OBJECTS) $(openmp_parallel_03_DEPENDENCIES) $(EXTRA_openmp_parallel_03_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/parallel_03$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_parallel_03_OBJECTS) $(openmp_parallel_03_LDADD) $(LIBS)

openmp/parallel_barrier_01$(EXEEXT): $(openmp_parallel_barrier_01_OBJECTS) $(openmp_parallel_barrier_01_DEPENDENCIES) $(EXTRA_openmp_parallel_barrier_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/parallel_barrier_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_parallel_barrier_01_OBJECTS) $(openmp_parallel_barrier_01_LDADD) $(LIBS)

openmp/parallel_critical_01$(EXEEXT): $(openmp_parallel_critical_01_OBJECTS) $(openmp_parallel_critical_01_DEPENDENCIES) $(EXTRA_openmp_parallel_critical_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/parallel_critical_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_parallel_critical_01_OBJECTS) $(openmp_parallel_critical_01_LDADD) $(LIBS)

openmp/parallel_critical_inline_01$(EXEEXT): $(openmp_parallel_critical_inline_01_OBJECTS) $(openmp_parallel_critical_inline_01_DEPENDENCIES) $(EXTRA_openmp_parallel_critical_inline_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/parallel_critical_inline_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_parallel_critical_inline_01_OBJECTS) $(openmp_parallel_critical_inline_01_LDADD) $(LIBS)

openmp/parallel_critical_named_01$(EXEEXT): $(openmp_parallel_critical_named_01_OBJECTS) $(openmp_parallel_critical_named_01_DEPENDENCIES) $(EXTRA_openmp_parallel_critical_named_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/parallel_critical_named_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_parallel_critical_named_01_OBJECTS) $(openmp_parallel_critical_named_01_LDADD) $(LIBS)

openmp/parallel_critical_named_inline_01$(EXEEXT): $(openmp_parallel_critical_named_inline_01_OBJECTS) $(openmp_parallel_critical_named_inline_01_DEPENDENCIES) $(EXTRA_openmp_parallel_critical_named_inline_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/parallel_critical_named_inline_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_parallel_critical_named_inline_01_OBJECTS) $(openmp_parallel_critical_named_inline_01_LDADD) $(LIBS)

openmp/parallel_for_01$(EXEEXT): $(openmp_parallel_for_01_OBJECTS) $(openmp_parallel_for_01_DEPENDENCIES) $(EXTRA_openmp_parallel_for_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/parallel_for_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_parallel_for_01_OBJECTS) $(openmp_parallel_for_01_LDADD) $(LIBS)

openmp/parallel_for_02$(EXEEXT): $(openmp_parallel_for_02_OBJECTS) $(openmp_parallel_for_02_DEPENDENCIES) $(EXTRA_openmp_parallel_for_02_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/parallel_for_02$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_parallel_for_02_OBJECTS) $(openmp_parallel_for_02_LDADD) $(LIBS)

openmp/parallel_for_ordered_01$(EXEEXT): $(openmp_parallel_for_ordered_01_OBJECTS) $(openmp_parallel_for_ordered_01_DEPENDENCIES) $(EXTRA_openmp_parallel_for_ordered_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/parallel_for_ordered_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_parallel_for_ordered_01_OBJECTS) $(openmp_parallel_for_ordered_01_LDADD) $(LIBS)

openmp/parallel_master_01$(EXEEXT): $(openmp_parallel_master_01_OBJECTS) $(openmp_parallel_master_01_DEPENDENCIES) $(EXTRA_openmp_parallel_master_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/parallel_master_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_parallel_master_01_OBJECTS) $(openmp_parallel_master_01_LDADD) $(LIBS)

openmp/parallel_master_inline_01$(EXEEXT): $(openmp_parallel_master_inline_01_OBJECTS) $(openmp_parallel_master_inline_01_DEPENDENCIES) $(EXTRA_openmp_parallel_master_inline_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/parallel_master_inline_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_parallel_master_inline_01_OBJECTS) $(openmp_parallel_master_inline_01_LDADD) $(LIBS)

openmp/parallel_nested_lock_01$(EXEEXT): $(openmp_parallel_nested_lock_01_OBJECTS) $(openmp_parallel_nested_lock_01_DEPENDENCIES) $(EXTRA_openmp_parallel_nested_lock_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/parallel_nested_lock_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_parallel_nested_lock_01_OBJECTS) $(openmp_parallel_nested_lock_01_LDADD) $(LIBS)

openmp/parallel_sections_01$(EXEEXT): $(openmp_parallel_sections_01_OBJECTS) $(openmp_parallel_sections_01_DEPENDENCIES) $(EXTRA_openmp_parallel_sections_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/parallel_sections_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_parallel_sections_01_OBJECTS) $(openmp_parallel_sections_01_LDADD) $(LIBS)

openmp/parallel_sections_combined_01$(EXEEXT): $(openmp_parallel_sections_combined_01_OBJECTS) $(openmp_parallel_sections_combined_01_DEPENDENCIES) $(EXTRA_openmp_parallel_sections_combined_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/parallel_sections_combined_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_parallel_sections_combined_01_OBJECTS) $(openmp_parallel_sections_combined_01_LDADD) $(LIBS)

openmp/parallel_simple_lock_01$(EXEEXT): $(openmp_parallel_simple_lock_01_OBJECTS) $(openmp_parallel_simple_lock_01_DEPENDENCIES) $(EXTRA_openmp_parallel_simple_lock_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/parallel_simple_lock_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_parallel_simple_lock_01_OBJECTS) $(openmp_parallel_simple_lock_01_LDADD) $(LIBS)

openmp/parallel_single_copyprivate_01$(EXEEXT): $(openmp_parallel_single_copyprivate_01_OBJECTS) $(openmp_parallel_single_copyprivate_01_DEPENDENCIES) $(EXTRA_openmp_parallel_single_copyprivate_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/parallel_single_copyprivate_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_parallel_single_copyprivate_01_OBJECTS) $(openmp_parallel_single_copyprivate_01_LDADD) $(LIBS)

openmp/parallel_single_copyprivate_inline_01$(EXEEXT): $(openmp_parallel_single_copyprivate_inline_01_OBJECTS) $(openmp_parallel_single_copyprivate_inline_01_DEPENDENCIES) $(EXTRA_openmp_parallel_single_copyprivate_inline_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/parallel_single_copyprivate_inline_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_parallel_single_copyprivate_inline_01_OBJECTS) $(openmp_parallel_single_copyprivate_inline_01_LDADD) $(LIBS)

openmp/parallel_single_inline_01$(EXEEXT): $(openmp_parallel_single_inline_01_OBJECTS) $(openmp_parallel_single_inline_01_DEPENDENCIES) $(EXTRA_openmp_parallel_single_inline_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/parallel_single_inline_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_parallel_single_inline_01_OBJECTS) $(openmp_parallel_single_inline_01_LDADD) $(LIBS)

openmp/parallel_single_nowait_01$(EXEEXT): $(openmp_parallel_single_nowait_01_OBJECTS) $(openmp_parallel_single_nowait_01_DEPENDENCIES) $(EXTRA_openmp_parallel_single_nowait_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/parallel_single_nowait_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_parallel_single_nowait_01_OBJECTS) $(openmp_parallel_single_nowait_01_LDADD) $(LIBS)

openmp/parallel_single_wait_01$(EXEEXT): $(openmp_parallel_single_wait_01_OBJECTS) $(openmp_parallel_single_wait_01_DEPENDENCIES) $(EXTRA_openmp_parallel_single_wait_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/parallel_single_wait_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_parallel_single_wait_01_OBJECTS) $(openmp_parallel_single_wait_01_LDADD) $(LIBS)

openmp/task_01$(EXEEXT): $(openmp_task_01_OBJECTS) $(openmp_task_01_DEPENDENCIES) $(EXTRA_openmp_task_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/task_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_task_01_OBJECTS) $(openmp_task_01_LDADD) $(LIBS)

openmp/task_02$(EXEEXT): $(openmp_task_02_OBJECTS) $(openmp_task_02_DEPENDENCIES) $(EXTRA_openmp_task_02_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/task_02$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_task_02_OBJECTS) $(openmp_task_02_LDADD) $(LIBS)

openmp/task_03$(EXEEXT): $(openmp_task_03_OBJECTS) $(openmp_task_03_DEPENDENCIES) $(EXTRA_openmp_task_03_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/task_03$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_task_03_OBJECTS) $(openmp_task_03_LDADD) $(LIBS)

openmp/taskgroup_01$(EXEEXT): $(openmp_taskgroup_01_OBJECTS) $(openmp_taskgroup_01_DEPENDENCIES) $(EXTRA_openmp_taskgroup_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/taskgroup_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_taskgroup_01_OBJECTS) $(openmp_taskgroup_01_LDADD) $(LIBS)

openmp/taskgroup_02$(EXEEXT): $(openmp_taskgroup_02_OBJECTS) $(openmp_taskgroup_02_DEPENDENCIES) $(EXTRA_openmp_taskgroup_02_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/taskgroup_02$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_taskgroup_02_OBJECTS) $(openmp_taskgroup_02_LDADD) $(LIBS)

openmp/taskloop$(EXEEXT): $(openmp_taskloop_OBJECTS) $(openmp_taskloop_DEPENDENCIES) $(EXTRA_openmp_taskloop_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/taskloop$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_taskloop_OBJECTS) $(openmp_taskloop_LDADD) $(LIBS)

openmp/taskwait_01$(EXEEXT): $(openmp_taskwait_01_OBJECTS) $(openmp_taskwait_01_DEPENDENCIES) $(EXTRA_openmp_taskwait_01_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/taskwait_01$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openmp_taskwait_01_OBJECTS) $(openmp_taskwait_01_LDADD) $(LIBS)
overlap/$(am__dirstamp):
	@$(MKDIR_P) overlap
	@: > overlap/$(am__dirstamp)
overlap/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) overlap/$(DEPDIR)
	@: > overlap/$(DEPDIR)/$(am__dirstamp)
overlap/long_kernel.$(OBJEXT): overlap/$(am__dirstamp) \
	overlap/$(DEPDIR)/$(am__dirstamp)

overlap/gpu_concurrency$(EXEEXT): $(overlap_gpu_concurrency_OBJECTS) $(overlap_gpu_concurrency_DEPENDENCIES) $(EXTRA_overlap_gpu_concurrency_DEPENDENCIES) overlap/$(am__dirstamp)
	@rm -f overlap/gpu_concurrency$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(overlap_gpu_concurrency_OBJECTS) $(overlap_gpu_concurrency_LDADD) $(LIBS)

overlap/overlap$(EXEEXT): $(overlap_overlap_OBJECTS) $(overlap_overlap_DEPENDENCIES) $(EXTRA_overlap_overlap_DEPENDENCIES) overlap/$(am__dirstamp)
	@rm -f overlap/overlap$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(overlap_overlap_OBJECTS) $(overlap_overlap_LDADD) $(LIBS)
parallel_tasks/$(am__dirstamp):
	@$(MKDIR_P) parallel_tasks
	@: > parallel_tasks/$(am__dirstamp)

parallel_tasks/cuda_only$(EXEEXT): $(parallel_tasks_cuda_only_OBJECTS) $(parallel_tasks_cuda_only_DEPENDENCIES) $(EXTRA_parallel_tasks_cuda_only_DEPENDENCIES) parallel_tasks/$(am__dirstamp)
	@rm -f parallel_tasks/cuda_only$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(parallel_tasks_cuda_only_OBJECTS) $(parallel_tasks_cuda_only_LDADD) $(LIBS)

parallel_tasks/explicit_combined_worker$(EXEEXT): $(parallel_tasks_explicit_combined_worker_OBJECTS) $(parallel_tasks_explicit_combined_worker_DEPENDENCIES) $(EXTRA_parallel_tasks_explicit_combined_worker_DEPENDENCIES) parallel_tasks/$(am__dirstamp)
	@rm -f parallel_tasks/explicit_combined_worker$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(parallel_tasks_explicit_combined_worker_OBJECTS) $(parallel_tasks_explicit_combined_worker_LDADD) $(LIBS)

parallel_tasks/parallel_kernels$(EXEEXT): $(parallel_tasks_parallel_kernels_OBJECTS) $(parallel_tasks_parallel_kernels_DEPENDENCIES) $(EXTRA_parallel_tasks_parallel_kernels_DEPENDENCIES) parallel_tasks/$(am__dirstamp)
	@rm -f parallel_tasks/parallel_kernels$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(parallel_tasks_parallel_kernels_OBJECTS) $(parallel_tasks_parallel_kernels_LDADD) $(LIBS)

parallel_tasks/parallel_kernels_spmd$(EXEEXT): $(parallel_tasks_parallel_kernels_spmd_OBJECTS) $(parallel_tasks_parallel_kernels_spmd_DEPENDENCIES) $(EXTRA_parallel_tasks_parallel_kernels_spmd_DEPENDENCIES) parallel_tasks/$(am__dirstamp)
	@rm -f parallel_tasks/parallel_kernels_spmd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(parallel_tasks_parallel_kernels_spmd_OBJECTS) $(parallel_tasks_parallel_kernels_spmd_LDADD) $(LIBS)

parallel_tasks/parallel_kernels_trivial$(EXEEXT): $(parallel_tasks_parallel_kernels_trivial_OBJECTS) $(parallel_tasks_parallel_kernels_trivial_DEPENDENCIES) $(EXTRA_parallel_tasks_parallel_kernels_trivial_DEPENDENCIES) parallel_tasks/$(am__dirstamp)
	@rm -f parallel_tasks/parallel_kernels_trivial$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(parallel_tasks_parallel_kernels_trivial_OBJECTS) $(parallel_tasks_parallel_kernels_trivial_LDADD) $(LIBS)

parallel_tasks/spmd_peager$(EXEEXT): $(parallel_tasks_spmd_peager_OBJECTS) $(parallel_tasks_spmd_peager_DEPENDENCIES) $(EXTRA_parallel_tasks_spmd_peager_DEPENDENCIES) parallel_tasks/$(am__dirstamp)
	@rm -f parallel_tasks/spmd_peager$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(parallel_tasks_spmd_peager_OBJECTS) $(parallel_tasks_spmd_peager_LDADD) $(LIBS)
perfmodels/$(am__dirstamp):
	@$(MKDIR_P) perfmodels
	@: > perfmodels/$(am__dirstamp)

perfmodels/feed$(EXEEXT): $(perfmodels_feed_OBJECTS) $(perfmodels_feed_DEPENDENCIES) $(EXTRA_perfmodels_feed_DEPENDENCIES) perfmodels/$(am__dirstamp)
	@rm -f perfmodels/feed$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perfmodels_feed_OBJECTS) $(perfmodels_feed_LDADD) $(LIBS)

perfmodels/memory$(EXEEXT): $(perfmodels_memory_OBJECTS) $(perfmodels_memory_DEPENDENCIES) $(EXTRA_perfmodels_memory_DEPENDENCIES) perfmodels/$(am__dirstamp)
	@rm -f perfmodels/memory$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perfmodels_memory_OBJECTS) $(perfmodels_memory_LDADD) $(LIBS)

perfmodels/non_linear_regression_based$(EXEEXT): $(perfmodels_non_linear_regression_based_OBJECTS) $(perfmodels_non_linear_regression_based_DEPENDENCIES) $(EXTRA_perfmodels_non_linear_regression_based_DEPENDENCIES) perfmodels/$(am__dirstamp)
	@rm -f perfmodels/non_linear_regression_based$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perfmodels_non_linear_regression_based_OBJECTS) $(perfmodels_non_linear_regression_based_LDADD) $(LIBS)

perfmodels/regression_based$(EXEEXT): $(perfmodels_regression_based_OBJECTS) $(perfmodels_regression_based_DEPENDENCIES) $(EXTRA_perfmodels_regression_based_DEPENDENCIES) perfmodels/$(am__dirstamp)
	@rm -f perfmodels/regression_based$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perfmodels_regression_based_OBJECTS) $(perfmodels_regression_based_LDADD) $(LIBS)

perfmodels/user_base$(EXEEXT): $(perfmodels_user_base_OBJECTS) $(perfmodels_user_base_DEPENDENCIES) $(EXTRA_perfmodels_user_base_DEPENDENCIES) perfmodels/$(am__dirstamp)
	@rm -f perfmodels/user_base$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perfmodels_user_base_OBJECTS) $(perfmodels_user_base_LDADD) $(LIBS)

perfmodels/valid_model$(EXEEXT): $(perfmodels_valid_model_OBJECTS) $(perfmodels_valid_model_DEPENDENCIES) $(EXTRA_perfmodels_valid_model_DEPENDENCIES) perfmodels/$(am__dirstamp)
	@rm -f perfmodels/valid_model$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perfmodels_valid_model_OBJECTS) $(perfmodels_valid_model_LDADD) $(LIBS)

perfmodels/value_nan$(EXEEXT): $(perfmodels_value_nan_OBJECTS) $(perfmodels_value_nan_DEPENDENCIES) $(EXTRA_perfmodels_value_nan_DEPENDENCIES) perfmodels/$(am__dirstamp)
	@rm -f perfmodels/value_nan$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perfmodels_value_nan_OBJECTS) $(perfmodels_value_nan_LDADD) $(LIBS)
sched_ctx/$(am__dirstamp):
	@$(MKDIR_P) sched_ctx
	@: > sched_ctx/$(am__dirstamp)

sched_ctx/sched_ctx_hierarchy$(EXEEXT): $(sched_ctx_sched_ctx_hierarchy_OBJECTS) $(sched_ctx_sched_ctx_hierarchy_DEPENDENCIES) $(EXTRA_sched_ctx_sched_ctx_hierarchy_DEPENDENCIES) sched_ctx/$(am__dirstamp)
	@rm -f sched_ctx/sched_ctx_hierarchy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_ctx_sched_ctx_hierarchy_OBJECTS) $(sched_ctx_sched_ctx_hierarchy_LDADD) $(LIBS)

sched_ctx/sched_ctx_list$(EXEEXT): $(sched_ctx_sched_ctx_list_OBJECTS) $(sched_ctx_sched_ctx_list_DEPENDENCIES) $(EXTRA_sched_ctx_sched_ctx_list_DEPENDENCIES) sched_ctx/$(am__dirstamp)
	@rm -f sched_ctx/sched_ctx_list$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_ctx_sched_ctx_list_OBJECTS) $(sched_ctx_sched_ctx_list_LDADD) $(LIBS)

sched_ctx/sched_ctx_policy_data$(EXEEXT): $(sched_ctx_sched_ctx_policy_data_OBJECTS) $(sched_ctx_sched_ctx_policy_data_DEPENDENCIES) $(EXTRA_sched_ctx_sched_ctx_policy_data_DEPENDENCIES) sched_ctx/$(am__dirstamp)
	@rm -f sched_ctx/sched_ctx_policy_data$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_ctx_sched_ctx_policy_data_OBJECTS) $(sched_ctx_sched_ctx_policy_data_LDADD) $(LIBS)
sched_policies/$(am__dirstamp):
	@$(MKDIR_P) sched_policies
	@: > sched_policies/$(am__dirstamp)

sched_policies/data_locality$(EXEEXT): $(sched_policies_data_locality_OBJECTS) $(sched_policies_data_locality_DEPENDENCIES) $(EXTRA_sched_policies_data_locality_DEPENDENCIES) sched_policies/$(am__dirstamp)
	@rm -f sched_policies/data_locality$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_policies_data_locality_OBJECTS) $(sched_policies_data_locality_LDADD) $(LIBS)

sched_policies/execute_all_tasks$(EXEEXT): $(sched_policies_execute_all_tasks_OBJECTS) $(sched_policies_execute_all_tasks_DEPENDENCIES) $(EXTRA_sched_policies_execute_all_tasks_DEPENDENCIES) sched_policies/$(am__dirstamp)
	@rm -f sched_policies/execute_all_tasks$(EXEEXT)
	$(AM_V_CCLD)$(sched_policies_execute_all_tasks_LINK) $(sched_policies_execute_all_tasks_OBJECTS) $(sched_policies_execute_all_tasks_LDADD) $(LIBS)

sched_policies/prio$(EXEEXT): $(sched_policies_prio_OBJECTS) $(sched_policies_prio_DEPENDENCIES) $(EXTRA_sched_policies_prio_DEPENDENCIES) sched_policies/$(am__dirstamp)
	@rm -f sched_policies/prio$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_policies_prio_OBJECTS) $(sched_policies_prio_LDADD) $(LIBS)

sched_policies/simple_cpu_gpu_sched$(EXEEXT): $(sched_policies_simple_cpu_gpu_sched_OBJECTS) $(sched_policies_simple_cpu_gpu_sched_DEPENDENCIES) $(EXTRA_sched_policies_simple_cpu_gpu_sched_DEPENDENCIES) sched_policies/$(am__dirstamp)
	@rm -f sched_policies/simple_cpu_gpu_sched$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_policies_simple_cpu_gpu_sched_OBJECTS) $(sched_policies_simple_cpu_gpu_sched_LDADD) $(LIBS)

sched_policies/simple_deps$(EXEEXT): $(sched_policies_simple_deps_OBJECTS) $(sched_policies_simple_deps_DEPENDENCIES) $(EXTRA_sched_policies_simple_deps_DEPENDENCIES) sched_policies/$(am__dirstamp)
	@rm -f sched_policies/simple_deps$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_policies_simple_deps_OBJECTS) $(sched_policies_simple_deps_LDADD) $(LIBS)
install-examplebinSCRIPTS: $(examplebin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(examplebin_SCRIPTS)'; test -n "$(examplebindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(examplebindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(examplebindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(examplebindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(examplebindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-examplebinSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(examplebin_SCRIPTS)'; test -n "$(examplebindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(examplebindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f datawizard/*.$(OBJEXT)
	-rm -f datawizard/interfaces/bcsr/*.$(OBJEXT)
	-rm -f datawizard/interfaces/block/*.$(OBJEXT)
	-rm -f datawizard/interfaces/coo/*.$(OBJEXT)
	-rm -f datawizard/interfaces/csr/*.$(OBJEXT)
	-rm -f datawizard/interfaces/matrix/*.$(OBJEXT)
	-rm -f datawizard/interfaces/multiformat/*.$(OBJEXT)
	-rm -f datawizard/interfaces/variable/*.$(OBJEXT)
	-rm -f datawizard/interfaces/vector/*.$(OBJEXT)
	-rm -f main/*.$(OBJEXT)
	-rm -f overlap/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/acquire_cb.Po # am--include-marker
include ./$(DEPDIR)/acquire_cb_insert.Po # am--include-marker
include ./$(DEPDIR)/acquire_release.Po # am--include-marker
include ./$(DEPDIR)/acquire_release2.Po # am--include-marker
include ./$(DEPDIR)/acquire_release_opencl.Po # am--include-marker
include ./$(DEPDIR)/acquire_try.Po # am--include-marker
include ./$(DEPDIR)/allocate.Po # am--include-marker
include ./$(DEPDIR)/api_01.Po # am--include-marker
include ./$(DEPDIR)/array_slice_01.Po # am--include-marker
include ./$(DEPDIR)/async_tasks_overhead.Po # am--include-marker
include ./$(DEPDIR)/bandwidth.Po # am--include-marker
include ./$(DEPDIR)/bcsr.Po # am--include-marker
include ./$(DEPDIR)/bcsr_interface.Po # am--include-marker
include ./$(DEPDIR)/bcsr_opencl.Po # am--include-marker
include ./$(DEPDIR)/bind.Po # am--include-marker
include ./$(DEPDIR)/block_interface.Po # am--include-marker
include ./$(DEPDIR)/block_opencl.Po # am--include-marker
include ./$(DEPDIR)/cache.Po # am--include-marker
include ./$(DEPDIR)/callback.Po # am--include-marker
include ./$(DEPDIR)/codelet_null_callback.Po # am--include-marker
include ./$(DEPDIR)/commute.Po # am--include-marker
include ./$(DEPDIR)/commute2.Po # am--include-marker
include ./$(DEPDIR)/coo_interface.Po # am--include-marker
include ./$(DEPDIR)/coo_opencl.Po # am--include-marker
include ./$(DEPDIR)/copy.Po # am--include-marker
include ./$(DEPDIR)/copy_interfaces.Po # am--include-marker
include ./$(DEPDIR)/critical_section_with_void_interface.Po # am--include-marker
include ./$(DEPDIR)/csr_interface.Po # am--include-marker
include ./$(DEPDIR)/csr_opencl.Po # am--include-marker
include ./$(DEPDIR)/cublas_init.Po # am--include-marker
include ./$(DEPDIR)/cuda_only.Po # am--include-marker
include ./$(DEPDIR)/cuda_task_01.Po # am--include-marker
include ./$(DEPDIR)/cusparse_init.Po # am--include-marker
include ./$(DEPDIR)/data_implicit_deps.Po # am--include-marker
include ./$(DEPDIR)/data_invalidation.Po # am--include-marker
include ./$(DEPDIR)/data_locality.Po # am--include-marker
include ./$(DEPDIR)/data_lookup.Po # am--include-marker
include ./$(DEPDIR)/declare_deps_after_submission.Po # am--include-marker
include ./$(DEPDIR)/declare_deps_after_submission_synchronous.Po # am--include-marker
include ./$(DEPDIR)/declare_deps_in_callback.Po # am--include-marker
include ./$(DEPDIR)/deploop.Po # am--include-marker
include ./$(DEPDIR)/deps.Po # am--include-marker
include ./$(DEPDIR)/dining_philosophers.Po # am--include-marker
include ./$(DEPDIR)/disk_compute.Po # am--include-marker
include ./$(DEPDIR)/disk_copy.Po # am--include-marker
include ./$(DEPDIR)/disk_copy_to_disk.Po # am--include-marker
include ./$(DEPDIR)/disk_copy_unpack.Po # am--include-marker
include ./$(DEPDIR)/disk_pack.Po # am--include-marker
include ./$(DEPDIR)/display_binding.Po # am--include-marker
include ./$(DEPDIR)/display_structures_size.Po # am--include-marker
include ./$(DEPDIR)/double_parameter.Po # am--include-marker
include ./$(DEPDIR)/dsm_stress.Po # am--include-marker
include ./$(DEPDIR)/empty_task.Po # am--include-marker
include ./$(DEPDIR)/empty_task_chain.Po # am--include-marker
include ./$(DEPDIR)/empty_task_sync_point.Po # am--include-marker
include ./$(DEPDIR)/empty_task_sync_point_tasks.Po # am--include-marker
include ./$(DEPDIR)/environment.Po # am--include-marker
include ./$(DEPDIR)/execute_all_tasks.Po # am--include-marker
include ./$(DEPDIR)/execute_on_a_specific_worker.Po # am--include-marker
include ./$(DEPDIR)/execute_on_all.Po # am--include-marker
include ./$(DEPDIR)/execute_schedule.Po # am--include-marker
include ./$(DEPDIR)/explicit_combined_worker.Po # am--include-marker
include ./$(DEPDIR)/feed.Po # am--include-marker
include ./$(DEPDIR)/generic.Po # am--include-marker
include ./$(DEPDIR)/get_children_tasks.Po # am--include-marker
include ./$(DEPDIR)/get_current_task.Po # am--include-marker
include ./$(DEPDIR)/gpu_concurrency.Po # am--include-marker
include ./$(DEPDIR)/gpu_ptr_register.Po # am--include-marker
include ./$(DEPDIR)/gpu_register.Po # am--include-marker
include ./$(DEPDIR)/handle_to_pointer.Po # am--include-marker
include ./$(DEPDIR)/hwloc_cpuset.Po # am--include-marker
include ./$(DEPDIR)/in_place_partition.Po # am--include-marker
include ./$(DEPDIR)/increment_codelet.Po # am--include-marker
include ./$(DEPDIR)/increment_init.Po # am--include-marker
include ./$(DEPDIR)/increment_redux.Po # am--include-marker
include ./$(DEPDIR)/increment_redux_lazy.Po # am--include-marker
include ./$(DEPDIR)/increment_redux_v2.Po # am--include-marker
include ./$(DEPDIR)/init_exit_01.Po # am--include-marker
include ./$(DEPDIR)/init_exit_02.Po # am--include-marker
include ./$(DEPDIR)/init_run_deinit.Po # am--include-marker
include ./$(DEPDIR)/insert_task.Po # am--include-marker
include ./$(DEPDIR)/insert_task_array.Po # am--include-marker
include ./$(DEPDIR)/insert_task_dyn_handles.Po # am--include-marker
include ./$(DEPDIR)/insert_task_many.Po # am--include-marker
include ./$(DEPDIR)/insert_task_nullcodelet.Po # am--include-marker
include ./$(DEPDIR)/insert_task_pack.Po # am--include-marker
include ./$(DEPDIR)/insert_task_value.Po # am--include-marker
include ./$(DEPDIR)/insert_task_where.Po # am--include-marker
include ./$(DEPDIR)/invalid_blocking_calls.Po # am--include-marker
include ./$(DEPDIR)/invalid_tasks.Po # am--include-marker
include ./$(DEPDIR)/invalidate_pending_requests.Po # am--include-marker
include ./$(DEPDIR)/job.Po # am--include-marker
include ./$(DEPDIR)/lazy_allocation.Po # am--include-marker
include ./$(DEPDIR)/lazy_unregister.Po # am--include-marker
include ./$(DEPDIR)/loader.Po # am--include-marker
include ./$(DEPDIR)/local_pingpong.Po # am--include-marker
include ./$(DEPDIR)/locality.Po # am--include-marker
include ./$(DEPDIR)/main_deprecated_func-deprecated_func.Po # am--include-marker
include ./$(DEPDIR)/manual_reduction.Po # am--include-marker
include ./$(DEPDIR)/matrix_as_vector.Po # am--include-marker
include ./$(DEPDIR)/matrix_interface.Po # am--include-marker
include ./$(DEPDIR)/matrix_opencl.Po # am--include-marker
include ./$(DEPDIR)/mem_reclaim.Po # am--include-marker
include ./$(DEPDIR)/memory.Po # am--include-marker
include ./$(DEPDIR)/mkdtemp.Po # am--include-marker
include ./$(DEPDIR)/mpi_like.Po # am--include-marker
include ./$(DEPDIR)/mpi_like_async.Po # am--include-marker
include ./$(DEPDIR)/multiformat_conversion_codelets.Po # am--include-marker
include ./$(DEPDIR)/multiformat_conversion_codelets_opencl.Po # am--include-marker
include ./$(DEPDIR)/multiformat_cuda_opencl.Po # am--include-marker
include ./$(DEPDIR)/multiformat_data_release.Po # am--include-marker
include ./$(DEPDIR)/multiformat_handle_conversion.Po # am--include-marker
include ./$(DEPDIR)/multiformat_interface.Po # am--include-marker
include ./$(DEPDIR)/multiformat_opencl.Po # am--include-marker
include ./$(DEPDIR)/multiformat_worker.Po # am--include-marker
include ./$(DEPDIR)/multithreaded.Po # am--include-marker
include ./$(DEPDIR)/multithreaded_init.Po # am--include-marker
include ./$(DEPDIR)/no_unregister.Po # am--include-marker
include ./$(DEPDIR)/non_linear_regression_based.Po # am--include-marker
include ./$(DEPDIR)/noreclaim.Po # am--include-marker
include ./$(DEPDIR)/nowhere.Po # am--include-marker
include ./$(DEPDIR)/numa_overflow.Po # am--include-marker
include ./$(DEPDIR)/opencl_codelet_unsigned_inc.Po # am--include-marker
include ./$(DEPDIR)/opencl_memset.Po # am--include-marker
include ./$(DEPDIR)/overlap.Po # am--include-marker
include ./$(DEPDIR)/pack.Po # am--include-marker
include ./$(DEPDIR)/parallel_01.Po # am--include-marker
include ./$(DEPDIR)/parallel_02.Po # am--include-marker
include ./$(DEPDIR)/parallel_03.Po # am--include-marker
include ./$(DEPDIR)/parallel_barrier_01.Po # am--include-marker
include ./$(DEPDIR)/parallel_critical_01.Po # am--include-marker
include ./$(DEPDIR)/parallel_critical_inline_01.Po # am--include-marker
include ./$(DEPDIR)/parallel_critical_named_01.Po # am--include-marker
include ./$(DEPDIR)/parallel_critical_named_inline_01.Po # am--include-marker
include ./$(DEPDIR)/parallel_dependent_homogeneous_tasks_data.Po # am--include-marker
include ./$(DEPDIR)/parallel_for_01.Po # am--include-marker
include ./$(DEPDIR)/parallel_for_02.Po # am--include-marker
include ./$(DEPDIR)/parallel_for_ordered_01.Po # am--include-marker
include ./$(DEPDIR)/parallel_independent_heterogeneous_tasks.Po # am--include-marker
include ./$(DEPDIR)/parallel_independent_heterogeneous_tasks_data.Po # am--include-marker
include ./$(DEPDIR)/parallel_independent_homogeneous_tasks.Po # am--include-marker
include ./$(DEPDIR)/parallel_independent_homogeneous_tasks_data.Po # am--include-marker
include ./$(DEPDIR)/parallel_kernels.Po # am--include-marker
include ./$(DEPDIR)/parallel_kernels_spmd.Po # am--include-marker
include ./$(DEPDIR)/parallel_kernels_trivial.Po # am--include-marker
include ./$(DEPDIR)/parallel_master_01.Po # am--include-marker
include ./$(DEPDIR)/parallel_master_inline_01.Po # am--include-marker
include ./$(DEPDIR)/parallel_nested_lock_01.Po # am--include-marker
include ./$(DEPDIR)/parallel_redux_heterogeneous_tasks_data.Po # am--include-marker
include ./$(DEPDIR)/parallel_redux_homogeneous_tasks_data.Po # am--include-marker
include ./$(DEPDIR)/parallel_sections_01.Po # am--include-marker
include ./$(DEPDIR)/parallel_sections_combined_01.Po # am--include-marker
include ./$(DEPDIR)/parallel_simple_lock_01.Po # am--include-marker
include ./$(DEPDIR)/parallel_single_copyprivate_01.Po # am--include-marker
include ./$(DEPDIR)/parallel_single_copyprivate_inline_01.Po # am--include-marker
include ./$(DEPDIR)/parallel_single_inline_01.Po # am--include-marker
include ./$(DEPDIR)/parallel_single_nowait_01.Po # am--include-marker
include ./$(DEPDIR)/parallel_single_wait_01.Po # am--include-marker
include ./$(DEPDIR)/partition_dep.Po # am--include-marker
include ./$(DEPDIR)/partition_init.Po # am--include-marker
include ./$(DEPDIR)/partition_lazy.Po # am--include-marker
include ./$(DEPDIR)/partitioned_acquire.Po # am--include-marker
include ./$(DEPDIR)/partitioned_initialization.Po # am--include-marker
include ./$(DEPDIR)/pause_resume.Po # am--include-marker
include ./$(DEPDIR)/pinned_memory.Po # am--include-marker
include ./$(DEPDIR)/prefetch_data_on_node.Po # am--include-marker
include ./$(DEPDIR)/prio.Po # am--include-marker
include ./$(DEPDIR)/prio_list.Po # am--include-marker
include ./$(DEPDIR)/readers_and_writers.Po # am--include-marker
include ./$(DEPDIR)/readonly.Po # am--include-marker
include ./$(DEPDIR)/reclaim.Po # am--include-marker
include ./$(DEPDIR)/redundant_buffer.Po # am--include-marker
include ./$(DEPDIR)/redux_acquire.Po # am--include-marker
include ./$(DEPDIR)/regenerate.Po # am--include-marker
include ./$(DEPDIR)/regenerate_pipeline.Po # am--include-marker
include ./$(DEPDIR)/regression_based.Po # am--include-marker
include ./$(DEPDIR)/restart.Po # am--include-marker
include ./$(DEPDIR)/run_driver.Po # am--include-marker
include ./$(DEPDIR)/same_handle.Po # am--include-marker
include ./$(DEPDIR)/scal.Po # am--include-marker
include ./$(DEPDIR)/sched_ctx_hierarchy.Po # am--include-marker
include ./$(DEPDIR)/sched_ctx_list.Po # am--include-marker
include ./$(DEPDIR)/sched_ctx_policy_data.Po # am--include-marker
include ./$(DEPDIR)/scratch.Po # am--include-marker
include ./$(DEPDIR)/scratch_opencl.Po # am--include-marker
include ./$(DEPDIR)/scratch_reuse.Po # am--include-marker
include ./$(DEPDIR)/simgrid-locality.Po # am--include-marker
include ./$(DEPDIR)/simple_cpu_gpu_sched.Po # am--include-marker
include ./$(DEPDIR)/simple_deps.Po # am--include-marker
include ./$(DEPDIR)/specific_node.Po # am--include-marker
include ./$(DEPDIR)/spmd_peager.Po # am--include-marker
include ./$(DEPDIR)/starpu_barrier.Po # am--include-marker
include ./$(DEPDIR)/starpu_create_sync_task.Po # am--include-marker
include ./$(DEPDIR)/starpu_data_cpy.Po # am--include-marker
include ./$(DEPDIR)/starpu_init.Po # am--include-marker
include ./$(DEPDIR)/starpu_init_noworker.Po # am--include-marker
include ./$(DEPDIR)/starpu_task_bundle.Po # am--include-marker
include ./$(DEPDIR)/starpu_task_wait.Po # am--include-marker
include ./$(DEPDIR)/starpu_task_wait_for_all.Po # am--include-marker
include ./$(DEPDIR)/starpu_worker_exists.Po # am--include-marker
include ./$(DEPDIR)/static_restartable.Po # am--include-marker
include ./$(DEPDIR)/static_restartable_tag.Po # am--include-marker
include ./$(DEPDIR)/static_restartable_using_initializer.Po # am--include-marker
include ./$(DEPDIR)/subgraph_repeat.Po # am--include-marker
include ./$(DEPDIR)/subgraph_repeat_regenerate.Po # am--include-marker
include ./$(DEPDIR)/subgraph_repeat_regenerate_tag.Po # am--include-marker
include ./$(DEPDIR)/subgraph_repeat_regenerate_tag_cycle.Po # am--include-marker
include ./$(DEPDIR)/subgraph_repeat_tag.Po # am--include-marker
include ./$(DEPDIR)/submit.Po # am--include-marker
include ./$(DEPDIR)/sync_and_notify_data.Po # am--include-marker
include ./$(DEPDIR)/sync_and_notify_data_implicit.Po # am--include-marker
include ./$(DEPDIR)/sync_and_notify_data_opencl.Po # am--include-marker
include ./$(DEPDIR)/sync_tasks_overhead.Po # am--include-marker
include ./$(DEPDIR)/sync_with_data_with_mem.Po # am--include-marker
include ./$(DEPDIR)/sync_with_data_with_mem_non_blocking.Po # am--include-marker
include ./$(DEPDIR)/sync_with_data_with_mem_non_blocking_implicit.Po # am--include-marker
include ./$(DEPDIR)/tag_get_task.Po # am--include-marker
include ./$(DEPDIR)/tag_task_data_deps.Po # am--include-marker
include ./$(DEPDIR)/tag_wait_api.Po # am--include-marker
include ./$(DEPDIR)/task_01.Po # am--include-marker
include ./$(DEPDIR)/task_02.Po # am--include-marker
include ./$(DEPDIR)/task_03.Po # am--include-marker
include ./$(DEPDIR)/task_end_dep.Po # am--include-marker
include ./$(DEPDIR)/task_wait_api.Po # am--include-marker
include ./$(DEPDIR)/task_with_multiple_time_the_same_handle.Po # am--include-marker
include ./$(DEPDIR)/taskgroup_01.Po # am--include-marker
include ./$(DEPDIR)/taskgroup_02.Po # am--include-marker
include ./$(DEPDIR)/taskloop.Po # am--include-marker
include ./$(DEPDIR)/tasks_overhead.Po # am--include-marker
include ./$(DEPDIR)/tasks_size_overhead.Po # am--include-marker
include ./$(DEPDIR)/taskwait_01.Po # am--include-marker
include ./$(DEPDIR)/temporary_partition.Po # am--include-marker
include ./$(DEPDIR)/temporary_partition_implicit.Po # am--include-marker
include ./$(DEPDIR)/test_arbiter.Po # am--include-marker
include ./$(DEPDIR)/test_interfaces.Po # am--include-marker
include ./$(DEPDIR)/unpartition.Po # am--include-marker
include ./$(DEPDIR)/user_base.Po # am--include-marker
include ./$(DEPDIR)/user_interaction_implicit.Po # am--include-marker
include ./$(DEPDIR)/valid_model.Po # am--include-marker
include ./$(DEPDIR)/value_nan.Po # am--include-marker
include ./$(DEPDIR)/variable_interface.Po # am--include-marker
include ./$(DEPDIR)/variable_opencl.Po # am--include-marker
include ./$(DEPDIR)/variable_parameters.Po # am--include-marker
include ./$(DEPDIR)/variable_size.Po # am--include-marker
include ./$(DEPDIR)/vector_interface.Po # am--include-marker
include ./$(DEPDIR)/vector_opencl.Po # am--include-marker
include ./$(DEPDIR)/void_interface.Po # am--include-marker
include ./$(DEPDIR)/wait_all_regenerable_tasks.Po # am--include-marker
include ./$(DEPDIR)/workers_cpuid.Po # am--include-marker
include ./$(DEPDIR)/write_only_tmp_buffer.Po # am--include-marker
include ./$(DEPDIR)/wt_broadcast.Po # am--include-marker
include ./$(DEPDIR)/wt_host.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

acquire_cb.o: datawizard/acquire_cb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT acquire_cb.o -MD -MP -MF $(DEPDIR)/acquire_cb.Tpo -c -o acquire_cb.o `test -f 'datawizard/acquire_cb.c' || echo '$(srcdir)/'`datawizard/acquire_cb.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/acquire_cb.Tpo $(DEPDIR)/acquire_cb.Po
#	$(AM_V_CC)source='datawizard/acquire_cb.c' object='acquire_cb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o acquire_cb.o `test -f 'datawizard/acquire_cb.c' || echo '$(srcdir)/'`datawizard/acquire_cb.c

acquire_cb.obj: datawizard/acquire_cb.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT acquire_cb.obj -MD -MP -MF $(DEPDIR)/acquire_cb.Tpo -c -o acquire_cb.obj `if test -f 'datawizard/acquire_cb.c'; then $(CYGPATH_W) 'datawizard/acquire_cb.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/acquire_cb.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/acquire_cb.Tpo $(DEPDIR)/acquire_cb.Po
#	$(AM_V_CC)source='datawizard/acquire_cb.c' object='acquire_cb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o acquire_cb.obj `if test -f 'datawizard/acquire_cb.c'; then $(CYGPATH_W) 'datawizard/acquire_cb.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/acquire_cb.c'; fi`

acquire_cb_insert.o: datawizard/acquire_cb_insert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT acquire_cb_insert.o -MD -MP -MF $(DEPDIR)/acquire_cb_insert.Tpo -c -o acquire_cb_insert.o `test -f 'datawizard/acquire_cb_insert.c' || echo '$(srcdir)/'`datawizard/acquire_cb_insert.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/acquire_cb_insert.Tpo $(DEPDIR)/acquire_cb_insert.Po
#	$(AM_V_CC)source='datawizard/acquire_cb_insert.c' object='acquire_cb_insert.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o acquire_cb_insert.o `test -f 'datawizard/acquire_cb_insert.c' || echo '$(srcdir)/'`datawizard/acquire_cb_insert.c

acquire_cb_insert.obj: datawizard/acquire_cb_insert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT acquire_cb_insert.obj -MD -MP -MF $(DEPDIR)/acquire_cb_insert.Tpo -c -o acquire_cb_insert.obj `if test -f 'datawizard/acquire_cb_insert.c'; then $(CYGPATH_W) 'datawizard/acquire_cb_insert.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/acquire_cb_insert.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/acquire_cb_insert.Tpo $(DEPDIR)/acquire_cb_insert.Po
#	$(AM_V_CC)source='datawizard/acquire_cb_insert.c' object='acquire_cb_insert.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o acquire_cb_insert.obj `if test -f 'datawizard/acquire_cb_insert.c'; then $(CYGPATH_W) 'datawizard/acquire_cb_insert.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/acquire_cb_insert.c'; fi`

acquire_release.o: datawizard/acquire_release.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT acquire_release.o -MD -MP -MF $(DEPDIR)/acquire_release.Tpo -c -o acquire_release.o `test -f 'datawizard/acquire_release.c' || echo '$(srcdir)/'`datawizard/acquire_release.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/acquire_release.Tpo $(DEPDIR)/acquire_release.Po
#	$(AM_V_CC)source='datawizard/acquire_release.c' object='acquire_release.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o acquire_release.o `test -f 'datawizard/acquire_release.c' || echo '$(srcdir)/'`datawizard/acquire_release.c

acquire_release.obj: datawizard/acquire_release.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT acquire_release.obj -MD -MP -MF $(DEPDIR)/acquire_release.Tpo -c -o acquire_release.obj `if test -f 'datawizard/acquire_release.c'; then $(CYGPATH_W) 'datawizard/acquire_release.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/acquire_release.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/acquire_release.Tpo $(DEPDIR)/acquire_release.Po
#	$(AM_V_CC)source='datawizard/acquire_release.c' object='acquire_release.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o acquire_release.obj `if test -f 'datawizard/acquire_release.c'; then $(CYGPATH_W) 'datawizard/acquire_release.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/acquire_release.c'; fi`

acquire_release_opencl.o: datawizard/acquire_release_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT acquire_release_opencl.o -MD -MP -MF $(DEPDIR)/acquire_release_opencl.Tpo -c -o acquire_release_opencl.o `test -f 'datawizard/acquire_release_opencl.c' || echo '$(srcdir)/'`datawizard/acquire_release_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/acquire_release_opencl.Tpo $(DEPDIR)/acquire_release_opencl.Po
#	$(AM_V_CC)source='datawizard/acquire_release_opencl.c' object='acquire_release_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o acquire_release_opencl.o `test -f 'datawizard/acquire_release_opencl.c' || echo '$(srcdir)/'`datawizard/acquire_release_opencl.c

acquire_release_opencl.obj: datawizard/acquire_release_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT acquire_release_opencl.obj -MD -MP -MF $(DEPDIR)/acquire_release_opencl.Tpo -c -o acquire_release_opencl.obj `if test -f 'datawizard/acquire_release_opencl.c'; then $(CYGPATH_W) 'datawizard/acquire_release_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/acquire_release_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/acquire_release_opencl.Tpo $(DEPDIR)/acquire_release_opencl.Po
#	$(AM_V_CC)source='datawizard/acquire_release_opencl.c' object='acquire_release_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o acquire_release_opencl.obj `if test -f 'datawizard/acquire_release_opencl.c'; then $(CYGPATH_W) 'datawizard/acquire_release_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/acquire_release_opencl.c'; fi`

acquire_release2.o: datawizard/acquire_release2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT acquire_release2.o -MD -MP -MF $(DEPDIR)/acquire_release2.Tpo -c -o acquire_release2.o `test -f 'datawizard/acquire_release2.c' || echo '$(srcdir)/'`datawizard/acquire_release2.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/acquire_release2.Tpo $(DEPDIR)/acquire_release2.Po
#	$(AM_V_CC)source='datawizard/acquire_release2.c' object='acquire_release2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o acquire_release2.o `test -f 'datawizard/acquire_release2.c' || echo '$(srcdir)/'`datawizard/acquire_release2.c

acquire_release2.obj: datawizard/acquire_release2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT acquire_release2.obj -MD -MP -MF $(DEPDIR)/acquire_release2.Tpo -c -o acquire_release2.obj `if test -f 'datawizard/acquire_release2.c'; then $(CYGPATH_W) 'datawizard/acquire_release2.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/acquire_release2.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/acquire_release2.Tpo $(DEPDIR)/acquire_release2.Po
#	$(AM_V_CC)source='datawizard/acquire_release2.c' object='acquire_release2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o acquire_release2.obj `if test -f 'datawizard/acquire_release2.c'; then $(CYGPATH_W) 'datawizard/acquire_release2.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/acquire_release2.c'; fi`

acquire_try.o: datawizard/acquire_try.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT acquire_try.o -MD -MP -MF $(DEPDIR)/acquire_try.Tpo -c -o acquire_try.o `test -f 'datawizard/acquire_try.c' || echo '$(srcdir)/'`datawizard/acquire_try.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/acquire_try.Tpo $(DEPDIR)/acquire_try.Po
#	$(AM_V_CC)source='datawizard/acquire_try.c' object='acquire_try.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o acquire_try.o `test -f 'datawizard/acquire_try.c' || echo '$(srcdir)/'`datawizard/acquire_try.c

acquire_try.obj: datawizard/acquire_try.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT acquire_try.obj -MD -MP -MF $(DEPDIR)/acquire_try.Tpo -c -o acquire_try.obj `if test -f 'datawizard/acquire_try.c'; then $(CYGPATH_W) 'datawizard/acquire_try.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/acquire_try.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/acquire_try.Tpo $(DEPDIR)/acquire_try.Po
#	$(AM_V_CC)source='datawizard/acquire_try.c' object='acquire_try.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o acquire_try.obj `if test -f 'datawizard/acquire_try.c'; then $(CYGPATH_W) 'datawizard/acquire_try.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/acquire_try.c'; fi`

allocate.o: datawizard/allocate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT allocate.o -MD -MP -MF $(DEPDIR)/allocate.Tpo -c -o allocate.o `test -f 'datawizard/allocate.c' || echo '$(srcdir)/'`datawizard/allocate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/allocate.Tpo $(DEPDIR)/allocate.Po
#	$(AM_V_CC)source='datawizard/allocate.c' object='allocate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o allocate.o `test -f 'datawizard/allocate.c' || echo '$(srcdir)/'`datawizard/allocate.c

allocate.obj: datawizard/allocate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT allocate.obj -MD -MP -MF $(DEPDIR)/allocate.Tpo -c -o allocate.obj `if test -f 'datawizard/allocate.c'; then $(CYGPATH_W) 'datawizard/allocate.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/allocate.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/allocate.Tpo $(DEPDIR)/allocate.Po
#	$(AM_V_CC)source='datawizard/allocate.c' object='allocate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o allocate.obj `if test -f 'datawizard/allocate.c'; then $(CYGPATH_W) 'datawizard/allocate.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/allocate.c'; fi`

bcsr.o: datawizard/bcsr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bcsr.o -MD -MP -MF $(DEPDIR)/bcsr.Tpo -c -o bcsr.o `test -f 'datawizard/bcsr.c' || echo '$(srcdir)/'`datawizard/bcsr.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bcsr.Tpo $(DEPDIR)/bcsr.Po
#	$(AM_V_CC)source='datawizard/bcsr.c' object='bcsr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bcsr.o `test -f 'datawizard/bcsr.c' || echo '$(srcdir)/'`datawizard/bcsr.c

bcsr.obj: datawizard/bcsr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bcsr.obj -MD -MP -MF $(DEPDIR)/bcsr.Tpo -c -o bcsr.obj `if test -f 'datawizard/bcsr.c'; then $(CYGPATH_W) 'datawizard/bcsr.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/bcsr.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bcsr.Tpo $(DEPDIR)/bcsr.Po
#	$(AM_V_CC)source='datawizard/bcsr.c' object='bcsr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bcsr.obj `if test -f 'datawizard/bcsr.c'; then $(CYGPATH_W) 'datawizard/bcsr.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/bcsr.c'; fi`

cache.o: datawizard/cache.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cache.o -MD -MP -MF $(DEPDIR)/cache.Tpo -c -o cache.o `test -f 'datawizard/cache.c' || echo '$(srcdir)/'`datawizard/cache.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cache.Tpo $(DEPDIR)/cache.Po
#	$(AM_V_CC)source='datawizard/cache.c' object='cache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cache.o `test -f 'datawizard/cache.c' || echo '$(srcdir)/'`datawizard/cache.c

cache.obj: datawizard/cache.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cache.obj -MD -MP -MF $(DEPDIR)/cache.Tpo -c -o cache.obj `if test -f 'datawizard/cache.c'; then $(CYGPATH_W) 'datawizard/cache.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/cache.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cache.Tpo $(DEPDIR)/cache.Po
#	$(AM_V_CC)source='datawizard/cache.c' object='cache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cache.obj `if test -f 'datawizard/cache.c'; then $(CYGPATH_W) 'datawizard/cache.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/cache.c'; fi`

commute.o: datawizard/commute.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT commute.o -MD -MP -MF $(DEPDIR)/commute.Tpo -c -o commute.o `test -f 'datawizard/commute.c' || echo '$(srcdir)/'`datawizard/commute.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/commute.Tpo $(DEPDIR)/commute.Po
#	$(AM_V_CC)source='datawizard/commute.c' object='commute.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o commute.o `test -f 'datawizard/commute.c' || echo '$(srcdir)/'`datawizard/commute.c

commute.obj: datawizard/commute.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT commute.obj -MD -MP -MF $(DEPDIR)/commute.Tpo -c -o commute.obj `if test -f 'datawizard/commute.c'; then $(CYGPATH_W) 'datawizard/commute.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/commute.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/commute.Tpo $(DEPDIR)/commute.Po
#	$(AM_V_CC)source='datawizard/commute.c' object='commute.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o commute.obj `if test -f 'datawizard/commute.c'; then $(CYGPATH_W) 'datawizard/commute.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/commute.c'; fi`

commute2.o: datawizard/commute2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT commute2.o -MD -MP -MF $(DEPDIR)/commute2.Tpo -c -o commute2.o `test -f 'datawizard/commute2.c' || echo '$(srcdir)/'`datawizard/commute2.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/commute2.Tpo $(DEPDIR)/commute2.Po
#	$(AM_V_CC)source='datawizard/commute2.c' object='commute2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o commute2.o `test -f 'datawizard/commute2.c' || echo '$(srcdir)/'`datawizard/commute2.c

commute2.obj: datawizard/commute2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT commute2.obj -MD -MP -MF $(DEPDIR)/commute2.Tpo -c -o commute2.obj `if test -f 'datawizard/commute2.c'; then $(CYGPATH_W) 'datawizard/commute2.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/commute2.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/commute2.Tpo $(DEPDIR)/commute2.Po
#	$(AM_V_CC)source='datawizard/commute2.c' object='commute2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o commute2.obj `if test -f 'datawizard/commute2.c'; then $(CYGPATH_W) 'datawizard/commute2.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/commute2.c'; fi`

copy.o: datawizard/copy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT copy.o -MD -MP -MF $(DEPDIR)/copy.Tpo -c -o copy.o `test -f 'datawizard/copy.c' || echo '$(srcdir)/'`datawizard/copy.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/copy.Tpo $(DEPDIR)/copy.Po
#	$(AM_V_CC)source='datawizard/copy.c' object='copy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o copy.o `test -f 'datawizard/copy.c' || echo '$(srcdir)/'`datawizard/copy.c

copy.obj: datawizard/copy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT copy.obj -MD -MP -MF $(DEPDIR)/copy.Tpo -c -o copy.obj `if test -f 'datawizard/copy.c'; then $(CYGPATH_W) 'datawizard/copy.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/copy.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/copy.Tpo $(DEPDIR)/copy.Po
#	$(AM_V_CC)source='datawizard/copy.c' object='copy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o copy.obj `if test -f 'datawizard/copy.c'; then $(CYGPATH_W) 'datawizard/copy.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/copy.c'; fi`

critical_section_with_void_interface.o: datawizard/critical_section_with_void_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT critical_section_with_void_interface.o -MD -MP -MF $(DEPDIR)/critical_section_with_void_interface.Tpo -c -o critical_section_with_void_interface.o `test -f 'datawizard/critical_section_with_void_interface.c' || echo '$(srcdir)/'`datawizard/critical_section_with_void_interface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/critical_section_with_void_interface.Tpo $(DEPDIR)/critical_section_with_void_interface.Po
#	$(AM_V_CC)source='datawizard/critical_section_with_void_interface.c' object='critical_section_with_void_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o critical_section_with_void_interface.o `test -f 'datawizard/critical_section_with_void_interface.c' || echo '$(srcdir)/'`datawizard/critical_section_with_void_interface.c

critical_section_with_void_interface.obj: datawizard/critical_section_with_void_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT critical_section_with_void_interface.obj -MD -MP -MF $(DEPDIR)/critical_section_with_void_interface.Tpo -c -o critical_section_with_void_interface.obj `if test -f 'datawizard/critical_section_with_void_interface.c'; then $(CYGPATH_W) 'datawizard/critical_section_with_void_interface.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/critical_section_with_void_interface.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/critical_section_with_void_interface.Tpo $(DEPDIR)/critical_section_with_void_interface.Po
#	$(AM_V_CC)source='datawizard/critical_section_with_void_interface.c' object='critical_section_with_void_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o critical_section_with_void_interface.obj `if test -f 'datawizard/critical_section_with_void_interface.c'; then $(CYGPATH_W) 'datawizard/critical_section_with_void_interface.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/critical_section_with_void_interface.c'; fi`

data_implicit_deps.o: datawizard/data_implicit_deps.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT data_implicit_deps.o -MD -MP -MF $(DEPDIR)/data_implicit_deps.Tpo -c -o data_implicit_deps.o `test -f 'datawizard/data_implicit_deps.c' || echo '$(srcdir)/'`datawizard/data_implicit_deps.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/data_implicit_deps.Tpo $(DEPDIR)/data_implicit_deps.Po
#	$(AM_V_CC)source='datawizard/data_implicit_deps.c' object='data_implicit_deps.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o data_implicit_deps.o `test -f 'datawizard/data_implicit_deps.c' || echo '$(srcdir)/'`datawizard/data_implicit_deps.c

data_implicit_deps.obj: datawizard/data_implicit_deps.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT data_implicit_deps.obj -MD -MP -MF $(DEPDIR)/data_implicit_deps.Tpo -c -o data_implicit_deps.obj `if test -f 'datawizard/data_implicit_deps.c'; then $(CYGPATH_W) 'datawizard/data_implicit_deps.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/data_implicit_deps.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/data_implicit_deps.Tpo $(DEPDIR)/data_implicit_deps.Po
#	$(AM_V_CC)source='datawizard/data_implicit_deps.c' object='data_implicit_deps.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o data_implicit_deps.obj `if test -f 'datawizard/data_implicit_deps.c'; then $(CYGPATH_W) 'datawizard/data_implicit_deps.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/data_implicit_deps.c'; fi`

data_invalidation.o: datawizard/data_invalidation.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT data_invalidation.o -MD -MP -MF $(DEPDIR)/data_invalidation.Tpo -c -o data_invalidation.o `test -f 'datawizard/data_invalidation.c' || echo '$(srcdir)/'`datawizard/data_invalidation.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/data_invalidation.Tpo $(DEPDIR)/data_invalidation.Po
#	$(AM_V_CC)source='datawizard/data_invalidation.c' object='data_invalidation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o data_invalidation.o `test -f 'datawizard/data_invalidation.c' || echo '$(srcdir)/'`datawizard/data_invalidation.c

data_invalidation.obj: datawizard/data_invalidation.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT data_invalidation.obj -MD -MP -MF $(DEPDIR)/data_invalidation.Tpo -c -o data_invalidation.obj `if test -f 'datawizard/data_invalidation.c'; then $(CYGPATH_W) 'datawizard/data_invalidation.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/data_invalidation.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/data_invalidation.Tpo $(DEPDIR)/data_invalidation.Po
#	$(AM_V_CC)source='datawizard/data_invalidation.c' object='data_invalidation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o data_invalidation.obj `if test -f 'datawizard/data_invalidation.c'; then $(CYGPATH_W) 'datawizard/data_invalidation.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/data_invalidation.c'; fi`

data_lookup.o: datawizard/data_lookup.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT data_lookup.o -MD -MP -MF $(DEPDIR)/data_lookup.Tpo -c -o data_lookup.o `test -f 'datawizard/data_lookup.c' || echo '$(srcdir)/'`datawizard/data_lookup.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/data_lookup.Tpo $(DEPDIR)/data_lookup.Po
#	$(AM_V_CC)source='datawizard/data_lookup.c' object='data_lookup.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o data_lookup.o `test -f 'datawizard/data_lookup.c' || echo '$(srcdir)/'`datawizard/data_lookup.c

data_lookup.obj: datawizard/data_lookup.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT data_lookup.obj -MD -MP -MF $(DEPDIR)/data_lookup.Tpo -c -o data_lookup.obj `if test -f 'datawizard/data_lookup.c'; then $(CYGPATH_W) 'datawizard/data_lookup.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/data_lookup.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/data_lookup.Tpo $(DEPDIR)/data_lookup.Po
#	$(AM_V_CC)source='datawizard/data_lookup.c' object='data_lookup.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o data_lookup.obj `if test -f 'datawizard/data_lookup.c'; then $(CYGPATH_W) 'datawizard/data_lookup.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/data_lookup.c'; fi`

deps.o: datawizard/deps.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT deps.o -MD -MP -MF $(DEPDIR)/deps.Tpo -c -o deps.o `test -f 'datawizard/deps.c' || echo '$(srcdir)/'`datawizard/deps.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/deps.Tpo $(DEPDIR)/deps.Po
#	$(AM_V_CC)source='datawizard/deps.c' object='deps.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o deps.o `test -f 'datawizard/deps.c' || echo '$(srcdir)/'`datawizard/deps.c

deps.obj: datawizard/deps.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT deps.obj -MD -MP -MF $(DEPDIR)/deps.Tpo -c -o deps.obj `if test -f 'datawizard/deps.c'; then $(CYGPATH_W) 'datawizard/deps.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/deps.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/deps.Tpo $(DEPDIR)/deps.Po
#	$(AM_V_CC)source='datawizard/deps.c' object='deps.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o deps.obj `if test -f 'datawizard/deps.c'; then $(CYGPATH_W) 'datawizard/deps.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/deps.c'; fi`

dining_philosophers.o: datawizard/dining_philosophers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dining_philosophers.o -MD -MP -MF $(DEPDIR)/dining_philosophers.Tpo -c -o dining_philosophers.o `test -f 'datawizard/dining_philosophers.c' || echo '$(srcdir)/'`datawizard/dining_philosophers.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dining_philosophers.Tpo $(DEPDIR)/dining_philosophers.Po
#	$(AM_V_CC)source='datawizard/dining_philosophers.c' object='dining_philosophers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dining_philosophers.o `test -f 'datawizard/dining_philosophers.c' || echo '$(srcdir)/'`datawizard/dining_philosophers.c

dining_philosophers.obj: datawizard/dining_philosophers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dining_philosophers.obj -MD -MP -MF $(DEPDIR)/dining_philosophers.Tpo -c -o dining_philosophers.obj `if test -f 'datawizard/dining_philosophers.c'; then $(CYGPATH_W) 'datawizard/dining_philosophers.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/dining_philosophers.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dining_philosophers.Tpo $(DEPDIR)/dining_philosophers.Po
#	$(AM_V_CC)source='datawizard/dining_philosophers.c' object='dining_philosophers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dining_philosophers.obj `if test -f 'datawizard/dining_philosophers.c'; then $(CYGPATH_W) 'datawizard/dining_philosophers.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/dining_philosophers.c'; fi`

double_parameter.o: datawizard/double_parameter.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT double_parameter.o -MD -MP -MF $(DEPDIR)/double_parameter.Tpo -c -o double_parameter.o `test -f 'datawizard/double_parameter.c' || echo '$(srcdir)/'`datawizard/double_parameter.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/double_parameter.Tpo $(DEPDIR)/double_parameter.Po
#	$(AM_V_CC)source='datawizard/double_parameter.c' object='double_parameter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o double_parameter.o `test -f 'datawizard/double_parameter.c' || echo '$(srcdir)/'`datawizard/double_parameter.c

double_parameter.obj: datawizard/double_parameter.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT double_parameter.obj -MD -MP -MF $(DEPDIR)/double_parameter.Tpo -c -o double_parameter.obj `if test -f 'datawizard/double_parameter.c'; then $(CYGPATH_W) 'datawizard/double_parameter.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/double_parameter.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/double_parameter.Tpo $(DEPDIR)/double_parameter.Po
#	$(AM_V_CC)source='datawizard/double_parameter.c' object='double_parameter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o double_parameter.obj `if test -f 'datawizard/double_parameter.c'; then $(CYGPATH_W) 'datawizard/double_parameter.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/double_parameter.c'; fi`

dsm_stress.o: datawizard/dsm_stress.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dsm_stress.o -MD -MP -MF $(DEPDIR)/dsm_stress.Tpo -c -o dsm_stress.o `test -f 'datawizard/dsm_stress.c' || echo '$(srcdir)/'`datawizard/dsm_stress.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsm_stress.Tpo $(DEPDIR)/dsm_stress.Po
#	$(AM_V_CC)source='datawizard/dsm_stress.c' object='dsm_stress.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dsm_stress.o `test -f 'datawizard/dsm_stress.c' || echo '$(srcdir)/'`datawizard/dsm_stress.c

dsm_stress.obj: datawizard/dsm_stress.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dsm_stress.obj -MD -MP -MF $(DEPDIR)/dsm_stress.Tpo -c -o dsm_stress.obj `if test -f 'datawizard/dsm_stress.c'; then $(CYGPATH_W) 'datawizard/dsm_stress.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/dsm_stress.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dsm_stress.Tpo $(DEPDIR)/dsm_stress.Po
#	$(AM_V_CC)source='datawizard/dsm_stress.c' object='dsm_stress.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dsm_stress.obj `if test -f 'datawizard/dsm_stress.c'; then $(CYGPATH_W) 'datawizard/dsm_stress.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/dsm_stress.c'; fi`

gpu_ptr_register.o: datawizard/gpu_ptr_register.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpu_ptr_register.o -MD -MP -MF $(DEPDIR)/gpu_ptr_register.Tpo -c -o gpu_ptr_register.o `test -f 'datawizard/gpu_ptr_register.c' || echo '$(srcdir)/'`datawizard/gpu_ptr_register.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/gpu_ptr_register.Tpo $(DEPDIR)/gpu_ptr_register.Po
#	$(AM_V_CC)source='datawizard/gpu_ptr_register.c' object='gpu_ptr_register.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpu_ptr_register.o `test -f 'datawizard/gpu_ptr_register.c' || echo '$(srcdir)/'`datawizard/gpu_ptr_register.c

gpu_ptr_register.obj: datawizard/gpu_ptr_register.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpu_ptr_register.obj -MD -MP -MF $(DEPDIR)/gpu_ptr_register.Tpo -c -o gpu_ptr_register.obj `if test -f 'datawizard/gpu_ptr_register.c'; then $(CYGPATH_W) 'datawizard/gpu_ptr_register.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/gpu_ptr_register.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gpu_ptr_register.Tpo $(DEPDIR)/gpu_ptr_register.Po
#	$(AM_V_CC)source='datawizard/gpu_ptr_register.c' object='gpu_ptr_register.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpu_ptr_register.obj `if test -f 'datawizard/gpu_ptr_register.c'; then $(CYGPATH_W) 'datawizard/gpu_ptr_register.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/gpu_ptr_register.c'; fi`

scal.o: datawizard/scal.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT scal.o -MD -MP -MF $(DEPDIR)/scal.Tpo -c -o scal.o `test -f 'datawizard/scal.c' || echo '$(srcdir)/'`datawizard/scal.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/scal.Tpo $(DEPDIR)/scal.Po
#	$(AM_V_CC)source='datawizard/scal.c' object='scal.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o scal.o `test -f 'datawizard/scal.c' || echo '$(srcdir)/'`datawizard/scal.c

scal.obj: datawizard/scal.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT scal.obj -MD -MP -MF $(DEPDIR)/scal.Tpo -c -o scal.obj `if test -f 'datawizard/scal.c'; then $(CYGPATH_W) 'datawizard/scal.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/scal.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/scal.Tpo $(DEPDIR)/scal.Po
#	$(AM_V_CC)source='datawizard/scal.c' object='scal.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o scal.obj `if test -f 'datawizard/scal.c'; then $(CYGPATH_W) 'datawizard/scal.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/scal.c'; fi`

gpu_register.o: datawizard/gpu_register.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpu_register.o -MD -MP -MF $(DEPDIR)/gpu_register.Tpo -c -o gpu_register.o `test -f 'datawizard/gpu_register.c' || echo '$(srcdir)/'`datawizard/gpu_register.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/gpu_register.Tpo $(DEPDIR)/gpu_register.Po
#	$(AM_V_CC)source='datawizard/gpu_register.c' object='gpu_register.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpu_register.o `test -f 'datawizard/gpu_register.c' || echo '$(srcdir)/'`datawizard/gpu_register.c

gpu_register.obj: datawizard/gpu_register.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpu_register.obj -MD -MP -MF $(DEPDIR)/gpu_register.Tpo -c -o gpu_register.obj `if test -f 'datawizard/gpu_register.c'; then $(CYGPATH_W) 'datawizard/gpu_register.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/gpu_register.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gpu_register.Tpo $(DEPDIR)/gpu_register.Po
#	$(AM_V_CC)source='datawizard/gpu_register.c' object='gpu_register.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpu_register.obj `if test -f 'datawizard/gpu_register.c'; then $(CYGPATH_W) 'datawizard/gpu_register.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/gpu_register.c'; fi`

handle_to_pointer.o: datawizard/handle_to_pointer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT handle_to_pointer.o -MD -MP -MF $(DEPDIR)/handle_to_pointer.Tpo -c -o handle_to_pointer.o `test -f 'datawizard/handle_to_pointer.c' || echo '$(srcdir)/'`datawizard/handle_to_pointer.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/handle_to_pointer.Tpo $(DEPDIR)/handle_to_pointer.Po
#	$(AM_V_CC)source='datawizard/handle_to_pointer.c' object='handle_to_pointer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o handle_to_pointer.o `test -f 'datawizard/handle_to_pointer.c' || echo '$(srcdir)/'`datawizard/handle_to_pointer.c

handle_to_pointer.obj: datawizard/handle_to_pointer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT handle_to_pointer.obj -MD -MP -MF $(DEPDIR)/handle_to_pointer.Tpo -c -o handle_to_pointer.obj `if test -f 'datawizard/handle_to_pointer.c'; then $(CYGPATH_W) 'datawizard/handle_to_pointer.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/handle_to_pointer.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/handle_to_pointer.Tpo $(DEPDIR)/handle_to_pointer.Po
#	$(AM_V_CC)source='datawizard/handle_to_pointer.c' object='handle_to_pointer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o handle_to_pointer.obj `if test -f 'datawizard/handle_to_pointer.c'; then $(CYGPATH_W) 'datawizard/handle_to_pointer.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/handle_to_pointer.c'; fi`

in_place_partition.o: datawizard/in_place_partition.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT in_place_partition.o -MD -MP -MF $(DEPDIR)/in_place_partition.Tpo -c -o in_place_partition.o `test -f 'datawizard/in_place_partition.c' || echo '$(srcdir)/'`datawizard/in_place_partition.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/in_place_partition.Tpo $(DEPDIR)/in_place_partition.Po
#	$(AM_V_CC)source='datawizard/in_place_partition.c' object='in_place_partition.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o in_place_partition.o `test -f 'datawizard/in_place_partition.c' || echo '$(srcdir)/'`datawizard/in_place_partition.c

in_place_partition.obj: datawizard/in_place_partition.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT in_place_partition.obj -MD -MP -MF $(DEPDIR)/in_place_partition.Tpo -c -o in_place_partition.obj `if test -f 'datawizard/in_place_partition.c'; then $(CYGPATH_W) 'datawizard/in_place_partition.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/in_place_partition.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/in_place_partition.Tpo $(DEPDIR)/in_place_partition.Po
#	$(AM_V_CC)source='datawizard/in_place_partition.c' object='in_place_partition.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o in_place_partition.obj `if test -f 'datawizard/in_place_partition.c'; then $(CYGPATH_W) 'datawizard/in_place_partition.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/in_place_partition.c'; fi`

increment_init.o: datawizard/increment_init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT increment_init.o -MD -MP -MF $(DEPDIR)/increment_init.Tpo -c -o increment_init.o `test -f 'datawizard/increment_init.c' || echo '$(srcdir)/'`datawizard/increment_init.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/increment_init.Tpo $(DEPDIR)/increment_init.Po
#	$(AM_V_CC)source='datawizard/increment_init.c' object='increment_init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o increment_init.o `test -f 'datawizard/increment_init.c' || echo '$(srcdir)/'`datawizard/increment_init.c

increment_init.obj: datawizard/increment_init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT increment_init.obj -MD -MP -MF $(DEPDIR)/increment_init.Tpo -c -o increment_init.obj `if test -f 'datawizard/increment_init.c'; then $(CYGPATH_W) 'datawizard/increment_init.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/increment_init.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/increment_init.Tpo $(DEPDIR)/increment_init.Po
#	$(AM_V_CC)source='datawizard/increment_init.c' object='increment_init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o increment_init.obj `if test -f 'datawizard/increment_init.c'; then $(CYGPATH_W) 'datawizard/increment_init.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/increment_init.c'; fi`

increment_redux.o: datawizard/increment_redux.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT increment_redux.o -MD -MP -MF $(DEPDIR)/increment_redux.Tpo -c -o increment_redux.o `test -f 'datawizard/increment_redux.c' || echo '$(srcdir)/'`datawizard/increment_redux.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/increment_redux.Tpo $(DEPDIR)/increment_redux.Po
#	$(AM_V_CC)source='datawizard/increment_redux.c' object='increment_redux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o increment_redux.o `test -f 'datawizard/increment_redux.c' || echo '$(srcdir)/'`datawizard/increment_redux.c

increment_redux.obj: datawizard/increment_redux.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT increment_redux.obj -MD -MP -MF $(DEPDIR)/increment_redux.Tpo -c -o increment_redux.obj `if test -f 'datawizard/increment_redux.c'; then $(CYGPATH_W) 'datawizard/increment_redux.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/increment_redux.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/increment_redux.Tpo $(DEPDIR)/increment_redux.Po
#	$(AM_V_CC)source='datawizard/increment_redux.c' object='increment_redux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o increment_redux.obj `if test -f 'datawizard/increment_redux.c'; then $(CYGPATH_W) 'datawizard/increment_redux.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/increment_redux.c'; fi`

increment_redux_lazy.o: datawizard/increment_redux_lazy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT increment_redux_lazy.o -MD -MP -MF $(DEPDIR)/increment_redux_lazy.Tpo -c -o increment_redux_lazy.o `test -f 'datawizard/increment_redux_lazy.c' || echo '$(srcdir)/'`datawizard/increment_redux_lazy.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/increment_redux_lazy.Tpo $(DEPDIR)/increment_redux_lazy.Po
#	$(AM_V_CC)source='datawizard/increment_redux_lazy.c' object='increment_redux_lazy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o increment_redux_lazy.o `test -f 'datawizard/increment_redux_lazy.c' || echo '$(srcdir)/'`datawizard/increment_redux_lazy.c

increment_redux_lazy.obj: datawizard/increment_redux_lazy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT increment_redux_lazy.obj -MD -MP -MF $(DEPDIR)/increment_redux_lazy.Tpo -c -o increment_redux_lazy.obj `if test -f 'datawizard/increment_redux_lazy.c'; then $(CYGPATH_W) 'datawizard/increment_redux_lazy.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/increment_redux_lazy.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/increment_redux_lazy.Tpo $(DEPDIR)/increment_redux_lazy.Po
#	$(AM_V_CC)source='datawizard/increment_redux_lazy.c' object='increment_redux_lazy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o increment_redux_lazy.obj `if test -f 'datawizard/increment_redux_lazy.c'; then $(CYGPATH_W) 'datawizard/increment_redux_lazy.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/increment_redux_lazy.c'; fi`

increment_redux_v2.o: datawizard/increment_redux_v2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT increment_redux_v2.o -MD -MP -MF $(DEPDIR)/increment_redux_v2.Tpo -c -o increment_redux_v2.o `test -f 'datawizard/increment_redux_v2.c' || echo '$(srcdir)/'`datawizard/increment_redux_v2.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/increment_redux_v2.Tpo $(DEPDIR)/increment_redux_v2.Po
#	$(AM_V_CC)source='datawizard/increment_redux_v2.c' object='increment_redux_v2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o increment_redux_v2.o `test -f 'datawizard/increment_redux_v2.c' || echo '$(srcdir)/'`datawizard/increment_redux_v2.c

increment_redux_v2.obj: datawizard/increment_redux_v2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT increment_redux_v2.obj -MD -MP -MF $(DEPDIR)/increment_redux_v2.Tpo -c -o increment_redux_v2.obj `if test -f 'datawizard/increment_redux_v2.c'; then $(CYGPATH_W) 'datawizard/increment_redux_v2.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/increment_redux_v2.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/increment_redux_v2.Tpo $(DEPDIR)/increment_redux_v2.Po
#	$(AM_V_CC)source='datawizard/increment_redux_v2.c' object='increment_redux_v2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o increment_redux_v2.obj `if test -f 'datawizard/increment_redux_v2.c'; then $(CYGPATH_W) 'datawizard/increment_redux_v2.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/increment_redux_v2.c'; fi`

test_interfaces.o: datawizard/interfaces/test_interfaces.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_interfaces.o -MD -MP -MF $(DEPDIR)/test_interfaces.Tpo -c -o test_interfaces.o `test -f 'datawizard/interfaces/test_interfaces.c' || echo '$(srcdir)/'`datawizard/interfaces/test_interfaces.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_interfaces.Tpo $(DEPDIR)/test_interfaces.Po
#	$(AM_V_CC)source='datawizard/interfaces/test_interfaces.c' object='test_interfaces.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_interfaces.o `test -f 'datawizard/interfaces/test_interfaces.c' || echo '$(srcdir)/'`datawizard/interfaces/test_interfaces.c

test_interfaces.obj: datawizard/interfaces/test_interfaces.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_interfaces.obj -MD -MP -MF $(DEPDIR)/test_interfaces.Tpo -c -o test_interfaces.obj `if test -f 'datawizard/interfaces/test_interfaces.c'; then $(CYGPATH_W) 'datawizard/interfaces/test_interfaces.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/test_interfaces.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_interfaces.Tpo $(DEPDIR)/test_interfaces.Po
#	$(AM_V_CC)source='datawizard/interfaces/test_interfaces.c' object='test_interfaces.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_interfaces.obj `if test -f 'datawizard/interfaces/test_interfaces.c'; then $(CYGPATH_W) 'datawizard/interfaces/test_interfaces.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/test_interfaces.c'; fi`

bcsr_interface.o: datawizard/interfaces/bcsr/bcsr_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bcsr_interface.o -MD -MP -MF $(DEPDIR)/bcsr_interface.Tpo -c -o bcsr_interface.o `test -f 'datawizard/interfaces/bcsr/bcsr_interface.c' || echo '$(srcdir)/'`datawizard/interfaces/bcsr/bcsr_interface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bcsr_interface.Tpo $(DEPDIR)/bcsr_interface.Po
#	$(AM_V_CC)source='datawizard/interfaces/bcsr/bcsr_interface.c' object='bcsr_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bcsr_interface.o `test -f 'datawizard/interfaces/bcsr/bcsr_interface.c' || echo '$(srcdir)/'`datawizard/interfaces/bcsr/bcsr_interface.c

bcsr_interface.obj: datawizard/interfaces/bcsr/bcsr_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bcsr_interface.obj -MD -MP -MF $(DEPDIR)/bcsr_interface.Tpo -c -o bcsr_interface.obj `if test -f 'datawizard/interfaces/bcsr/bcsr_interface.c'; then $(CYGPATH_W) 'datawizard/interfaces/bcsr/bcsr_interface.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/bcsr/bcsr_interface.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bcsr_interface.Tpo $(DEPDIR)/bcsr_interface.Po
#	$(AM_V_CC)source='datawizard/interfaces/bcsr/bcsr_interface.c' object='bcsr_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bcsr_interface.obj `if test -f 'datawizard/interfaces/bcsr/bcsr_interface.c'; then $(CYGPATH_W) 'datawizard/interfaces/bcsr/bcsr_interface.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/bcsr/bcsr_interface.c'; fi`

bcsr_opencl.o: datawizard/interfaces/bcsr/bcsr_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bcsr_opencl.o -MD -MP -MF $(DEPDIR)/bcsr_opencl.Tpo -c -o bcsr_opencl.o `test -f 'datawizard/interfaces/bcsr/bcsr_opencl.c' || echo '$(srcdir)/'`datawizard/interfaces/bcsr/bcsr_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bcsr_opencl.Tpo $(DEPDIR)/bcsr_opencl.Po
#	$(AM_V_CC)source='datawizard/interfaces/bcsr/bcsr_opencl.c' object='bcsr_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bcsr_opencl.o `test -f 'datawizard/interfaces/bcsr/bcsr_opencl.c' || echo '$(srcdir)/'`datawizard/interfaces/bcsr/bcsr_opencl.c

bcsr_opencl.obj: datawizard/interfaces/bcsr/bcsr_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bcsr_opencl.obj -MD -MP -MF $(DEPDIR)/bcsr_opencl.Tpo -c -o bcsr_opencl.obj `if test -f 'datawizard/interfaces/bcsr/bcsr_opencl.c'; then $(CYGPATH_W) 'datawizard/interfaces/bcsr/bcsr_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/bcsr/bcsr_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bcsr_opencl.Tpo $(DEPDIR)/bcsr_opencl.Po
#	$(AM_V_CC)source='datawizard/interfaces/bcsr/bcsr_opencl.c' object='bcsr_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bcsr_opencl.obj `if test -f 'datawizard/interfaces/bcsr/bcsr_opencl.c'; then $(CYGPATH_W) 'datawizard/interfaces/bcsr/bcsr_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/bcsr/bcsr_opencl.c'; fi`

block_interface.o: datawizard/interfaces/block/block_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT block_interface.o -MD -MP -MF $(DEPDIR)/block_interface.Tpo -c -o block_interface.o `test -f 'datawizard/interfaces/block/block_interface.c' || echo '$(srcdir)/'`datawizard/interfaces/block/block_interface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/block_interface.Tpo $(DEPDIR)/block_interface.Po
#	$(AM_V_CC)source='datawizard/interfaces/block/block_interface.c' object='block_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o block_interface.o `test -f 'datawizard/interfaces/block/block_interface.c' || echo '$(srcdir)/'`datawizard/interfaces/block/block_interface.c

block_interface.obj: datawizard/interfaces/block/block_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT block_interface.obj -MD -MP -MF $(DEPDIR)/block_interface.Tpo -c -o block_interface.obj `if test -f 'datawizard/interfaces/block/block_interface.c'; then $(CYGPATH_W) 'datawizard/interfaces/block/block_interface.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/block/block_interface.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/block_interface.Tpo $(DEPDIR)/block_interface.Po
#	$(AM_V_CC)source='datawizard/interfaces/block/block_interface.c' object='block_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o block_interface.obj `if test -f 'datawizard/interfaces/block/block_interface.c'; then $(CYGPATH_W) 'datawizard/interfaces/block/block_interface.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/block/block_interface.c'; fi`

block_opencl.o: datawizard/interfaces/block/block_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT block_opencl.o -MD -MP -MF $(DEPDIR)/block_opencl.Tpo -c -o block_opencl.o `test -f 'datawizard/interfaces/block/block_opencl.c' || echo '$(srcdir)/'`datawizard/interfaces/block/block_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/block_opencl.Tpo $(DEPDIR)/block_opencl.Po
#	$(AM_V_CC)source='datawizard/interfaces/block/block_opencl.c' object='block_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o block_opencl.o `test -f 'datawizard/interfaces/block/block_opencl.c' || echo '$(srcdir)/'`datawizard/interfaces/block/block_opencl.c

block_opencl.obj: datawizard/interfaces/block/block_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT block_opencl.obj -MD -MP -MF $(DEPDIR)/block_opencl.Tpo -c -o block_opencl.obj `if test -f 'datawizard/interfaces/block/block_opencl.c'; then $(CYGPATH_W) 'datawizard/interfaces/block/block_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/block/block_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/block_opencl.Tpo $(DEPDIR)/block_opencl.Po
#	$(AM_V_CC)source='datawizard/interfaces/block/block_opencl.c' object='block_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o block_opencl.obj `if test -f 'datawizard/interfaces/block/block_opencl.c'; then $(CYGPATH_W) 'datawizard/interfaces/block/block_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/block/block_opencl.c'; fi`

coo_interface.o: datawizard/interfaces/coo/coo_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT coo_interface.o -MD -MP -MF $(DEPDIR)/coo_interface.Tpo -c -o coo_interface.o `test -f 'datawizard/interfaces/coo/coo_interface.c' || echo '$(srcdir)/'`datawizard/interfaces/coo/coo_interface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/coo_interface.Tpo $(DEPDIR)/coo_interface.Po
#	$(AM_V_CC)source='datawizard/interfaces/coo/coo_interface.c' object='coo_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o coo_interface.o `test -f 'datawizard/interfaces/coo/coo_interface.c' || echo '$(srcdir)/'`datawizard/interfaces/coo/coo_interface.c

coo_interface.obj: datawizard/interfaces/coo/coo_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT coo_interface.obj -MD -MP -MF $(DEPDIR)/coo_interface.Tpo -c -o coo_interface.obj `if test -f 'datawizard/interfaces/coo/coo_interface.c'; then $(CYGPATH_W) 'datawizard/interfaces/coo/coo_interface.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/coo/coo_interface.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coo_interface.Tpo $(DEPDIR)/coo_interface.Po
#	$(AM_V_CC)source='datawizard/interfaces/coo/coo_interface.c' object='coo_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o coo_interface.obj `if test -f 'datawizard/interfaces/coo/coo_interface.c'; then $(CYGPATH_W) 'datawizard/interfaces/coo/coo_interface.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/coo/coo_interface.c'; fi`

coo_opencl.o: datawizard/interfaces/coo/coo_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT coo_opencl.o -MD -MP -MF $(DEPDIR)/coo_opencl.Tpo -c -o coo_opencl.o `test -f 'datawizard/interfaces/coo/coo_opencl.c' || echo '$(srcdir)/'`datawizard/interfaces/coo/coo_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/coo_opencl.Tpo $(DEPDIR)/coo_opencl.Po
#	$(AM_V_CC)source='datawizard/interfaces/coo/coo_opencl.c' object='coo_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o coo_opencl.o `test -f 'datawizard/interfaces/coo/coo_opencl.c' || echo '$(srcdir)/'`datawizard/interfaces/coo/coo_opencl.c

coo_opencl.obj: datawizard/interfaces/coo/coo_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT coo_opencl.obj -MD -MP -MF $(DEPDIR)/coo_opencl.Tpo -c -o coo_opencl.obj `if test -f 'datawizard/interfaces/coo/coo_opencl.c'; then $(CYGPATH_W) 'datawizard/interfaces/coo/coo_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/coo/coo_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coo_opencl.Tpo $(DEPDIR)/coo_opencl.Po
#	$(AM_V_CC)source='datawizard/interfaces/coo/coo_opencl.c' object='coo_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o coo_opencl.obj `if test -f 'datawizard/interfaces/coo/coo_opencl.c'; then $(CYGPATH_W) 'datawizard/interfaces/coo/coo_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/coo/coo_opencl.c'; fi`

copy_interfaces.o: datawizard/interfaces/copy_interfaces.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT copy_interfaces.o -MD -MP -MF $(DEPDIR)/copy_interfaces.Tpo -c -o copy_interfaces.o `test -f 'datawizard/interfaces/copy_interfaces.c' || echo '$(srcdir)/'`datawizard/interfaces/copy_interfaces.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/copy_interfaces.Tpo $(DEPDIR)/copy_interfaces.Po
#	$(AM_V_CC)source='datawizard/interfaces/copy_interfaces.c' object='copy_interfaces.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o copy_interfaces.o `test -f 'datawizard/interfaces/copy_interfaces.c' || echo '$(srcdir)/'`datawizard/interfaces/copy_interfaces.c

copy_interfaces.obj: datawizard/interfaces/copy_interfaces.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT copy_interfaces.obj -MD -MP -MF $(DEPDIR)/copy_interfaces.Tpo -c -o copy_interfaces.obj `if test -f 'datawizard/interfaces/copy_interfaces.c'; then $(CYGPATH_W) 'datawizard/interfaces/copy_interfaces.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/copy_interfaces.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/copy_interfaces.Tpo $(DEPDIR)/copy_interfaces.Po
#	$(AM_V_CC)source='datawizard/interfaces/copy_interfaces.c' object='copy_interfaces.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o copy_interfaces.obj `if test -f 'datawizard/interfaces/copy_interfaces.c'; then $(CYGPATH_W) 'datawizard/interfaces/copy_interfaces.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/copy_interfaces.c'; fi`

csr_interface.o: datawizard/interfaces/csr/csr_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT csr_interface.o -MD -MP -MF $(DEPDIR)/csr_interface.Tpo -c -o csr_interface.o `test -f 'datawizard/interfaces/csr/csr_interface.c' || echo '$(srcdir)/'`datawizard/interfaces/csr/csr_interface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/csr_interface.Tpo $(DEPDIR)/csr_interface.Po
#	$(AM_V_CC)source='datawizard/interfaces/csr/csr_interface.c' object='csr_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o csr_interface.o `test -f 'datawizard/interfaces/csr/csr_interface.c' || echo '$(srcdir)/'`datawizard/interfaces/csr/csr_interface.c

csr_interface.obj: datawizard/interfaces/csr/csr_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT csr_interface.obj -MD -MP -MF $(DEPDIR)/csr_interface.Tpo -c -o csr_interface.obj `if test -f 'datawizard/interfaces/csr/csr_interface.c'; then $(CYGPATH_W) 'datawizard/interfaces/csr/csr_interface.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/csr/csr_interface.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/csr_interface.Tpo $(DEPDIR)/csr_interface.Po
#	$(AM_V_CC)source='datawizard/interfaces/csr/csr_interface.c' object='csr_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o csr_interface.obj `if test -f 'datawizard/interfaces/csr/csr_interface.c'; then $(CYGPATH_W) 'datawizard/interfaces/csr/csr_interface.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/csr/csr_interface.c'; fi`

csr_opencl.o: datawizard/interfaces/csr/csr_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT csr_opencl.o -MD -MP -MF $(DEPDIR)/csr_opencl.Tpo -c -o csr_opencl.o `test -f 'datawizard/interfaces/csr/csr_opencl.c' || echo '$(srcdir)/'`datawizard/interfaces/csr/csr_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/csr_opencl.Tpo $(DEPDIR)/csr_opencl.Po
#	$(AM_V_CC)source='datawizard/interfaces/csr/csr_opencl.c' object='csr_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o csr_opencl.o `test -f 'datawizard/interfaces/csr/csr_opencl.c' || echo '$(srcdir)/'`datawizard/interfaces/csr/csr_opencl.c

csr_opencl.obj: datawizard/interfaces/csr/csr_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT csr_opencl.obj -MD -MP -MF $(DEPDIR)/csr_opencl.Tpo -c -o csr_opencl.obj `if test -f 'datawizard/interfaces/csr/csr_opencl.c'; then $(CYGPATH_W) 'datawizard/interfaces/csr/csr_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/csr/csr_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/csr_opencl.Tpo $(DEPDIR)/csr_opencl.Po
#	$(AM_V_CC)source='datawizard/interfaces/csr/csr_opencl.c' object='csr_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o csr_opencl.obj `if test -f 'datawizard/interfaces/csr/csr_opencl.c'; then $(CYGPATH_W) 'datawizard/interfaces/csr/csr_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/csr/csr_opencl.c'; fi`

matrix_interface.o: datawizard/interfaces/matrix/matrix_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT matrix_interface.o -MD -MP -MF $(DEPDIR)/matrix_interface.Tpo -c -o matrix_interface.o `test -f 'datawizard/interfaces/matrix/matrix_interface.c' || echo '$(srcdir)/'`datawizard/interfaces/matrix/matrix_interface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/matrix_interface.Tpo $(DEPDIR)/matrix_interface.Po
#	$(AM_V_CC)source='datawizard/interfaces/matrix/matrix_interface.c' object='matrix_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matrix_interface.o `test -f 'datawizard/interfaces/matrix/matrix_interface.c' || echo '$(srcdir)/'`datawizard/interfaces/matrix/matrix_interface.c

matrix_interface.obj: datawizard/interfaces/matrix/matrix_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT matrix_interface.obj -MD -MP -MF $(DEPDIR)/matrix_interface.Tpo -c -o matrix_interface.obj `if test -f 'datawizard/interfaces/matrix/matrix_interface.c'; then $(CYGPATH_W) 'datawizard/interfaces/matrix/matrix_interface.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/matrix/matrix_interface.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/matrix_interface.Tpo $(DEPDIR)/matrix_interface.Po
#	$(AM_V_CC)source='datawizard/interfaces/matrix/matrix_interface.c' object='matrix_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matrix_interface.obj `if test -f 'datawizard/interfaces/matrix/matrix_interface.c'; then $(CYGPATH_W) 'datawizard/interfaces/matrix/matrix_interface.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/matrix/matrix_interface.c'; fi`

matrix_opencl.o: datawizard/interfaces/matrix/matrix_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT matrix_opencl.o -MD -MP -MF $(DEPDIR)/matrix_opencl.Tpo -c -o matrix_opencl.o `test -f 'datawizard/interfaces/matrix/matrix_opencl.c' || echo '$(srcdir)/'`datawizard/interfaces/matrix/matrix_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/matrix_opencl.Tpo $(DEPDIR)/matrix_opencl.Po
#	$(AM_V_CC)source='datawizard/interfaces/matrix/matrix_opencl.c' object='matrix_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matrix_opencl.o `test -f 'datawizard/interfaces/matrix/matrix_opencl.c' || echo '$(srcdir)/'`datawizard/interfaces/matrix/matrix_opencl.c

matrix_opencl.obj: datawizard/interfaces/matrix/matrix_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT matrix_opencl.obj -MD -MP -MF $(DEPDIR)/matrix_opencl.Tpo -c -o matrix_opencl.obj `if test -f 'datawizard/interfaces/matrix/matrix_opencl.c'; then $(CYGPATH_W) 'datawizard/interfaces/matrix/matrix_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/matrix/matrix_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/matrix_opencl.Tpo $(DEPDIR)/matrix_opencl.Po
#	$(AM_V_CC)source='datawizard/interfaces/matrix/matrix_opencl.c' object='matrix_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matrix_opencl.obj `if test -f 'datawizard/interfaces/matrix/matrix_opencl.c'; then $(CYGPATH_W) 'datawizard/interfaces/matrix/matrix_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/matrix/matrix_opencl.c'; fi`

generic.o: datawizard/interfaces/multiformat/advanced/generic.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT generic.o -MD -MP -MF $(DEPDIR)/generic.Tpo -c -o generic.o `test -f 'datawizard/interfaces/multiformat/advanced/generic.c' || echo '$(srcdir)/'`datawizard/interfaces/multiformat/advanced/generic.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/generic.Tpo $(DEPDIR)/generic.Po
#	$(AM_V_CC)source='datawizard/interfaces/multiformat/advanced/generic.c' object='generic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o generic.o `test -f 'datawizard/interfaces/multiformat/advanced/generic.c' || echo '$(srcdir)/'`datawizard/interfaces/multiformat/advanced/generic.c

generic.obj: datawizard/interfaces/multiformat/advanced/generic.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT generic.obj -MD -MP -MF $(DEPDIR)/generic.Tpo -c -o generic.obj `if test -f 'datawizard/interfaces/multiformat/advanced/generic.c'; then $(CYGPATH_W) 'datawizard/interfaces/multiformat/advanced/generic.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/multiformat/advanced/generic.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/generic.Tpo $(DEPDIR)/generic.Po
#	$(AM_V_CC)source='datawizard/interfaces/multiformat/advanced/generic.c' object='generic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o generic.obj `if test -f 'datawizard/interfaces/multiformat/advanced/generic.c'; then $(CYGPATH_W) 'datawizard/interfaces/multiformat/advanced/generic.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/multiformat/advanced/generic.c'; fi`

multiformat_cuda_opencl.o: datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_cuda_opencl.o -MD -MP -MF $(DEPDIR)/multiformat_cuda_opencl.Tpo -c -o multiformat_cuda_opencl.o `test -f 'datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl.c' || echo '$(srcdir)/'`datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_cuda_opencl.Tpo $(DEPDIR)/multiformat_cuda_opencl.Po
#	$(AM_V_CC)source='datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl.c' object='multiformat_cuda_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_cuda_opencl.o `test -f 'datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl.c' || echo '$(srcdir)/'`datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl.c

multiformat_cuda_opencl.obj: datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_cuda_opencl.obj -MD -MP -MF $(DEPDIR)/multiformat_cuda_opencl.Tpo -c -o multiformat_cuda_opencl.obj `if test -f 'datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl.c'; then $(CYGPATH_W) 'datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_cuda_opencl.Tpo $(DEPDIR)/multiformat_cuda_opencl.Po
#	$(AM_V_CC)source='datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl.c' object='multiformat_cuda_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_cuda_opencl.obj `if test -f 'datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl.c'; then $(CYGPATH_W) 'datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl.c'; fi`

multiformat_data_release.o: datawizard/interfaces/multiformat/advanced/multiformat_data_release.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_data_release.o -MD -MP -MF $(DEPDIR)/multiformat_data_release.Tpo -c -o multiformat_data_release.o `test -f 'datawizard/interfaces/multiformat/advanced/multiformat_data_release.c' || echo '$(srcdir)/'`datawizard/interfaces/multiformat/advanced/multiformat_data_release.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_data_release.Tpo $(DEPDIR)/multiformat_data_release.Po
#	$(AM_V_CC)source='datawizard/interfaces/multiformat/advanced/multiformat_data_release.c' object='multiformat_data_release.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_data_release.o `test -f 'datawizard/interfaces/multiformat/advanced/multiformat_data_release.c' || echo '$(srcdir)/'`datawizard/interfaces/multiformat/advanced/multiformat_data_release.c

multiformat_data_release.obj: datawizard/interfaces/multiformat/advanced/multiformat_data_release.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_data_release.obj -MD -MP -MF $(DEPDIR)/multiformat_data_release.Tpo -c -o multiformat_data_release.obj `if test -f 'datawizard/interfaces/multiformat/advanced/multiformat_data_release.c'; then $(CYGPATH_W) 'datawizard/interfaces/multiformat/advanced/multiformat_data_release.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/multiformat/advanced/multiformat_data_release.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_data_release.Tpo $(DEPDIR)/multiformat_data_release.Po
#	$(AM_V_CC)source='datawizard/interfaces/multiformat/advanced/multiformat_data_release.c' object='multiformat_data_release.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_data_release.obj `if test -f 'datawizard/interfaces/multiformat/advanced/multiformat_data_release.c'; then $(CYGPATH_W) 'datawizard/interfaces/multiformat/advanced/multiformat_data_release.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/multiformat/advanced/multiformat_data_release.c'; fi`

multiformat_handle_conversion.o: datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_handle_conversion.o -MD -MP -MF $(DEPDIR)/multiformat_handle_conversion.Tpo -c -o multiformat_handle_conversion.o `test -f 'datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion.c' || echo '$(srcdir)/'`datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_handle_conversion.Tpo $(DEPDIR)/multiformat_handle_conversion.Po
#	$(AM_V_CC)source='datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion.c' object='multiformat_handle_conversion.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_handle_conversion.o `test -f 'datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion.c' || echo '$(srcdir)/'`datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion.c

multiformat_handle_conversion.obj: datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_handle_conversion.obj -MD -MP -MF $(DEPDIR)/multiformat_handle_conversion.Tpo -c -o multiformat_handle_conversion.obj `if test -f 'datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion.c'; then $(CYGPATH_W) 'datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_handle_conversion.Tpo $(DEPDIR)/multiformat_handle_conversion.Po
#	$(AM_V_CC)source='datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion.c' object='multiformat_handle_conversion.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_handle_conversion.obj `if test -f 'datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion.c'; then $(CYGPATH_W) 'datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion.c'; fi`

multiformat_worker.o: datawizard/interfaces/multiformat/advanced/multiformat_worker.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_worker.o -MD -MP -MF $(DEPDIR)/multiformat_worker.Tpo -c -o multiformat_worker.o `test -f 'datawizard/interfaces/multiformat/advanced/multiformat_worker.c' || echo '$(srcdir)/'`datawizard/interfaces/multiformat/advanced/multiformat_worker.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_worker.Tpo $(DEPDIR)/multiformat_worker.Po
#	$(AM_V_CC)source='datawizard/interfaces/multiformat/advanced/multiformat_worker.c' object='multiformat_worker.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_worker.o `test -f 'datawizard/interfaces/multiformat/advanced/multiformat_worker.c' || echo '$(srcdir)/'`datawizard/interfaces/multiformat/advanced/multiformat_worker.c

multiformat_worker.obj: datawizard/interfaces/multiformat/advanced/multiformat_worker.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_worker.obj -MD -MP -MF $(DEPDIR)/multiformat_worker.Tpo -c -o multiformat_worker.obj `if test -f 'datawizard/interfaces/multiformat/advanced/multiformat_worker.c'; then $(CYGPATH_W) 'datawizard/interfaces/multiformat/advanced/multiformat_worker.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/multiformat/advanced/multiformat_worker.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_worker.Tpo $(DEPDIR)/multiformat_worker.Po
#	$(AM_V_CC)source='datawizard/interfaces/multiformat/advanced/multiformat_worker.c' object='multiformat_worker.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_worker.obj `if test -f 'datawizard/interfaces/multiformat/advanced/multiformat_worker.c'; then $(CYGPATH_W) 'datawizard/interfaces/multiformat/advanced/multiformat_worker.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/multiformat/advanced/multiformat_worker.c'; fi`

same_handle.o: datawizard/interfaces/multiformat/advanced/same_handle.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT same_handle.o -MD -MP -MF $(DEPDIR)/same_handle.Tpo -c -o same_handle.o `test -f 'datawizard/interfaces/multiformat/advanced/same_handle.c' || echo '$(srcdir)/'`datawizard/interfaces/multiformat/advanced/same_handle.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/same_handle.Tpo $(DEPDIR)/same_handle.Po
#	$(AM_V_CC)source='datawizard/interfaces/multiformat/advanced/same_handle.c' object='same_handle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o same_handle.o `test -f 'datawizard/interfaces/multiformat/advanced/same_handle.c' || echo '$(srcdir)/'`datawizard/interfaces/multiformat/advanced/same_handle.c

same_handle.obj: datawizard/interfaces/multiformat/advanced/same_handle.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT same_handle.obj -MD -MP -MF $(DEPDIR)/same_handle.Tpo -c -o same_handle.obj `if test -f 'datawizard/interfaces/multiformat/advanced/same_handle.c'; then $(CYGPATH_W) 'datawizard/interfaces/multiformat/advanced/same_handle.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/multiformat/advanced/same_handle.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/same_handle.Tpo $(DEPDIR)/same_handle.Po
#	$(AM_V_CC)source='datawizard/interfaces/multiformat/advanced/same_handle.c' object='same_handle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o same_handle.obj `if test -f 'datawizard/interfaces/multiformat/advanced/same_handle.c'; then $(CYGPATH_W) 'datawizard/interfaces/multiformat/advanced/same_handle.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/multiformat/advanced/same_handle.c'; fi`

multiformat_interface.o: datawizard/interfaces/multiformat/multiformat_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_interface.o -MD -MP -MF $(DEPDIR)/multiformat_interface.Tpo -c -o multiformat_interface.o `test -f 'datawizard/interfaces/multiformat/multiformat_interface.c' || echo '$(srcdir)/'`datawizard/interfaces/multiformat/multiformat_interface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_interface.Tpo $(DEPDIR)/multiformat_interface.Po
#	$(AM_V_CC)source='datawizard/interfaces/multiformat/multiformat_interface.c' object='multiformat_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_interface.o `test -f 'datawizard/interfaces/multiformat/multiformat_interface.c' || echo '$(srcdir)/'`datawizard/interfaces/multiformat/multiformat_interface.c

multiformat_interface.obj: datawizard/interfaces/multiformat/multiformat_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_interface.obj -MD -MP -MF $(DEPDIR)/multiformat_interface.Tpo -c -o multiformat_interface.obj `if test -f 'datawizard/interfaces/multiformat/multiformat_interface.c'; then $(CYGPATH_W) 'datawizard/interfaces/multiformat/multiformat_interface.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/multiformat/multiformat_interface.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_interface.Tpo $(DEPDIR)/multiformat_interface.Po
#	$(AM_V_CC)source='datawizard/interfaces/multiformat/multiformat_interface.c' object='multiformat_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_interface.obj `if test -f 'datawizard/interfaces/multiformat/multiformat_interface.c'; then $(CYGPATH_W) 'datawizard/interfaces/multiformat/multiformat_interface.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/multiformat/multiformat_interface.c'; fi`

multiformat_conversion_codelets.o: datawizard/interfaces/multiformat/multiformat_conversion_codelets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_conversion_codelets.o -MD -MP -MF $(DEPDIR)/multiformat_conversion_codelets.Tpo -c -o multiformat_conversion_codelets.o `test -f 'datawizard/interfaces/multiformat/multiformat_conversion_codelets.c' || echo '$(srcdir)/'`datawizard/interfaces/multiformat/multiformat_conversion_codelets.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_conversion_codelets.Tpo $(DEPDIR)/multiformat_conversion_codelets.Po
#	$(AM_V_CC)source='datawizard/interfaces/multiformat/multiformat_conversion_codelets.c' object='multiformat_conversion_codelets.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_conversion_codelets.o `test -f 'datawizard/interfaces/multiformat/multiformat_conversion_codelets.c' || echo '$(srcdir)/'`datawizard/interfaces/multiformat/multiformat_conversion_codelets.c

multiformat_conversion_codelets.obj: datawizard/interfaces/multiformat/multiformat_conversion_codelets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_conversion_codelets.obj -MD -MP -MF $(DEPDIR)/multiformat_conversion_codelets.Tpo -c -o multiformat_conversion_codelets.obj `if test -f 'datawizard/interfaces/multiformat/multiformat_conversion_codelets.c'; then $(CYGPATH_W) 'datawizard/interfaces/multiformat/multiformat_conversion_codelets.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/multiformat/multiformat_conversion_codelets.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_conversion_codelets.Tpo $(DEPDIR)/multiformat_conversion_codelets.Po
#	$(AM_V_CC)source='datawizard/interfaces/multiformat/multiformat_conversion_codelets.c' object='multiformat_conversion_codelets.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_conversion_codelets.obj `if test -f 'datawizard/interfaces/multiformat/multiformat_conversion_codelets.c'; then $(CYGPATH_W) 'datawizard/interfaces/multiformat/multiformat_conversion_codelets.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/multiformat/multiformat_conversion_codelets.c'; fi`

multiformat_opencl.o: datawizard/interfaces/multiformat/multiformat_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_opencl.o -MD -MP -MF $(DEPDIR)/multiformat_opencl.Tpo -c -o multiformat_opencl.o `test -f 'datawizard/interfaces/multiformat/multiformat_opencl.c' || echo '$(srcdir)/'`datawizard/interfaces/multiformat/multiformat_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_opencl.Tpo $(DEPDIR)/multiformat_opencl.Po
#	$(AM_V_CC)source='datawizard/interfaces/multiformat/multiformat_opencl.c' object='multiformat_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_opencl.o `test -f 'datawizard/interfaces/multiformat/multiformat_opencl.c' || echo '$(srcdir)/'`datawizard/interfaces/multiformat/multiformat_opencl.c

multiformat_opencl.obj: datawizard/interfaces/multiformat/multiformat_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_opencl.obj -MD -MP -MF $(DEPDIR)/multiformat_opencl.Tpo -c -o multiformat_opencl.obj `if test -f 'datawizard/interfaces/multiformat/multiformat_opencl.c'; then $(CYGPATH_W) 'datawizard/interfaces/multiformat/multiformat_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/multiformat/multiformat_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_opencl.Tpo $(DEPDIR)/multiformat_opencl.Po
#	$(AM_V_CC)source='datawizard/interfaces/multiformat/multiformat_opencl.c' object='multiformat_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_opencl.obj `if test -f 'datawizard/interfaces/multiformat/multiformat_opencl.c'; then $(CYGPATH_W) 'datawizard/interfaces/multiformat/multiformat_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/multiformat/multiformat_opencl.c'; fi`

multiformat_conversion_codelets_opencl.o: datawizard/interfaces/multiformat/multiformat_conversion_codelets_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_conversion_codelets_opencl.o -MD -MP -MF $(DEPDIR)/multiformat_conversion_codelets_opencl.Tpo -c -o multiformat_conversion_codelets_opencl.o `test -f 'datawizard/interfaces/multiformat/multiformat_conversion_codelets_opencl.c' || echo '$(srcdir)/'`datawizard/interfaces/multiformat/multiformat_conversion_codelets_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_conversion_codelets_opencl.Tpo $(DEPDIR)/multiformat_conversion_codelets_opencl.Po
#	$(AM_V_CC)source='datawizard/interfaces/multiformat/multiformat_conversion_codelets_opencl.c' object='multiformat_conversion_codelets_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_conversion_codelets_opencl.o `test -f 'datawizard/interfaces/multiformat/multiformat_conversion_codelets_opencl.c' || echo '$(srcdir)/'`datawizard/interfaces/multiformat/multiformat_conversion_codelets_opencl.c

multiformat_conversion_codelets_opencl.obj: datawizard/interfaces/multiformat/multiformat_conversion_codelets_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_conversion_codelets_opencl.obj -MD -MP -MF $(DEPDIR)/multiformat_conversion_codelets_opencl.Tpo -c -o multiformat_conversion_codelets_opencl.obj `if test -f 'datawizard/interfaces/multiformat/multiformat_conversion_codelets_opencl.c'; then $(CYGPATH_W) 'datawizard/interfaces/multiformat/multiformat_conversion_codelets_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/multiformat/multiformat_conversion_codelets_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_conversion_codelets_opencl.Tpo $(DEPDIR)/multiformat_conversion_codelets_opencl.Po
#	$(AM_V_CC)source='datawizard/interfaces/multiformat/multiformat_conversion_codelets_opencl.c' object='multiformat_conversion_codelets_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_conversion_codelets_opencl.obj `if test -f 'datawizard/interfaces/multiformat/multiformat_conversion_codelets_opencl.c'; then $(CYGPATH_W) 'datawizard/interfaces/multiformat/multiformat_conversion_codelets_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/multiformat/multiformat_conversion_codelets_opencl.c'; fi`

variable_interface.o: datawizard/interfaces/variable/variable_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT variable_interface.o -MD -MP -MF $(DEPDIR)/variable_interface.Tpo -c -o variable_interface.o `test -f 'datawizard/interfaces/variable/variable_interface.c' || echo '$(srcdir)/'`datawizard/interfaces/variable/variable_interface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/variable_interface.Tpo $(DEPDIR)/variable_interface.Po
#	$(AM_V_CC)source='datawizard/interfaces/variable/variable_interface.c' object='variable_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o variable_interface.o `test -f 'datawizard/interfaces/variable/variable_interface.c' || echo '$(srcdir)/'`datawizard/interfaces/variable/variable_interface.c

variable_interface.obj: datawizard/interfaces/variable/variable_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT variable_interface.obj -MD -MP -MF $(DEPDIR)/variable_interface.Tpo -c -o variable_interface.obj `if test -f 'datawizard/interfaces/variable/variable_interface.c'; then $(CYGPATH_W) 'datawizard/interfaces/variable/variable_interface.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/variable/variable_interface.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/variable_interface.Tpo $(DEPDIR)/variable_interface.Po
#	$(AM_V_CC)source='datawizard/interfaces/variable/variable_interface.c' object='variable_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o variable_interface.obj `if test -f 'datawizard/interfaces/variable/variable_interface.c'; then $(CYGPATH_W) 'datawizard/interfaces/variable/variable_interface.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/variable/variable_interface.c'; fi`

variable_opencl.o: datawizard/interfaces/variable/variable_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT variable_opencl.o -MD -MP -MF $(DEPDIR)/variable_opencl.Tpo -c -o variable_opencl.o `test -f 'datawizard/interfaces/variable/variable_opencl.c' || echo '$(srcdir)/'`datawizard/interfaces/variable/variable_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/variable_opencl.Tpo $(DEPDIR)/variable_opencl.Po
#	$(AM_V_CC)source='datawizard/interfaces/variable/variable_opencl.c' object='variable_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o variable_opencl.o `test -f 'datawizard/interfaces/variable/variable_opencl.c' || echo '$(srcdir)/'`datawizard/interfaces/variable/variable_opencl.c

variable_opencl.obj: datawizard/interfaces/variable/variable_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT variable_opencl.obj -MD -MP -MF $(DEPDIR)/variable_opencl.Tpo -c -o variable_opencl.obj `if test -f 'datawizard/interfaces/variable/variable_opencl.c'; then $(CYGPATH_W) 'datawizard/interfaces/variable/variable_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/variable/variable_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/variable_opencl.Tpo $(DEPDIR)/variable_opencl.Po
#	$(AM_V_CC)source='datawizard/interfaces/variable/variable_opencl.c' object='variable_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o variable_opencl.obj `if test -f 'datawizard/interfaces/variable/variable_opencl.c'; then $(CYGPATH_W) 'datawizard/interfaces/variable/variable_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/variable/variable_opencl.c'; fi`

vector_interface.o: datawizard/interfaces/vector/vector_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vector_interface.o -MD -MP -MF $(DEPDIR)/vector_interface.Tpo -c -o vector_interface.o `test -f 'datawizard/interfaces/vector/vector_interface.c' || echo '$(srcdir)/'`datawizard/interfaces/vector/vector_interface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/vector_interface.Tpo $(DEPDIR)/vector_interface.Po
#	$(AM_V_CC)source='datawizard/interfaces/vector/vector_interface.c' object='vector_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vector_interface.o `test -f 'datawizard/interfaces/vector/vector_interface.c' || echo '$(srcdir)/'`datawizard/interfaces/vector/vector_interface.c

vector_interface.obj: datawizard/interfaces/vector/vector_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vector_interface.obj -MD -MP -MF $(DEPDIR)/vector_interface.Tpo -c -o vector_interface.obj `if test -f 'datawizard/interfaces/vector/vector_interface.c'; then $(CYGPATH_W) 'datawizard/interfaces/vector/vector_interface.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/vector/vector_interface.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/vector_interface.Tpo $(DEPDIR)/vector_interface.Po
#	$(AM_V_CC)source='datawizard/interfaces/vector/vector_interface.c' object='vector_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vector_interface.obj `if test -f 'datawizard/interfaces/vector/vector_interface.c'; then $(CYGPATH_W) 'datawizard/interfaces/vector/vector_interface.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/vector/vector_interface.c'; fi`

vector_opencl.o: datawizard/interfaces/vector/vector_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vector_opencl.o -MD -MP -MF $(DEPDIR)/vector_opencl.Tpo -c -o vector_opencl.o `test -f 'datawizard/interfaces/vector/vector_opencl.c' || echo '$(srcdir)/'`datawizard/interfaces/vector/vector_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/vector_opencl.Tpo $(DEPDIR)/vector_opencl.Po
#	$(AM_V_CC)source='datawizard/interfaces/vector/vector_opencl.c' object='vector_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vector_opencl.o `test -f 'datawizard/interfaces/vector/vector_opencl.c' || echo '$(srcdir)/'`datawizard/interfaces/vector/vector_opencl.c

vector_opencl.obj: datawizard/interfaces/vector/vector_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vector_opencl.obj -MD -MP -MF $(DEPDIR)/vector_opencl.Tpo -c -o vector_opencl.obj `if test -f 'datawizard/interfaces/vector/vector_opencl.c'; then $(CYGPATH_W) 'datawizard/interfaces/vector/vector_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/vector/vector_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/vector_opencl.Tpo $(DEPDIR)/vector_opencl.Po
#	$(AM_V_CC)source='datawizard/interfaces/vector/vector_opencl.c' object='vector_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vector_opencl.obj `if test -f 'datawizard/interfaces/vector/vector_opencl.c'; then $(CYGPATH_W) 'datawizard/interfaces/vector/vector_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/vector/vector_opencl.c'; fi`

void_interface.o: datawizard/interfaces/void/void_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT void_interface.o -MD -MP -MF $(DEPDIR)/void_interface.Tpo -c -o void_interface.o `test -f 'datawizard/interfaces/void/void_interface.c' || echo '$(srcdir)/'`datawizard/interfaces/void/void_interface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/void_interface.Tpo $(DEPDIR)/void_interface.Po
#	$(AM_V_CC)source='datawizard/interfaces/void/void_interface.c' object='void_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o void_interface.o `test -f 'datawizard/interfaces/void/void_interface.c' || echo '$(srcdir)/'`datawizard/interfaces/void/void_interface.c

void_interface.obj: datawizard/interfaces/void/void_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT void_interface.obj -MD -MP -MF $(DEPDIR)/void_interface.Tpo -c -o void_interface.obj `if test -f 'datawizard/interfaces/void/void_interface.c'; then $(CYGPATH_W) 'datawizard/interfaces/void/void_interface.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/void/void_interface.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/void_interface.Tpo $(DEPDIR)/void_interface.Po
#	$(AM_V_CC)source='datawizard/interfaces/void/void_interface.c' object='void_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o void_interface.obj `if test -f 'datawizard/interfaces/void/void_interface.c'; then $(CYGPATH_W) 'datawizard/interfaces/void/void_interface.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/interfaces/void/void_interface.c'; fi`

invalidate_pending_requests.o: datawizard/invalidate_pending_requests.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT invalidate_pending_requests.o -MD -MP -MF $(DEPDIR)/invalidate_pending_requests.Tpo -c -o invalidate_pending_requests.o `test -f 'datawizard/invalidate_pending_requests.c' || echo '$(srcdir)/'`datawizard/invalidate_pending_requests.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/invalidate_pending_requests.Tpo $(DEPDIR)/invalidate_pending_requests.Po
#	$(AM_V_CC)source='datawizard/invalidate_pending_requests.c' object='invalidate_pending_requests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o invalidate_pending_requests.o `test -f 'datawizard/invalidate_pending_requests.c' || echo '$(srcdir)/'`datawizard/invalidate_pending_requests.c

invalidate_pending_requests.obj: datawizard/invalidate_pending_requests.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT invalidate_pending_requests.obj -MD -MP -MF $(DEPDIR)/invalidate_pending_requests.Tpo -c -o invalidate_pending_requests.obj `if test -f 'datawizard/invalidate_pending_requests.c'; then $(CYGPATH_W) 'datawizard/invalidate_pending_requests.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/invalidate_pending_requests.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/invalidate_pending_requests.Tpo $(DEPDIR)/invalidate_pending_requests.Po
#	$(AM_V_CC)source='datawizard/invalidate_pending_requests.c' object='invalidate_pending_requests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o invalidate_pending_requests.obj `if test -f 'datawizard/invalidate_pending_requests.c'; then $(CYGPATH_W) 'datawizard/invalidate_pending_requests.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/invalidate_pending_requests.c'; fi`

lazy_allocation.o: datawizard/lazy_allocation.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lazy_allocation.o -MD -MP -MF $(DEPDIR)/lazy_allocation.Tpo -c -o lazy_allocation.o `test -f 'datawizard/lazy_allocation.c' || echo '$(srcdir)/'`datawizard/lazy_allocation.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/lazy_allocation.Tpo $(DEPDIR)/lazy_allocation.Po
#	$(AM_V_CC)source='datawizard/lazy_allocation.c' object='lazy_allocation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lazy_allocation.o `test -f 'datawizard/lazy_allocation.c' || echo '$(srcdir)/'`datawizard/lazy_allocation.c

lazy_allocation.obj: datawizard/lazy_allocation.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lazy_allocation.obj -MD -MP -MF $(DEPDIR)/lazy_allocation.Tpo -c -o lazy_allocation.obj `if test -f 'datawizard/lazy_allocation.c'; then $(CYGPATH_W) 'datawizard/lazy_allocation.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/lazy_allocation.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lazy_allocation.Tpo $(DEPDIR)/lazy_allocation.Po
#	$(AM_V_CC)source='datawizard/lazy_allocation.c' object='lazy_allocation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lazy_allocation.obj `if test -f 'datawizard/lazy_allocation.c'; then $(CYGPATH_W) 'datawizard/lazy_allocation.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/lazy_allocation.c'; fi`

lazy_unregister.o: datawizard/lazy_unregister.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lazy_unregister.o -MD -MP -MF $(DEPDIR)/lazy_unregister.Tpo -c -o lazy_unregister.o `test -f 'datawizard/lazy_unregister.c' || echo '$(srcdir)/'`datawizard/lazy_unregister.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/lazy_unregister.Tpo $(DEPDIR)/lazy_unregister.Po
#	$(AM_V_CC)source='datawizard/lazy_unregister.c' object='lazy_unregister.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lazy_unregister.o `test -f 'datawizard/lazy_unregister.c' || echo '$(srcdir)/'`datawizard/lazy_unregister.c

lazy_unregister.obj: datawizard/lazy_unregister.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lazy_unregister.obj -MD -MP -MF $(DEPDIR)/lazy_unregister.Tpo -c -o lazy_unregister.obj `if test -f 'datawizard/lazy_unregister.c'; then $(CYGPATH_W) 'datawizard/lazy_unregister.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/lazy_unregister.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lazy_unregister.Tpo $(DEPDIR)/lazy_unregister.Po
#	$(AM_V_CC)source='datawizard/lazy_unregister.c' object='lazy_unregister.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lazy_unregister.obj `if test -f 'datawizard/lazy_unregister.c'; then $(CYGPATH_W) 'datawizard/lazy_unregister.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/lazy_unregister.c'; fi`

locality.o: datawizard/locality.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT locality.o -MD -MP -MF $(DEPDIR)/locality.Tpo -c -o locality.o `test -f 'datawizard/locality.c' || echo '$(srcdir)/'`datawizard/locality.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/locality.Tpo $(DEPDIR)/locality.Po
#	$(AM_V_CC)source='datawizard/locality.c' object='locality.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o locality.o `test -f 'datawizard/locality.c' || echo '$(srcdir)/'`datawizard/locality.c

locality.obj: datawizard/locality.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT locality.obj -MD -MP -MF $(DEPDIR)/locality.Tpo -c -o locality.obj `if test -f 'datawizard/locality.c'; then $(CYGPATH_W) 'datawizard/locality.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/locality.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/locality.Tpo $(DEPDIR)/locality.Po
#	$(AM_V_CC)source='datawizard/locality.c' object='locality.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o locality.obj `if test -f 'datawizard/locality.c'; then $(CYGPATH_W) 'datawizard/locality.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/locality.c'; fi`

manual_reduction.o: datawizard/manual_reduction.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT manual_reduction.o -MD -MP -MF $(DEPDIR)/manual_reduction.Tpo -c -o manual_reduction.o `test -f 'datawizard/manual_reduction.c' || echo '$(srcdir)/'`datawizard/manual_reduction.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/manual_reduction.Tpo $(DEPDIR)/manual_reduction.Po
#	$(AM_V_CC)source='datawizard/manual_reduction.c' object='manual_reduction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o manual_reduction.o `test -f 'datawizard/manual_reduction.c' || echo '$(srcdir)/'`datawizard/manual_reduction.c

manual_reduction.obj: datawizard/manual_reduction.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT manual_reduction.obj -MD -MP -MF $(DEPDIR)/manual_reduction.Tpo -c -o manual_reduction.obj `if test -f 'datawizard/manual_reduction.c'; then $(CYGPATH_W) 'datawizard/manual_reduction.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/manual_reduction.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/manual_reduction.Tpo $(DEPDIR)/manual_reduction.Po
#	$(AM_V_CC)source='datawizard/manual_reduction.c' object='manual_reduction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o manual_reduction.obj `if test -f 'datawizard/manual_reduction.c'; then $(CYGPATH_W) 'datawizard/manual_reduction.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/manual_reduction.c'; fi`

mpi_like.o: datawizard/mpi_like.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mpi_like.o -MD -MP -MF $(DEPDIR)/mpi_like.Tpo -c -o mpi_like.o `test -f 'datawizard/mpi_like.c' || echo '$(srcdir)/'`datawizard/mpi_like.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mpi_like.Tpo $(DEPDIR)/mpi_like.Po
#	$(AM_V_CC)source='datawizard/mpi_like.c' object='mpi_like.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mpi_like.o `test -f 'datawizard/mpi_like.c' || echo '$(srcdir)/'`datawizard/mpi_like.c

mpi_like.obj: datawizard/mpi_like.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mpi_like.obj -MD -MP -MF $(DEPDIR)/mpi_like.Tpo -c -o mpi_like.obj `if test -f 'datawizard/mpi_like.c'; then $(CYGPATH_W) 'datawizard/mpi_like.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/mpi_like.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mpi_like.Tpo $(DEPDIR)/mpi_like.Po
#	$(AM_V_CC)source='datawizard/mpi_like.c' object='mpi_like.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mpi_like.obj `if test -f 'datawizard/mpi_like.c'; then $(CYGPATH_W) 'datawizard/mpi_like.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/mpi_like.c'; fi`

opencl_codelet_unsigned_inc.o: datawizard/opencl_codelet_unsigned_inc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opencl_codelet_unsigned_inc.o -MD -MP -MF $(DEPDIR)/opencl_codelet_unsigned_inc.Tpo -c -o opencl_codelet_unsigned_inc.o `test -f 'datawizard/opencl_codelet_unsigned_inc.c' || echo '$(srcdir)/'`datawizard/opencl_codelet_unsigned_inc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/opencl_codelet_unsigned_inc.Tpo $(DEPDIR)/opencl_codelet_unsigned_inc.Po
#	$(AM_V_CC)source='datawizard/opencl_codelet_unsigned_inc.c' object='opencl_codelet_unsigned_inc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opencl_codelet_unsigned_inc.o `test -f 'datawizard/opencl_codelet_unsigned_inc.c' || echo '$(srcdir)/'`datawizard/opencl_codelet_unsigned_inc.c

opencl_codelet_unsigned_inc.obj: datawizard/opencl_codelet_unsigned_inc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opencl_codelet_unsigned_inc.obj -MD -MP -MF $(DEPDIR)/opencl_codelet_unsigned_inc.Tpo -c -o opencl_codelet_unsigned_inc.obj `if test -f 'datawizard/opencl_codelet_unsigned_inc.c'; then $(CYGPATH_W) 'datawizard/opencl_codelet_unsigned_inc.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/opencl_codelet_unsigned_inc.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/opencl_codelet_unsigned_inc.Tpo $(DEPDIR)/opencl_codelet_unsigned_inc.Po
#	$(AM_V_CC)source='datawizard/opencl_codelet_unsigned_inc.c' object='opencl_codelet_unsigned_inc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opencl_codelet_unsigned_inc.obj `if test -f 'datawizard/opencl_codelet_unsigned_inc.c'; then $(CYGPATH_W) 'datawizard/opencl_codelet_unsigned_inc.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/opencl_codelet_unsigned_inc.c'; fi`

mpi_like_async.o: datawizard/mpi_like_async.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mpi_like_async.o -MD -MP -MF $(DEPDIR)/mpi_like_async.Tpo -c -o mpi_like_async.o `test -f 'datawizard/mpi_like_async.c' || echo '$(srcdir)/'`datawizard/mpi_like_async.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mpi_like_async.Tpo $(DEPDIR)/mpi_like_async.Po
#	$(AM_V_CC)source='datawizard/mpi_like_async.c' object='mpi_like_async.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mpi_like_async.o `test -f 'datawizard/mpi_like_async.c' || echo '$(srcdir)/'`datawizard/mpi_like_async.c

mpi_like_async.obj: datawizard/mpi_like_async.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mpi_like_async.obj -MD -MP -MF $(DEPDIR)/mpi_like_async.Tpo -c -o mpi_like_async.obj `if test -f 'datawizard/mpi_like_async.c'; then $(CYGPATH_W) 'datawizard/mpi_like_async.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/mpi_like_async.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mpi_like_async.Tpo $(DEPDIR)/mpi_like_async.Po
#	$(AM_V_CC)source='datawizard/mpi_like_async.c' object='mpi_like_async.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mpi_like_async.obj `if test -f 'datawizard/mpi_like_async.c'; then $(CYGPATH_W) 'datawizard/mpi_like_async.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/mpi_like_async.c'; fi`

no_unregister.o: datawizard/no_unregister.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT no_unregister.o -MD -MP -MF $(DEPDIR)/no_unregister.Tpo -c -o no_unregister.o `test -f 'datawizard/no_unregister.c' || echo '$(srcdir)/'`datawizard/no_unregister.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/no_unregister.Tpo $(DEPDIR)/no_unregister.Po
#	$(AM_V_CC)source='datawizard/no_unregister.c' object='no_unregister.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o no_unregister.o `test -f 'datawizard/no_unregister.c' || echo '$(srcdir)/'`datawizard/no_unregister.c

no_unregister.obj: datawizard/no_unregister.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT no_unregister.obj -MD -MP -MF $(DEPDIR)/no_unregister.Tpo -c -o no_unregister.obj `if test -f 'datawizard/no_unregister.c'; then $(CYGPATH_W) 'datawizard/no_unregister.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/no_unregister.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/no_unregister.Tpo $(DEPDIR)/no_unregister.Po
#	$(AM_V_CC)source='datawizard/no_unregister.c' object='no_unregister.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o no_unregister.obj `if test -f 'datawizard/no_unregister.c'; then $(CYGPATH_W) 'datawizard/no_unregister.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/no_unregister.c'; fi`

noreclaim.o: datawizard/noreclaim.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT noreclaim.o -MD -MP -MF $(DEPDIR)/noreclaim.Tpo -c -o noreclaim.o `test -f 'datawizard/noreclaim.c' || echo '$(srcdir)/'`datawizard/noreclaim.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/noreclaim.Tpo $(DEPDIR)/noreclaim.Po
#	$(AM_V_CC)source='datawizard/noreclaim.c' object='noreclaim.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o noreclaim.o `test -f 'datawizard/noreclaim.c' || echo '$(srcdir)/'`datawizard/noreclaim.c

noreclaim.obj: datawizard/noreclaim.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT noreclaim.obj -MD -MP -MF $(DEPDIR)/noreclaim.Tpo -c -o noreclaim.obj `if test -f 'datawizard/noreclaim.c'; then $(CYGPATH_W) 'datawizard/noreclaim.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/noreclaim.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/noreclaim.Tpo $(DEPDIR)/noreclaim.Po
#	$(AM_V_CC)source='datawizard/noreclaim.c' object='noreclaim.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o noreclaim.obj `if test -f 'datawizard/noreclaim.c'; then $(CYGPATH_W) 'datawizard/noreclaim.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/noreclaim.c'; fi`

nowhere.o: datawizard/nowhere.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT nowhere.o -MD -MP -MF $(DEPDIR)/nowhere.Tpo -c -o nowhere.o `test -f 'datawizard/nowhere.c' || echo '$(srcdir)/'`datawizard/nowhere.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/nowhere.Tpo $(DEPDIR)/nowhere.Po
#	$(AM_V_CC)source='datawizard/nowhere.c' object='nowhere.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o nowhere.o `test -f 'datawizard/nowhere.c' || echo '$(srcdir)/'`datawizard/nowhere.c

nowhere.obj: datawizard/nowhere.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT nowhere.obj -MD -MP -MF $(DEPDIR)/nowhere.Tpo -c -o nowhere.obj `if test -f 'datawizard/nowhere.c'; then $(CYGPATH_W) 'datawizard/nowhere.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/nowhere.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nowhere.Tpo $(DEPDIR)/nowhere.Po
#	$(AM_V_CC)source='datawizard/nowhere.c' object='nowhere.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o nowhere.obj `if test -f 'datawizard/nowhere.c'; then $(CYGPATH_W) 'datawizard/nowhere.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/nowhere.c'; fi`

numa_overflow.o: datawizard/numa_overflow.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT numa_overflow.o -MD -MP -MF $(DEPDIR)/numa_overflow.Tpo -c -o numa_overflow.o `test -f 'datawizard/numa_overflow.c' || echo '$(srcdir)/'`datawizard/numa_overflow.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/numa_overflow.Tpo $(DEPDIR)/numa_overflow.Po
#	$(AM_V_CC)source='datawizard/numa_overflow.c' object='numa_overflow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o numa_overflow.o `test -f 'datawizard/numa_overflow.c' || echo '$(srcdir)/'`datawizard/numa_overflow.c

numa_overflow.obj: datawizard/numa_overflow.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT numa_overflow.obj -MD -MP -MF $(DEPDIR)/numa_overflow.Tpo -c -o numa_overflow.obj `if test -f 'datawizard/numa_overflow.c'; then $(CYGPATH_W) 'datawizard/numa_overflow.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/numa_overflow.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/numa_overflow.Tpo $(DEPDIR)/numa_overflow.Po
#	$(AM_V_CC)source='datawizard/numa_overflow.c' object='numa_overflow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o numa_overflow.obj `if test -f 'datawizard/numa_overflow.c'; then $(CYGPATH_W) 'datawizard/numa_overflow.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/numa_overflow.c'; fi`

partition_dep.o: datawizard/partition_dep.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT partition_dep.o -MD -MP -MF $(DEPDIR)/partition_dep.Tpo -c -o partition_dep.o `test -f 'datawizard/partition_dep.c' || echo '$(srcdir)/'`datawizard/partition_dep.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/partition_dep.Tpo $(DEPDIR)/partition_dep.Po
#	$(AM_V_CC)source='datawizard/partition_dep.c' object='partition_dep.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o partition_dep.o `test -f 'datawizard/partition_dep.c' || echo '$(srcdir)/'`datawizard/partition_dep.c

partition_dep.obj: datawizard/partition_dep.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT partition_dep.obj -MD -MP -MF $(DEPDIR)/partition_dep.Tpo -c -o partition_dep.obj `if test -f 'datawizard/partition_dep.c'; then $(CYGPATH_W) 'datawizard/partition_dep.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/partition_dep.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/partition_dep.Tpo $(DEPDIR)/partition_dep.Po
#	$(AM_V_CC)source='datawizard/partition_dep.c' object='partition_dep.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o partition_dep.obj `if test -f 'datawizard/partition_dep.c'; then $(CYGPATH_W) 'datawizard/partition_dep.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/partition_dep.c'; fi`

partition_init.o: datawizard/partition_init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT partition_init.o -MD -MP -MF $(DEPDIR)/partition_init.Tpo -c -o partition_init.o `test -f 'datawizard/partition_init.c' || echo '$(srcdir)/'`datawizard/partition_init.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/partition_init.Tpo $(DEPDIR)/partition_init.Po
#	$(AM_V_CC)source='datawizard/partition_init.c' object='partition_init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o partition_init.o `test -f 'datawizard/partition_init.c' || echo '$(srcdir)/'`datawizard/partition_init.c

partition_init.obj: datawizard/partition_init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT partition_init.obj -MD -MP -MF $(DEPDIR)/partition_init.Tpo -c -o partition_init.obj `if test -f 'datawizard/partition_init.c'; then $(CYGPATH_W) 'datawizard/partition_init.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/partition_init.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/partition_init.Tpo $(DEPDIR)/partition_init.Po
#	$(AM_V_CC)source='datawizard/partition_init.c' object='partition_init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o partition_init.obj `if test -f 'datawizard/partition_init.c'; then $(CYGPATH_W) 'datawizard/partition_init.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/partition_init.c'; fi`

partition_lazy.o: datawizard/partition_lazy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT partition_lazy.o -MD -MP -MF $(DEPDIR)/partition_lazy.Tpo -c -o partition_lazy.o `test -f 'datawizard/partition_lazy.c' || echo '$(srcdir)/'`datawizard/partition_lazy.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/partition_lazy.Tpo $(DEPDIR)/partition_lazy.Po
#	$(AM_V_CC)source='datawizard/partition_lazy.c' object='partition_lazy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o partition_lazy.o `test -f 'datawizard/partition_lazy.c' || echo '$(srcdir)/'`datawizard/partition_lazy.c

partition_lazy.obj: datawizard/partition_lazy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT partition_lazy.obj -MD -MP -MF $(DEPDIR)/partition_lazy.Tpo -c -o partition_lazy.obj `if test -f 'datawizard/partition_lazy.c'; then $(CYGPATH_W) 'datawizard/partition_lazy.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/partition_lazy.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/partition_lazy.Tpo $(DEPDIR)/partition_lazy.Po
#	$(AM_V_CC)source='datawizard/partition_lazy.c' object='partition_lazy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o partition_lazy.obj `if test -f 'datawizard/partition_lazy.c'; then $(CYGPATH_W) 'datawizard/partition_lazy.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/partition_lazy.c'; fi`

partitioned_acquire.o: datawizard/partitioned_acquire.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT partitioned_acquire.o -MD -MP -MF $(DEPDIR)/partitioned_acquire.Tpo -c -o partitioned_acquire.o `test -f 'datawizard/partitioned_acquire.c' || echo '$(srcdir)/'`datawizard/partitioned_acquire.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/partitioned_acquire.Tpo $(DEPDIR)/partitioned_acquire.Po
#	$(AM_V_CC)source='datawizard/partitioned_acquire.c' object='partitioned_acquire.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o partitioned_acquire.o `test -f 'datawizard/partitioned_acquire.c' || echo '$(srcdir)/'`datawizard/partitioned_acquire.c

partitioned_acquire.obj: datawizard/partitioned_acquire.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT partitioned_acquire.obj -MD -MP -MF $(DEPDIR)/partitioned_acquire.Tpo -c -o partitioned_acquire.obj `if test -f 'datawizard/partitioned_acquire.c'; then $(CYGPATH_W) 'datawizard/partitioned_acquire.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/partitioned_acquire.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/partitioned_acquire.Tpo $(DEPDIR)/partitioned_acquire.Po
#	$(AM_V_CC)source='datawizard/partitioned_acquire.c' object='partitioned_acquire.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o partitioned_acquire.obj `if test -f 'datawizard/partitioned_acquire.c'; then $(CYGPATH_W) 'datawizard/partitioned_acquire.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/partitioned_acquire.c'; fi`

partitioned_initialization.o: datawizard/partitioned_initialization.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT partitioned_initialization.o -MD -MP -MF $(DEPDIR)/partitioned_initialization.Tpo -c -o partitioned_initialization.o `test -f 'datawizard/partitioned_initialization.c' || echo '$(srcdir)/'`datawizard/partitioned_initialization.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/partitioned_initialization.Tpo $(DEPDIR)/partitioned_initialization.Po
#	$(AM_V_CC)source='datawizard/partitioned_initialization.c' object='partitioned_initialization.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o partitioned_initialization.o `test -f 'datawizard/partitioned_initialization.c' || echo '$(srcdir)/'`datawizard/partitioned_initialization.c

partitioned_initialization.obj: datawizard/partitioned_initialization.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT partitioned_initialization.obj -MD -MP -MF $(DEPDIR)/partitioned_initialization.Tpo -c -o partitioned_initialization.obj `if test -f 'datawizard/partitioned_initialization.c'; then $(CYGPATH_W) 'datawizard/partitioned_initialization.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/partitioned_initialization.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/partitioned_initialization.Tpo $(DEPDIR)/partitioned_initialization.Po
#	$(AM_V_CC)source='datawizard/partitioned_initialization.c' object='partitioned_initialization.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o partitioned_initialization.obj `if test -f 'datawizard/partitioned_initialization.c'; then $(CYGPATH_W) 'datawizard/partitioned_initialization.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/partitioned_initialization.c'; fi`

readers_and_writers.o: datawizard/readers_and_writers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT readers_and_writers.o -MD -MP -MF $(DEPDIR)/readers_and_writers.Tpo -c -o readers_and_writers.o `test -f 'datawizard/readers_and_writers.c' || echo '$(srcdir)/'`datawizard/readers_and_writers.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/readers_and_writers.Tpo $(DEPDIR)/readers_and_writers.Po
#	$(AM_V_CC)source='datawizard/readers_and_writers.c' object='readers_and_writers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o readers_and_writers.o `test -f 'datawizard/readers_and_writers.c' || echo '$(srcdir)/'`datawizard/readers_and_writers.c

readers_and_writers.obj: datawizard/readers_and_writers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT readers_and_writers.obj -MD -MP -MF $(DEPDIR)/readers_and_writers.Tpo -c -o readers_and_writers.obj `if test -f 'datawizard/readers_and_writers.c'; then $(CYGPATH_W) 'datawizard/readers_and_writers.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/readers_and_writers.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/readers_and_writers.Tpo $(DEPDIR)/readers_and_writers.Po
#	$(AM_V_CC)source='datawizard/readers_and_writers.c' object='readers_and_writers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o readers_and_writers.obj `if test -f 'datawizard/readers_and_writers.c'; then $(CYGPATH_W) 'datawizard/readers_and_writers.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/readers_and_writers.c'; fi`

readonly.o: datawizard/readonly.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT readonly.o -MD -MP -MF $(DEPDIR)/readonly.Tpo -c -o readonly.o `test -f 'datawizard/readonly.c' || echo '$(srcdir)/'`datawizard/readonly.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/readonly.Tpo $(DEPDIR)/readonly.Po
#	$(AM_V_CC)source='datawizard/readonly.c' object='readonly.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o readonly.o `test -f 'datawizard/readonly.c' || echo '$(srcdir)/'`datawizard/readonly.c

readonly.obj: datawizard/readonly.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT readonly.obj -MD -MP -MF $(DEPDIR)/readonly.Tpo -c -o readonly.obj `if test -f 'datawizard/readonly.c'; then $(CYGPATH_W) 'datawizard/readonly.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/readonly.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/readonly.Tpo $(DEPDIR)/readonly.Po
#	$(AM_V_CC)source='datawizard/readonly.c' object='readonly.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o readonly.obj `if test -f 'datawizard/readonly.c'; then $(CYGPATH_W) 'datawizard/readonly.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/readonly.c'; fi`

reclaim.o: datawizard/reclaim.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT reclaim.o -MD -MP -MF $(DEPDIR)/reclaim.Tpo -c -o reclaim.o `test -f 'datawizard/reclaim.c' || echo '$(srcdir)/'`datawizard/reclaim.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/reclaim.Tpo $(DEPDIR)/reclaim.Po
#	$(AM_V_CC)source='datawizard/reclaim.c' object='reclaim.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o reclaim.o `test -f 'datawizard/reclaim.c' || echo '$(srcdir)/'`datawizard/reclaim.c

reclaim.obj: datawizard/reclaim.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT reclaim.obj -MD -MP -MF $(DEPDIR)/reclaim.Tpo -c -o reclaim.obj `if test -f 'datawizard/reclaim.c'; then $(CYGPATH_W) 'datawizard/reclaim.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/reclaim.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/reclaim.Tpo $(DEPDIR)/reclaim.Po
#	$(AM_V_CC)source='datawizard/reclaim.c' object='reclaim.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o reclaim.obj `if test -f 'datawizard/reclaim.c'; then $(CYGPATH_W) 'datawizard/reclaim.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/reclaim.c'; fi`

redux_acquire.o: datawizard/redux_acquire.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT redux_acquire.o -MD -MP -MF $(DEPDIR)/redux_acquire.Tpo -c -o redux_acquire.o `test -f 'datawizard/redux_acquire.c' || echo '$(srcdir)/'`datawizard/redux_acquire.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/redux_acquire.Tpo $(DEPDIR)/redux_acquire.Po
#	$(AM_V_CC)source='datawizard/redux_acquire.c' object='redux_acquire.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o redux_acquire.o `test -f 'datawizard/redux_acquire.c' || echo '$(srcdir)/'`datawizard/redux_acquire.c

redux_acquire.obj: datawizard/redux_acquire.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT redux_acquire.obj -MD -MP -MF $(DEPDIR)/redux_acquire.Tpo -c -o redux_acquire.obj `if test -f 'datawizard/redux_acquire.c'; then $(CYGPATH_W) 'datawizard/redux_acquire.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/redux_acquire.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/redux_acquire.Tpo $(DEPDIR)/redux_acquire.Po
#	$(AM_V_CC)source='datawizard/redux_acquire.c' object='redux_acquire.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o redux_acquire.obj `if test -f 'datawizard/redux_acquire.c'; then $(CYGPATH_W) 'datawizard/redux_acquire.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/redux_acquire.c'; fi`

scratch.o: datawizard/scratch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT scratch.o -MD -MP -MF $(DEPDIR)/scratch.Tpo -c -o scratch.o `test -f 'datawizard/scratch.c' || echo '$(srcdir)/'`datawizard/scratch.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/scratch.Tpo $(DEPDIR)/scratch.Po
#	$(AM_V_CC)source='datawizard/scratch.c' object='scratch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o scratch.o `test -f 'datawizard/scratch.c' || echo '$(srcdir)/'`datawizard/scratch.c

scratch.obj: datawizard/scratch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT scratch.obj -MD -MP -MF $(DEPDIR)/scratch.Tpo -c -o scratch.obj `if test -f 'datawizard/scratch.c'; then $(CYGPATH_W) 'datawizard/scratch.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/scratch.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/scratch.Tpo $(DEPDIR)/scratch.Po
#	$(AM_V_CC)source='datawizard/scratch.c' object='scratch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o scratch.obj `if test -f 'datawizard/scratch.c'; then $(CYGPATH_W) 'datawizard/scratch.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/scratch.c'; fi`

scratch_opencl.o: datawizard/scratch_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT scratch_opencl.o -MD -MP -MF $(DEPDIR)/scratch_opencl.Tpo -c -o scratch_opencl.o `test -f 'datawizard/scratch_opencl.c' || echo '$(srcdir)/'`datawizard/scratch_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/scratch_opencl.Tpo $(DEPDIR)/scratch_opencl.Po
#	$(AM_V_CC)source='datawizard/scratch_opencl.c' object='scratch_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o scratch_opencl.o `test -f 'datawizard/scratch_opencl.c' || echo '$(srcdir)/'`datawizard/scratch_opencl.c

scratch_opencl.obj: datawizard/scratch_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT scratch_opencl.obj -MD -MP -MF $(DEPDIR)/scratch_opencl.Tpo -c -o scratch_opencl.obj `if test -f 'datawizard/scratch_opencl.c'; then $(CYGPATH_W) 'datawizard/scratch_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/scratch_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/scratch_opencl.Tpo $(DEPDIR)/scratch_opencl.Po
#	$(AM_V_CC)source='datawizard/scratch_opencl.c' object='scratch_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o scratch_opencl.obj `if test -f 'datawizard/scratch_opencl.c'; then $(CYGPATH_W) 'datawizard/scratch_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/scratch_opencl.c'; fi`

scratch_reuse.o: datawizard/scratch_reuse.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT scratch_reuse.o -MD -MP -MF $(DEPDIR)/scratch_reuse.Tpo -c -o scratch_reuse.o `test -f 'datawizard/scratch_reuse.c' || echo '$(srcdir)/'`datawizard/scratch_reuse.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/scratch_reuse.Tpo $(DEPDIR)/scratch_reuse.Po
#	$(AM_V_CC)source='datawizard/scratch_reuse.c' object='scratch_reuse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o scratch_reuse.o `test -f 'datawizard/scratch_reuse.c' || echo '$(srcdir)/'`datawizard/scratch_reuse.c

scratch_reuse.obj: datawizard/scratch_reuse.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT scratch_reuse.obj -MD -MP -MF $(DEPDIR)/scratch_reuse.Tpo -c -o scratch_reuse.obj `if test -f 'datawizard/scratch_reuse.c'; then $(CYGPATH_W) 'datawizard/scratch_reuse.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/scratch_reuse.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/scratch_reuse.Tpo $(DEPDIR)/scratch_reuse.Po
#	$(AM_V_CC)source='datawizard/scratch_reuse.c' object='scratch_reuse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o scratch_reuse.obj `if test -f 'datawizard/scratch_reuse.c'; then $(CYGPATH_W) 'datawizard/scratch_reuse.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/scratch_reuse.c'; fi`

simgrid-locality.o: datawizard/simgrid-locality.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT simgrid-locality.o -MD -MP -MF $(DEPDIR)/simgrid-locality.Tpo -c -o simgrid-locality.o `test -f 'datawizard/simgrid-locality.c' || echo '$(srcdir)/'`datawizard/simgrid-locality.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/simgrid-locality.Tpo $(DEPDIR)/simgrid-locality.Po
#	$(AM_V_CC)source='datawizard/simgrid-locality.c' object='simgrid-locality.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o simgrid-locality.o `test -f 'datawizard/simgrid-locality.c' || echo '$(srcdir)/'`datawizard/simgrid-locality.c

simgrid-locality.obj: datawizard/simgrid-locality.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT simgrid-locality.obj -MD -MP -MF $(DEPDIR)/simgrid-locality.Tpo -c -o simgrid-locality.obj `if test -f 'datawizard/simgrid-locality.c'; then $(CYGPATH_W) 'datawizard/simgrid-locality.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/simgrid-locality.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simgrid-locality.Tpo $(DEPDIR)/simgrid-locality.Po
#	$(AM_V_CC)source='datawizard/simgrid-locality.c' object='simgrid-locality.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o simgrid-locality.obj `if test -f 'datawizard/simgrid-locality.c'; then $(CYGPATH_W) 'datawizard/simgrid-locality.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/simgrid-locality.c'; fi`

specific_node.o: datawizard/specific_node.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT specific_node.o -MD -MP -MF $(DEPDIR)/specific_node.Tpo -c -o specific_node.o `test -f 'datawizard/specific_node.c' || echo '$(srcdir)/'`datawizard/specific_node.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/specific_node.Tpo $(DEPDIR)/specific_node.Po
#	$(AM_V_CC)source='datawizard/specific_node.c' object='specific_node.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o specific_node.o `test -f 'datawizard/specific_node.c' || echo '$(srcdir)/'`datawizard/specific_node.c

specific_node.obj: datawizard/specific_node.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT specific_node.obj -MD -MP -MF $(DEPDIR)/specific_node.Tpo -c -o specific_node.obj `if test -f 'datawizard/specific_node.c'; then $(CYGPATH_W) 'datawizard/specific_node.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/specific_node.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/specific_node.Tpo $(DEPDIR)/specific_node.Po
#	$(AM_V_CC)source='datawizard/specific_node.c' object='specific_node.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o specific_node.obj `if test -f 'datawizard/specific_node.c'; then $(CYGPATH_W) 'datawizard/specific_node.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/specific_node.c'; fi`

sync_and_notify_data.o: datawizard/sync_and_notify_data.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sync_and_notify_data.o -MD -MP -MF $(DEPDIR)/sync_and_notify_data.Tpo -c -o sync_and_notify_data.o `test -f 'datawizard/sync_and_notify_data.c' || echo '$(srcdir)/'`datawizard/sync_and_notify_data.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sync_and_notify_data.Tpo $(DEPDIR)/sync_and_notify_data.Po
#	$(AM_V_CC)source='datawizard/sync_and_notify_data.c' object='sync_and_notify_data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sync_and_notify_data.o `test -f 'datawizard/sync_and_notify_data.c' || echo '$(srcdir)/'`datawizard/sync_and_notify_data.c

sync_and_notify_data.obj: datawizard/sync_and_notify_data.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sync_and_notify_data.obj -MD -MP -MF $(DEPDIR)/sync_and_notify_data.Tpo -c -o sync_and_notify_data.obj `if test -f 'datawizard/sync_and_notify_data.c'; then $(CYGPATH_W) 'datawizard/sync_and_notify_data.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/sync_and_notify_data.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sync_and_notify_data.Tpo $(DEPDIR)/sync_and_notify_data.Po
#	$(AM_V_CC)source='datawizard/sync_and_notify_data.c' object='sync_and_notify_data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sync_and_notify_data.obj `if test -f 'datawizard/sync_and_notify_data.c'; then $(CYGPATH_W) 'datawizard/sync_and_notify_data.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/sync_and_notify_data.c'; fi`

sync_and_notify_data_opencl.o: datawizard/sync_and_notify_data_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sync_and_notify_data_opencl.o -MD -MP -MF $(DEPDIR)/sync_and_notify_data_opencl.Tpo -c -o sync_and_notify_data_opencl.o `test -f 'datawizard/sync_and_notify_data_opencl.c' || echo '$(srcdir)/'`datawizard/sync_and_notify_data_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sync_and_notify_data_opencl.Tpo $(DEPDIR)/sync_and_notify_data_opencl.Po
#	$(AM_V_CC)source='datawizard/sync_and_notify_data_opencl.c' object='sync_and_notify_data_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sync_and_notify_data_opencl.o `test -f 'datawizard/sync_and_notify_data_opencl.c' || echo '$(srcdir)/'`datawizard/sync_and_notify_data_opencl.c

sync_and_notify_data_opencl.obj: datawizard/sync_and_notify_data_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sync_and_notify_data_opencl.obj -MD -MP -MF $(DEPDIR)/sync_and_notify_data_opencl.Tpo -c -o sync_and_notify_data_opencl.obj `if test -f 'datawizard/sync_and_notify_data_opencl.c'; then $(CYGPATH_W) 'datawizard/sync_and_notify_data_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/sync_and_notify_data_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sync_and_notify_data_opencl.Tpo $(DEPDIR)/sync_and_notify_data_opencl.Po
#	$(AM_V_CC)source='datawizard/sync_and_notify_data_opencl.c' object='sync_and_notify_data_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sync_and_notify_data_opencl.obj `if test -f 'datawizard/sync_and_notify_data_opencl.c'; then $(CYGPATH_W) 'datawizard/sync_and_notify_data_opencl.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/sync_and_notify_data_opencl.c'; fi`

sync_and_notify_data_implicit.o: datawizard/sync_and_notify_data_implicit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sync_and_notify_data_implicit.o -MD -MP -MF $(DEPDIR)/sync_and_notify_data_implicit.Tpo -c -o sync_and_notify_data_implicit.o `test -f 'datawizard/sync_and_notify_data_implicit.c' || echo '$(srcdir)/'`datawizard/sync_and_notify_data_implicit.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sync_and_notify_data_implicit.Tpo $(DEPDIR)/sync_and_notify_data_implicit.Po
#	$(AM_V_CC)source='datawizard/sync_and_notify_data_implicit.c' object='sync_and_notify_data_implicit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sync_and_notify_data_implicit.o `test -f 'datawizard/sync_and_notify_data_implicit.c' || echo '$(srcdir)/'`datawizard/sync_and_notify_data_implicit.c

sync_and_notify_data_implicit.obj: datawizard/sync_and_notify_data_implicit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sync_and_notify_data_implicit.obj -MD -MP -MF $(DEPDIR)/sync_and_notify_data_implicit.Tpo -c -o sync_and_notify_data_implicit.obj `if test -f 'datawizard/sync_and_notify_data_implicit.c'; then $(CYGPATH_W) 'datawizard/sync_and_notify_data_implicit.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/sync_and_notify_data_implicit.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sync_and_notify_data_implicit.Tpo $(DEPDIR)/sync_and_notify_data_implicit.Po
#	$(AM_V_CC)source='datawizard/sync_and_notify_data_implicit.c' object='sync_and_notify_data_implicit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sync_and_notify_data_implicit.obj `if test -f 'datawizard/sync_and_notify_data_implicit.c'; then $(CYGPATH_W) 'datawizard/sync_and_notify_data_implicit.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/sync_and_notify_data_implicit.c'; fi`

sync_with_data_with_mem.o: datawizard/sync_with_data_with_mem.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sync_with_data_with_mem.o -MD -MP -MF $(DEPDIR)/sync_with_data_with_mem.Tpo -c -o sync_with_data_with_mem.o `test -f 'datawizard/sync_with_data_with_mem.c' || echo '$(srcdir)/'`datawizard/sync_with_data_with_mem.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sync_with_data_with_mem.Tpo $(DEPDIR)/sync_with_data_with_mem.Po
#	$(AM_V_CC)source='datawizard/sync_with_data_with_mem.c' object='sync_with_data_with_mem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sync_with_data_with_mem.o `test -f 'datawizard/sync_with_data_with_mem.c' || echo '$(srcdir)/'`datawizard/sync_with_data_with_mem.c

sync_with_data_with_mem.obj: datawizard/sync_with_data_with_mem.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sync_with_data_with_mem.obj -MD -MP -MF $(DEPDIR)/sync_with_data_with_mem.Tpo -c -o sync_with_data_with_mem.obj `if test -f 'datawizard/sync_with_data_with_mem.c'; then $(CYGPATH_W) 'datawizard/sync_with_data_with_mem.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/sync_with_data_with_mem.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sync_with_data_with_mem.Tpo $(DEPDIR)/sync_with_data_with_mem.Po
#	$(AM_V_CC)source='datawizard/sync_with_data_with_mem.c' object='sync_with_data_with_mem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sync_with_data_with_mem.obj `if test -f 'datawizard/sync_with_data_with_mem.c'; then $(CYGPATH_W) 'datawizard/sync_with_data_with_mem.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/sync_with_data_with_mem.c'; fi`

sync_with_data_with_mem_non_blocking.o: datawizard/sync_with_data_with_mem_non_blocking.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sync_with_data_with_mem_non_blocking.o -MD -MP -MF $(DEPDIR)/sync_with_data_with_mem_non_blocking.Tpo -c -o sync_with_data_with_mem_non_blocking.o `test -f 'datawizard/sync_with_data_with_mem_non_blocking.c' || echo '$(srcdir)/'`datawizard/sync_with_data_with_mem_non_blocking.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sync_with_data_with_mem_non_blocking.Tpo $(DEPDIR)/sync_with_data_with_mem_non_blocking.Po
#	$(AM_V_CC)source='datawizard/sync_with_data_with_mem_non_blocking.c' object='sync_with_data_with_mem_non_blocking.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sync_with_data_with_mem_non_blocking.o `test -f 'datawizard/sync_with_data_with_mem_non_blocking.c' || echo '$(srcdir)/'`datawizard/sync_with_data_with_mem_non_blocking.c

sync_with_data_with_mem_non_blocking.obj: datawizard/sync_with_data_with_mem_non_blocking.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sync_with_data_with_mem_non_blocking.obj -MD -MP -MF $(DEPDIR)/sync_with_data_with_mem_non_blocking.Tpo -c -o sync_with_data_with_mem_non_blocking.obj `if test -f 'datawizard/sync_with_data_with_mem_non_blocking.c'; then $(CYGPATH_W) 'datawizard/sync_with_data_with_mem_non_blocking.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/sync_with_data_with_mem_non_blocking.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sync_with_data_with_mem_non_blocking.Tpo $(DEPDIR)/sync_with_data_with_mem_non_blocking.Po
#	$(AM_V_CC)source='datawizard/sync_with_data_with_mem_non_blocking.c' object='sync_with_data_with_mem_non_blocking.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sync_with_data_with_mem_non_blocking.obj `if test -f 'datawizard/sync_with_data_with_mem_non_blocking.c'; then $(CYGPATH_W) 'datawizard/sync_with_data_with_mem_non_blocking.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/sync_with_data_with_mem_non_blocking.c'; fi`

sync_with_data_with_mem_non_blocking_implicit.o: datawizard/sync_with_data_with_mem_non_blocking_implicit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sync_with_data_with_mem_non_blocking_implicit.o -MD -MP -MF $(DEPDIR)/sync_with_data_with_mem_non_blocking_implicit.Tpo -c -o sync_with_data_with_mem_non_blocking_implicit.o `test -f 'datawizard/sync_with_data_with_mem_non_blocking_implicit.c' || echo '$(srcdir)/'`datawizard/sync_with_data_with_mem_non_blocking_implicit.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sync_with_data_with_mem_non_blocking_implicit.Tpo $(DEPDIR)/sync_with_data_with_mem_non_blocking_implicit.Po
#	$(AM_V_CC)source='datawizard/sync_with_data_with_mem_non_blocking_implicit.c' object='sync_with_data_with_mem_non_blocking_implicit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sync_with_data_with_mem_non_blocking_implicit.o `test -f 'datawizard/sync_with_data_with_mem_non_blocking_implicit.c' || echo '$(srcdir)/'`datawizard/sync_with_data_with_mem_non_blocking_implicit.c

sync_with_data_with_mem_non_blocking_implicit.obj: datawizard/sync_with_data_with_mem_non_blocking_implicit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sync_with_data_with_mem_non_blocking_implicit.obj -MD -MP -MF $(DEPDIR)/sync_with_data_with_mem_non_blocking_implicit.Tpo -c -o sync_with_data_with_mem_non_blocking_implicit.obj `if test -f 'datawizard/sync_with_data_with_mem_non_blocking_implicit.c'; then $(CYGPATH_W) 'datawizard/sync_with_data_with_mem_non_blocking_implicit.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/sync_with_data_with_mem_non_blocking_implicit.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sync_with_data_with_mem_non_blocking_implicit.Tpo $(DEPDIR)/sync_with_data_with_mem_non_blocking_implicit.Po
#	$(AM_V_CC)source='datawizard/sync_with_data_with_mem_non_blocking_implicit.c' object='sync_with_data_with_mem_non_blocking_implicit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sync_with_data_with_mem_non_blocking_implicit.obj `if test -f 'datawizard/sync_with_data_with_mem_non_blocking_implicit.c'; then $(CYGPATH_W) 'datawizard/sync_with_data_with_mem_non_blocking_implicit.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/sync_with_data_with_mem_non_blocking_implicit.c'; fi`

task_with_multiple_time_the_same_handle.o: datawizard/task_with_multiple_time_the_same_handle.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT task_with_multiple_time_the_same_handle.o -MD -MP -MF $(DEPDIR)/task_with_multiple_time_the_same_handle.Tpo -c -o task_with_multiple_time_the_same_handle.o `test -f 'datawizard/task_with_multiple_time_the_same_handle.c' || echo '$(srcdir)/'`datawizard/task_with_multiple_time_the_same_handle.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/task_with_multiple_time_the_same_handle.Tpo $(DEPDIR)/task_with_multiple_time_the_same_handle.Po
#	$(AM_V_CC)source='datawizard/task_with_multiple_time_the_same_handle.c' object='task_with_multiple_time_the_same_handle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o task_with_multiple_time_the_same_handle.o `test -f 'datawizard/task_with_multiple_time_the_same_handle.c' || echo '$(srcdir)/'`datawizard/task_with_multiple_time_the_same_handle.c

task_with_multiple_time_the_same_handle.obj: datawizard/task_with_multiple_time_the_same_handle.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT task_with_multiple_time_the_same_handle.obj -MD -MP -MF $(DEPDIR)/task_with_multiple_time_the_same_handle.Tpo -c -o task_with_multiple_time_the_same_handle.obj `if test -f 'datawizard/task_with_multiple_time_the_same_handle.c'; then $(CYGPATH_W) 'datawizard/task_with_multiple_time_the_same_handle.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/task_with_multiple_time_the_same_handle.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/task_with_multiple_time_the_same_handle.Tpo $(DEPDIR)/task_with_multiple_time_the_same_handle.Po
#	$(AM_V_CC)source='datawizard/task_with_multiple_time_the_same_handle.c' object='task_with_multiple_time_the_same_handle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o task_with_multiple_time_the_same_handle.obj `if test -f 'datawizard/task_with_multiple_time_the_same_handle.c'; then $(CYGPATH_W) 'datawizard/task_with_multiple_time_the_same_handle.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/task_with_multiple_time_the_same_handle.c'; fi`

temporary_partition.o: datawizard/temporary_partition.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT temporary_partition.o -MD -MP -MF $(DEPDIR)/temporary_partition.Tpo -c -o temporary_partition.o `test -f 'datawizard/temporary_partition.c' || echo '$(srcdir)/'`datawizard/temporary_partition.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/temporary_partition.Tpo $(DEPDIR)/temporary_partition.Po
#	$(AM_V_CC)source='datawizard/temporary_partition.c' object='temporary_partition.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o temporary_partition.o `test -f 'datawizard/temporary_partition.c' || echo '$(srcdir)/'`datawizard/temporary_partition.c

temporary_partition.obj: datawizard/temporary_partition.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT temporary_partition.obj -MD -MP -MF $(DEPDIR)/temporary_partition.Tpo -c -o temporary_partition.obj `if test -f 'datawizard/temporary_partition.c'; then $(CYGPATH_W) 'datawizard/temporary_partition.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/temporary_partition.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/temporary_partition.Tpo $(DEPDIR)/temporary_partition.Po
#	$(AM_V_CC)source='datawizard/temporary_partition.c' object='temporary_partition.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o temporary_partition.obj `if test -f 'datawizard/temporary_partition.c'; then $(CYGPATH_W) 'datawizard/temporary_partition.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/temporary_partition.c'; fi`

temporary_partition_implicit.o: datawizard/temporary_partition_implicit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT temporary_partition_implicit.o -MD -MP -MF $(DEPDIR)/temporary_partition_implicit.Tpo -c -o temporary_partition_implicit.o `test -f 'datawizard/temporary_partition_implicit.c' || echo '$(srcdir)/'`datawizard/temporary_partition_implicit.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/temporary_partition_implicit.Tpo $(DEPDIR)/temporary_partition_implicit.Po
#	$(AM_V_CC)source='datawizard/temporary_partition_implicit.c' object='temporary_partition_implicit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o temporary_partition_implicit.o `test -f 'datawizard/temporary_partition_implicit.c' || echo '$(srcdir)/'`datawizard/temporary_partition_implicit.c

temporary_partition_implicit.obj: datawizard/temporary_partition_implicit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT temporary_partition_implicit.obj -MD -MP -MF $(DEPDIR)/temporary_partition_implicit.Tpo -c -o temporary_partition_implicit.obj `if test -f 'datawizard/temporary_partition_implicit.c'; then $(CYGPATH_W) 'datawizard/temporary_partition_implicit.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/temporary_partition_implicit.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/temporary_partition_implicit.Tpo $(DEPDIR)/temporary_partition_implicit.Po
#	$(AM_V_CC)source='datawizard/temporary_partition_implicit.c' object='temporary_partition_implicit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o temporary_partition_implicit.obj `if test -f 'datawizard/temporary_partition_implicit.c'; then $(CYGPATH_W) 'datawizard/temporary_partition_implicit.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/temporary_partition_implicit.c'; fi`

unpartition.o: datawizard/unpartition.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT unpartition.o -MD -MP -MF $(DEPDIR)/unpartition.Tpo -c -o unpartition.o `test -f 'datawizard/unpartition.c' || echo '$(srcdir)/'`datawizard/unpartition.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unpartition.Tpo $(DEPDIR)/unpartition.Po
#	$(AM_V_CC)source='datawizard/unpartition.c' object='unpartition.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o unpartition.o `test -f 'datawizard/unpartition.c' || echo '$(srcdir)/'`datawizard/unpartition.c

unpartition.obj: datawizard/unpartition.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT unpartition.obj -MD -MP -MF $(DEPDIR)/unpartition.Tpo -c -o unpartition.obj `if test -f 'datawizard/unpartition.c'; then $(CYGPATH_W) 'datawizard/unpartition.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/unpartition.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unpartition.Tpo $(DEPDIR)/unpartition.Po
#	$(AM_V_CC)source='datawizard/unpartition.c' object='unpartition.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o unpartition.obj `if test -f 'datawizard/unpartition.c'; then $(CYGPATH_W) 'datawizard/unpartition.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/unpartition.c'; fi`

user_interaction_implicit.o: datawizard/user_interaction_implicit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT user_interaction_implicit.o -MD -MP -MF $(DEPDIR)/user_interaction_implicit.Tpo -c -o user_interaction_implicit.o `test -f 'datawizard/user_interaction_implicit.c' || echo '$(srcdir)/'`datawizard/user_interaction_implicit.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/user_interaction_implicit.Tpo $(DEPDIR)/user_interaction_implicit.Po
#	$(AM_V_CC)source='datawizard/user_interaction_implicit.c' object='user_interaction_implicit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o user_interaction_implicit.o `test -f 'datawizard/user_interaction_implicit.c' || echo '$(srcdir)/'`datawizard/user_interaction_implicit.c

user_interaction_implicit.obj: datawizard/user_interaction_implicit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT user_interaction_implicit.obj -MD -MP -MF $(DEPDIR)/user_interaction_implicit.Tpo -c -o user_interaction_implicit.obj `if test -f 'datawizard/user_interaction_implicit.c'; then $(CYGPATH_W) 'datawizard/user_interaction_implicit.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/user_interaction_implicit.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/user_interaction_implicit.Tpo $(DEPDIR)/user_interaction_implicit.Po
#	$(AM_V_CC)source='datawizard/user_interaction_implicit.c' object='user_interaction_implicit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o user_interaction_implicit.obj `if test -f 'datawizard/user_interaction_implicit.c'; then $(CYGPATH_W) 'datawizard/user_interaction_implicit.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/user_interaction_implicit.c'; fi`

variable_parameters.o: datawizard/variable_parameters.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT variable_parameters.o -MD -MP -MF $(DEPDIR)/variable_parameters.Tpo -c -o variable_parameters.o `test -f 'datawizard/variable_parameters.c' || echo '$(srcdir)/'`datawizard/variable_parameters.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/variable_parameters.Tpo $(DEPDIR)/variable_parameters.Po
#	$(AM_V_CC)source='datawizard/variable_parameters.c' object='variable_parameters.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o variable_parameters.o `test -f 'datawizard/variable_parameters.c' || echo '$(srcdir)/'`datawizard/variable_parameters.c

variable_parameters.obj: datawizard/variable_parameters.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT variable_parameters.obj -MD -MP -MF $(DEPDIR)/variable_parameters.Tpo -c -o variable_parameters.obj `if test -f 'datawizard/variable_parameters.c'; then $(CYGPATH_W) 'datawizard/variable_parameters.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/variable_parameters.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/variable_parameters.Tpo $(DEPDIR)/variable_parameters.Po
#	$(AM_V_CC)source='datawizard/variable_parameters.c' object='variable_parameters.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o variable_parameters.obj `if test -f 'datawizard/variable_parameters.c'; then $(CYGPATH_W) 'datawizard/variable_parameters.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/variable_parameters.c'; fi`

variable_size.o: datawizard/variable_size.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT variable_size.o -MD -MP -MF $(DEPDIR)/variable_size.Tpo -c -o variable_size.o `test -f 'datawizard/variable_size.c' || echo '$(srcdir)/'`datawizard/variable_size.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/variable_size.Tpo $(DEPDIR)/variable_size.Po
#	$(AM_V_CC)source='datawizard/variable_size.c' object='variable_size.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o variable_size.o `test -f 'datawizard/variable_size.c' || echo '$(srcdir)/'`datawizard/variable_size.c

variable_size.obj: datawizard/variable_size.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT variable_size.obj -MD -MP -MF $(DEPDIR)/variable_size.Tpo -c -o variable_size.obj `if test -f 'datawizard/variable_size.c'; then $(CYGPATH_W) 'datawizard/variable_size.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/variable_size.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/variable_size.Tpo $(DEPDIR)/variable_size.Po
#	$(AM_V_CC)source='datawizard/variable_size.c' object='variable_size.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o variable_size.obj `if test -f 'datawizard/variable_size.c'; then $(CYGPATH_W) 'datawizard/variable_size.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/variable_size.c'; fi`

write_only_tmp_buffer.o: datawizard/write_only_tmp_buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT write_only_tmp_buffer.o -MD -MP -MF $(DEPDIR)/write_only_tmp_buffer.Tpo -c -o write_only_tmp_buffer.o `test -f 'datawizard/write_only_tmp_buffer.c' || echo '$(srcdir)/'`datawizard/write_only_tmp_buffer.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/write_only_tmp_buffer.Tpo $(DEPDIR)/write_only_tmp_buffer.Po
#	$(AM_V_CC)source='datawizard/write_only_tmp_buffer.c' object='write_only_tmp_buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o write_only_tmp_buffer.o `test -f 'datawizard/write_only_tmp_buffer.c' || echo '$(srcdir)/'`datawizard/write_only_tmp_buffer.c

write_only_tmp_buffer.obj: datawizard/write_only_tmp_buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT write_only_tmp_buffer.obj -MD -MP -MF $(DEPDIR)/write_only_tmp_buffer.Tpo -c -o write_only_tmp_buffer.obj `if test -f 'datawizard/write_only_tmp_buffer.c'; then $(CYGPATH_W) 'datawizard/write_only_tmp_buffer.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/write_only_tmp_buffer.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/write_only_tmp_buffer.Tpo $(DEPDIR)/write_only_tmp_buffer.Po
#	$(AM_V_CC)source='datawizard/write_only_tmp_buffer.c' object='write_only_tmp_buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o write_only_tmp_buffer.obj `if test -f 'datawizard/write_only_tmp_buffer.c'; then $(CYGPATH_W) 'datawizard/write_only_tmp_buffer.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/write_only_tmp_buffer.c'; fi`

wt_broadcast.o: datawizard/wt_broadcast.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wt_broadcast.o -MD -MP -MF $(DEPDIR)/wt_broadcast.Tpo -c -o wt_broadcast.o `test -f 'datawizard/wt_broadcast.c' || echo '$(srcdir)/'`datawizard/wt_broadcast.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/wt_broadcast.Tpo $(DEPDIR)/wt_broadcast.Po
#	$(AM_V_CC)source='datawizard/wt_broadcast.c' object='wt_broadcast.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wt_broadcast.o `test -f 'datawizard/wt_broadcast.c' || echo '$(srcdir)/'`datawizard/wt_broadcast.c

wt_broadcast.obj: datawizard/wt_broadcast.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wt_broadcast.obj -MD -MP -MF $(DEPDIR)/wt_broadcast.Tpo -c -o wt_broadcast.obj `if test -f 'datawizard/wt_broadcast.c'; then $(CYGPATH_W) 'datawizard/wt_broadcast.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/wt_broadcast.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/wt_broadcast.Tpo $(DEPDIR)/wt_broadcast.Po
#	$(AM_V_CC)source='datawizard/wt_broadcast.c' object='wt_broadcast.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wt_broadcast.obj `if test -f 'datawizard/wt_broadcast.c'; then $(CYGPATH_W) 'datawizard/wt_broadcast.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/wt_broadcast.c'; fi`

wt_host.o: datawizard/wt_host.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wt_host.o -MD -MP -MF $(DEPDIR)/wt_host.Tpo -c -o wt_host.o `test -f 'datawizard/wt_host.c' || echo '$(srcdir)/'`datawizard/wt_host.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/wt_host.Tpo $(DEPDIR)/wt_host.Po
#	$(AM_V_CC)source='datawizard/wt_host.c' object='wt_host.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wt_host.o `test -f 'datawizard/wt_host.c' || echo '$(srcdir)/'`datawizard/wt_host.c

wt_host.obj: datawizard/wt_host.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wt_host.obj -MD -MP -MF $(DEPDIR)/wt_host.Tpo -c -o wt_host.obj `if test -f 'datawizard/wt_host.c'; then $(CYGPATH_W) 'datawizard/wt_host.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/wt_host.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/wt_host.Tpo $(DEPDIR)/wt_host.Po
#	$(AM_V_CC)source='datawizard/wt_host.c' object='wt_host.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wt_host.obj `if test -f 'datawizard/wt_host.c'; then $(CYGPATH_W) 'datawizard/wt_host.c'; else $(CYGPATH_W) '$(srcdir)/datawizard/wt_host.c'; fi`

disk_compute.o: disk/disk_compute.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT disk_compute.o -MD -MP -MF $(DEPDIR)/disk_compute.Tpo -c -o disk_compute.o `test -f 'disk/disk_compute.c' || echo '$(srcdir)/'`disk/disk_compute.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/disk_compute.Tpo $(DEPDIR)/disk_compute.Po
#	$(AM_V_CC)source='disk/disk_compute.c' object='disk_compute.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o disk_compute.o `test -f 'disk/disk_compute.c' || echo '$(srcdir)/'`disk/disk_compute.c

disk_compute.obj: disk/disk_compute.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT disk_compute.obj -MD -MP -MF $(DEPDIR)/disk_compute.Tpo -c -o disk_compute.obj `if test -f 'disk/disk_compute.c'; then $(CYGPATH_W) 'disk/disk_compute.c'; else $(CYGPATH_W) '$(srcdir)/disk/disk_compute.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/disk_compute.Tpo $(DEPDIR)/disk_compute.Po
#	$(AM_V_CC)source='disk/disk_compute.c' object='disk_compute.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o disk_compute.obj `if test -f 'disk/disk_compute.c'; then $(CYGPATH_W) 'disk/disk_compute.c'; else $(CYGPATH_W) '$(srcdir)/disk/disk_compute.c'; fi`

disk_copy.o: disk/disk_copy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT disk_copy.o -MD -MP -MF $(DEPDIR)/disk_copy.Tpo -c -o disk_copy.o `test -f 'disk/disk_copy.c' || echo '$(srcdir)/'`disk/disk_copy.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/disk_copy.Tpo $(DEPDIR)/disk_copy.Po
#	$(AM_V_CC)source='disk/disk_copy.c' object='disk_copy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o disk_copy.o `test -f 'disk/disk_copy.c' || echo '$(srcdir)/'`disk/disk_copy.c

disk_copy.obj: disk/disk_copy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT disk_copy.obj -MD -MP -MF $(DEPDIR)/disk_copy.Tpo -c -o disk_copy.obj `if test -f 'disk/disk_copy.c'; then $(CYGPATH_W) 'disk/disk_copy.c'; else $(CYGPATH_W) '$(srcdir)/disk/disk_copy.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/disk_copy.Tpo $(DEPDIR)/disk_copy.Po
#	$(AM_V_CC)source='disk/disk_copy.c' object='disk_copy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o disk_copy.obj `if test -f 'disk/disk_copy.c'; then $(CYGPATH_W) 'disk/disk_copy.c'; else $(CYGPATH_W) '$(srcdir)/disk/disk_copy.c'; fi`

disk_copy_to_disk.o: disk/disk_copy_to_disk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT disk_copy_to_disk.o -MD -MP -MF $(DEPDIR)/disk_copy_to_disk.Tpo -c -o disk_copy_to_disk.o `test -f 'disk/disk_copy_to_disk.c' || echo '$(srcdir)/'`disk/disk_copy_to_disk.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/disk_copy_to_disk.Tpo $(DEPDIR)/disk_copy_to_disk.Po
#	$(AM_V_CC)source='disk/disk_copy_to_disk.c' object='disk_copy_to_disk.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o disk_copy_to_disk.o `test -f 'disk/disk_copy_to_disk.c' || echo '$(srcdir)/'`disk/disk_copy_to_disk.c

disk_copy_to_disk.obj: disk/disk_copy_to_disk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT disk_copy_to_disk.obj -MD -MP -MF $(DEPDIR)/disk_copy_to_disk.Tpo -c -o disk_copy_to_disk.obj `if test -f 'disk/disk_copy_to_disk.c'; then $(CYGPATH_W) 'disk/disk_copy_to_disk.c'; else $(CYGPATH_W) '$(srcdir)/disk/disk_copy_to_disk.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/disk_copy_to_disk.Tpo $(DEPDIR)/disk_copy_to_disk.Po
#	$(AM_V_CC)source='disk/disk_copy_to_disk.c' object='disk_copy_to_disk.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o disk_copy_to_disk.obj `if test -f 'disk/disk_copy_to_disk.c'; then $(CYGPATH_W) 'disk/disk_copy_to_disk.c'; else $(CYGPATH_W) '$(srcdir)/disk/disk_copy_to_disk.c'; fi`

disk_copy_unpack.o: disk/disk_copy_unpack.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT disk_copy_unpack.o -MD -MP -MF $(DEPDIR)/disk_copy_unpack.Tpo -c -o disk_copy_unpack.o `test -f 'disk/disk_copy_unpack.c' || echo '$(srcdir)/'`disk/disk_copy_unpack.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/disk_copy_unpack.Tpo $(DEPDIR)/disk_copy_unpack.Po
#	$(AM_V_CC)source='disk/disk_copy_unpack.c' object='disk_copy_unpack.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o disk_copy_unpack.o `test -f 'disk/disk_copy_unpack.c' || echo '$(srcdir)/'`disk/disk_copy_unpack.c

disk_copy_unpack.obj: disk/disk_copy_unpack.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT disk_copy_unpack.obj -MD -MP -MF $(DEPDIR)/disk_copy_unpack.Tpo -c -o disk_copy_unpack.obj `if test -f 'disk/disk_copy_unpack.c'; then $(CYGPATH_W) 'disk/disk_copy_unpack.c'; else $(CYGPATH_W) '$(srcdir)/disk/disk_copy_unpack.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/disk_copy_unpack.Tpo $(DEPDIR)/disk_copy_unpack.Po
#	$(AM_V_CC)source='disk/disk_copy_unpack.c' object='disk_copy_unpack.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o disk_copy_unpack.obj `if test -f 'disk/disk_copy_unpack.c'; then $(CYGPATH_W) 'disk/disk_copy_unpack.c'; else $(CYGPATH_W) '$(srcdir)/disk/disk_copy_unpack.c'; fi`

disk_pack.o: disk/disk_pack.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT disk_pack.o -MD -MP -MF $(DEPDIR)/disk_pack.Tpo -c -o disk_pack.o `test -f 'disk/disk_pack.c' || echo '$(srcdir)/'`disk/disk_pack.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/disk_pack.Tpo $(DEPDIR)/disk_pack.Po
#	$(AM_V_CC)source='disk/disk_pack.c' object='disk_pack.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o disk_pack.o `test -f 'disk/disk_pack.c' || echo '$(srcdir)/'`disk/disk_pack.c

disk_pack.obj: disk/disk_pack.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT disk_pack.obj -MD -MP -MF $(DEPDIR)/disk_pack.Tpo -c -o disk_pack.obj `if test -f 'disk/disk_pack.c'; then $(CYGPATH_W) 'disk/disk_pack.c'; else $(CYGPATH_W) '$(srcdir)/disk/disk_pack.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/disk_pack.Tpo $(DEPDIR)/disk_pack.Po
#	$(AM_V_CC)source='disk/disk_pack.c' object='disk_pack.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o disk_pack.obj `if test -f 'disk/disk_pack.c'; then $(CYGPATH_W) 'disk/disk_pack.c'; else $(CYGPATH_W) '$(srcdir)/disk/disk_pack.c'; fi`

mem_reclaim.o: disk/mem_reclaim.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mem_reclaim.o -MD -MP -MF $(DEPDIR)/mem_reclaim.Tpo -c -o mem_reclaim.o `test -f 'disk/mem_reclaim.c' || echo '$(srcdir)/'`disk/mem_reclaim.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mem_reclaim.Tpo $(DEPDIR)/mem_reclaim.Po
#	$(AM_V_CC)source='disk/mem_reclaim.c' object='mem_reclaim.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mem_reclaim.o `test -f 'disk/mem_reclaim.c' || echo '$(srcdir)/'`disk/mem_reclaim.c

mem_reclaim.obj: disk/mem_reclaim.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mem_reclaim.obj -MD -MP -MF $(DEPDIR)/mem_reclaim.Tpo -c -o mem_reclaim.obj `if test -f 'disk/mem_reclaim.c'; then $(CYGPATH_W) 'disk/mem_reclaim.c'; else $(CYGPATH_W) '$(srcdir)/disk/mem_reclaim.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mem_reclaim.Tpo $(DEPDIR)/mem_reclaim.Po
#	$(AM_V_CC)source='disk/mem_reclaim.c' object='mem_reclaim.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mem_reclaim.obj `if test -f 'disk/mem_reclaim.c'; then $(CYGPATH_W) 'disk/mem_reclaim.c'; else $(CYGPATH_W) '$(srcdir)/disk/mem_reclaim.c'; fi`

invalid_blocking_calls.o: errorcheck/invalid_blocking_calls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT invalid_blocking_calls.o -MD -MP -MF $(DEPDIR)/invalid_blocking_calls.Tpo -c -o invalid_blocking_calls.o `test -f 'errorcheck/invalid_blocking_calls.c' || echo '$(srcdir)/'`errorcheck/invalid_blocking_calls.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/invalid_blocking_calls.Tpo $(DEPDIR)/invalid_blocking_calls.Po
#	$(AM_V_CC)source='errorcheck/invalid_blocking_calls.c' object='invalid_blocking_calls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o invalid_blocking_calls.o `test -f 'errorcheck/invalid_blocking_calls.c' || echo '$(srcdir)/'`errorcheck/invalid_blocking_calls.c

invalid_blocking_calls.obj: errorcheck/invalid_blocking_calls.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT invalid_blocking_calls.obj -MD -MP -MF $(DEPDIR)/invalid_blocking_calls.Tpo -c -o invalid_blocking_calls.obj `if test -f 'errorcheck/invalid_blocking_calls.c'; then $(CYGPATH_W) 'errorcheck/invalid_blocking_calls.c'; else $(CYGPATH_W) '$(srcdir)/errorcheck/invalid_blocking_calls.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/invalid_blocking_calls.Tpo $(DEPDIR)/invalid_blocking_calls.Po
#	$(AM_V_CC)source='errorcheck/invalid_blocking_calls.c' object='invalid_blocking_calls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o invalid_blocking_calls.obj `if test -f 'errorcheck/invalid_blocking_calls.c'; then $(CYGPATH_W) 'errorcheck/invalid_blocking_calls.c'; else $(CYGPATH_W) '$(srcdir)/errorcheck/invalid_blocking_calls.c'; fi`

invalid_tasks.o: errorcheck/invalid_tasks.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT invalid_tasks.o -MD -MP -MF $(DEPDIR)/invalid_tasks.Tpo -c -o invalid_tasks.o `test -f 'errorcheck/invalid_tasks.c' || echo '$(srcdir)/'`errorcheck/invalid_tasks.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/invalid_tasks.Tpo $(DEPDIR)/invalid_tasks.Po
#	$(AM_V_CC)source='errorcheck/invalid_tasks.c' object='invalid_tasks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o invalid_tasks.o `test -f 'errorcheck/invalid_tasks.c' || echo '$(srcdir)/'`errorcheck/invalid_tasks.c

invalid_tasks.obj: errorcheck/invalid_tasks.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT invalid_tasks.obj -MD -MP -MF $(DEPDIR)/invalid_tasks.Tpo -c -o invalid_tasks.obj `if test -f 'errorcheck/invalid_tasks.c'; then $(CYGPATH_W) 'errorcheck/invalid_tasks.c'; else $(CYGPATH_W) '$(srcdir)/errorcheck/invalid_tasks.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/invalid_tasks.Tpo $(DEPDIR)/invalid_tasks.Po
#	$(AM_V_CC)source='errorcheck/invalid_tasks.c' object='invalid_tasks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o invalid_tasks.obj `if test -f 'errorcheck/invalid_tasks.c'; then $(CYGPATH_W) 'errorcheck/invalid_tasks.c'; else $(CYGPATH_W) '$(srcdir)/errorcheck/invalid_tasks.c'; fi`

starpu_init_noworker.o: errorcheck/starpu_init_noworker.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT starpu_init_noworker.o -MD -MP -MF $(DEPDIR)/starpu_init_noworker.Tpo -c -o starpu_init_noworker.o `test -f 'errorcheck/starpu_init_noworker.c' || echo '$(srcdir)/'`errorcheck/starpu_init_noworker.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/starpu_init_noworker.Tpo $(DEPDIR)/starpu_init_noworker.Po
#	$(AM_V_CC)source='errorcheck/starpu_init_noworker.c' object='starpu_init_noworker.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o starpu_init_noworker.o `test -f 'errorcheck/starpu_init_noworker.c' || echo '$(srcdir)/'`errorcheck/starpu_init_noworker.c

starpu_init_noworker.obj: errorcheck/starpu_init_noworker.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT starpu_init_noworker.obj -MD -MP -MF $(DEPDIR)/starpu_init_noworker.Tpo -c -o starpu_init_noworker.obj `if test -f 'errorcheck/starpu_init_noworker.c'; then $(CYGPATH_W) 'errorcheck/starpu_init_noworker.c'; else $(CYGPATH_W) '$(srcdir)/errorcheck/starpu_init_noworker.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/starpu_init_noworker.Tpo $(DEPDIR)/starpu_init_noworker.Po
#	$(AM_V_CC)source='errorcheck/starpu_init_noworker.c' object='starpu_init_noworker.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o starpu_init_noworker.obj `if test -f 'errorcheck/starpu_init_noworker.c'; then $(CYGPATH_W) 'errorcheck/starpu_init_noworker.c'; else $(CYGPATH_W) '$(srcdir)/errorcheck/starpu_init_noworker.c'; fi`

workers_cpuid.o: errorcheck/workers_cpuid.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT workers_cpuid.o -MD -MP -MF $(DEPDIR)/workers_cpuid.Tpo -c -o workers_cpuid.o `test -f 'errorcheck/workers_cpuid.c' || echo '$(srcdir)/'`errorcheck/workers_cpuid.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/workers_cpuid.Tpo $(DEPDIR)/workers_cpuid.Po
#	$(AM_V_CC)source='errorcheck/workers_cpuid.c' object='workers_cpuid.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o workers_cpuid.o `test -f 'errorcheck/workers_cpuid.c' || echo '$(srcdir)/'`errorcheck/workers_cpuid.c

workers_cpuid.obj: errorcheck/workers_cpuid.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT workers_cpuid.obj -MD -MP -MF $(DEPDIR)/workers_cpuid.Tpo -c -o workers_cpuid.obj `if test -f 'errorcheck/workers_cpuid.c'; then $(CYGPATH_W) 'errorcheck/workers_cpuid.c'; else $(CYGPATH_W) '$(srcdir)/errorcheck/workers_cpuid.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workers_cpuid.Tpo $(DEPDIR)/workers_cpuid.Po
#	$(AM_V_CC)source='errorcheck/workers_cpuid.c' object='workers_cpuid.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o workers_cpuid.obj `if test -f 'errorcheck/workers_cpuid.c'; then $(CYGPATH_W) 'errorcheck/workers_cpuid.c'; else $(CYGPATH_W) '$(srcdir)/errorcheck/workers_cpuid.c'; fi`

cublas_init.o: helper/cublas_init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cublas_init.o -MD -MP -MF $(DEPDIR)/cublas_init.Tpo -c -o cublas_init.o `test -f 'helper/cublas_init.c' || echo '$(srcdir)/'`helper/cublas_init.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cublas_init.Tpo $(DEPDIR)/cublas_init.Po
#	$(AM_V_CC)source='helper/cublas_init.c' object='cublas_init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cublas_init.o `test -f 'helper/cublas_init.c' || echo '$(srcdir)/'`helper/cublas_init.c

cublas_init.obj: helper/cublas_init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cublas_init.obj -MD -MP -MF $(DEPDIR)/cublas_init.Tpo -c -o cublas_init.obj `if test -f 'helper/cublas_init.c'; then $(CYGPATH_W) 'helper/cublas_init.c'; else $(CYGPATH_W) '$(srcdir)/helper/cublas_init.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cublas_init.Tpo $(DEPDIR)/cublas_init.Po
#	$(AM_V_CC)source='helper/cublas_init.c' object='cublas_init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cublas_init.obj `if test -f 'helper/cublas_init.c'; then $(CYGPATH_W) 'helper/cublas_init.c'; else $(CYGPATH_W) '$(srcdir)/helper/cublas_init.c'; fi`

cusparse_init.o: helper/cusparse_init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cusparse_init.o -MD -MP -MF $(DEPDIR)/cusparse_init.Tpo -c -o cusparse_init.o `test -f 'helper/cusparse_init.c' || echo '$(srcdir)/'`helper/cusparse_init.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cusparse_init.Tpo $(DEPDIR)/cusparse_init.Po
#	$(AM_V_CC)source='helper/cusparse_init.c' object='cusparse_init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cusparse_init.o `test -f 'helper/cusparse_init.c' || echo '$(srcdir)/'`helper/cusparse_init.c

cusparse_init.obj: helper/cusparse_init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cusparse_init.obj -MD -MP -MF $(DEPDIR)/cusparse_init.Tpo -c -o cusparse_init.obj `if test -f 'helper/cusparse_init.c'; then $(CYGPATH_W) 'helper/cusparse_init.c'; else $(CYGPATH_W) '$(srcdir)/helper/cusparse_init.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cusparse_init.Tpo $(DEPDIR)/cusparse_init.Po
#	$(AM_V_CC)source='helper/cusparse_init.c' object='cusparse_init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cusparse_init.obj `if test -f 'helper/cusparse_init.c'; then $(CYGPATH_W) 'helper/cusparse_init.c'; else $(CYGPATH_W) '$(srcdir)/helper/cusparse_init.c'; fi`

execute_on_all.o: helper/execute_on_all.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT execute_on_all.o -MD -MP -MF $(DEPDIR)/execute_on_all.Tpo -c -o execute_on_all.o `test -f 'helper/execute_on_all.c' || echo '$(srcdir)/'`helper/execute_on_all.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/execute_on_all.Tpo $(DEPDIR)/execute_on_all.Po
#	$(AM_V_CC)source='helper/execute_on_all.c' object='execute_on_all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o execute_on_all.o `test -f 'helper/execute_on_all.c' || echo '$(srcdir)/'`helper/execute_on_all.c

execute_on_all.obj: helper/execute_on_all.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT execute_on_all.obj -MD -MP -MF $(DEPDIR)/execute_on_all.Tpo -c -o execute_on_all.obj `if test -f 'helper/execute_on_all.c'; then $(CYGPATH_W) 'helper/execute_on_all.c'; else $(CYGPATH_W) '$(srcdir)/helper/execute_on_all.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/execute_on_all.Tpo $(DEPDIR)/execute_on_all.Po
#	$(AM_V_CC)source='helper/execute_on_all.c' object='execute_on_all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o execute_on_all.obj `if test -f 'helper/execute_on_all.c'; then $(CYGPATH_W) 'helper/execute_on_all.c'; else $(CYGPATH_W) '$(srcdir)/helper/execute_on_all.c'; fi`

pinned_memory.o: helper/pinned_memory.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pinned_memory.o -MD -MP -MF $(DEPDIR)/pinned_memory.Tpo -c -o pinned_memory.o `test -f 'helper/pinned_memory.c' || echo '$(srcdir)/'`helper/pinned_memory.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/pinned_memory.Tpo $(DEPDIR)/pinned_memory.Po
#	$(AM_V_CC)source='helper/pinned_memory.c' object='pinned_memory.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pinned_memory.o `test -f 'helper/pinned_memory.c' || echo '$(srcdir)/'`helper/pinned_memory.c

pinned_memory.obj: helper/pinned_memory.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pinned_memory.obj -MD -MP -MF $(DEPDIR)/pinned_memory.Tpo -c -o pinned_memory.obj `if test -f 'helper/pinned_memory.c'; then $(CYGPATH_W) 'helper/pinned_memory.c'; else $(CYGPATH_W) '$(srcdir)/helper/pinned_memory.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pinned_memory.Tpo $(DEPDIR)/pinned_memory.Po
#	$(AM_V_CC)source='helper/pinned_memory.c' object='pinned_memory.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pinned_memory.obj `if test -f 'helper/pinned_memory.c'; then $(CYGPATH_W) 'helper/pinned_memory.c'; else $(CYGPATH_W) '$(srcdir)/helper/pinned_memory.c'; fi`

starpu_create_sync_task.o: helper/starpu_create_sync_task.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT starpu_create_sync_task.o -MD -MP -MF $(DEPDIR)/starpu_create_sync_task.Tpo -c -o starpu_create_sync_task.o `test -f 'helper/starpu_create_sync_task.c' || echo '$(srcdir)/'`helper/starpu_create_sync_task.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/starpu_create_sync_task.Tpo $(DEPDIR)/starpu_create_sync_task.Po
#	$(AM_V_CC)source='helper/starpu_create_sync_task.c' object='starpu_create_sync_task.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o starpu_create_sync_task.o `test -f 'helper/starpu_create_sync_task.c' || echo '$(srcdir)/'`helper/starpu_create_sync_task.c

starpu_create_sync_task.obj: helper/starpu_create_sync_task.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT starpu_create_sync_task.obj -MD -MP -MF $(DEPDIR)/starpu_create_sync_task.Tpo -c -o starpu_create_sync_task.obj `if test -f 'helper/starpu_create_sync_task.c'; then $(CYGPATH_W) 'helper/starpu_create_sync_task.c'; else $(CYGPATH_W) '$(srcdir)/helper/starpu_create_sync_task.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/starpu_create_sync_task.Tpo $(DEPDIR)/starpu_create_sync_task.Po
#	$(AM_V_CC)source='helper/starpu_create_sync_task.c' object='starpu_create_sync_task.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o starpu_create_sync_task.obj `if test -f 'helper/starpu_create_sync_task.c'; then $(CYGPATH_W) 'helper/starpu_create_sync_task.c'; else $(CYGPATH_W) '$(srcdir)/helper/starpu_create_sync_task.c'; fi`

starpu_data_cpy.o: helper/starpu_data_cpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT starpu_data_cpy.o -MD -MP -MF $(DEPDIR)/starpu_data_cpy.Tpo -c -o starpu_data_cpy.o `test -f 'helper/starpu_data_cpy.c' || echo '$(srcdir)/'`helper/starpu_data_cpy.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/starpu_data_cpy.Tpo $(DEPDIR)/starpu_data_cpy.Po
#	$(AM_V_CC)source='helper/starpu_data_cpy.c' object='starpu_data_cpy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o starpu_data_cpy.o `test -f 'helper/starpu_data_cpy.c' || echo '$(srcdir)/'`helper/starpu_data_cpy.c

starpu_data_cpy.obj: helper/starpu_data_cpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT starpu_data_cpy.obj -MD -MP -MF $(DEPDIR)/starpu_data_cpy.Tpo -c -o starpu_data_cpy.obj `if test -f 'helper/starpu_data_cpy.c'; then $(CYGPATH_W) 'helper/starpu_data_cpy.c'; else $(CYGPATH_W) '$(srcdir)/helper/starpu_data_cpy.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/starpu_data_cpy.Tpo $(DEPDIR)/starpu_data_cpy.Po
#	$(AM_V_CC)source='helper/starpu_data_cpy.c' object='starpu_data_cpy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o starpu_data_cpy.obj `if test -f 'helper/starpu_data_cpy.c'; then $(CYGPATH_W) 'helper/starpu_data_cpy.c'; else $(CYGPATH_W) '$(srcdir)/helper/starpu_data_cpy.c'; fi`

bind.o: main/bind.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bind.o -MD -MP -MF $(DEPDIR)/bind.Tpo -c -o bind.o `test -f 'main/bind.c' || echo '$(srcdir)/'`main/bind.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bind.Tpo $(DEPDIR)/bind.Po
#	$(AM_V_CC)source='main/bind.c' object='bind.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bind.o `test -f 'main/bind.c' || echo '$(srcdir)/'`main/bind.c

bind.obj: main/bind.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bind.obj -MD -MP -MF $(DEPDIR)/bind.Tpo -c -o bind.obj `if test -f 'main/bind.c'; then $(CYGPATH_W) 'main/bind.c'; else $(CYGPATH_W) '$(srcdir)/main/bind.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bind.Tpo $(DEPDIR)/bind.Po
#	$(AM_V_CC)source='main/bind.c' object='bind.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bind.obj `if test -f 'main/bind.c'; then $(CYGPATH_W) 'main/bind.c'; else $(CYGPATH_W) '$(srcdir)/main/bind.c'; fi`

callback.o: main/callback.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT callback.o -MD -MP -MF $(DEPDIR)/callback.Tpo -c -o callback.o `test -f 'main/callback.c' || echo '$(srcdir)/'`main/callback.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/callback.Tpo $(DEPDIR)/callback.Po
#	$(AM_V_CC)source='main/callback.c' object='callback.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o callback.o `test -f 'main/callback.c' || echo '$(srcdir)/'`main/callback.c

callback.obj: main/callback.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT callback.obj -MD -MP -MF $(DEPDIR)/callback.Tpo -c -o callback.obj `if test -f 'main/callback.c'; then $(CYGPATH_W) 'main/callback.c'; else $(CYGPATH_W) '$(srcdir)/main/callback.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/callback.Tpo $(DEPDIR)/callback.Po
#	$(AM_V_CC)source='main/callback.c' object='callback.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o callback.obj `if test -f 'main/callback.c'; then $(CYGPATH_W) 'main/callback.c'; else $(CYGPATH_W) '$(srcdir)/main/callback.c'; fi`

codelet_null_callback.o: main/codelet_null_callback.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codelet_null_callback.o -MD -MP -MF $(DEPDIR)/codelet_null_callback.Tpo -c -o codelet_null_callback.o `test -f 'main/codelet_null_callback.c' || echo '$(srcdir)/'`main/codelet_null_callback.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/codelet_null_callback.Tpo $(DEPDIR)/codelet_null_callback.Po
#	$(AM_V_CC)source='main/codelet_null_callback.c' object='codelet_null_callback.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codelet_null_callback.o `test -f 'main/codelet_null_callback.c' || echo '$(srcdir)/'`main/codelet_null_callback.c

codelet_null_callback.obj: main/codelet_null_callback.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codelet_null_callback.obj -MD -MP -MF $(DEPDIR)/codelet_null_callback.Tpo -c -o codelet_null_callback.obj `if test -f 'main/codelet_null_callback.c'; then $(CYGPATH_W) 'main/codelet_null_callback.c'; else $(CYGPATH_W) '$(srcdir)/main/codelet_null_callback.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/codelet_null_callback.Tpo $(DEPDIR)/codelet_null_callback.Po
#	$(AM_V_CC)source='main/codelet_null_callback.c' object='codelet_null_callback.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codelet_null_callback.obj `if test -f 'main/codelet_null_callback.c'; then $(CYGPATH_W) 'main/codelet_null_callback.c'; else $(CYGPATH_W) '$(srcdir)/main/codelet_null_callback.c'; fi`

declare_deps_after_submission.o: main/declare_deps_after_submission.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT declare_deps_after_submission.o -MD -MP -MF $(DEPDIR)/declare_deps_after_submission.Tpo -c -o declare_deps_after_submission.o `test -f 'main/declare_deps_after_submission.c' || echo '$(srcdir)/'`main/declare_deps_after_submission.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/declare_deps_after_submission.Tpo $(DEPDIR)/declare_deps_after_submission.Po
#	$(AM_V_CC)source='main/declare_deps_after_submission.c' object='declare_deps_after_submission.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o declare_deps_after_submission.o `test -f 'main/declare_deps_after_submission.c' || echo '$(srcdir)/'`main/declare_deps_after_submission.c

declare_deps_after_submission.obj: main/declare_deps_after_submission.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT declare_deps_after_submission.obj -MD -MP -MF $(DEPDIR)/declare_deps_after_submission.Tpo -c -o declare_deps_after_submission.obj `if test -f 'main/declare_deps_after_submission.c'; then $(CYGPATH_W) 'main/declare_deps_after_submission.c'; else $(CYGPATH_W) '$(srcdir)/main/declare_deps_after_submission.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/declare_deps_after_submission.Tpo $(DEPDIR)/declare_deps_after_submission.Po
#	$(AM_V_CC)source='main/declare_deps_after_submission.c' object='declare_deps_after_submission.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o declare_deps_after_submission.obj `if test -f 'main/declare_deps_after_submission.c'; then $(CYGPATH_W) 'main/declare_deps_after_submission.c'; else $(CYGPATH_W) '$(srcdir)/main/declare_deps_after_submission.c'; fi`

declare_deps_after_submission_synchronous.o: main/declare_deps_after_submission_synchronous.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT declare_deps_after_submission_synchronous.o -MD -MP -MF $(DEPDIR)/declare_deps_after_submission_synchronous.Tpo -c -o declare_deps_after_submission_synchronous.o `test -f 'main/declare_deps_after_submission_synchronous.c' || echo '$(srcdir)/'`main/declare_deps_after_submission_synchronous.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/declare_deps_after_submission_synchronous.Tpo $(DEPDIR)/declare_deps_after_submission_synchronous.Po
#	$(AM_V_CC)source='main/declare_deps_after_submission_synchronous.c' object='declare_deps_after_submission_synchronous.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o declare_deps_after_submission_synchronous.o `test -f 'main/declare_deps_after_submission_synchronous.c' || echo '$(srcdir)/'`main/declare_deps_after_submission_synchronous.c

declare_deps_after_submission_synchronous.obj: main/declare_deps_after_submission_synchronous.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT declare_deps_after_submission_synchronous.obj -MD -MP -MF $(DEPDIR)/declare_deps_after_submission_synchronous.Tpo -c -o declare_deps_after_submission_synchronous.obj `if test -f 'main/declare_deps_after_submission_synchronous.c'; then $(CYGPATH_W) 'main/declare_deps_after_submission_synchronous.c'; else $(CYGPATH_W) '$(srcdir)/main/declare_deps_after_submission_synchronous.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/declare_deps_after_submission_synchronous.Tpo $(DEPDIR)/declare_deps_after_submission_synchronous.Po
#	$(AM_V_CC)source='main/declare_deps_after_submission_synchronous.c' object='declare_deps_after_submission_synchronous.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o declare_deps_after_submission_synchronous.obj `if test -f 'main/declare_deps_after_submission_synchronous.c'; then $(CYGPATH_W) 'main/declare_deps_after_submission_synchronous.c'; else $(CYGPATH_W) '$(srcdir)/main/declare_deps_after_submission_synchronous.c'; fi`

declare_deps_in_callback.o: main/declare_deps_in_callback.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT declare_deps_in_callback.o -MD -MP -MF $(DEPDIR)/declare_deps_in_callback.Tpo -c -o declare_deps_in_callback.o `test -f 'main/declare_deps_in_callback.c' || echo '$(srcdir)/'`main/declare_deps_in_callback.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/declare_deps_in_callback.Tpo $(DEPDIR)/declare_deps_in_callback.Po
#	$(AM_V_CC)source='main/declare_deps_in_callback.c' object='declare_deps_in_callback.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o declare_deps_in_callback.o `test -f 'main/declare_deps_in_callback.c' || echo '$(srcdir)/'`main/declare_deps_in_callback.c

declare_deps_in_callback.obj: main/declare_deps_in_callback.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT declare_deps_in_callback.obj -MD -MP -MF $(DEPDIR)/declare_deps_in_callback.Tpo -c -o declare_deps_in_callback.obj `if test -f 'main/declare_deps_in_callback.c'; then $(CYGPATH_W) 'main/declare_deps_in_callback.c'; else $(CYGPATH_W) '$(srcdir)/main/declare_deps_in_callback.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/declare_deps_in_callback.Tpo $(DEPDIR)/declare_deps_in_callback.Po
#	$(AM_V_CC)source='main/declare_deps_in_callback.c' object='declare_deps_in_callback.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o declare_deps_in_callback.obj `if test -f 'main/declare_deps_in_callback.c'; then $(CYGPATH_W) 'main/declare_deps_in_callback.c'; else $(CYGPATH_W) '$(srcdir)/main/declare_deps_in_callback.c'; fi`

deploop.o: main/deploop.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT deploop.o -MD -MP -MF $(DEPDIR)/deploop.Tpo -c -o deploop.o `test -f 'main/deploop.c' || echo '$(srcdir)/'`main/deploop.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/deploop.Tpo $(DEPDIR)/deploop.Po
#	$(AM_V_CC)source='main/deploop.c' object='deploop.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o deploop.o `test -f 'main/deploop.c' || echo '$(srcdir)/'`main/deploop.c

deploop.obj: main/deploop.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT deploop.obj -MD -MP -MF $(DEPDIR)/deploop.Tpo -c -o deploop.obj `if test -f 'main/deploop.c'; then $(CYGPATH_W) 'main/deploop.c'; else $(CYGPATH_W) '$(srcdir)/main/deploop.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/deploop.Tpo $(DEPDIR)/deploop.Po
#	$(AM_V_CC)source='main/deploop.c' object='deploop.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o deploop.obj `if test -f 'main/deploop.c'; then $(CYGPATH_W) 'main/deploop.c'; else $(CYGPATH_W) '$(srcdir)/main/deploop.c'; fi`

main_deprecated_func-deprecated_func.o: main/deprecated_func.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(main_deprecated_func_CFLAGS) $(CFLAGS) -MT main_deprecated_func-deprecated_func.o -MD -MP -MF $(DEPDIR)/main_deprecated_func-deprecated_func.Tpo -c -o main_deprecated_func-deprecated_func.o `test -f 'main/deprecated_func.c' || echo '$(srcdir)/'`main/deprecated_func.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/main_deprecated_func-deprecated_func.Tpo $(DEPDIR)/main_deprecated_func-deprecated_func.Po
#	$(AM_V_CC)source='main/deprecated_func.c' object='main_deprecated_func-deprecated_func.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(main_deprecated_func_CFLAGS) $(CFLAGS) -c -o main_deprecated_func-deprecated_func.o `test -f 'main/deprecated_func.c' || echo '$(srcdir)/'`main/deprecated_func.c

main_deprecated_func-deprecated_func.obj: main/deprecated_func.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(main_deprecated_func_CFLAGS) $(CFLAGS) -MT main_deprecated_func-deprecated_func.obj -MD -MP -MF $(DEPDIR)/main_deprecated_func-deprecated_func.Tpo -c -o main_deprecated_func-deprecated_func.obj `if test -f 'main/deprecated_func.c'; then $(CYGPATH_W) 'main/deprecated_func.c'; else $(CYGPATH_W) '$(srcdir)/main/deprecated_func.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/main_deprecated_func-deprecated_func.Tpo $(DEPDIR)/main_deprecated_func-deprecated_func.Po
#	$(AM_V_CC)source='main/deprecated_func.c' object='main_deprecated_func-deprecated_func.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(main_deprecated_func_CFLAGS) $(CFLAGS) -c -o main_deprecated_func-deprecated_func.obj `if test -f 'main/deprecated_func.c'; then $(CYGPATH_W) 'main/deprecated_func.c'; else $(CYGPATH_W) '$(srcdir)/main/deprecated_func.c'; fi`

display_binding.o: main/display_binding.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT display_binding.o -MD -MP -MF $(DEPDIR)/display_binding.Tpo -c -o display_binding.o `test -f 'main/display_binding.c' || echo '$(srcdir)/'`main/display_binding.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/display_binding.Tpo $(DEPDIR)/display_binding.Po
#	$(AM_V_CC)source='main/display_binding.c' object='display_binding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o display_binding.o `test -f 'main/display_binding.c' || echo '$(srcdir)/'`main/display_binding.c

display_binding.obj: main/display_binding.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT display_binding.obj -MD -MP -MF $(DEPDIR)/display_binding.Tpo -c -o display_binding.obj `if test -f 'main/display_binding.c'; then $(CYGPATH_W) 'main/display_binding.c'; else $(CYGPATH_W) '$(srcdir)/main/display_binding.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/display_binding.Tpo $(DEPDIR)/display_binding.Po
#	$(AM_V_CC)source='main/display_binding.c' object='display_binding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o display_binding.obj `if test -f 'main/display_binding.c'; then $(CYGPATH_W) 'main/display_binding.c'; else $(CYGPATH_W) '$(srcdir)/main/display_binding.c'; fi`

init_run_deinit.o: main/driver_api/init_run_deinit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT init_run_deinit.o -MD -MP -MF $(DEPDIR)/init_run_deinit.Tpo -c -o init_run_deinit.o `test -f 'main/driver_api/init_run_deinit.c' || echo '$(srcdir)/'`main/driver_api/init_run_deinit.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/init_run_deinit.Tpo $(DEPDIR)/init_run_deinit.Po
#	$(AM_V_CC)source='main/driver_api/init_run_deinit.c' object='init_run_deinit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o init_run_deinit.o `test -f 'main/driver_api/init_run_deinit.c' || echo '$(srcdir)/'`main/driver_api/init_run_deinit.c

init_run_deinit.obj: main/driver_api/init_run_deinit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT init_run_deinit.obj -MD -MP -MF $(DEPDIR)/init_run_deinit.Tpo -c -o init_run_deinit.obj `if test -f 'main/driver_api/init_run_deinit.c'; then $(CYGPATH_W) 'main/driver_api/init_run_deinit.c'; else $(CYGPATH_W) '$(srcdir)/main/driver_api/init_run_deinit.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/init_run_deinit.Tpo $(DEPDIR)/init_run_deinit.Po
#	$(AM_V_CC)source='main/driver_api/init_run_deinit.c' object='init_run_deinit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o init_run_deinit.obj `if test -f 'main/driver_api/init_run_deinit.c'; then $(CYGPATH_W) 'main/driver_api/init_run_deinit.c'; else $(CYGPATH_W) '$(srcdir)/main/driver_api/init_run_deinit.c'; fi`

run_driver.o: main/driver_api/run_driver.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT run_driver.o -MD -MP -MF $(DEPDIR)/run_driver.Tpo -c -o run_driver.o `test -f 'main/driver_api/run_driver.c' || echo '$(srcdir)/'`main/driver_api/run_driver.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/run_driver.Tpo $(DEPDIR)/run_driver.Po
#	$(AM_V_CC)source='main/driver_api/run_driver.c' object='run_driver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o run_driver.o `test -f 'main/driver_api/run_driver.c' || echo '$(srcdir)/'`main/driver_api/run_driver.c

run_driver.obj: main/driver_api/run_driver.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT run_driver.obj -MD -MP -MF $(DEPDIR)/run_driver.Tpo -c -o run_driver.obj `if test -f 'main/driver_api/run_driver.c'; then $(CYGPATH_W) 'main/driver_api/run_driver.c'; else $(CYGPATH_W) '$(srcdir)/main/driver_api/run_driver.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/run_driver.Tpo $(DEPDIR)/run_driver.Po
#	$(AM_V_CC)source='main/driver_api/run_driver.c' object='run_driver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o run_driver.obj `if test -f 'main/driver_api/run_driver.c'; then $(CYGPATH_W) 'main/driver_api/run_driver.c'; else $(CYGPATH_W) '$(srcdir)/main/driver_api/run_driver.c'; fi`

empty_task.o: main/empty_task.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT empty_task.o -MD -MP -MF $(DEPDIR)/empty_task.Tpo -c -o empty_task.o `test -f 'main/empty_task.c' || echo '$(srcdir)/'`main/empty_task.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/empty_task.Tpo $(DEPDIR)/empty_task.Po
#	$(AM_V_CC)source='main/empty_task.c' object='empty_task.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o empty_task.o `test -f 'main/empty_task.c' || echo '$(srcdir)/'`main/empty_task.c

empty_task.obj: main/empty_task.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT empty_task.obj -MD -MP -MF $(DEPDIR)/empty_task.Tpo -c -o empty_task.obj `if test -f 'main/empty_task.c'; then $(CYGPATH_W) 'main/empty_task.c'; else $(CYGPATH_W) '$(srcdir)/main/empty_task.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/empty_task.Tpo $(DEPDIR)/empty_task.Po
#	$(AM_V_CC)source='main/empty_task.c' object='empty_task.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o empty_task.obj `if test -f 'main/empty_task.c'; then $(CYGPATH_W) 'main/empty_task.c'; else $(CYGPATH_W) '$(srcdir)/main/empty_task.c'; fi`

empty_task_chain.o: main/empty_task_chain.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT empty_task_chain.o -MD -MP -MF $(DEPDIR)/empty_task_chain.Tpo -c -o empty_task_chain.o `test -f 'main/empty_task_chain.c' || echo '$(srcdir)/'`main/empty_task_chain.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/empty_task_chain.Tpo $(DEPDIR)/empty_task_chain.Po
#	$(AM_V_CC)source='main/empty_task_chain.c' object='empty_task_chain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o empty_task_chain.o `test -f 'main/empty_task_chain.c' || echo '$(srcdir)/'`main/empty_task_chain.c

empty_task_chain.obj: main/empty_task_chain.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT empty_task_chain.obj -MD -MP -MF $(DEPDIR)/empty_task_chain.Tpo -c -o empty_task_chain.obj `if test -f 'main/empty_task_chain.c'; then $(CYGPATH_W) 'main/empty_task_chain.c'; else $(CYGPATH_W) '$(srcdir)/main/empty_task_chain.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/empty_task_chain.Tpo $(DEPDIR)/empty_task_chain.Po
#	$(AM_V_CC)source='main/empty_task_chain.c' object='empty_task_chain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o empty_task_chain.obj `if test -f 'main/empty_task_chain.c'; then $(CYGPATH_W) 'main/empty_task_chain.c'; else $(CYGPATH_W) '$(srcdir)/main/empty_task_chain.c'; fi`

empty_task_sync_point.o: main/empty_task_sync_point.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT empty_task_sync_point.o -MD -MP -MF $(DEPDIR)/empty_task_sync_point.Tpo -c -o empty_task_sync_point.o `test -f 'main/empty_task_sync_point.c' || echo '$(srcdir)/'`main/empty_task_sync_point.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/empty_task_sync_point.Tpo $(DEPDIR)/empty_task_sync_point.Po
#	$(AM_V_CC)source='main/empty_task_sync_point.c' object='empty_task_sync_point.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o empty_task_sync_point.o `test -f 'main/empty_task_sync_point.c' || echo '$(srcdir)/'`main/empty_task_sync_point.c

empty_task_sync_point.obj: main/empty_task_sync_point.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT empty_task_sync_point.obj -MD -MP -MF $(DEPDIR)/empty_task_sync_point.Tpo -c -o empty_task_sync_point.obj `if test -f 'main/empty_task_sync_point.c'; then $(CYGPATH_W) 'main/empty_task_sync_point.c'; else $(CYGPATH_W) '$(srcdir)/main/empty_task_sync_point.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/empty_task_sync_point.Tpo $(DEPDIR)/empty_task_sync_point.Po
#	$(AM_V_CC)source='main/empty_task_sync_point.c' object='empty_task_sync_point.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o empty_task_sync_point.obj `if test -f 'main/empty_task_sync_point.c'; then $(CYGPATH_W) 'main/empty_task_sync_point.c'; else $(CYGPATH_W) '$(srcdir)/main/empty_task_sync_point.c'; fi`

empty_task_sync_point_tasks.o: main/empty_task_sync_point_tasks.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT empty_task_sync_point_tasks.o -MD -MP -MF $(DEPDIR)/empty_task_sync_point_tasks.Tpo -c -o empty_task_sync_point_tasks.o `test -f 'main/empty_task_sync_point_tasks.c' || echo '$(srcdir)/'`main/empty_task_sync_point_tasks.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/empty_task_sync_point_tasks.Tpo $(DEPDIR)/empty_task_sync_point_tasks.Po
#	$(AM_V_CC)source='main/empty_task_sync_point_tasks.c' object='empty_task_sync_point_tasks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o empty_task_sync_point_tasks.o `test -f 'main/empty_task_sync_point_tasks.c' || echo '$(srcdir)/'`main/empty_task_sync_point_tasks.c

empty_task_sync_point_tasks.obj: main/empty_task_sync_point_tasks.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT empty_task_sync_point_tasks.obj -MD -MP -MF $(DEPDIR)/empty_task_sync_point_tasks.Tpo -c -o empty_task_sync_point_tasks.obj `if test -f 'main/empty_task_sync_point_tasks.c'; then $(CYGPATH_W) 'main/empty_task_sync_point_tasks.c'; else $(CYGPATH_W) '$(srcdir)/main/empty_task_sync_point_tasks.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/empty_task_sync_point_tasks.Tpo $(DEPDIR)/empty_task_sync_point_tasks.Po
#	$(AM_V_CC)source='main/empty_task_sync_point_tasks.c' object='empty_task_sync_point_tasks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o empty_task_sync_point_tasks.obj `if test -f 'main/empty_task_sync_point_tasks.c'; then $(CYGPATH_W) 'main/empty_task_sync_point_tasks.c'; else $(CYGPATH_W) '$(srcdir)/main/empty_task_sync_point_tasks.c'; fi`

execute_on_a_specific_worker.o: main/execute_on_a_specific_worker.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT execute_on_a_specific_worker.o -MD -MP -MF $(DEPDIR)/execute_on_a_specific_worker.Tpo -c -o execute_on_a_specific_worker.o `test -f 'main/execute_on_a_specific_worker.c' || echo '$(srcdir)/'`main/execute_on_a_specific_worker.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/execute_on_a_specific_worker.Tpo $(DEPDIR)/execute_on_a_specific_worker.Po
#	$(AM_V_CC)source='main/execute_on_a_specific_worker.c' object='execute_on_a_specific_worker.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o execute_on_a_specific_worker.o `test -f 'main/execute_on_a_specific_worker.c' || echo '$(srcdir)/'`main/execute_on_a_specific_worker.c

execute_on_a_specific_worker.obj: main/execute_on_a_specific_worker.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT execute_on_a_specific_worker.obj -MD -MP -MF $(DEPDIR)/execute_on_a_specific_worker.Tpo -c -o execute_on_a_specific_worker.obj `if test -f 'main/execute_on_a_specific_worker.c'; then $(CYGPATH_W) 'main/execute_on_a_specific_worker.c'; else $(CYGPATH_W) '$(srcdir)/main/execute_on_a_specific_worker.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/execute_on_a_specific_worker.Tpo $(DEPDIR)/execute_on_a_specific_worker.Po
#	$(AM_V_CC)source='main/execute_on_a_specific_worker.c' object='execute_on_a_specific_worker.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o execute_on_a_specific_worker.obj `if test -f 'main/execute_on_a_specific_worker.c'; then $(CYGPATH_W) 'main/execute_on_a_specific_worker.c'; else $(CYGPATH_W) '$(srcdir)/main/execute_on_a_specific_worker.c'; fi`

execute_schedule.o: main/execute_schedule.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT execute_schedule.o -MD -MP -MF $(DEPDIR)/execute_schedule.Tpo -c -o execute_schedule.o `test -f 'main/execute_schedule.c' || echo '$(srcdir)/'`main/execute_schedule.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/execute_schedule.Tpo $(DEPDIR)/execute_schedule.Po
#	$(AM_V_CC)source='main/execute_schedule.c' object='execute_schedule.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o execute_schedule.o `test -f 'main/execute_schedule.c' || echo '$(srcdir)/'`main/execute_schedule.c

execute_schedule.obj: main/execute_schedule.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT execute_schedule.obj -MD -MP -MF $(DEPDIR)/execute_schedule.Tpo -c -o execute_schedule.obj `if test -f 'main/execute_schedule.c'; then $(CYGPATH_W) 'main/execute_schedule.c'; else $(CYGPATH_W) '$(srcdir)/main/execute_schedule.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/execute_schedule.Tpo $(DEPDIR)/execute_schedule.Po
#	$(AM_V_CC)source='main/execute_schedule.c' object='execute_schedule.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o execute_schedule.obj `if test -f 'main/execute_schedule.c'; then $(CYGPATH_W) 'main/execute_schedule.c'; else $(CYGPATH_W) '$(srcdir)/main/execute_schedule.c'; fi`

get_children_tasks.o: main/get_children_tasks.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_children_tasks.o -MD -MP -MF $(DEPDIR)/get_children_tasks.Tpo -c -o get_children_tasks.o `test -f 'main/get_children_tasks.c' || echo '$(srcdir)/'`main/get_children_tasks.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/get_children_tasks.Tpo $(DEPDIR)/get_children_tasks.Po
#	$(AM_V_CC)source='main/get_children_tasks.c' object='get_children_tasks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_children_tasks.o `test -f 'main/get_children_tasks.c' || echo '$(srcdir)/'`main/get_children_tasks.c

get_children_tasks.obj: main/get_children_tasks.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_children_tasks.obj -MD -MP -MF $(DEPDIR)/get_children_tasks.Tpo -c -o get_children_tasks.obj `if test -f 'main/get_children_tasks.c'; then $(CYGPATH_W) 'main/get_children_tasks.c'; else $(CYGPATH_W) '$(srcdir)/main/get_children_tasks.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/get_children_tasks.Tpo $(DEPDIR)/get_children_tasks.Po
#	$(AM_V_CC)source='main/get_children_tasks.c' object='get_children_tasks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_children_tasks.obj `if test -f 'main/get_children_tasks.c'; then $(CYGPATH_W) 'main/get_children_tasks.c'; else $(CYGPATH_W) '$(srcdir)/main/get_children_tasks.c'; fi`

get_current_task.o: main/get_current_task.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_current_task.o -MD -MP -MF $(DEPDIR)/get_current_task.Tpo -c -o get_current_task.o `test -f 'main/get_current_task.c' || echo '$(srcdir)/'`main/get_current_task.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/get_current_task.Tpo $(DEPDIR)/get_current_task.Po
#	$(AM_V_CC)source='main/get_current_task.c' object='get_current_task.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_current_task.o `test -f 'main/get_current_task.c' || echo '$(srcdir)/'`main/get_current_task.c

get_current_task.obj: main/get_current_task.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_current_task.obj -MD -MP -MF $(DEPDIR)/get_current_task.Tpo -c -o get_current_task.obj `if test -f 'main/get_current_task.c'; then $(CYGPATH_W) 'main/get_current_task.c'; else $(CYGPATH_W) '$(srcdir)/main/get_current_task.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/get_current_task.Tpo $(DEPDIR)/get_current_task.Po
#	$(AM_V_CC)source='main/get_current_task.c' object='get_current_task.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_current_task.obj `if test -f 'main/get_current_task.c'; then $(CYGPATH_W) 'main/get_current_task.c'; else $(CYGPATH_W) '$(srcdir)/main/get_current_task.c'; fi`

hwloc_cpuset.o: main/hwloc_cpuset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hwloc_cpuset.o -MD -MP -MF $(DEPDIR)/hwloc_cpuset.Tpo -c -o hwloc_cpuset.o `test -f 'main/hwloc_cpuset.c' || echo '$(srcdir)/'`main/hwloc_cpuset.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hwloc_cpuset.Tpo $(DEPDIR)/hwloc_cpuset.Po
#	$(AM_V_CC)source='main/hwloc_cpuset.c' object='hwloc_cpuset.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hwloc_cpuset.o `test -f 'main/hwloc_cpuset.c' || echo '$(srcdir)/'`main/hwloc_cpuset.c

hwloc_cpuset.obj: main/hwloc_cpuset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hwloc_cpuset.obj -MD -MP -MF $(DEPDIR)/hwloc_cpuset.Tpo -c -o hwloc_cpuset.obj `if test -f 'main/hwloc_cpuset.c'; then $(CYGPATH_W) 'main/hwloc_cpuset.c'; else $(CYGPATH_W) '$(srcdir)/main/hwloc_cpuset.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hwloc_cpuset.Tpo $(DEPDIR)/hwloc_cpuset.Po
#	$(AM_V_CC)source='main/hwloc_cpuset.c' object='hwloc_cpuset.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hwloc_cpuset.obj `if test -f 'main/hwloc_cpuset.c'; then $(CYGPATH_W) 'main/hwloc_cpuset.c'; else $(CYGPATH_W) '$(srcdir)/main/hwloc_cpuset.c'; fi`

insert_task.o: main/insert_task.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT insert_task.o -MD -MP -MF $(DEPDIR)/insert_task.Tpo -c -o insert_task.o `test -f 'main/insert_task.c' || echo '$(srcdir)/'`main/insert_task.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/insert_task.Tpo $(DEPDIR)/insert_task.Po
#	$(AM_V_CC)source='main/insert_task.c' object='insert_task.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o insert_task.o `test -f 'main/insert_task.c' || echo '$(srcdir)/'`main/insert_task.c

insert_task.obj: main/insert_task.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT insert_task.obj -MD -MP -MF $(DEPDIR)/insert_task.Tpo -c -o insert_task.obj `if test -f 'main/insert_task.c'; then $(CYGPATH_W) 'main/insert_task.c'; else $(CYGPATH_W) '$(srcdir)/main/insert_task.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/insert_task.Tpo $(DEPDIR)/insert_task.Po
#	$(AM_V_CC)source='main/insert_task.c' object='insert_task.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o insert_task.obj `if test -f 'main/insert_task.c'; then $(CYGPATH_W) 'main/insert_task.c'; else $(CYGPATH_W) '$(srcdir)/main/insert_task.c'; fi`

insert_task_array.o: main/insert_task_array.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT insert_task_array.o -MD -MP -MF $(DEPDIR)/insert_task_array.Tpo -c -o insert_task_array.o `test -f 'main/insert_task_array.c' || echo '$(srcdir)/'`main/insert_task_array.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/insert_task_array.Tpo $(DEPDIR)/insert_task_array.Po
#	$(AM_V_CC)source='main/insert_task_array.c' object='insert_task_array.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o insert_task_array.o `test -f 'main/insert_task_array.c' || echo '$(srcdir)/'`main/insert_task_array.c

insert_task_array.obj: main/insert_task_array.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT insert_task_array.obj -MD -MP -MF $(DEPDIR)/insert_task_array.Tpo -c -o insert_task_array.obj `if test -f 'main/insert_task_array.c'; then $(CYGPATH_W) 'main/insert_task_array.c'; else $(CYGPATH_W) '$(srcdir)/main/insert_task_array.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/insert_task_array.Tpo $(DEPDIR)/insert_task_array.Po
#	$(AM_V_CC)source='main/insert_task_array.c' object='insert_task_array.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o insert_task_array.obj `if test -f 'main/insert_task_array.c'; then $(CYGPATH_W) 'main/insert_task_array.c'; else $(CYGPATH_W) '$(srcdir)/main/insert_task_array.c'; fi`

insert_task_dyn_handles.o: main/insert_task_dyn_handles.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT insert_task_dyn_handles.o -MD -MP -MF $(DEPDIR)/insert_task_dyn_handles.Tpo -c -o insert_task_dyn_handles.o `test -f 'main/insert_task_dyn_handles.c' || echo '$(srcdir)/'`main/insert_task_dyn_handles.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/insert_task_dyn_handles.Tpo $(DEPDIR)/insert_task_dyn_handles.Po
#	$(AM_V_CC)source='main/insert_task_dyn_handles.c' object='insert_task_dyn_handles.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o insert_task_dyn_handles.o `test -f 'main/insert_task_dyn_handles.c' || echo '$(srcdir)/'`main/insert_task_dyn_handles.c

insert_task_dyn_handles.obj: main/insert_task_dyn_handles.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT insert_task_dyn_handles.obj -MD -MP -MF $(DEPDIR)/insert_task_dyn_handles.Tpo -c -o insert_task_dyn_handles.obj `if test -f 'main/insert_task_dyn_handles.c'; then $(CYGPATH_W) 'main/insert_task_dyn_handles.c'; else $(CYGPATH_W) '$(srcdir)/main/insert_task_dyn_handles.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/insert_task_dyn_handles.Tpo $(DEPDIR)/insert_task_dyn_handles.Po
#	$(AM_V_CC)source='main/insert_task_dyn_handles.c' object='insert_task_dyn_handles.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o insert_task_dyn_handles.obj `if test -f 'main/insert_task_dyn_handles.c'; then $(CYGPATH_W) 'main/insert_task_dyn_handles.c'; else $(CYGPATH_W) '$(srcdir)/main/insert_task_dyn_handles.c'; fi`

insert_task_many.o: main/insert_task_many.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT insert_task_many.o -MD -MP -MF $(DEPDIR)/insert_task_many.Tpo -c -o insert_task_many.o `test -f 'main/insert_task_many.c' || echo '$(srcdir)/'`main/insert_task_many.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/insert_task_many.Tpo $(DEPDIR)/insert_task_many.Po
#	$(AM_V_CC)source='main/insert_task_many.c' object='insert_task_many.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o insert_task_many.o `test -f 'main/insert_task_many.c' || echo '$(srcdir)/'`main/insert_task_many.c

insert_task_many.obj: main/insert_task_many.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT insert_task_many.obj -MD -MP -MF $(DEPDIR)/insert_task_many.Tpo -c -o insert_task_many.obj `if test -f 'main/insert_task_many.c'; then $(CYGPATH_W) 'main/insert_task_many.c'; else $(CYGPATH_W) '$(srcdir)/main/insert_task_many.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/insert_task_many.Tpo $(DEPDIR)/insert_task_many.Po
#	$(AM_V_CC)source='main/insert_task_many.c' object='insert_task_many.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o insert_task_many.obj `if test -f 'main/insert_task_many.c'; then $(CYGPATH_W) 'main/insert_task_many.c'; else $(CYGPATH_W) '$(srcdir)/main/insert_task_many.c'; fi`

insert_task_nullcodelet.o: main/insert_task_nullcodelet.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT insert_task_nullcodelet.o -MD -MP -MF $(DEPDIR)/insert_task_nullcodelet.Tpo -c -o insert_task_nullcodelet.o `test -f 'main/insert_task_nullcodelet.c' || echo '$(srcdir)/'`main/insert_task_nullcodelet.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/insert_task_nullcodelet.Tpo $(DEPDIR)/insert_task_nullcodelet.Po
#	$(AM_V_CC)source='main/insert_task_nullcodelet.c' object='insert_task_nullcodelet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o insert_task_nullcodelet.o `test -f 'main/insert_task_nullcodelet.c' || echo '$(srcdir)/'`main/insert_task_nullcodelet.c

insert_task_nullcodelet.obj: main/insert_task_nullcodelet.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT insert_task_nullcodelet.obj -MD -MP -MF $(DEPDIR)/insert_task_nullcodelet.Tpo -c -o insert_task_nullcodelet.obj `if test -f 'main/insert_task_nullcodelet.c'; then $(CYGPATH_W) 'main/insert_task_nullcodelet.c'; else $(CYGPATH_W) '$(srcdir)/main/insert_task_nullcodelet.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/insert_task_nullcodelet.Tpo $(DEPDIR)/insert_task_nullcodelet.Po
#	$(AM_V_CC)source='main/insert_task_nullcodelet.c' object='insert_task_nullcodelet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o insert_task_nullcodelet.obj `if test -f 'main/insert_task_nullcodelet.c'; then $(CYGPATH_W) 'main/insert_task_nullcodelet.c'; else $(CYGPATH_W) '$(srcdir)/main/insert_task_nullcodelet.c'; fi`

insert_task_pack.o: main/insert_task_pack.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT insert_task_pack.o -MD -MP -MF $(DEPDIR)/insert_task_pack.Tpo -c -o insert_task_pack.o `test -f 'main/insert_task_pack.c' || echo '$(srcdir)/'`main/insert_task_pack.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/insert_task_pack.Tpo $(DEPDIR)/insert_task_pack.Po
#	$(AM_V_CC)source='main/insert_task_pack.c' object='insert_task_pack.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o insert_task_pack.o `test -f 'main/insert_task_pack.c' || echo '$(srcdir)/'`main/insert_task_pack.c

insert_task_pack.obj: main/insert_task_pack.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT insert_task_pack.obj -MD -MP -MF $(DEPDIR)/insert_task_pack.Tpo -c -o insert_task_pack.obj `if test -f 'main/insert_task_pack.c'; then $(CYGPATH_W) 'main/insert_task_pack.c'; else $(CYGPATH_W) '$(srcdir)/main/insert_task_pack.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/insert_task_pack.Tpo $(DEPDIR)/insert_task_pack.Po
#	$(AM_V_CC)source='main/insert_task_pack.c' object='insert_task_pack.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o insert_task_pack.obj `if test -f 'main/insert_task_pack.c'; then $(CYGPATH_W) 'main/insert_task_pack.c'; else $(CYGPATH_W) '$(srcdir)/main/insert_task_pack.c'; fi`

insert_task_value.o: main/insert_task_value.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT insert_task_value.o -MD -MP -MF $(DEPDIR)/insert_task_value.Tpo -c -o insert_task_value.o `test -f 'main/insert_task_value.c' || echo '$(srcdir)/'`main/insert_task_value.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/insert_task_value.Tpo $(DEPDIR)/insert_task_value.Po
#	$(AM_V_CC)source='main/insert_task_value.c' object='insert_task_value.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o insert_task_value.o `test -f 'main/insert_task_value.c' || echo '$(srcdir)/'`main/insert_task_value.c

insert_task_value.obj: main/insert_task_value.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT insert_task_value.obj -MD -MP -MF $(DEPDIR)/insert_task_value.Tpo -c -o insert_task_value.obj `if test -f 'main/insert_task_value.c'; then $(CYGPATH_W) 'main/insert_task_value.c'; else $(CYGPATH_W) '$(srcdir)/main/insert_task_value.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/insert_task_value.Tpo $(DEPDIR)/insert_task_value.Po
#	$(AM_V_CC)source='main/insert_task_value.c' object='insert_task_value.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o insert_task_value.obj `if test -f 'main/insert_task_value.c'; then $(CYGPATH_W) 'main/insert_task_value.c'; else $(CYGPATH_W) '$(srcdir)/main/insert_task_value.c'; fi`

insert_task_where.o: main/insert_task_where.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT insert_task_where.o -MD -MP -MF $(DEPDIR)/insert_task_where.Tpo -c -o insert_task_where.o `test -f 'main/insert_task_where.c' || echo '$(srcdir)/'`main/insert_task_where.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/insert_task_where.Tpo $(DEPDIR)/insert_task_where.Po
#	$(AM_V_CC)source='main/insert_task_where.c' object='insert_task_where.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o insert_task_where.o `test -f 'main/insert_task_where.c' || echo '$(srcdir)/'`main/insert_task_where.c

insert_task_where.obj: main/insert_task_where.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT insert_task_where.obj -MD -MP -MF $(DEPDIR)/insert_task_where.Tpo -c -o insert_task_where.obj `if test -f 'main/insert_task_where.c'; then $(CYGPATH_W) 'main/insert_task_where.c'; else $(CYGPATH_W) '$(srcdir)/main/insert_task_where.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/insert_task_where.Tpo $(DEPDIR)/insert_task_where.Po
#	$(AM_V_CC)source='main/insert_task_where.c' object='insert_task_where.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o insert_task_where.obj `if test -f 'main/insert_task_where.c'; then $(CYGPATH_W) 'main/insert_task_where.c'; else $(CYGPATH_W) '$(srcdir)/main/insert_task_where.c'; fi`

job.o: main/job.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT job.o -MD -MP -MF $(DEPDIR)/job.Tpo -c -o job.o `test -f 'main/job.c' || echo '$(srcdir)/'`main/job.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/job.Tpo $(DEPDIR)/job.Po
#	$(AM_V_CC)source='main/job.c' object='job.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o job.o `test -f 'main/job.c' || echo '$(srcdir)/'`main/job.c

job.obj: main/job.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT job.obj -MD -MP -MF $(DEPDIR)/job.Tpo -c -o job.obj `if test -f 'main/job.c'; then $(CYGPATH_W) 'main/job.c'; else $(CYGPATH_W) '$(srcdir)/main/job.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/job.Tpo $(DEPDIR)/job.Po
#	$(AM_V_CC)source='main/job.c' object='job.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o job.obj `if test -f 'main/job.c'; then $(CYGPATH_W) 'main/job.c'; else $(CYGPATH_W) '$(srcdir)/main/job.c'; fi`

mkdtemp.o: main/mkdtemp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkdtemp.o -MD -MP -MF $(DEPDIR)/mkdtemp.Tpo -c -o mkdtemp.o `test -f 'main/mkdtemp.c' || echo '$(srcdir)/'`main/mkdtemp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mkdtemp.Tpo $(DEPDIR)/mkdtemp.Po
#	$(AM_V_CC)source='main/mkdtemp.c' object='mkdtemp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mkdtemp.o `test -f 'main/mkdtemp.c' || echo '$(srcdir)/'`main/mkdtemp.c

mkdtemp.obj: main/mkdtemp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mkdtemp.obj -MD -MP -MF $(DEPDIR)/mkdtemp.Tpo -c -o mkdtemp.obj `if test -f 'main/mkdtemp.c'; then $(CYGPATH_W) 'main/mkdtemp.c'; else $(CYGPATH_W) '$(srcdir)/main/mkdtemp.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mkdtemp.Tpo $(DEPDIR)/mkdtemp.Po
#	$(AM_V_CC)source='main/mkdtemp.c' object='mkdtemp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mkdtemp.obj `if test -f 'main/mkdtemp.c'; then $(CYGPATH_W) 'main/mkdtemp.c'; else $(CYGPATH_W) '$(srcdir)/main/mkdtemp.c'; fi`

multithreaded.o: main/multithreaded.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multithreaded.o -MD -MP -MF $(DEPDIR)/multithreaded.Tpo -c -o multithreaded.o `test -f 'main/multithreaded.c' || echo '$(srcdir)/'`main/multithreaded.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/multithreaded.Tpo $(DEPDIR)/multithreaded.Po
#	$(AM_V_CC)source='main/multithreaded.c' object='multithreaded.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multithreaded.o `test -f 'main/multithreaded.c' || echo '$(srcdir)/'`main/multithreaded.c

multithreaded.obj: main/multithreaded.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multithreaded.obj -MD -MP -MF $(DEPDIR)/multithreaded.Tpo -c -o multithreaded.obj `if test -f 'main/multithreaded.c'; then $(CYGPATH_W) 'main/multithreaded.c'; else $(CYGPATH_W) '$(srcdir)/main/multithreaded.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/multithreaded.Tpo $(DEPDIR)/multithreaded.Po
#	$(AM_V_CC)source='main/multithreaded.c' object='multithreaded.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multithreaded.obj `if test -f 'main/multithreaded.c'; then $(CYGPATH_W) 'main/multithreaded.c'; else $(CYGPATH_W) '$(srcdir)/main/multithreaded.c'; fi`

multithreaded_init.o: main/multithreaded_init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multithreaded_init.o -MD -MP -MF $(DEPDIR)/multithreaded_init.Tpo -c -o multithreaded_init.o `test -f 'main/multithreaded_init.c' || echo '$(srcdir)/'`main/multithreaded_init.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/multithreaded_init.Tpo $(DEPDIR)/multithreaded_init.Po
#	$(AM_V_CC)source='main/multithreaded_init.c' object='multithreaded_init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multithreaded_init.o `test -f 'main/multithreaded_init.c' || echo '$(srcdir)/'`main/multithreaded_init.c

multithreaded_init.obj: main/multithreaded_init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multithreaded_init.obj -MD -MP -MF $(DEPDIR)/multithreaded_init.Tpo -c -o multithreaded_init.obj `if test -f 'main/multithreaded_init.c'; then $(CYGPATH_W) 'main/multithreaded_init.c'; else $(CYGPATH_W) '$(srcdir)/main/multithreaded_init.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/multithreaded_init.Tpo $(DEPDIR)/multithreaded_init.Po
#	$(AM_V_CC)source='main/multithreaded_init.c' object='multithreaded_init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multithreaded_init.obj `if test -f 'main/multithreaded_init.c'; then $(CYGPATH_W) 'main/multithreaded_init.c'; else $(CYGPATH_W) '$(srcdir)/main/multithreaded_init.c'; fi`

pack.o: main/pack.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pack.o -MD -MP -MF $(DEPDIR)/pack.Tpo -c -o pack.o `test -f 'main/pack.c' || echo '$(srcdir)/'`main/pack.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/pack.Tpo $(DEPDIR)/pack.Po
#	$(AM_V_CC)source='main/pack.c' object='pack.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pack.o `test -f 'main/pack.c' || echo '$(srcdir)/'`main/pack.c

pack.obj: main/pack.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pack.obj -MD -MP -MF $(DEPDIR)/pack.Tpo -c -o pack.obj `if test -f 'main/pack.c'; then $(CYGPATH_W) 'main/pack.c'; else $(CYGPATH_W) '$(srcdir)/main/pack.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pack.Tpo $(DEPDIR)/pack.Po
#	$(AM_V_CC)source='main/pack.c' object='pack.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pack.obj `if test -f 'main/pack.c'; then $(CYGPATH_W) 'main/pack.c'; else $(CYGPATH_W) '$(srcdir)/main/pack.c'; fi`

pause_resume.o: main/pause_resume.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pause_resume.o -MD -MP -MF $(DEPDIR)/pause_resume.Tpo -c -o pause_resume.o `test -f 'main/pause_resume.c' || echo '$(srcdir)/'`main/pause_resume.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/pause_resume.Tpo $(DEPDIR)/pause_resume.Po
#	$(AM_V_CC)source='main/pause_resume.c' object='pause_resume.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pause_resume.o `test -f 'main/pause_resume.c' || echo '$(srcdir)/'`main/pause_resume.c

pause_resume.obj: main/pause_resume.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pause_resume.obj -MD -MP -MF $(DEPDIR)/pause_resume.Tpo -c -o pause_resume.obj `if test -f 'main/pause_resume.c'; then $(CYGPATH_W) 'main/pause_resume.c'; else $(CYGPATH_W) '$(srcdir)/main/pause_resume.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pause_resume.Tpo $(DEPDIR)/pause_resume.Po
#	$(AM_V_CC)source='main/pause_resume.c' object='pause_resume.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pause_resume.obj `if test -f 'main/pause_resume.c'; then $(CYGPATH_W) 'main/pause_resume.c'; else $(CYGPATH_W) '$(srcdir)/main/pause_resume.c'; fi`

regenerate.o: main/regenerate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT regenerate.o -MD -MP -MF $(DEPDIR)/regenerate.Tpo -c -o regenerate.o `test -f 'main/regenerate.c' || echo '$(srcdir)/'`main/regenerate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/regenerate.Tpo $(DEPDIR)/regenerate.Po
#	$(AM_V_CC)source='main/regenerate.c' object='regenerate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o regenerate.o `test -f 'main/regenerate.c' || echo '$(srcdir)/'`main/regenerate.c

regenerate.obj: main/regenerate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT regenerate.obj -MD -MP -MF $(DEPDIR)/regenerate.Tpo -c -o regenerate.obj `if test -f 'main/regenerate.c'; then $(CYGPATH_W) 'main/regenerate.c'; else $(CYGPATH_W) '$(srcdir)/main/regenerate.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/regenerate.Tpo $(DEPDIR)/regenerate.Po
#	$(AM_V_CC)source='main/regenerate.c' object='regenerate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o regenerate.obj `if test -f 'main/regenerate.c'; then $(CYGPATH_W) 'main/regenerate.c'; else $(CYGPATH_W) '$(srcdir)/main/regenerate.c'; fi`

regenerate_pipeline.o: main/regenerate_pipeline.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT regenerate_pipeline.o -MD -MP -MF $(DEPDIR)/regenerate_pipeline.Tpo -c -o regenerate_pipeline.o `test -f 'main/regenerate_pipeline.c' || echo '$(srcdir)/'`main/regenerate_pipeline.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/regenerate_pipeline.Tpo $(DEPDIR)/regenerate_pipeline.Po
#	$(AM_V_CC)source='main/regenerate_pipeline.c' object='regenerate_pipeline.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o regenerate_pipeline.o `test -f 'main/regenerate_pipeline.c' || echo '$(srcdir)/'`main/regenerate_pipeline.c

regenerate_pipeline.obj: main/regenerate_pipeline.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT regenerate_pipeline.obj -MD -MP -MF $(DEPDIR)/regenerate_pipeline.Tpo -c -o regenerate_pipeline.obj `if test -f 'main/regenerate_pipeline.c'; then $(CYGPATH_W) 'main/regenerate_pipeline.c'; else $(CYGPATH_W) '$(srcdir)/main/regenerate_pipeline.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/regenerate_pipeline.Tpo $(DEPDIR)/regenerate_pipeline.Po
#	$(AM_V_CC)source='main/regenerate_pipeline.c' object='regenerate_pipeline.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o regenerate_pipeline.obj `if test -f 'main/regenerate_pipeline.c'; then $(CYGPATH_W) 'main/regenerate_pipeline.c'; else $(CYGPATH_W) '$(srcdir)/main/regenerate_pipeline.c'; fi`

restart.o: main/restart.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT restart.o -MD -MP -MF $(DEPDIR)/restart.Tpo -c -o restart.o `test -f 'main/restart.c' || echo '$(srcdir)/'`main/restart.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/restart.Tpo $(DEPDIR)/restart.Po
#	$(AM_V_CC)source='main/restart.c' object='restart.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o restart.o `test -f 'main/restart.c' || echo '$(srcdir)/'`main/restart.c

restart.obj: main/restart.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT restart.obj -MD -MP -MF $(DEPDIR)/restart.Tpo -c -o restart.obj `if test -f 'main/restart.c'; then $(CYGPATH_W) 'main/restart.c'; else $(CYGPATH_W) '$(srcdir)/main/restart.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/restart.Tpo $(DEPDIR)/restart.Po
#	$(AM_V_CC)source='main/restart.c' object='restart.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o restart.obj `if test -f 'main/restart.c'; then $(CYGPATH_W) 'main/restart.c'; else $(CYGPATH_W) '$(srcdir)/main/restart.c'; fi`

starpu_init.o: main/starpu_init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT starpu_init.o -MD -MP -MF $(DEPDIR)/starpu_init.Tpo -c -o starpu_init.o `test -f 'main/starpu_init.c' || echo '$(srcdir)/'`main/starpu_init.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/starpu_init.Tpo $(DEPDIR)/starpu_init.Po
#	$(AM_V_CC)source='main/starpu_init.c' object='starpu_init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o starpu_init.o `test -f 'main/starpu_init.c' || echo '$(srcdir)/'`main/starpu_init.c

starpu_init.obj: main/starpu_init.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT starpu_init.obj -MD -MP -MF $(DEPDIR)/starpu_init.Tpo -c -o starpu_init.obj `if test -f 'main/starpu_init.c'; then $(CYGPATH_W) 'main/starpu_init.c'; else $(CYGPATH_W) '$(srcdir)/main/starpu_init.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/starpu_init.Tpo $(DEPDIR)/starpu_init.Po
#	$(AM_V_CC)source='main/starpu_init.c' object='starpu_init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o starpu_init.obj `if test -f 'main/starpu_init.c'; then $(CYGPATH_W) 'main/starpu_init.c'; else $(CYGPATH_W) '$(srcdir)/main/starpu_init.c'; fi`

starpu_task_bundle.o: main/starpu_task_bundle.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT starpu_task_bundle.o -MD -MP -MF $(DEPDIR)/starpu_task_bundle.Tpo -c -o starpu_task_bundle.o `test -f 'main/starpu_task_bundle.c' || echo '$(srcdir)/'`main/starpu_task_bundle.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/starpu_task_bundle.Tpo $(DEPDIR)/starpu_task_bundle.Po
#	$(AM_V_CC)source='main/starpu_task_bundle.c' object='starpu_task_bundle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o starpu_task_bundle.o `test -f 'main/starpu_task_bundle.c' || echo '$(srcdir)/'`main/starpu_task_bundle.c

starpu_task_bundle.obj: main/starpu_task_bundle.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT starpu_task_bundle.obj -MD -MP -MF $(DEPDIR)/starpu_task_bundle.Tpo -c -o starpu_task_bundle.obj `if test -f 'main/starpu_task_bundle.c'; then $(CYGPATH_W) 'main/starpu_task_bundle.c'; else $(CYGPATH_W) '$(srcdir)/main/starpu_task_bundle.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/starpu_task_bundle.Tpo $(DEPDIR)/starpu_task_bundle.Po
#	$(AM_V_CC)source='main/starpu_task_bundle.c' object='starpu_task_bundle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o starpu_task_bundle.obj `if test -f 'main/starpu_task_bundle.c'; then $(CYGPATH_W) 'main/starpu_task_bundle.c'; else $(CYGPATH_W) '$(srcdir)/main/starpu_task_bundle.c'; fi`

starpu_task_wait.o: main/starpu_task_wait.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT starpu_task_wait.o -MD -MP -MF $(DEPDIR)/starpu_task_wait.Tpo -c -o starpu_task_wait.o `test -f 'main/starpu_task_wait.c' || echo '$(srcdir)/'`main/starpu_task_wait.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/starpu_task_wait.Tpo $(DEPDIR)/starpu_task_wait.Po
#	$(AM_V_CC)source='main/starpu_task_wait.c' object='starpu_task_wait.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o starpu_task_wait.o `test -f 'main/starpu_task_wait.c' || echo '$(srcdir)/'`main/starpu_task_wait.c

starpu_task_wait.obj: main/starpu_task_wait.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT starpu_task_wait.obj -MD -MP -MF $(DEPDIR)/starpu_task_wait.Tpo -c -o starpu_task_wait.obj `if test -f 'main/starpu_task_wait.c'; then $(CYGPATH_W) 'main/starpu_task_wait.c'; else $(CYGPATH_W) '$(srcdir)/main/starpu_task_wait.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/starpu_task_wait.Tpo $(DEPDIR)/starpu_task_wait.Po
#	$(AM_V_CC)source='main/starpu_task_wait.c' object='starpu_task_wait.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o starpu_task_wait.obj `if test -f 'main/starpu_task_wait.c'; then $(CYGPATH_W) 'main/starpu_task_wait.c'; else $(CYGPATH_W) '$(srcdir)/main/starpu_task_wait.c'; fi`

starpu_task_wait_for_all.o: main/starpu_task_wait_for_all.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT starpu_task_wait_for_all.o -MD -MP -MF $(DEPDIR)/starpu_task_wait_for_all.Tpo -c -o starpu_task_wait_for_all.o `test -f 'main/starpu_task_wait_for_all.c' || echo '$(srcdir)/'`main/starpu_task_wait_for_all.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/starpu_task_wait_for_all.Tpo $(DEPDIR)/starpu_task_wait_for_all.Po
#	$(AM_V_CC)source='main/starpu_task_wait_for_all.c' object='starpu_task_wait_for_all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o starpu_task_wait_for_all.o `test -f 'main/starpu_task_wait_for_all.c' || echo '$(srcdir)/'`main/starpu_task_wait_for_all.c

starpu_task_wait_for_all.obj: main/starpu_task_wait_for_all.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT starpu_task_wait_for_all.obj -MD -MP -MF $(DEPDIR)/starpu_task_wait_for_all.Tpo -c -o starpu_task_wait_for_all.obj `if test -f 'main/starpu_task_wait_for_all.c'; then $(CYGPATH_W) 'main/starpu_task_wait_for_all.c'; else $(CYGPATH_W) '$(srcdir)/main/starpu_task_wait_for_all.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/starpu_task_wait_for_all.Tpo $(DEPDIR)/starpu_task_wait_for_all.Po
#	$(AM_V_CC)source='main/starpu_task_wait_for_all.c' object='starpu_task_wait_for_all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o starpu_task_wait_for_all.obj `if test -f 'main/starpu_task_wait_for_all.c'; then $(CYGPATH_W) 'main/starpu_task_wait_for_all.c'; else $(CYGPATH_W) '$(srcdir)/main/starpu_task_wait_for_all.c'; fi`

starpu_worker_exists.o: main/starpu_worker_exists.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT starpu_worker_exists.o -MD -MP -MF $(DEPDIR)/starpu_worker_exists.Tpo -c -o starpu_worker_exists.o `test -f 'main/starpu_worker_exists.c' || echo '$(srcdir)/'`main/starpu_worker_exists.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/starpu_worker_exists.Tpo $(DEPDIR)/starpu_worker_exists.Po
#	$(AM_V_CC)source='main/starpu_worker_exists.c' object='starpu_worker_exists.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o starpu_worker_exists.o `test -f 'main/starpu_worker_exists.c' || echo '$(srcdir)/'`main/starpu_worker_exists.c

starpu_worker_exists.obj: main/starpu_worker_exists.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT starpu_worker_exists.obj -MD -MP -MF $(DEPDIR)/starpu_worker_exists.Tpo -c -o starpu_worker_exists.obj `if test -f 'main/starpu_worker_exists.c'; then $(CYGPATH_W) 'main/starpu_worker_exists.c'; else $(CYGPATH_W) '$(srcdir)/main/starpu_worker_exists.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/starpu_worker_exists.Tpo $(DEPDIR)/starpu_worker_exists.Po
#	$(AM_V_CC)source='main/starpu_worker_exists.c' object='starpu_worker_exists.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o starpu_worker_exists.obj `if test -f 'main/starpu_worker_exists.c'; then $(CYGPATH_W) 'main/starpu_worker_exists.c'; else $(CYGPATH_W) '$(srcdir)/main/starpu_worker_exists.c'; fi`

static_restartable.o: main/static_restartable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT static_restartable.o -MD -MP -MF $(DEPDIR)/static_restartable.Tpo -c -o static_restartable.o `test -f 'main/static_restartable.c' || echo '$(srcdir)/'`main/static_restartable.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/static_restartable.Tpo $(DEPDIR)/static_restartable.Po
#	$(AM_V_CC)source='main/static_restartable.c' object='static_restartable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o static_restartable.o `test -f 'main/static_restartable.c' || echo '$(srcdir)/'`main/static_restartable.c

static_restartable.obj: main/static_restartable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT static_restartable.obj -MD -MP -MF $(DEPDIR)/static_restartable.Tpo -c -o static_restartable.obj `if test -f 'main/static_restartable.c'; then $(CYGPATH_W) 'main/static_restartable.c'; else $(CYGPATH_W) '$(srcdir)/main/static_restartable.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/static_restartable.Tpo $(DEPDIR)/static_restartable.Po
#	$(AM_V_CC)source='main/static_restartable.c' object='static_restartable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o static_restartable.obj `if test -f 'main/static_restartable.c'; then $(CYGPATH_W) 'main/static_restartable.c'; else $(CYGPATH_W) '$(srcdir)/main/static_restartable.c'; fi`

static_restartable_tag.o: main/static_restartable_tag.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT static_restartable_tag.o -MD -MP -MF $(DEPDIR)/static_restartable_tag.Tpo -c -o static_restartable_tag.o `test -f 'main/static_restartable_tag.c' || echo '$(srcdir)/'`main/static_restartable_tag.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/static_restartable_tag.Tpo $(DEPDIR)/static_restartable_tag.Po
#	$(AM_V_CC)source='main/static_restartable_tag.c' object='static_restartable_tag.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o static_restartable_tag.o `test -f 'main/static_restartable_tag.c' || echo '$(srcdir)/'`main/static_restartable_tag.c

static_restartable_tag.obj: main/static_restartable_tag.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT static_restartable_tag.obj -MD -MP -MF $(DEPDIR)/static_restartable_tag.Tpo -c -o static_restartable_tag.obj `if test -f 'main/static_restartable_tag.c'; then $(CYGPATH_W) 'main/static_restartable_tag.c'; else $(CYGPATH_W) '$(srcdir)/main/static_restartable_tag.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/static_restartable_tag.Tpo $(DEPDIR)/static_restartable_tag.Po
#	$(AM_V_CC)source='main/static_restartable_tag.c' object='static_restartable_tag.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o static_restartable_tag.obj `if test -f 'main/static_restartable_tag.c'; then $(CYGPATH_W) 'main/static_restartable_tag.c'; else $(CYGPATH_W) '$(srcdir)/main/static_restartable_tag.c'; fi`

static_restartable_using_initializer.o: main/static_restartable_using_initializer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT static_restartable_using_initializer.o -MD -MP -MF $(DEPDIR)/static_restartable_using_initializer.Tpo -c -o static_restartable_using_initializer.o `test -f 'main/static_restartable_using_initializer.c' || echo '$(srcdir)/'`main/static_restartable_using_initializer.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/static_restartable_using_initializer.Tpo $(DEPDIR)/static_restartable_using_initializer.Po
#	$(AM_V_CC)source='main/static_restartable_using_initializer.c' object='static_restartable_using_initializer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o static_restartable_using_initializer.o `test -f 'main/static_restartable_using_initializer.c' || echo '$(srcdir)/'`main/static_restartable_using_initializer.c

static_restartable_using_initializer.obj: main/static_restartable_using_initializer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT static_restartable_using_initializer.obj -MD -MP -MF $(DEPDIR)/static_restartable_using_initializer.Tpo -c -o static_restartable_using_initializer.obj `if test -f 'main/static_restartable_using_initializer.c'; then $(CYGPATH_W) 'main/static_restartable_using_initializer.c'; else $(CYGPATH_W) '$(srcdir)/main/static_restartable_using_initializer.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/static_restartable_using_initializer.Tpo $(DEPDIR)/static_restartable_using_initializer.Po
#	$(AM_V_CC)source='main/static_restartable_using_initializer.c' object='static_restartable_using_initializer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o static_restartable_using_initializer.obj `if test -f 'main/static_restartable_using_initializer.c'; then $(CYGPATH_W) 'main/static_restartable_using_initializer.c'; else $(CYGPATH_W) '$(srcdir)/main/static_restartable_using_initializer.c'; fi`

subgraph_repeat.o: main/subgraph_repeat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT subgraph_repeat.o -MD -MP -MF $(DEPDIR)/subgraph_repeat.Tpo -c -o subgraph_repeat.o `test -f 'main/subgraph_repeat.c' || echo '$(srcdir)/'`main/subgraph_repeat.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/subgraph_repeat.Tpo $(DEPDIR)/subgraph_repeat.Po
#	$(AM_V_CC)source='main/subgraph_repeat.c' object='subgraph_repeat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o subgraph_repeat.o `test -f 'main/subgraph_repeat.c' || echo '$(srcdir)/'`main/subgraph_repeat.c

subgraph_repeat.obj: main/subgraph_repeat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT subgraph_repeat.obj -MD -MP -MF $(DEPDIR)/subgraph_repeat.Tpo -c -o subgraph_repeat.obj `if test -f 'main/subgraph_repeat.c'; then $(CYGPATH_W) 'main/subgraph_repeat.c'; else $(CYGPATH_W) '$(srcdir)/main/subgraph_repeat.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/subgraph_repeat.Tpo $(DEPDIR)/subgraph_repeat.Po
#	$(AM_V_CC)source='main/subgraph_repeat.c' object='subgraph_repeat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o subgraph_repeat.obj `if test -f 'main/subgraph_repeat.c'; then $(CYGPATH_W) 'main/subgraph_repeat.c'; else $(CYGPATH_W) '$(srcdir)/main/subgraph_repeat.c'; fi`

increment_codelet.o: main/increment_codelet.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT increment_codelet.o -MD -MP -MF $(DEPDIR)/increment_codelet.Tpo -c -o increment_codelet.o `test -f 'main/increment_codelet.c' || echo '$(srcdir)/'`main/increment_codelet.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/increment_codelet.Tpo $(DEPDIR)/increment_codelet.Po
#	$(AM_V_CC)source='main/increment_codelet.c' object='increment_codelet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o increment_codelet.o `test -f 'main/increment_codelet.c' || echo '$(srcdir)/'`main/increment_codelet.c

increment_codelet.obj: main/increment_codelet.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT increment_codelet.obj -MD -MP -MF $(DEPDIR)/increment_codelet.Tpo -c -o increment_codelet.obj `if test -f 'main/increment_codelet.c'; then $(CYGPATH_W) 'main/increment_codelet.c'; else $(CYGPATH_W) '$(srcdir)/main/increment_codelet.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/increment_codelet.Tpo $(DEPDIR)/increment_codelet.Po
#	$(AM_V_CC)source='main/increment_codelet.c' object='increment_codelet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o increment_codelet.obj `if test -f 'main/increment_codelet.c'; then $(CYGPATH_W) 'main/increment_codelet.c'; else $(CYGPATH_W) '$(srcdir)/main/increment_codelet.c'; fi`

subgraph_repeat_regenerate.o: main/subgraph_repeat_regenerate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT subgraph_repeat_regenerate.o -MD -MP -MF $(DEPDIR)/subgraph_repeat_regenerate.Tpo -c -o subgraph_repeat_regenerate.o `test -f 'main/subgraph_repeat_regenerate.c' || echo '$(srcdir)/'`main/subgraph_repeat_regenerate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/subgraph_repeat_regenerate.Tpo $(DEPDIR)/subgraph_repeat_regenerate.Po
#	$(AM_V_CC)source='main/subgraph_repeat_regenerate.c' object='subgraph_repeat_regenerate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o subgraph_repeat_regenerate.o `test -f 'main/subgraph_repeat_regenerate.c' || echo '$(srcdir)/'`main/subgraph_repeat_regenerate.c

subgraph_repeat_regenerate.obj: main/subgraph_repeat_regenerate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT subgraph_repeat_regenerate.obj -MD -MP -MF $(DEPDIR)/subgraph_repeat_regenerate.Tpo -c -o subgraph_repeat_regenerate.obj `if test -f 'main/subgraph_repeat_regenerate.c'; then $(CYGPATH_W) 'main/subgraph_repeat_regenerate.c'; else $(CYGPATH_W) '$(srcdir)/main/subgraph_repeat_regenerate.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/subgraph_repeat_regenerate.Tpo $(DEPDIR)/subgraph_repeat_regenerate.Po
#	$(AM_V_CC)source='main/subgraph_repeat_regenerate.c' object='subgraph_repeat_regenerate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o subgraph_repeat_regenerate.obj `if test -f 'main/subgraph_repeat_regenerate.c'; then $(CYGPATH_W) 'main/subgraph_repeat_regenerate.c'; else $(CYGPATH_W) '$(srcdir)/main/subgraph_repeat_regenerate.c'; fi`

subgraph_repeat_regenerate_tag.o: main/subgraph_repeat_regenerate_tag.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT subgraph_repeat_regenerate_tag.o -MD -MP -MF $(DEPDIR)/subgraph_repeat_regenerate_tag.Tpo -c -o subgraph_repeat_regenerate_tag.o `test -f 'main/subgraph_repeat_regenerate_tag.c' || echo '$(srcdir)/'`main/subgraph_repeat_regenerate_tag.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/subgraph_repeat_regenerate_tag.Tpo $(DEPDIR)/subgraph_repeat_regenerate_tag.Po
#	$(AM_V_CC)source='main/subgraph_repeat_regenerate_tag.c' object='subgraph_repeat_regenerate_tag.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o subgraph_repeat_regenerate_tag.o `test -f 'main/subgraph_repeat_regenerate_tag.c' || echo '$(srcdir)/'`main/subgraph_repeat_regenerate_tag.c

subgraph_repeat_regenerate_tag.obj: main/subgraph_repeat_regenerate_tag.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT subgraph_repeat_regenerate_tag.obj -MD -MP -MF $(DEPDIR)/subgraph_repeat_regenerate_tag.Tpo -c -o subgraph_repeat_regenerate_tag.obj `if test -f 'main/subgraph_repeat_regenerate_tag.c'; then $(CYGPATH_W) 'main/subgraph_repeat_regenerate_tag.c'; else $(CYGPATH_W) '$(srcdir)/main/subgraph_repeat_regenerate_tag.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/subgraph_repeat_regenerate_tag.Tpo $(DEPDIR)/subgraph_repeat_regenerate_tag.Po
#	$(AM_V_CC)source='main/subgraph_repeat_regenerate_tag.c' object='subgraph_repeat_regenerate_tag.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o subgraph_repeat_regenerate_tag.obj `if test -f 'main/subgraph_repeat_regenerate_tag.c'; then $(CYGPATH_W) 'main/subgraph_repeat_regenerate_tag.c'; else $(CYGPATH_W) '$(srcdir)/main/subgraph_repeat_regenerate_tag.c'; fi`

subgraph_repeat_regenerate_tag_cycle.o: main/subgraph_repeat_regenerate_tag_cycle.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT subgraph_repeat_regenerate_tag_cycle.o -MD -MP -MF $(DEPDIR)/subgraph_repeat_regenerate_tag_cycle.Tpo -c -o subgraph_repeat_regenerate_tag_cycle.o `test -f 'main/subgraph_repeat_regenerate_tag_cycle.c' || echo '$(srcdir)/'`main/subgraph_repeat_regenerate_tag_cycle.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/subgraph_repeat_regenerate_tag_cycle.Tpo $(DEPDIR)/subgraph_repeat_regenerate_tag_cycle.Po
#	$(AM_V_CC)source='main/subgraph_repeat_regenerate_tag_cycle.c' object='subgraph_repeat_regenerate_tag_cycle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o subgraph_repeat_regenerate_tag_cycle.o `test -f 'main/subgraph_repeat_regenerate_tag_cycle.c' || echo '$(srcdir)/'`main/subgraph_repeat_regenerate_tag_cycle.c

subgraph_repeat_regenerate_tag_cycle.obj: main/subgraph_repeat_regenerate_tag_cycle.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT subgraph_repeat_regenerate_tag_cycle.obj -MD -MP -MF $(DEPDIR)/subgraph_repeat_regenerate_tag_cycle.Tpo -c -o subgraph_repeat_regenerate_tag_cycle.obj `if test -f 'main/subgraph_repeat_regenerate_tag_cycle.c'; then $(CYGPATH_W) 'main/subgraph_repeat_regenerate_tag_cycle.c'; else $(CYGPATH_W) '$(srcdir)/main/subgraph_repeat_regenerate_tag_cycle.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/subgraph_repeat_regenerate_tag_cycle.Tpo $(DEPDIR)/subgraph_repeat_regenerate_tag_cycle.Po
#	$(AM_V_CC)source='main/subgraph_repeat_regenerate_tag_cycle.c' object='subgraph_repeat_regenerate_tag_cycle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o subgraph_repeat_regenerate_tag_cycle.obj `if test -f 'main/subgraph_repeat_regenerate_tag_cycle.c'; then $(CYGPATH_W) 'main/subgraph_repeat_regenerate_tag_cycle.c'; else $(CYGPATH_W) '$(srcdir)/main/subgraph_repeat_regenerate_tag_cycle.c'; fi`

subgraph_repeat_tag.o: main/subgraph_repeat_tag.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT subgraph_repeat_tag.o -MD -MP -MF $(DEPDIR)/subgraph_repeat_tag.Tpo -c -o subgraph_repeat_tag.o `test -f 'main/subgraph_repeat_tag.c' || echo '$(srcdir)/'`main/subgraph_repeat_tag.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/subgraph_repeat_tag.Tpo $(DEPDIR)/subgraph_repeat_tag.Po
#	$(AM_V_CC)source='main/subgraph_repeat_tag.c' object='subgraph_repeat_tag.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o subgraph_repeat_tag.o `test -f 'main/subgraph_repeat_tag.c' || echo '$(srcdir)/'`main/subgraph_repeat_tag.c

subgraph_repeat_tag.obj: main/subgraph_repeat_tag.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT subgraph_repeat_tag.obj -MD -MP -MF $(DEPDIR)/subgraph_repeat_tag.Tpo -c -o subgraph_repeat_tag.obj `if test -f 'main/subgraph_repeat_tag.c'; then $(CYGPATH_W) 'main/subgraph_repeat_tag.c'; else $(CYGPATH_W) '$(srcdir)/main/subgraph_repeat_tag.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/subgraph_repeat_tag.Tpo $(DEPDIR)/subgraph_repeat_tag.Po
#	$(AM_V_CC)source='main/subgraph_repeat_tag.c' object='subgraph_repeat_tag.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o subgraph_repeat_tag.obj `if test -f 'main/subgraph_repeat_tag.c'; then $(CYGPATH_W) 'main/subgraph_repeat_tag.c'; else $(CYGPATH_W) '$(srcdir)/main/subgraph_repeat_tag.c'; fi`

submit.o: main/submit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT submit.o -MD -MP -MF $(DEPDIR)/submit.Tpo -c -o submit.o `test -f 'main/submit.c' || echo '$(srcdir)/'`main/submit.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/submit.Tpo $(DEPDIR)/submit.Po
#	$(AM_V_CC)source='main/submit.c' object='submit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o submit.o `test -f 'main/submit.c' || echo '$(srcdir)/'`main/submit.c

submit.obj: main/submit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT submit.obj -MD -MP -MF $(DEPDIR)/submit.Tpo -c -o submit.obj `if test -f 'main/submit.c'; then $(CYGPATH_W) 'main/submit.c'; else $(CYGPATH_W) '$(srcdir)/main/submit.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/submit.Tpo $(DEPDIR)/submit.Po
#	$(AM_V_CC)source='main/submit.c' object='submit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o submit.obj `if test -f 'main/submit.c'; then $(CYGPATH_W) 'main/submit.c'; else $(CYGPATH_W) '$(srcdir)/main/submit.c'; fi`

tag_get_task.o: main/tag_get_task.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tag_get_task.o -MD -MP -MF $(DEPDIR)/tag_get_task.Tpo -c -o tag_get_task.o `test -f 'main/tag_get_task.c' || echo '$(srcdir)/'`main/tag_get_task.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tag_get_task.Tpo $(DEPDIR)/tag_get_task.Po
#	$(AM_V_CC)source='main/tag_get_task.c' object='tag_get_task.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tag_get_task.o `test -f 'main/tag_get_task.c' || echo '$(srcdir)/'`main/tag_get_task.c

tag_get_task.obj: main/tag_get_task.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tag_get_task.obj -MD -MP -MF $(DEPDIR)/tag_get_task.Tpo -c -o tag_get_task.obj `if test -f 'main/tag_get_task.c'; then $(CYGPATH_W) 'main/tag_get_task.c'; else $(CYGPATH_W) '$(srcdir)/main/tag_get_task.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tag_get_task.Tpo $(DEPDIR)/tag_get_task.Po
#	$(AM_V_CC)source='main/tag_get_task.c' object='tag_get_task.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tag_get_task.obj `if test -f 'main/tag_get_task.c'; then $(CYGPATH_W) 'main/tag_get_task.c'; else $(CYGPATH_W) '$(srcdir)/main/tag_get_task.c'; fi`

tag_task_data_deps.o: main/tag_task_data_deps.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tag_task_data_deps.o -MD -MP -MF $(DEPDIR)/tag_task_data_deps.Tpo -c -o tag_task_data_deps.o `test -f 'main/tag_task_data_deps.c' || echo '$(srcdir)/'`main/tag_task_data_deps.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tag_task_data_deps.Tpo $(DEPDIR)/tag_task_data_deps.Po
#	$(AM_V_CC)source='main/tag_task_data_deps.c' object='tag_task_data_deps.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tag_task_data_deps.o `test -f 'main/tag_task_data_deps.c' || echo '$(srcdir)/'`main/tag_task_data_deps.c

tag_task_data_deps.obj: main/tag_task_data_deps.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tag_task_data_deps.obj -MD -MP -MF $(DEPDIR)/tag_task_data_deps.Tpo -c -o tag_task_data_deps.obj `if test -f 'main/tag_task_data_deps.c'; then $(CYGPATH_W) 'main/tag_task_data_deps.c'; else $(CYGPATH_W) '$(srcdir)/main/tag_task_data_deps.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tag_task_data_deps.Tpo $(DEPDIR)/tag_task_data_deps.Po
#	$(AM_V_CC)source='main/tag_task_data_deps.c' object='tag_task_data_deps.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tag_task_data_deps.obj `if test -f 'main/tag_task_data_deps.c'; then $(CYGPATH_W) 'main/tag_task_data_deps.c'; else $(CYGPATH_W) '$(srcdir)/main/tag_task_data_deps.c'; fi`

tag_wait_api.o: main/tag_wait_api.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tag_wait_api.o -MD -MP -MF $(DEPDIR)/tag_wait_api.Tpo -c -o tag_wait_api.o `test -f 'main/tag_wait_api.c' || echo '$(srcdir)/'`main/tag_wait_api.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tag_wait_api.Tpo $(DEPDIR)/tag_wait_api.Po
#	$(AM_V_CC)source='main/tag_wait_api.c' object='tag_wait_api.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tag_wait_api.o `test -f 'main/tag_wait_api.c' || echo '$(srcdir)/'`main/tag_wait_api.c

tag_wait_api.obj: main/tag_wait_api.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tag_wait_api.obj -MD -MP -MF $(DEPDIR)/tag_wait_api.Tpo -c -o tag_wait_api.obj `if test -f 'main/tag_wait_api.c'; then $(CYGPATH_W) 'main/tag_wait_api.c'; else $(CYGPATH_W) '$(srcdir)/main/tag_wait_api.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tag_wait_api.Tpo $(DEPDIR)/tag_wait_api.Po
#	$(AM_V_CC)source='main/tag_wait_api.c' object='tag_wait_api.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tag_wait_api.obj `if test -f 'main/tag_wait_api.c'; then $(CYGPATH_W) 'main/tag_wait_api.c'; else $(CYGPATH_W) '$(srcdir)/main/tag_wait_api.c'; fi`

task_end_dep.o: main/task_end_dep.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT task_end_dep.o -MD -MP -MF $(DEPDIR)/task_end_dep.Tpo -c -o task_end_dep.o `test -f 'main/task_end_dep.c' || echo '$(srcdir)/'`main/task_end_dep.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/task_end_dep.Tpo $(DEPDIR)/task_end_dep.Po
#	$(AM_V_CC)source='main/task_end_dep.c' object='task_end_dep.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o task_end_dep.o `test -f 'main/task_end_dep.c' || echo '$(srcdir)/'`main/task_end_dep.c

task_end_dep.obj: main/task_end_dep.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT task_end_dep.obj -MD -MP -MF $(DEPDIR)/task_end_dep.Tpo -c -o task_end_dep.obj `if test -f 'main/task_end_dep.c'; then $(CYGPATH_W) 'main/task_end_dep.c'; else $(CYGPATH_W) '$(srcdir)/main/task_end_dep.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/task_end_dep.Tpo $(DEPDIR)/task_end_dep.Po
#	$(AM_V_CC)source='main/task_end_dep.c' object='task_end_dep.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o task_end_dep.obj `if test -f 'main/task_end_dep.c'; then $(CYGPATH_W) 'main/task_end_dep.c'; else $(CYGPATH_W) '$(srcdir)/main/task_end_dep.c'; fi`

task_wait_api.o: main/task_wait_api.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT task_wait_api.o -MD -MP -MF $(DEPDIR)/task_wait_api.Tpo -c -o task_wait_api.o `test -f 'main/task_wait_api.c' || echo '$(srcdir)/'`main/task_wait_api.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/task_wait_api.Tpo $(DEPDIR)/task_wait_api.Po
#	$(AM_V_CC)source='main/task_wait_api.c' object='task_wait_api.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o task_wait_api.o `test -f 'main/task_wait_api.c' || echo '$(srcdir)/'`main/task_wait_api.c

task_wait_api.obj: main/task_wait_api.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT task_wait_api.obj -MD -MP -MF $(DEPDIR)/task_wait_api.Tpo -c -o task_wait_api.obj `if test -f 'main/task_wait_api.c'; then $(CYGPATH_W) 'main/task_wait_api.c'; else $(CYGPATH_W) '$(srcdir)/main/task_wait_api.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/task_wait_api.Tpo $(DEPDIR)/task_wait_api.Po
#	$(AM_V_CC)source='main/task_wait_api.c' object='task_wait_api.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o task_wait_api.obj `if test -f 'main/task_wait_api.c'; then $(CYGPATH_W) 'main/task_wait_api.c'; else $(CYGPATH_W) '$(srcdir)/main/task_wait_api.c'; fi`

wait_all_regenerable_tasks.o: main/wait_all_regenerable_tasks.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wait_all_regenerable_tasks.o -MD -MP -MF $(DEPDIR)/wait_all_regenerable_tasks.Tpo -c -o wait_all_regenerable_tasks.o `test -f 'main/wait_all_regenerable_tasks.c' || echo '$(srcdir)/'`main/wait_all_regenerable_tasks.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/wait_all_regenerable_tasks.Tpo $(DEPDIR)/wait_all_regenerable_tasks.Po
#	$(AM_V_CC)source='main/wait_all_regenerable_tasks.c' object='wait_all_regenerable_tasks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wait_all_regenerable_tasks.o `test -f 'main/wait_all_regenerable_tasks.c' || echo '$(srcdir)/'`main/wait_all_regenerable_tasks.c

wait_all_regenerable_tasks.obj: main/wait_all_regenerable_tasks.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wait_all_regenerable_tasks.obj -MD -MP -MF $(DEPDIR)/wait_all_regenerable_tasks.Tpo -c -o wait_all_regenerable_tasks.obj `if test -f 'main/wait_all_regenerable_tasks.c'; then $(CYGPATH_W) 'main/wait_all_regenerable_tasks.c'; else $(CYGPATH_W) '$(srcdir)/main/wait_all_regenerable_tasks.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/wait_all_regenerable_tasks.Tpo $(DEPDIR)/wait_all_regenerable_tasks.Po
#	$(AM_V_CC)source='main/wait_all_regenerable_tasks.c' object='wait_all_regenerable_tasks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wait_all_regenerable_tasks.obj `if test -f 'main/wait_all_regenerable_tasks.c'; then $(CYGPATH_W) 'main/wait_all_regenerable_tasks.c'; else $(CYGPATH_W) '$(srcdir)/main/wait_all_regenerable_tasks.c'; fi`

async_tasks_overhead.o: microbenchs/async_tasks_overhead.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT async_tasks_overhead.o -MD -MP -MF $(DEPDIR)/async_tasks_overhead.Tpo -c -o async_tasks_overhead.o `test -f 'microbenchs/async_tasks_overhead.c' || echo '$(srcdir)/'`microbenchs/async_tasks_overhead.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/async_tasks_overhead.Tpo $(DEPDIR)/async_tasks_overhead.Po
#	$(AM_V_CC)source='microbenchs/async_tasks_overhead.c' object='async_tasks_overhead.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o async_tasks_overhead.o `test -f 'microbenchs/async_tasks_overhead.c' || echo '$(srcdir)/'`microbenchs/async_tasks_overhead.c

async_tasks_overhead.obj: microbenchs/async_tasks_overhead.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT async_tasks_overhead.obj -MD -MP -MF $(DEPDIR)/async_tasks_overhead.Tpo -c -o async_tasks_overhead.obj `if test -f 'microbenchs/async_tasks_overhead.c'; then $(CYGPATH_W) 'microbenchs/async_tasks_overhead.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/async_tasks_overhead.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/async_tasks_overhead.Tpo $(DEPDIR)/async_tasks_overhead.Po
#	$(AM_V_CC)source='microbenchs/async_tasks_overhead.c' object='async_tasks_overhead.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o async_tasks_overhead.obj `if test -f 'microbenchs/async_tasks_overhead.c'; then $(CYGPATH_W) 'microbenchs/async_tasks_overhead.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/async_tasks_overhead.c'; fi`

bandwidth.o: microbenchs/bandwidth.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bandwidth.o -MD -MP -MF $(DEPDIR)/bandwidth.Tpo -c -o bandwidth.o `test -f 'microbenchs/bandwidth.c' || echo '$(srcdir)/'`microbenchs/bandwidth.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bandwidth.Tpo $(DEPDIR)/bandwidth.Po
#	$(AM_V_CC)source='microbenchs/bandwidth.c' object='bandwidth.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bandwidth.o `test -f 'microbenchs/bandwidth.c' || echo '$(srcdir)/'`microbenchs/bandwidth.c

bandwidth.obj: microbenchs/bandwidth.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bandwidth.obj -MD -MP -MF $(DEPDIR)/bandwidth.Tpo -c -o bandwidth.obj `if test -f 'microbenchs/bandwidth.c'; then $(CYGPATH_W) 'microbenchs/bandwidth.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/bandwidth.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bandwidth.Tpo $(DEPDIR)/bandwidth.Po
#	$(AM_V_CC)source='microbenchs/bandwidth.c' object='bandwidth.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bandwidth.obj `if test -f 'microbenchs/bandwidth.c'; then $(CYGPATH_W) 'microbenchs/bandwidth.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/bandwidth.c'; fi`

display_structures_size.o: microbenchs/display_structures_size.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT display_structures_size.o -MD -MP -MF $(DEPDIR)/display_structures_size.Tpo -c -o display_structures_size.o `test -f 'microbenchs/display_structures_size.c' || echo '$(srcdir)/'`microbenchs/display_structures_size.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/display_structures_size.Tpo $(DEPDIR)/display_structures_size.Po
#	$(AM_V_CC)source='microbenchs/display_structures_size.c' object='display_structures_size.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o display_structures_size.o `test -f 'microbenchs/display_structures_size.c' || echo '$(srcdir)/'`microbenchs/display_structures_size.c

display_structures_size.obj: microbenchs/display_structures_size.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT display_structures_size.obj -MD -MP -MF $(DEPDIR)/display_structures_size.Tpo -c -o display_structures_size.obj `if test -f 'microbenchs/display_structures_size.c'; then $(CYGPATH_W) 'microbenchs/display_structures_size.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/display_structures_size.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/display_structures_size.Tpo $(DEPDIR)/display_structures_size.Po
#	$(AM_V_CC)source='microbenchs/display_structures_size.c' object='display_structures_size.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o display_structures_size.obj `if test -f 'microbenchs/display_structures_size.c'; then $(CYGPATH_W) 'microbenchs/display_structures_size.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/display_structures_size.c'; fi`

local_pingpong.o: microbenchs/local_pingpong.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT local_pingpong.o -MD -MP -MF $(DEPDIR)/local_pingpong.Tpo -c -o local_pingpong.o `test -f 'microbenchs/local_pingpong.c' || echo '$(srcdir)/'`microbenchs/local_pingpong.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/local_pingpong.Tpo $(DEPDIR)/local_pingpong.Po
#	$(AM_V_CC)source='microbenchs/local_pingpong.c' object='local_pingpong.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o local_pingpong.o `test -f 'microbenchs/local_pingpong.c' || echo '$(srcdir)/'`microbenchs/local_pingpong.c

local_pingpong.obj: microbenchs/local_pingpong.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT local_pingpong.obj -MD -MP -MF $(DEPDIR)/local_pingpong.Tpo -c -o local_pingpong.obj `if test -f 'microbenchs/local_pingpong.c'; then $(CYGPATH_W) 'microbenchs/local_pingpong.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/local_pingpong.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/local_pingpong.Tpo $(DEPDIR)/local_pingpong.Po
#	$(AM_V_CC)source='microbenchs/local_pingpong.c' object='local_pingpong.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o local_pingpong.obj `if test -f 'microbenchs/local_pingpong.c'; then $(CYGPATH_W) 'microbenchs/local_pingpong.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/local_pingpong.c'; fi`

matrix_as_vector.o: microbenchs/matrix_as_vector.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT matrix_as_vector.o -MD -MP -MF $(DEPDIR)/matrix_as_vector.Tpo -c -o matrix_as_vector.o `test -f 'microbenchs/matrix_as_vector.c' || echo '$(srcdir)/'`microbenchs/matrix_as_vector.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/matrix_as_vector.Tpo $(DEPDIR)/matrix_as_vector.Po
#	$(AM_V_CC)source='microbenchs/matrix_as_vector.c' object='matrix_as_vector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matrix_as_vector.o `test -f 'microbenchs/matrix_as_vector.c' || echo '$(srcdir)/'`microbenchs/matrix_as_vector.c

matrix_as_vector.obj: microbenchs/matrix_as_vector.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT matrix_as_vector.obj -MD -MP -MF $(DEPDIR)/matrix_as_vector.Tpo -c -o matrix_as_vector.obj `if test -f 'microbenchs/matrix_as_vector.c'; then $(CYGPATH_W) 'microbenchs/matrix_as_vector.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/matrix_as_vector.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/matrix_as_vector.Tpo $(DEPDIR)/matrix_as_vector.Po
#	$(AM_V_CC)source='microbenchs/matrix_as_vector.c' object='matrix_as_vector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matrix_as_vector.obj `if test -f 'microbenchs/matrix_as_vector.c'; then $(CYGPATH_W) 'microbenchs/matrix_as_vector.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/matrix_as_vector.c'; fi`

parallel_dependent_homogeneous_tasks_data.o: microbenchs/parallel_dependent_homogeneous_tasks_data.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_dependent_homogeneous_tasks_data.o -MD -MP -MF $(DEPDIR)/parallel_dependent_homogeneous_tasks_data.Tpo -c -o parallel_dependent_homogeneous_tasks_data.o `test -f 'microbenchs/parallel_dependent_homogeneous_tasks_data.c' || echo '$(srcdir)/'`microbenchs/parallel_dependent_homogeneous_tasks_data.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_dependent_homogeneous_tasks_data.Tpo $(DEPDIR)/parallel_dependent_homogeneous_tasks_data.Po
#	$(AM_V_CC)source='microbenchs/parallel_dependent_homogeneous_tasks_data.c' object='parallel_dependent_homogeneous_tasks_data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_dependent_homogeneous_tasks_data.o `test -f 'microbenchs/parallel_dependent_homogeneous_tasks_data.c' || echo '$(srcdir)/'`microbenchs/parallel_dependent_homogeneous_tasks_data.c

parallel_dependent_homogeneous_tasks_data.obj: microbenchs/parallel_dependent_homogeneous_tasks_data.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_dependent_homogeneous_tasks_data.obj -MD -MP -MF $(DEPDIR)/parallel_dependent_homogeneous_tasks_data.Tpo -c -o parallel_dependent_homogeneous_tasks_data.obj `if test -f 'microbenchs/parallel_dependent_homogeneous_tasks_data.c'; then $(CYGPATH_W) 'microbenchs/parallel_dependent_homogeneous_tasks_data.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/parallel_dependent_homogeneous_tasks_data.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_dependent_homogeneous_tasks_data.Tpo $(DEPDIR)/parallel_dependent_homogeneous_tasks_data.Po
#	$(AM_V_CC)source='microbenchs/parallel_dependent_homogeneous_tasks_data.c' object='parallel_dependent_homogeneous_tasks_data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_dependent_homogeneous_tasks_data.obj `if test -f 'microbenchs/parallel_dependent_homogeneous_tasks_data.c'; then $(CYGPATH_W) 'microbenchs/parallel_dependent_homogeneous_tasks_data.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/parallel_dependent_homogeneous_tasks_data.c'; fi`

parallel_independent_heterogeneous_tasks.o: microbenchs/parallel_independent_heterogeneous_tasks.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_independent_heterogeneous_tasks.o -MD -MP -MF $(DEPDIR)/parallel_independent_heterogeneous_tasks.Tpo -c -o parallel_independent_heterogeneous_tasks.o `test -f 'microbenchs/parallel_independent_heterogeneous_tasks.c' || echo '$(srcdir)/'`microbenchs/parallel_independent_heterogeneous_tasks.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_independent_heterogeneous_tasks.Tpo $(DEPDIR)/parallel_independent_heterogeneous_tasks.Po
#	$(AM_V_CC)source='microbenchs/parallel_independent_heterogeneous_tasks.c' object='parallel_independent_heterogeneous_tasks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_independent_heterogeneous_tasks.o `test -f 'microbenchs/parallel_independent_heterogeneous_tasks.c' || echo '$(srcdir)/'`microbenchs/parallel_independent_heterogeneous_tasks.c

parallel_independent_heterogeneous_tasks.obj: microbenchs/parallel_independent_heterogeneous_tasks.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_independent_heterogeneous_tasks.obj -MD -MP -MF $(DEPDIR)/parallel_independent_heterogeneous_tasks.Tpo -c -o parallel_independent_heterogeneous_tasks.obj `if test -f 'microbenchs/parallel_independent_heterogeneous_tasks.c'; then $(CYGPATH_W) 'microbenchs/parallel_independent_heterogeneous_tasks.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/parallel_independent_heterogeneous_tasks.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_independent_heterogeneous_tasks.Tpo $(DEPDIR)/parallel_independent_heterogeneous_tasks.Po
#	$(AM_V_CC)source='microbenchs/parallel_independent_heterogeneous_tasks.c' object='parallel_independent_heterogeneous_tasks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_independent_heterogeneous_tasks.obj `if test -f 'microbenchs/parallel_independent_heterogeneous_tasks.c'; then $(CYGPATH_W) 'microbenchs/parallel_independent_heterogeneous_tasks.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/parallel_independent_heterogeneous_tasks.c'; fi`

parallel_independent_heterogeneous_tasks_data.o: microbenchs/parallel_independent_heterogeneous_tasks_data.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_independent_heterogeneous_tasks_data.o -MD -MP -MF $(DEPDIR)/parallel_independent_heterogeneous_tasks_data.Tpo -c -o parallel_independent_heterogeneous_tasks_data.o `test -f 'microbenchs/parallel_independent_heterogeneous_tasks_data.c' || echo '$(srcdir)/'`microbenchs/parallel_independent_heterogeneous_tasks_data.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_independent_heterogeneous_tasks_data.Tpo $(DEPDIR)/parallel_independent_heterogeneous_tasks_data.Po
#	$(AM_V_CC)source='microbenchs/parallel_independent_heterogeneous_tasks_data.c' object='parallel_independent_heterogeneous_tasks_data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_independent_heterogeneous_tasks_data.o `test -f 'microbenchs/parallel_independent_heterogeneous_tasks_data.c' || echo '$(srcdir)/'`microbenchs/parallel_independent_heterogeneous_tasks_data.c

parallel_independent_heterogeneous_tasks_data.obj: microbenchs/parallel_independent_heterogeneous_tasks_data.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_independent_heterogeneous_tasks_data.obj -MD -MP -MF $(DEPDIR)/parallel_independent_heterogeneous_tasks_data.Tpo -c -o parallel_independent_heterogeneous_tasks_data.obj `if test -f 'microbenchs/parallel_independent_heterogeneous_tasks_data.c'; then $(CYGPATH_W) 'microbenchs/parallel_independent_heterogeneous_tasks_data.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/parallel_independent_heterogeneous_tasks_data.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_independent_heterogeneous_tasks_data.Tpo $(DEPDIR)/parallel_independent_heterogeneous_tasks_data.Po
#	$(AM_V_CC)source='microbenchs/parallel_independent_heterogeneous_tasks_data.c' object='parallel_independent_heterogeneous_tasks_data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_independent_heterogeneous_tasks_data.obj `if test -f 'microbenchs/parallel_independent_heterogeneous_tasks_data.c'; then $(CYGPATH_W) 'microbenchs/parallel_independent_heterogeneous_tasks_data.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/parallel_independent_heterogeneous_tasks_data.c'; fi`

parallel_independent_homogeneous_tasks.o: microbenchs/parallel_independent_homogeneous_tasks.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_independent_homogeneous_tasks.o -MD -MP -MF $(DEPDIR)/parallel_independent_homogeneous_tasks.Tpo -c -o parallel_independent_homogeneous_tasks.o `test -f 'microbenchs/parallel_independent_homogeneous_tasks.c' || echo '$(srcdir)/'`microbenchs/parallel_independent_homogeneous_tasks.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_independent_homogeneous_tasks.Tpo $(DEPDIR)/parallel_independent_homogeneous_tasks.Po
#	$(AM_V_CC)source='microbenchs/parallel_independent_homogeneous_tasks.c' object='parallel_independent_homogeneous_tasks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_independent_homogeneous_tasks.o `test -f 'microbenchs/parallel_independent_homogeneous_tasks.c' || echo '$(srcdir)/'`microbenchs/parallel_independent_homogeneous_tasks.c

parallel_independent_homogeneous_tasks.obj: microbenchs/parallel_independent_homogeneous_tasks.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_independent_homogeneous_tasks.obj -MD -MP -MF $(DEPDIR)/parallel_independent_homogeneous_tasks.Tpo -c -o parallel_independent_homogeneous_tasks.obj `if test -f 'microbenchs/parallel_independent_homogeneous_tasks.c'; then $(CYGPATH_W) 'microbenchs/parallel_independent_homogeneous_tasks.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/parallel_independent_homogeneous_tasks.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_independent_homogeneous_tasks.Tpo $(DEPDIR)/parallel_independent_homogeneous_tasks.Po
#	$(AM_V_CC)source='microbenchs/parallel_independent_homogeneous_tasks.c' object='parallel_independent_homogeneous_tasks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_independent_homogeneous_tasks.obj `if test -f 'microbenchs/parallel_independent_homogeneous_tasks.c'; then $(CYGPATH_W) 'microbenchs/parallel_independent_homogeneous_tasks.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/parallel_independent_homogeneous_tasks.c'; fi`

parallel_independent_homogeneous_tasks_data.o: microbenchs/parallel_independent_homogeneous_tasks_data.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_independent_homogeneous_tasks_data.o -MD -MP -MF $(DEPDIR)/parallel_independent_homogeneous_tasks_data.Tpo -c -o parallel_independent_homogeneous_tasks_data.o `test -f 'microbenchs/parallel_independent_homogeneous_tasks_data.c' || echo '$(srcdir)/'`microbenchs/parallel_independent_homogeneous_tasks_data.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_independent_homogeneous_tasks_data.Tpo $(DEPDIR)/parallel_independent_homogeneous_tasks_data.Po
#	$(AM_V_CC)source='microbenchs/parallel_independent_homogeneous_tasks_data.c' object='parallel_independent_homogeneous_tasks_data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_independent_homogeneous_tasks_data.o `test -f 'microbenchs/parallel_independent_homogeneous_tasks_data.c' || echo '$(srcdir)/'`microbenchs/parallel_independent_homogeneous_tasks_data.c

parallel_independent_homogeneous_tasks_data.obj: microbenchs/parallel_independent_homogeneous_tasks_data.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_independent_homogeneous_tasks_data.obj -MD -MP -MF $(DEPDIR)/parallel_independent_homogeneous_tasks_data.Tpo -c -o parallel_independent_homogeneous_tasks_data.obj `if test -f 'microbenchs/parallel_independent_homogeneous_tasks_data.c'; then $(CYGPATH_W) 'microbenchs/parallel_independent_homogeneous_tasks_data.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/parallel_independent_homogeneous_tasks_data.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_independent_homogeneous_tasks_data.Tpo $(DEPDIR)/parallel_independent_homogeneous_tasks_data.Po
#	$(AM_V_CC)source='microbenchs/parallel_independent_homogeneous_tasks_data.c' object='parallel_independent_homogeneous_tasks_data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_independent_homogeneous_tasks_data.obj `if test -f 'microbenchs/parallel_independent_homogeneous_tasks_data.c'; then $(CYGPATH_W) 'microbenchs/parallel_independent_homogeneous_tasks_data.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/parallel_independent_homogeneous_tasks_data.c'; fi`

parallel_redux_heterogeneous_tasks_data.o: microbenchs/parallel_redux_heterogeneous_tasks_data.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_redux_heterogeneous_tasks_data.o -MD -MP -MF $(DEPDIR)/parallel_redux_heterogeneous_tasks_data.Tpo -c -o parallel_redux_heterogeneous_tasks_data.o `test -f 'microbenchs/parallel_redux_heterogeneous_tasks_data.c' || echo '$(srcdir)/'`microbenchs/parallel_redux_heterogeneous_tasks_data.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_redux_heterogeneous_tasks_data.Tpo $(DEPDIR)/parallel_redux_heterogeneous_tasks_data.Po
#	$(AM_V_CC)source='microbenchs/parallel_redux_heterogeneous_tasks_data.c' object='parallel_redux_heterogeneous_tasks_data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_redux_heterogeneous_tasks_data.o `test -f 'microbenchs/parallel_redux_heterogeneous_tasks_data.c' || echo '$(srcdir)/'`microbenchs/parallel_redux_heterogeneous_tasks_data.c

parallel_redux_heterogeneous_tasks_data.obj: microbenchs/parallel_redux_heterogeneous_tasks_data.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_redux_heterogeneous_tasks_data.obj -MD -MP -MF $(DEPDIR)/parallel_redux_heterogeneous_tasks_data.Tpo -c -o parallel_redux_heterogeneous_tasks_data.obj `if test -f 'microbenchs/parallel_redux_heterogeneous_tasks_data.c'; then $(CYGPATH_W) 'microbenchs/parallel_redux_heterogeneous_tasks_data.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/parallel_redux_heterogeneous_tasks_data.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_redux_heterogeneous_tasks_data.Tpo $(DEPDIR)/parallel_redux_heterogeneous_tasks_data.Po
#	$(AM_V_CC)source='microbenchs/parallel_redux_heterogeneous_tasks_data.c' object='parallel_redux_heterogeneous_tasks_data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_redux_heterogeneous_tasks_data.obj `if test -f 'microbenchs/parallel_redux_heterogeneous_tasks_data.c'; then $(CYGPATH_W) 'microbenchs/parallel_redux_heterogeneous_tasks_data.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/parallel_redux_heterogeneous_tasks_data.c'; fi`

parallel_redux_homogeneous_tasks_data.o: microbenchs/parallel_redux_homogeneous_tasks_data.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_redux_homogeneous_tasks_data.o -MD -MP -MF $(DEPDIR)/parallel_redux_homogeneous_tasks_data.Tpo -c -o parallel_redux_homogeneous_tasks_data.o `test -f 'microbenchs/parallel_redux_homogeneous_tasks_data.c' || echo '$(srcdir)/'`microbenchs/parallel_redux_homogeneous_tasks_data.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_redux_homogeneous_tasks_data.Tpo $(DEPDIR)/parallel_redux_homogeneous_tasks_data.Po
#	$(AM_V_CC)source='microbenchs/parallel_redux_homogeneous_tasks_data.c' object='parallel_redux_homogeneous_tasks_data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_redux_homogeneous_tasks_data.o `test -f 'microbenchs/parallel_redux_homogeneous_tasks_data.c' || echo '$(srcdir)/'`microbenchs/parallel_redux_homogeneous_tasks_data.c

parallel_redux_homogeneous_tasks_data.obj: microbenchs/parallel_redux_homogeneous_tasks_data.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_redux_homogeneous_tasks_data.obj -MD -MP -MF $(DEPDIR)/parallel_redux_homogeneous_tasks_data.Tpo -c -o parallel_redux_homogeneous_tasks_data.obj `if test -f 'microbenchs/parallel_redux_homogeneous_tasks_data.c'; then $(CYGPATH_W) 'microbenchs/parallel_redux_homogeneous_tasks_data.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/parallel_redux_homogeneous_tasks_data.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_redux_homogeneous_tasks_data.Tpo $(DEPDIR)/parallel_redux_homogeneous_tasks_data.Po
#	$(AM_V_CC)source='microbenchs/parallel_redux_homogeneous_tasks_data.c' object='parallel_redux_homogeneous_tasks_data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_redux_homogeneous_tasks_data.obj `if test -f 'microbenchs/parallel_redux_homogeneous_tasks_data.c'; then $(CYGPATH_W) 'microbenchs/parallel_redux_homogeneous_tasks_data.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/parallel_redux_homogeneous_tasks_data.c'; fi`

prefetch_data_on_node.o: microbenchs/prefetch_data_on_node.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT prefetch_data_on_node.o -MD -MP -MF $(DEPDIR)/prefetch_data_on_node.Tpo -c -o prefetch_data_on_node.o `test -f 'microbenchs/prefetch_data_on_node.c' || echo '$(srcdir)/'`microbenchs/prefetch_data_on_node.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/prefetch_data_on_node.Tpo $(DEPDIR)/prefetch_data_on_node.Po
#	$(AM_V_CC)source='microbenchs/prefetch_data_on_node.c' object='prefetch_data_on_node.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o prefetch_data_on_node.o `test -f 'microbenchs/prefetch_data_on_node.c' || echo '$(srcdir)/'`microbenchs/prefetch_data_on_node.c

prefetch_data_on_node.obj: microbenchs/prefetch_data_on_node.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT prefetch_data_on_node.obj -MD -MP -MF $(DEPDIR)/prefetch_data_on_node.Tpo -c -o prefetch_data_on_node.obj `if test -f 'microbenchs/prefetch_data_on_node.c'; then $(CYGPATH_W) 'microbenchs/prefetch_data_on_node.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/prefetch_data_on_node.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/prefetch_data_on_node.Tpo $(DEPDIR)/prefetch_data_on_node.Po
#	$(AM_V_CC)source='microbenchs/prefetch_data_on_node.c' object='prefetch_data_on_node.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o prefetch_data_on_node.obj `if test -f 'microbenchs/prefetch_data_on_node.c'; then $(CYGPATH_W) 'microbenchs/prefetch_data_on_node.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/prefetch_data_on_node.c'; fi`

redundant_buffer.o: microbenchs/redundant_buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT redundant_buffer.o -MD -MP -MF $(DEPDIR)/redundant_buffer.Tpo -c -o redundant_buffer.o `test -f 'microbenchs/redundant_buffer.c' || echo '$(srcdir)/'`microbenchs/redundant_buffer.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/redundant_buffer.Tpo $(DEPDIR)/redundant_buffer.Po
#	$(AM_V_CC)source='microbenchs/redundant_buffer.c' object='redundant_buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o redundant_buffer.o `test -f 'microbenchs/redundant_buffer.c' || echo '$(srcdir)/'`microbenchs/redundant_buffer.c

redundant_buffer.obj: microbenchs/redundant_buffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT redundant_buffer.obj -MD -MP -MF $(DEPDIR)/redundant_buffer.Tpo -c -o redundant_buffer.obj `if test -f 'microbenchs/redundant_buffer.c'; then $(CYGPATH_W) 'microbenchs/redundant_buffer.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/redundant_buffer.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/redundant_buffer.Tpo $(DEPDIR)/redundant_buffer.Po
#	$(AM_V_CC)source='microbenchs/redundant_buffer.c' object='redundant_buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o redundant_buffer.obj `if test -f 'microbenchs/redundant_buffer.c'; then $(CYGPATH_W) 'microbenchs/redundant_buffer.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/redundant_buffer.c'; fi`

sync_tasks_overhead.o: microbenchs/sync_tasks_overhead.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sync_tasks_overhead.o -MD -MP -MF $(DEPDIR)/sync_tasks_overhead.Tpo -c -o sync_tasks_overhead.o `test -f 'microbenchs/sync_tasks_overhead.c' || echo '$(srcdir)/'`microbenchs/sync_tasks_overhead.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sync_tasks_overhead.Tpo $(DEPDIR)/sync_tasks_overhead.Po
#	$(AM_V_CC)source='microbenchs/sync_tasks_overhead.c' object='sync_tasks_overhead.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sync_tasks_overhead.o `test -f 'microbenchs/sync_tasks_overhead.c' || echo '$(srcdir)/'`microbenchs/sync_tasks_overhead.c

sync_tasks_overhead.obj: microbenchs/sync_tasks_overhead.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sync_tasks_overhead.obj -MD -MP -MF $(DEPDIR)/sync_tasks_overhead.Tpo -c -o sync_tasks_overhead.obj `if test -f 'microbenchs/sync_tasks_overhead.c'; then $(CYGPATH_W) 'microbenchs/sync_tasks_overhead.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/sync_tasks_overhead.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sync_tasks_overhead.Tpo $(DEPDIR)/sync_tasks_overhead.Po
#	$(AM_V_CC)source='microbenchs/sync_tasks_overhead.c' object='sync_tasks_overhead.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sync_tasks_overhead.obj `if test -f 'microbenchs/sync_tasks_overhead.c'; then $(CYGPATH_W) 'microbenchs/sync_tasks_overhead.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/sync_tasks_overhead.c'; fi`

tasks_overhead.o: microbenchs/tasks_overhead.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tasks_overhead.o -MD -MP -MF $(DEPDIR)/tasks_overhead.Tpo -c -o tasks_overhead.o `test -f 'microbenchs/tasks_overhead.c' || echo '$(srcdir)/'`microbenchs/tasks_overhead.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tasks_overhead.Tpo $(DEPDIR)/tasks_overhead.Po
#	$(AM_V_CC)source='microbenchs/tasks_overhead.c' object='tasks_overhead.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tasks_overhead.o `test -f 'microbenchs/tasks_overhead.c' || echo '$(srcdir)/'`microbenchs/tasks_overhead.c

tasks_overhead.obj: microbenchs/tasks_overhead.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tasks_overhead.obj -MD -MP -MF $(DEPDIR)/tasks_overhead.Tpo -c -o tasks_overhead.obj `if test -f 'microbenchs/tasks_overhead.c'; then $(CYGPATH_W) 'microbenchs/tasks_overhead.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/tasks_overhead.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tasks_overhead.Tpo $(DEPDIR)/tasks_overhead.Po
#	$(AM_V_CC)source='microbenchs/tasks_overhead.c' object='tasks_overhead.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tasks_overhead.obj `if test -f 'microbenchs/tasks_overhead.c'; then $(CYGPATH_W) 'microbenchs/tasks_overhead.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/tasks_overhead.c'; fi`

tasks_size_overhead.o: microbenchs/tasks_size_overhead.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tasks_size_overhead.o -MD -MP -MF $(DEPDIR)/tasks_size_overhead.Tpo -c -o tasks_size_overhead.o `test -f 'microbenchs/tasks_size_overhead.c' || echo '$(srcdir)/'`microbenchs/tasks_size_overhead.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tasks_size_overhead.Tpo $(DEPDIR)/tasks_size_overhead.Po
#	$(AM_V_CC)source='microbenchs/tasks_size_overhead.c' object='tasks_size_overhead.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tasks_size_overhead.o `test -f 'microbenchs/tasks_size_overhead.c' || echo '$(srcdir)/'`microbenchs/tasks_size_overhead.c

tasks_size_overhead.obj: microbenchs/tasks_size_overhead.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tasks_size_overhead.obj -MD -MP -MF $(DEPDIR)/tasks_size_overhead.Tpo -c -o tasks_size_overhead.obj `if test -f 'microbenchs/tasks_size_overhead.c'; then $(CYGPATH_W) 'microbenchs/tasks_size_overhead.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/tasks_size_overhead.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tasks_size_overhead.Tpo $(DEPDIR)/tasks_size_overhead.Po
#	$(AM_V_CC)source='microbenchs/tasks_size_overhead.c' object='tasks_size_overhead.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tasks_size_overhead.obj `if test -f 'microbenchs/tasks_size_overhead.c'; then $(CYGPATH_W) 'microbenchs/tasks_size_overhead.c'; else $(CYGPATH_W) '$(srcdir)/microbenchs/tasks_size_overhead.c'; fi`

prio_list.o: model-checking/prio_list.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT prio_list.o -MD -MP -MF $(DEPDIR)/prio_list.Tpo -c -o prio_list.o `test -f 'model-checking/prio_list.c' || echo '$(srcdir)/'`model-checking/prio_list.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/prio_list.Tpo $(DEPDIR)/prio_list.Po
#	$(AM_V_CC)source='model-checking/prio_list.c' object='prio_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o prio_list.o `test -f 'model-checking/prio_list.c' || echo '$(srcdir)/'`model-checking/prio_list.c

prio_list.obj: model-checking/prio_list.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT prio_list.obj -MD -MP -MF $(DEPDIR)/prio_list.Tpo -c -o prio_list.obj `if test -f 'model-checking/prio_list.c'; then $(CYGPATH_W) 'model-checking/prio_list.c'; else $(CYGPATH_W) '$(srcdir)/model-checking/prio_list.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/prio_list.Tpo $(DEPDIR)/prio_list.Po
#	$(AM_V_CC)source='model-checking/prio_list.c' object='prio_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o prio_list.obj `if test -f 'model-checking/prio_list.c'; then $(CYGPATH_W) 'model-checking/prio_list.c'; else $(CYGPATH_W) '$(srcdir)/model-checking/prio_list.c'; fi`

starpu_barrier.o: model-checking/starpu_barrier.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT starpu_barrier.o -MD -MP -MF $(DEPDIR)/starpu_barrier.Tpo -c -o starpu_barrier.o `test -f 'model-checking/starpu_barrier.c' || echo '$(srcdir)/'`model-checking/starpu_barrier.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/starpu_barrier.Tpo $(DEPDIR)/starpu_barrier.Po
#	$(AM_V_CC)source='model-checking/starpu_barrier.c' object='starpu_barrier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o starpu_barrier.o `test -f 'model-checking/starpu_barrier.c' || echo '$(srcdir)/'`model-checking/starpu_barrier.c

starpu_barrier.obj: model-checking/starpu_barrier.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT starpu_barrier.obj -MD -MP -MF $(DEPDIR)/starpu_barrier.Tpo -c -o starpu_barrier.obj `if test -f 'model-checking/starpu_barrier.c'; then $(CYGPATH_W) 'model-checking/starpu_barrier.c'; else $(CYGPATH_W) '$(srcdir)/model-checking/starpu_barrier.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/starpu_barrier.Tpo $(DEPDIR)/starpu_barrier.Po
#	$(AM_V_CC)source='model-checking/starpu_barrier.c' object='starpu_barrier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o starpu_barrier.obj `if test -f 'model-checking/starpu_barrier.c'; then $(CYGPATH_W) 'model-checking/starpu_barrier.c'; else $(CYGPATH_W) '$(srcdir)/model-checking/starpu_barrier.c'; fi`

api_01.o: openmp/api_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT api_01.o -MD -MP -MF $(DEPDIR)/api_01.Tpo -c -o api_01.o `test -f 'openmp/api_01.c' || echo '$(srcdir)/'`openmp/api_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/api_01.Tpo $(DEPDIR)/api_01.Po
#	$(AM_V_CC)source='openmp/api_01.c' object='api_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o api_01.o `test -f 'openmp/api_01.c' || echo '$(srcdir)/'`openmp/api_01.c

api_01.obj: openmp/api_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT api_01.obj -MD -MP -MF $(DEPDIR)/api_01.Tpo -c -o api_01.obj `if test -f 'openmp/api_01.c'; then $(CYGPATH_W) 'openmp/api_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/api_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/api_01.Tpo $(DEPDIR)/api_01.Po
#	$(AM_V_CC)source='openmp/api_01.c' object='api_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o api_01.obj `if test -f 'openmp/api_01.c'; then $(CYGPATH_W) 'openmp/api_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/api_01.c'; fi`

array_slice_01.o: openmp/array_slice_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT array_slice_01.o -MD -MP -MF $(DEPDIR)/array_slice_01.Tpo -c -o array_slice_01.o `test -f 'openmp/array_slice_01.c' || echo '$(srcdir)/'`openmp/array_slice_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/array_slice_01.Tpo $(DEPDIR)/array_slice_01.Po
#	$(AM_V_CC)source='openmp/array_slice_01.c' object='array_slice_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o array_slice_01.o `test -f 'openmp/array_slice_01.c' || echo '$(srcdir)/'`openmp/array_slice_01.c

array_slice_01.obj: openmp/array_slice_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT array_slice_01.obj -MD -MP -MF $(DEPDIR)/array_slice_01.Tpo -c -o array_slice_01.obj `if test -f 'openmp/array_slice_01.c'; then $(CYGPATH_W) 'openmp/array_slice_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/array_slice_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/array_slice_01.Tpo $(DEPDIR)/array_slice_01.Po
#	$(AM_V_CC)source='openmp/array_slice_01.c' object='array_slice_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o array_slice_01.obj `if test -f 'openmp/array_slice_01.c'; then $(CYGPATH_W) 'openmp/array_slice_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/array_slice_01.c'; fi`

cuda_task_01.o: openmp/cuda_task_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cuda_task_01.o -MD -MP -MF $(DEPDIR)/cuda_task_01.Tpo -c -o cuda_task_01.o `test -f 'openmp/cuda_task_01.c' || echo '$(srcdir)/'`openmp/cuda_task_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cuda_task_01.Tpo $(DEPDIR)/cuda_task_01.Po
#	$(AM_V_CC)source='openmp/cuda_task_01.c' object='cuda_task_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cuda_task_01.o `test -f 'openmp/cuda_task_01.c' || echo '$(srcdir)/'`openmp/cuda_task_01.c

cuda_task_01.obj: openmp/cuda_task_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cuda_task_01.obj -MD -MP -MF $(DEPDIR)/cuda_task_01.Tpo -c -o cuda_task_01.obj `if test -f 'openmp/cuda_task_01.c'; then $(CYGPATH_W) 'openmp/cuda_task_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/cuda_task_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cuda_task_01.Tpo $(DEPDIR)/cuda_task_01.Po
#	$(AM_V_CC)source='openmp/cuda_task_01.c' object='cuda_task_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cuda_task_01.obj `if test -f 'openmp/cuda_task_01.c'; then $(CYGPATH_W) 'openmp/cuda_task_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/cuda_task_01.c'; fi`

environment.o: openmp/environment.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT environment.o -MD -MP -MF $(DEPDIR)/environment.Tpo -c -o environment.o `test -f 'openmp/environment.c' || echo '$(srcdir)/'`openmp/environment.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/environment.Tpo $(DEPDIR)/environment.Po
#	$(AM_V_CC)source='openmp/environment.c' object='environment.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o environment.o `test -f 'openmp/environment.c' || echo '$(srcdir)/'`openmp/environment.c

environment.obj: openmp/environment.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT environment.obj -MD -MP -MF $(DEPDIR)/environment.Tpo -c -o environment.obj `if test -f 'openmp/environment.c'; then $(CYGPATH_W) 'openmp/environment.c'; else $(CYGPATH_W) '$(srcdir)/openmp/environment.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/environment.Tpo $(DEPDIR)/environment.Po
#	$(AM_V_CC)source='openmp/environment.c' object='environment.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o environment.obj `if test -f 'openmp/environment.c'; then $(CYGPATH_W) 'openmp/environment.c'; else $(CYGPATH_W) '$(srcdir)/openmp/environment.c'; fi`

init_exit_01.o: openmp/init_exit_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT init_exit_01.o -MD -MP -MF $(DEPDIR)/init_exit_01.Tpo -c -o init_exit_01.o `test -f 'openmp/init_exit_01.c' || echo '$(srcdir)/'`openmp/init_exit_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/init_exit_01.Tpo $(DEPDIR)/init_exit_01.Po
#	$(AM_V_CC)source='openmp/init_exit_01.c' object='init_exit_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o init_exit_01.o `test -f 'openmp/init_exit_01.c' || echo '$(srcdir)/'`openmp/init_exit_01.c

init_exit_01.obj: openmp/init_exit_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT init_exit_01.obj -MD -MP -MF $(DEPDIR)/init_exit_01.Tpo -c -o init_exit_01.obj `if test -f 'openmp/init_exit_01.c'; then $(CYGPATH_W) 'openmp/init_exit_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/init_exit_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/init_exit_01.Tpo $(DEPDIR)/init_exit_01.Po
#	$(AM_V_CC)source='openmp/init_exit_01.c' object='init_exit_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o init_exit_01.obj `if test -f 'openmp/init_exit_01.c'; then $(CYGPATH_W) 'openmp/init_exit_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/init_exit_01.c'; fi`

init_exit_02.o: openmp/init_exit_02.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT init_exit_02.o -MD -MP -MF $(DEPDIR)/init_exit_02.Tpo -c -o init_exit_02.o `test -f 'openmp/init_exit_02.c' || echo '$(srcdir)/'`openmp/init_exit_02.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/init_exit_02.Tpo $(DEPDIR)/init_exit_02.Po
#	$(AM_V_CC)source='openmp/init_exit_02.c' object='init_exit_02.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o init_exit_02.o `test -f 'openmp/init_exit_02.c' || echo '$(srcdir)/'`openmp/init_exit_02.c

init_exit_02.obj: openmp/init_exit_02.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT init_exit_02.obj -MD -MP -MF $(DEPDIR)/init_exit_02.Tpo -c -o init_exit_02.obj `if test -f 'openmp/init_exit_02.c'; then $(CYGPATH_W) 'openmp/init_exit_02.c'; else $(CYGPATH_W) '$(srcdir)/openmp/init_exit_02.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/init_exit_02.Tpo $(DEPDIR)/init_exit_02.Po
#	$(AM_V_CC)source='openmp/init_exit_02.c' object='init_exit_02.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o init_exit_02.obj `if test -f 'openmp/init_exit_02.c'; then $(CYGPATH_W) 'openmp/init_exit_02.c'; else $(CYGPATH_W) '$(srcdir)/openmp/init_exit_02.c'; fi`

parallel_01.o: openmp/parallel_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_01.o -MD -MP -MF $(DEPDIR)/parallel_01.Tpo -c -o parallel_01.o `test -f 'openmp/parallel_01.c' || echo '$(srcdir)/'`openmp/parallel_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_01.Tpo $(DEPDIR)/parallel_01.Po
#	$(AM_V_CC)source='openmp/parallel_01.c' object='parallel_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_01.o `test -f 'openmp/parallel_01.c' || echo '$(srcdir)/'`openmp/parallel_01.c

parallel_01.obj: openmp/parallel_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_01.obj -MD -MP -MF $(DEPDIR)/parallel_01.Tpo -c -o parallel_01.obj `if test -f 'openmp/parallel_01.c'; then $(CYGPATH_W) 'openmp/parallel_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_01.Tpo $(DEPDIR)/parallel_01.Po
#	$(AM_V_CC)source='openmp/parallel_01.c' object='parallel_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_01.obj `if test -f 'openmp/parallel_01.c'; then $(CYGPATH_W) 'openmp/parallel_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_01.c'; fi`

parallel_02.o: openmp/parallel_02.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_02.o -MD -MP -MF $(DEPDIR)/parallel_02.Tpo -c -o parallel_02.o `test -f 'openmp/parallel_02.c' || echo '$(srcdir)/'`openmp/parallel_02.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_02.Tpo $(DEPDIR)/parallel_02.Po
#	$(AM_V_CC)source='openmp/parallel_02.c' object='parallel_02.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_02.o `test -f 'openmp/parallel_02.c' || echo '$(srcdir)/'`openmp/parallel_02.c

parallel_02.obj: openmp/parallel_02.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_02.obj -MD -MP -MF $(DEPDIR)/parallel_02.Tpo -c -o parallel_02.obj `if test -f 'openmp/parallel_02.c'; then $(CYGPATH_W) 'openmp/parallel_02.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_02.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_02.Tpo $(DEPDIR)/parallel_02.Po
#	$(AM_V_CC)source='openmp/parallel_02.c' object='parallel_02.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_02.obj `if test -f 'openmp/parallel_02.c'; then $(CYGPATH_W) 'openmp/parallel_02.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_02.c'; fi`

parallel_03.o: openmp/parallel_03.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_03.o -MD -MP -MF $(DEPDIR)/parallel_03.Tpo -c -o parallel_03.o `test -f 'openmp/parallel_03.c' || echo '$(srcdir)/'`openmp/parallel_03.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_03.Tpo $(DEPDIR)/parallel_03.Po
#	$(AM_V_CC)source='openmp/parallel_03.c' object='parallel_03.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_03.o `test -f 'openmp/parallel_03.c' || echo '$(srcdir)/'`openmp/parallel_03.c

parallel_03.obj: openmp/parallel_03.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_03.obj -MD -MP -MF $(DEPDIR)/parallel_03.Tpo -c -o parallel_03.obj `if test -f 'openmp/parallel_03.c'; then $(CYGPATH_W) 'openmp/parallel_03.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_03.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_03.Tpo $(DEPDIR)/parallel_03.Po
#	$(AM_V_CC)source='openmp/parallel_03.c' object='parallel_03.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_03.obj `if test -f 'openmp/parallel_03.c'; then $(CYGPATH_W) 'openmp/parallel_03.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_03.c'; fi`

parallel_barrier_01.o: openmp/parallel_barrier_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_barrier_01.o -MD -MP -MF $(DEPDIR)/parallel_barrier_01.Tpo -c -o parallel_barrier_01.o `test -f 'openmp/parallel_barrier_01.c' || echo '$(srcdir)/'`openmp/parallel_barrier_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_barrier_01.Tpo $(DEPDIR)/parallel_barrier_01.Po
#	$(AM_V_CC)source='openmp/parallel_barrier_01.c' object='parallel_barrier_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_barrier_01.o `test -f 'openmp/parallel_barrier_01.c' || echo '$(srcdir)/'`openmp/parallel_barrier_01.c

parallel_barrier_01.obj: openmp/parallel_barrier_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_barrier_01.obj -MD -MP -MF $(DEPDIR)/parallel_barrier_01.Tpo -c -o parallel_barrier_01.obj `if test -f 'openmp/parallel_barrier_01.c'; then $(CYGPATH_W) 'openmp/parallel_barrier_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_barrier_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_barrier_01.Tpo $(DEPDIR)/parallel_barrier_01.Po
#	$(AM_V_CC)source='openmp/parallel_barrier_01.c' object='parallel_barrier_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_barrier_01.obj `if test -f 'openmp/parallel_barrier_01.c'; then $(CYGPATH_W) 'openmp/parallel_barrier_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_barrier_01.c'; fi`

parallel_critical_01.o: openmp/parallel_critical_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_critical_01.o -MD -MP -MF $(DEPDIR)/parallel_critical_01.Tpo -c -o parallel_critical_01.o `test -f 'openmp/parallel_critical_01.c' || echo '$(srcdir)/'`openmp/parallel_critical_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_critical_01.Tpo $(DEPDIR)/parallel_critical_01.Po
#	$(AM_V_CC)source='openmp/parallel_critical_01.c' object='parallel_critical_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_critical_01.o `test -f 'openmp/parallel_critical_01.c' || echo '$(srcdir)/'`openmp/parallel_critical_01.c

parallel_critical_01.obj: openmp/parallel_critical_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_critical_01.obj -MD -MP -MF $(DEPDIR)/parallel_critical_01.Tpo -c -o parallel_critical_01.obj `if test -f 'openmp/parallel_critical_01.c'; then $(CYGPATH_W) 'openmp/parallel_critical_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_critical_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_critical_01.Tpo $(DEPDIR)/parallel_critical_01.Po
#	$(AM_V_CC)source='openmp/parallel_critical_01.c' object='parallel_critical_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_critical_01.obj `if test -f 'openmp/parallel_critical_01.c'; then $(CYGPATH_W) 'openmp/parallel_critical_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_critical_01.c'; fi`

parallel_critical_inline_01.o: openmp/parallel_critical_inline_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_critical_inline_01.o -MD -MP -MF $(DEPDIR)/parallel_critical_inline_01.Tpo -c -o parallel_critical_inline_01.o `test -f 'openmp/parallel_critical_inline_01.c' || echo '$(srcdir)/'`openmp/parallel_critical_inline_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_critical_inline_01.Tpo $(DEPDIR)/parallel_critical_inline_01.Po
#	$(AM_V_CC)source='openmp/parallel_critical_inline_01.c' object='parallel_critical_inline_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_critical_inline_01.o `test -f 'openmp/parallel_critical_inline_01.c' || echo '$(srcdir)/'`openmp/parallel_critical_inline_01.c

parallel_critical_inline_01.obj: openmp/parallel_critical_inline_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_critical_inline_01.obj -MD -MP -MF $(DEPDIR)/parallel_critical_inline_01.Tpo -c -o parallel_critical_inline_01.obj `if test -f 'openmp/parallel_critical_inline_01.c'; then $(CYGPATH_W) 'openmp/parallel_critical_inline_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_critical_inline_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_critical_inline_01.Tpo $(DEPDIR)/parallel_critical_inline_01.Po
#	$(AM_V_CC)source='openmp/parallel_critical_inline_01.c' object='parallel_critical_inline_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_critical_inline_01.obj `if test -f 'openmp/parallel_critical_inline_01.c'; then $(CYGPATH_W) 'openmp/parallel_critical_inline_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_critical_inline_01.c'; fi`

parallel_critical_named_01.o: openmp/parallel_critical_named_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_critical_named_01.o -MD -MP -MF $(DEPDIR)/parallel_critical_named_01.Tpo -c -o parallel_critical_named_01.o `test -f 'openmp/parallel_critical_named_01.c' || echo '$(srcdir)/'`openmp/parallel_critical_named_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_critical_named_01.Tpo $(DEPDIR)/parallel_critical_named_01.Po
#	$(AM_V_CC)source='openmp/parallel_critical_named_01.c' object='parallel_critical_named_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_critical_named_01.o `test -f 'openmp/parallel_critical_named_01.c' || echo '$(srcdir)/'`openmp/parallel_critical_named_01.c

parallel_critical_named_01.obj: openmp/parallel_critical_named_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_critical_named_01.obj -MD -MP -MF $(DEPDIR)/parallel_critical_named_01.Tpo -c -o parallel_critical_named_01.obj `if test -f 'openmp/parallel_critical_named_01.c'; then $(CYGPATH_W) 'openmp/parallel_critical_named_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_critical_named_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_critical_named_01.Tpo $(DEPDIR)/parallel_critical_named_01.Po
#	$(AM_V_CC)source='openmp/parallel_critical_named_01.c' object='parallel_critical_named_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_critical_named_01.obj `if test -f 'openmp/parallel_critical_named_01.c'; then $(CYGPATH_W) 'openmp/parallel_critical_named_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_critical_named_01.c'; fi`

parallel_critical_named_inline_01.o: openmp/parallel_critical_named_inline_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_critical_named_inline_01.o -MD -MP -MF $(DEPDIR)/parallel_critical_named_inline_01.Tpo -c -o parallel_critical_named_inline_01.o `test -f 'openmp/parallel_critical_named_inline_01.c' || echo '$(srcdir)/'`openmp/parallel_critical_named_inline_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_critical_named_inline_01.Tpo $(DEPDIR)/parallel_critical_named_inline_01.Po
#	$(AM_V_CC)source='openmp/parallel_critical_named_inline_01.c' object='parallel_critical_named_inline_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_critical_named_inline_01.o `test -f 'openmp/parallel_critical_named_inline_01.c' || echo '$(srcdir)/'`openmp/parallel_critical_named_inline_01.c

parallel_critical_named_inline_01.obj: openmp/parallel_critical_named_inline_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_critical_named_inline_01.obj -MD -MP -MF $(DEPDIR)/parallel_critical_named_inline_01.Tpo -c -o parallel_critical_named_inline_01.obj `if test -f 'openmp/parallel_critical_named_inline_01.c'; then $(CYGPATH_W) 'openmp/parallel_critical_named_inline_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_critical_named_inline_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_critical_named_inline_01.Tpo $(DEPDIR)/parallel_critical_named_inline_01.Po
#	$(AM_V_CC)source='openmp/parallel_critical_named_inline_01.c' object='parallel_critical_named_inline_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_critical_named_inline_01.obj `if test -f 'openmp/parallel_critical_named_inline_01.c'; then $(CYGPATH_W) 'openmp/parallel_critical_named_inline_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_critical_named_inline_01.c'; fi`

parallel_for_01.o: openmp/parallel_for_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_for_01.o -MD -MP -MF $(DEPDIR)/parallel_for_01.Tpo -c -o parallel_for_01.o `test -f 'openmp/parallel_for_01.c' || echo '$(srcdir)/'`openmp/parallel_for_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_for_01.Tpo $(DEPDIR)/parallel_for_01.Po
#	$(AM_V_CC)source='openmp/parallel_for_01.c' object='parallel_for_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_for_01.o `test -f 'openmp/parallel_for_01.c' || echo '$(srcdir)/'`openmp/parallel_for_01.c

parallel_for_01.obj: openmp/parallel_for_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_for_01.obj -MD -MP -MF $(DEPDIR)/parallel_for_01.Tpo -c -o parallel_for_01.obj `if test -f 'openmp/parallel_for_01.c'; then $(CYGPATH_W) 'openmp/parallel_for_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_for_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_for_01.Tpo $(DEPDIR)/parallel_for_01.Po
#	$(AM_V_CC)source='openmp/parallel_for_01.c' object='parallel_for_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_for_01.obj `if test -f 'openmp/parallel_for_01.c'; then $(CYGPATH_W) 'openmp/parallel_for_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_for_01.c'; fi`

parallel_for_02.o: openmp/parallel_for_02.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_for_02.o -MD -MP -MF $(DEPDIR)/parallel_for_02.Tpo -c -o parallel_for_02.o `test -f 'openmp/parallel_for_02.c' || echo '$(srcdir)/'`openmp/parallel_for_02.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_for_02.Tpo $(DEPDIR)/parallel_for_02.Po
#	$(AM_V_CC)source='openmp/parallel_for_02.c' object='parallel_for_02.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_for_02.o `test -f 'openmp/parallel_for_02.c' || echo '$(srcdir)/'`openmp/parallel_for_02.c

parallel_for_02.obj: openmp/parallel_for_02.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_for_02.obj -MD -MP -MF $(DEPDIR)/parallel_for_02.Tpo -c -o parallel_for_02.obj `if test -f 'openmp/parallel_for_02.c'; then $(CYGPATH_W) 'openmp/parallel_for_02.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_for_02.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_for_02.Tpo $(DEPDIR)/parallel_for_02.Po
#	$(AM_V_CC)source='openmp/parallel_for_02.c' object='parallel_for_02.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_for_02.obj `if test -f 'openmp/parallel_for_02.c'; then $(CYGPATH_W) 'openmp/parallel_for_02.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_for_02.c'; fi`

parallel_for_ordered_01.o: openmp/parallel_for_ordered_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_for_ordered_01.o -MD -MP -MF $(DEPDIR)/parallel_for_ordered_01.Tpo -c -o parallel_for_ordered_01.o `test -f 'openmp/parallel_for_ordered_01.c' || echo '$(srcdir)/'`openmp/parallel_for_ordered_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_for_ordered_01.Tpo $(DEPDIR)/parallel_for_ordered_01.Po
#	$(AM_V_CC)source='openmp/parallel_for_ordered_01.c' object='parallel_for_ordered_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_for_ordered_01.o `test -f 'openmp/parallel_for_ordered_01.c' || echo '$(srcdir)/'`openmp/parallel_for_ordered_01.c

parallel_for_ordered_01.obj: openmp/parallel_for_ordered_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_for_ordered_01.obj -MD -MP -MF $(DEPDIR)/parallel_for_ordered_01.Tpo -c -o parallel_for_ordered_01.obj `if test -f 'openmp/parallel_for_ordered_01.c'; then $(CYGPATH_W) 'openmp/parallel_for_ordered_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_for_ordered_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_for_ordered_01.Tpo $(DEPDIR)/parallel_for_ordered_01.Po
#	$(AM_V_CC)source='openmp/parallel_for_ordered_01.c' object='parallel_for_ordered_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_for_ordered_01.obj `if test -f 'openmp/parallel_for_ordered_01.c'; then $(CYGPATH_W) 'openmp/parallel_for_ordered_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_for_ordered_01.c'; fi`

parallel_master_01.o: openmp/parallel_master_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_master_01.o -MD -MP -MF $(DEPDIR)/parallel_master_01.Tpo -c -o parallel_master_01.o `test -f 'openmp/parallel_master_01.c' || echo '$(srcdir)/'`openmp/parallel_master_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_master_01.Tpo $(DEPDIR)/parallel_master_01.Po
#	$(AM_V_CC)source='openmp/parallel_master_01.c' object='parallel_master_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_master_01.o `test -f 'openmp/parallel_master_01.c' || echo '$(srcdir)/'`openmp/parallel_master_01.c

parallel_master_01.obj: openmp/parallel_master_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_master_01.obj -MD -MP -MF $(DEPDIR)/parallel_master_01.Tpo -c -o parallel_master_01.obj `if test -f 'openmp/parallel_master_01.c'; then $(CYGPATH_W) 'openmp/parallel_master_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_master_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_master_01.Tpo $(DEPDIR)/parallel_master_01.Po
#	$(AM_V_CC)source='openmp/parallel_master_01.c' object='parallel_master_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_master_01.obj `if test -f 'openmp/parallel_master_01.c'; then $(CYGPATH_W) 'openmp/parallel_master_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_master_01.c'; fi`

parallel_master_inline_01.o: openmp/parallel_master_inline_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_master_inline_01.o -MD -MP -MF $(DEPDIR)/parallel_master_inline_01.Tpo -c -o parallel_master_inline_01.o `test -f 'openmp/parallel_master_inline_01.c' || echo '$(srcdir)/'`openmp/parallel_master_inline_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_master_inline_01.Tpo $(DEPDIR)/parallel_master_inline_01.Po
#	$(AM_V_CC)source='openmp/parallel_master_inline_01.c' object='parallel_master_inline_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_master_inline_01.o `test -f 'openmp/parallel_master_inline_01.c' || echo '$(srcdir)/'`openmp/parallel_master_inline_01.c

parallel_master_inline_01.obj: openmp/parallel_master_inline_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_master_inline_01.obj -MD -MP -MF $(DEPDIR)/parallel_master_inline_01.Tpo -c -o parallel_master_inline_01.obj `if test -f 'openmp/parallel_master_inline_01.c'; then $(CYGPATH_W) 'openmp/parallel_master_inline_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_master_inline_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_master_inline_01.Tpo $(DEPDIR)/parallel_master_inline_01.Po
#	$(AM_V_CC)source='openmp/parallel_master_inline_01.c' object='parallel_master_inline_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_master_inline_01.obj `if test -f 'openmp/parallel_master_inline_01.c'; then $(CYGPATH_W) 'openmp/parallel_master_inline_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_master_inline_01.c'; fi`

parallel_nested_lock_01.o: openmp/parallel_nested_lock_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_nested_lock_01.o -MD -MP -MF $(DEPDIR)/parallel_nested_lock_01.Tpo -c -o parallel_nested_lock_01.o `test -f 'openmp/parallel_nested_lock_01.c' || echo '$(srcdir)/'`openmp/parallel_nested_lock_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_nested_lock_01.Tpo $(DEPDIR)/parallel_nested_lock_01.Po
#	$(AM_V_CC)source='openmp/parallel_nested_lock_01.c' object='parallel_nested_lock_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_nested_lock_01.o `test -f 'openmp/parallel_nested_lock_01.c' || echo '$(srcdir)/'`openmp/parallel_nested_lock_01.c

parallel_nested_lock_01.obj: openmp/parallel_nested_lock_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_nested_lock_01.obj -MD -MP -MF $(DEPDIR)/parallel_nested_lock_01.Tpo -c -o parallel_nested_lock_01.obj `if test -f 'openmp/parallel_nested_lock_01.c'; then $(CYGPATH_W) 'openmp/parallel_nested_lock_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_nested_lock_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_nested_lock_01.Tpo $(DEPDIR)/parallel_nested_lock_01.Po
#	$(AM_V_CC)source='openmp/parallel_nested_lock_01.c' object='parallel_nested_lock_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_nested_lock_01.obj `if test -f 'openmp/parallel_nested_lock_01.c'; then $(CYGPATH_W) 'openmp/parallel_nested_lock_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_nested_lock_01.c'; fi`

parallel_sections_01.o: openmp/parallel_sections_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_sections_01.o -MD -MP -MF $(DEPDIR)/parallel_sections_01.Tpo -c -o parallel_sections_01.o `test -f 'openmp/parallel_sections_01.c' || echo '$(srcdir)/'`openmp/parallel_sections_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_sections_01.Tpo $(DEPDIR)/parallel_sections_01.Po
#	$(AM_V_CC)source='openmp/parallel_sections_01.c' object='parallel_sections_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_sections_01.o `test -f 'openmp/parallel_sections_01.c' || echo '$(srcdir)/'`openmp/parallel_sections_01.c

parallel_sections_01.obj: openmp/parallel_sections_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_sections_01.obj -MD -MP -MF $(DEPDIR)/parallel_sections_01.Tpo -c -o parallel_sections_01.obj `if test -f 'openmp/parallel_sections_01.c'; then $(CYGPATH_W) 'openmp/parallel_sections_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_sections_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_sections_01.Tpo $(DEPDIR)/parallel_sections_01.Po
#	$(AM_V_CC)source='openmp/parallel_sections_01.c' object='parallel_sections_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_sections_01.obj `if test -f 'openmp/parallel_sections_01.c'; then $(CYGPATH_W) 'openmp/parallel_sections_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_sections_01.c'; fi`

parallel_sections_combined_01.o: openmp/parallel_sections_combined_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_sections_combined_01.o -MD -MP -MF $(DEPDIR)/parallel_sections_combined_01.Tpo -c -o parallel_sections_combined_01.o `test -f 'openmp/parallel_sections_combined_01.c' || echo '$(srcdir)/'`openmp/parallel_sections_combined_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_sections_combined_01.Tpo $(DEPDIR)/parallel_sections_combined_01.Po
#	$(AM_V_CC)source='openmp/parallel_sections_combined_01.c' object='parallel_sections_combined_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_sections_combined_01.o `test -f 'openmp/parallel_sections_combined_01.c' || echo '$(srcdir)/'`openmp/parallel_sections_combined_01.c

parallel_sections_combined_01.obj: openmp/parallel_sections_combined_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_sections_combined_01.obj -MD -MP -MF $(DEPDIR)/parallel_sections_combined_01.Tpo -c -o parallel_sections_combined_01.obj `if test -f 'openmp/parallel_sections_combined_01.c'; then $(CYGPATH_W) 'openmp/parallel_sections_combined_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_sections_combined_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_sections_combined_01.Tpo $(DEPDIR)/parallel_sections_combined_01.Po
#	$(AM_V_CC)source='openmp/parallel_sections_combined_01.c' object='parallel_sections_combined_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_sections_combined_01.obj `if test -f 'openmp/parallel_sections_combined_01.c'; then $(CYGPATH_W) 'openmp/parallel_sections_combined_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_sections_combined_01.c'; fi`

parallel_simple_lock_01.o: openmp/parallel_simple_lock_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_simple_lock_01.o -MD -MP -MF $(DEPDIR)/parallel_simple_lock_01.Tpo -c -o parallel_simple_lock_01.o `test -f 'openmp/parallel_simple_lock_01.c' || echo '$(srcdir)/'`openmp/parallel_simple_lock_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_simple_lock_01.Tpo $(DEPDIR)/parallel_simple_lock_01.Po
#	$(AM_V_CC)source='openmp/parallel_simple_lock_01.c' object='parallel_simple_lock_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_simple_lock_01.o `test -f 'openmp/parallel_simple_lock_01.c' || echo '$(srcdir)/'`openmp/parallel_simple_lock_01.c

parallel_simple_lock_01.obj: openmp/parallel_simple_lock_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_simple_lock_01.obj -MD -MP -MF $(DEPDIR)/parallel_simple_lock_01.Tpo -c -o parallel_simple_lock_01.obj `if test -f 'openmp/parallel_simple_lock_01.c'; then $(CYGPATH_W) 'openmp/parallel_simple_lock_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_simple_lock_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_simple_lock_01.Tpo $(DEPDIR)/parallel_simple_lock_01.Po
#	$(AM_V_CC)source='openmp/parallel_simple_lock_01.c' object='parallel_simple_lock_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_simple_lock_01.obj `if test -f 'openmp/parallel_simple_lock_01.c'; then $(CYGPATH_W) 'openmp/parallel_simple_lock_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_simple_lock_01.c'; fi`

parallel_single_copyprivate_01.o: openmp/parallel_single_copyprivate_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_single_copyprivate_01.o -MD -MP -MF $(DEPDIR)/parallel_single_copyprivate_01.Tpo -c -o parallel_single_copyprivate_01.o `test -f 'openmp/parallel_single_copyprivate_01.c' || echo '$(srcdir)/'`openmp/parallel_single_copyprivate_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_single_copyprivate_01.Tpo $(DEPDIR)/parallel_single_copyprivate_01.Po
#	$(AM_V_CC)source='openmp/parallel_single_copyprivate_01.c' object='parallel_single_copyprivate_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_single_copyprivate_01.o `test -f 'openmp/parallel_single_copyprivate_01.c' || echo '$(srcdir)/'`openmp/parallel_single_copyprivate_01.c

parallel_single_copyprivate_01.obj: openmp/parallel_single_copyprivate_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_single_copyprivate_01.obj -MD -MP -MF $(DEPDIR)/parallel_single_copyprivate_01.Tpo -c -o parallel_single_copyprivate_01.obj `if test -f 'openmp/parallel_single_copyprivate_01.c'; then $(CYGPATH_W) 'openmp/parallel_single_copyprivate_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_single_copyprivate_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_single_copyprivate_01.Tpo $(DEPDIR)/parallel_single_copyprivate_01.Po
#	$(AM_V_CC)source='openmp/parallel_single_copyprivate_01.c' object='parallel_single_copyprivate_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_single_copyprivate_01.obj `if test -f 'openmp/parallel_single_copyprivate_01.c'; then $(CYGPATH_W) 'openmp/parallel_single_copyprivate_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_single_copyprivate_01.c'; fi`

parallel_single_copyprivate_inline_01.o: openmp/parallel_single_copyprivate_inline_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_single_copyprivate_inline_01.o -MD -MP -MF $(DEPDIR)/parallel_single_copyprivate_inline_01.Tpo -c -o parallel_single_copyprivate_inline_01.o `test -f 'openmp/parallel_single_copyprivate_inline_01.c' || echo '$(srcdir)/'`openmp/parallel_single_copyprivate_inline_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_single_copyprivate_inline_01.Tpo $(DEPDIR)/parallel_single_copyprivate_inline_01.Po
#	$(AM_V_CC)source='openmp/parallel_single_copyprivate_inline_01.c' object='parallel_single_copyprivate_inline_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_single_copyprivate_inline_01.o `test -f 'openmp/parallel_single_copyprivate_inline_01.c' || echo '$(srcdir)/'`openmp/parallel_single_copyprivate_inline_01.c

parallel_single_copyprivate_inline_01.obj: openmp/parallel_single_copyprivate_inline_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_single_copyprivate_inline_01.obj -MD -MP -MF $(DEPDIR)/parallel_single_copyprivate_inline_01.Tpo -c -o parallel_single_copyprivate_inline_01.obj `if test -f 'openmp/parallel_single_copyprivate_inline_01.c'; then $(CYGPATH_W) 'openmp/parallel_single_copyprivate_inline_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_single_copyprivate_inline_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_single_copyprivate_inline_01.Tpo $(DEPDIR)/parallel_single_copyprivate_inline_01.Po
#	$(AM_V_CC)source='openmp/parallel_single_copyprivate_inline_01.c' object='parallel_single_copyprivate_inline_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_single_copyprivate_inline_01.obj `if test -f 'openmp/parallel_single_copyprivate_inline_01.c'; then $(CYGPATH_W) 'openmp/parallel_single_copyprivate_inline_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_single_copyprivate_inline_01.c'; fi`

parallel_single_inline_01.o: openmp/parallel_single_inline_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_single_inline_01.o -MD -MP -MF $(DEPDIR)/parallel_single_inline_01.Tpo -c -o parallel_single_inline_01.o `test -f 'openmp/parallel_single_inline_01.c' || echo '$(srcdir)/'`openmp/parallel_single_inline_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_single_inline_01.Tpo $(DEPDIR)/parallel_single_inline_01.Po
#	$(AM_V_CC)source='openmp/parallel_single_inline_01.c' object='parallel_single_inline_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_single_inline_01.o `test -f 'openmp/parallel_single_inline_01.c' || echo '$(srcdir)/'`openmp/parallel_single_inline_01.c

parallel_single_inline_01.obj: openmp/parallel_single_inline_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_single_inline_01.obj -MD -MP -MF $(DEPDIR)/parallel_single_inline_01.Tpo -c -o parallel_single_inline_01.obj `if test -f 'openmp/parallel_single_inline_01.c'; then $(CYGPATH_W) 'openmp/parallel_single_inline_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_single_inline_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_single_inline_01.Tpo $(DEPDIR)/parallel_single_inline_01.Po
#	$(AM_V_CC)source='openmp/parallel_single_inline_01.c' object='parallel_single_inline_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_single_inline_01.obj `if test -f 'openmp/parallel_single_inline_01.c'; then $(CYGPATH_W) 'openmp/parallel_single_inline_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_single_inline_01.c'; fi`

parallel_single_nowait_01.o: openmp/parallel_single_nowait_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_single_nowait_01.o -MD -MP -MF $(DEPDIR)/parallel_single_nowait_01.Tpo -c -o parallel_single_nowait_01.o `test -f 'openmp/parallel_single_nowait_01.c' || echo '$(srcdir)/'`openmp/parallel_single_nowait_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_single_nowait_01.Tpo $(DEPDIR)/parallel_single_nowait_01.Po
#	$(AM_V_CC)source='openmp/parallel_single_nowait_01.c' object='parallel_single_nowait_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_single_nowait_01.o `test -f 'openmp/parallel_single_nowait_01.c' || echo '$(srcdir)/'`openmp/parallel_single_nowait_01.c

parallel_single_nowait_01.obj: openmp/parallel_single_nowait_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_single_nowait_01.obj -MD -MP -MF $(DEPDIR)/parallel_single_nowait_01.Tpo -c -o parallel_single_nowait_01.obj `if test -f 'openmp/parallel_single_nowait_01.c'; then $(CYGPATH_W) 'openmp/parallel_single_nowait_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_single_nowait_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_single_nowait_01.Tpo $(DEPDIR)/parallel_single_nowait_01.Po
#	$(AM_V_CC)source='openmp/parallel_single_nowait_01.c' object='parallel_single_nowait_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_single_nowait_01.obj `if test -f 'openmp/parallel_single_nowait_01.c'; then $(CYGPATH_W) 'openmp/parallel_single_nowait_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_single_nowait_01.c'; fi`

parallel_single_wait_01.o: openmp/parallel_single_wait_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_single_wait_01.o -MD -MP -MF $(DEPDIR)/parallel_single_wait_01.Tpo -c -o parallel_single_wait_01.o `test -f 'openmp/parallel_single_wait_01.c' || echo '$(srcdir)/'`openmp/parallel_single_wait_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_single_wait_01.Tpo $(DEPDIR)/parallel_single_wait_01.Po
#	$(AM_V_CC)source='openmp/parallel_single_wait_01.c' object='parallel_single_wait_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_single_wait_01.o `test -f 'openmp/parallel_single_wait_01.c' || echo '$(srcdir)/'`openmp/parallel_single_wait_01.c

parallel_single_wait_01.obj: openmp/parallel_single_wait_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_single_wait_01.obj -MD -MP -MF $(DEPDIR)/parallel_single_wait_01.Tpo -c -o parallel_single_wait_01.obj `if test -f 'openmp/parallel_single_wait_01.c'; then $(CYGPATH_W) 'openmp/parallel_single_wait_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_single_wait_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_single_wait_01.Tpo $(DEPDIR)/parallel_single_wait_01.Po
#	$(AM_V_CC)source='openmp/parallel_single_wait_01.c' object='parallel_single_wait_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_single_wait_01.obj `if test -f 'openmp/parallel_single_wait_01.c'; then $(CYGPATH_W) 'openmp/parallel_single_wait_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/parallel_single_wait_01.c'; fi`

task_01.o: openmp/task_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT task_01.o -MD -MP -MF $(DEPDIR)/task_01.Tpo -c -o task_01.o `test -f 'openmp/task_01.c' || echo '$(srcdir)/'`openmp/task_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/task_01.Tpo $(DEPDIR)/task_01.Po
#	$(AM_V_CC)source='openmp/task_01.c' object='task_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o task_01.o `test -f 'openmp/task_01.c' || echo '$(srcdir)/'`openmp/task_01.c

task_01.obj: openmp/task_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT task_01.obj -MD -MP -MF $(DEPDIR)/task_01.Tpo -c -o task_01.obj `if test -f 'openmp/task_01.c'; then $(CYGPATH_W) 'openmp/task_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/task_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/task_01.Tpo $(DEPDIR)/task_01.Po
#	$(AM_V_CC)source='openmp/task_01.c' object='task_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o task_01.obj `if test -f 'openmp/task_01.c'; then $(CYGPATH_W) 'openmp/task_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/task_01.c'; fi`

task_02.o: openmp/task_02.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT task_02.o -MD -MP -MF $(DEPDIR)/task_02.Tpo -c -o task_02.o `test -f 'openmp/task_02.c' || echo '$(srcdir)/'`openmp/task_02.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/task_02.Tpo $(DEPDIR)/task_02.Po
#	$(AM_V_CC)source='openmp/task_02.c' object='task_02.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o task_02.o `test -f 'openmp/task_02.c' || echo '$(srcdir)/'`openmp/task_02.c

task_02.obj: openmp/task_02.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT task_02.obj -MD -MP -MF $(DEPDIR)/task_02.Tpo -c -o task_02.obj `if test -f 'openmp/task_02.c'; then $(CYGPATH_W) 'openmp/task_02.c'; else $(CYGPATH_W) '$(srcdir)/openmp/task_02.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/task_02.Tpo $(DEPDIR)/task_02.Po
#	$(AM_V_CC)source='openmp/task_02.c' object='task_02.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o task_02.obj `if test -f 'openmp/task_02.c'; then $(CYGPATH_W) 'openmp/task_02.c'; else $(CYGPATH_W) '$(srcdir)/openmp/task_02.c'; fi`

task_03.o: openmp/task_03.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT task_03.o -MD -MP -MF $(DEPDIR)/task_03.Tpo -c -o task_03.o `test -f 'openmp/task_03.c' || echo '$(srcdir)/'`openmp/task_03.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/task_03.Tpo $(DEPDIR)/task_03.Po
#	$(AM_V_CC)source='openmp/task_03.c' object='task_03.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o task_03.o `test -f 'openmp/task_03.c' || echo '$(srcdir)/'`openmp/task_03.c

task_03.obj: openmp/task_03.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT task_03.obj -MD -MP -MF $(DEPDIR)/task_03.Tpo -c -o task_03.obj `if test -f 'openmp/task_03.c'; then $(CYGPATH_W) 'openmp/task_03.c'; else $(CYGPATH_W) '$(srcdir)/openmp/task_03.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/task_03.Tpo $(DEPDIR)/task_03.Po
#	$(AM_V_CC)source='openmp/task_03.c' object='task_03.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o task_03.obj `if test -f 'openmp/task_03.c'; then $(CYGPATH_W) 'openmp/task_03.c'; else $(CYGPATH_W) '$(srcdir)/openmp/task_03.c'; fi`

taskgroup_01.o: openmp/taskgroup_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT taskgroup_01.o -MD -MP -MF $(DEPDIR)/taskgroup_01.Tpo -c -o taskgroup_01.o `test -f 'openmp/taskgroup_01.c' || echo '$(srcdir)/'`openmp/taskgroup_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/taskgroup_01.Tpo $(DEPDIR)/taskgroup_01.Po
#	$(AM_V_CC)source='openmp/taskgroup_01.c' object='taskgroup_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taskgroup_01.o `test -f 'openmp/taskgroup_01.c' || echo '$(srcdir)/'`openmp/taskgroup_01.c

taskgroup_01.obj: openmp/taskgroup_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT taskgroup_01.obj -MD -MP -MF $(DEPDIR)/taskgroup_01.Tpo -c -o taskgroup_01.obj `if test -f 'openmp/taskgroup_01.c'; then $(CYGPATH_W) 'openmp/taskgroup_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/taskgroup_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/taskgroup_01.Tpo $(DEPDIR)/taskgroup_01.Po
#	$(AM_V_CC)source='openmp/taskgroup_01.c' object='taskgroup_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taskgroup_01.obj `if test -f 'openmp/taskgroup_01.c'; then $(CYGPATH_W) 'openmp/taskgroup_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/taskgroup_01.c'; fi`

taskgroup_02.o: openmp/taskgroup_02.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT taskgroup_02.o -MD -MP -MF $(DEPDIR)/taskgroup_02.Tpo -c -o taskgroup_02.o `test -f 'openmp/taskgroup_02.c' || echo '$(srcdir)/'`openmp/taskgroup_02.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/taskgroup_02.Tpo $(DEPDIR)/taskgroup_02.Po
#	$(AM_V_CC)source='openmp/taskgroup_02.c' object='taskgroup_02.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taskgroup_02.o `test -f 'openmp/taskgroup_02.c' || echo '$(srcdir)/'`openmp/taskgroup_02.c

taskgroup_02.obj: openmp/taskgroup_02.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT taskgroup_02.obj -MD -MP -MF $(DEPDIR)/taskgroup_02.Tpo -c -o taskgroup_02.obj `if test -f 'openmp/taskgroup_02.c'; then $(CYGPATH_W) 'openmp/taskgroup_02.c'; else $(CYGPATH_W) '$(srcdir)/openmp/taskgroup_02.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/taskgroup_02.Tpo $(DEPDIR)/taskgroup_02.Po
#	$(AM_V_CC)source='openmp/taskgroup_02.c' object='taskgroup_02.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taskgroup_02.obj `if test -f 'openmp/taskgroup_02.c'; then $(CYGPATH_W) 'openmp/taskgroup_02.c'; else $(CYGPATH_W) '$(srcdir)/openmp/taskgroup_02.c'; fi`

taskloop.o: openmp/taskloop.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT taskloop.o -MD -MP -MF $(DEPDIR)/taskloop.Tpo -c -o taskloop.o `test -f 'openmp/taskloop.c' || echo '$(srcdir)/'`openmp/taskloop.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/taskloop.Tpo $(DEPDIR)/taskloop.Po
#	$(AM_V_CC)source='openmp/taskloop.c' object='taskloop.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taskloop.o `test -f 'openmp/taskloop.c' || echo '$(srcdir)/'`openmp/taskloop.c

taskloop.obj: openmp/taskloop.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT taskloop.obj -MD -MP -MF $(DEPDIR)/taskloop.Tpo -c -o taskloop.obj `if test -f 'openmp/taskloop.c'; then $(CYGPATH_W) 'openmp/taskloop.c'; else $(CYGPATH_W) '$(srcdir)/openmp/taskloop.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/taskloop.Tpo $(DEPDIR)/taskloop.Po
#	$(AM_V_CC)source='openmp/taskloop.c' object='taskloop.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taskloop.obj `if test -f 'openmp/taskloop.c'; then $(CYGPATH_W) 'openmp/taskloop.c'; else $(CYGPATH_W) '$(srcdir)/openmp/taskloop.c'; fi`

taskwait_01.o: openmp/taskwait_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT taskwait_01.o -MD -MP -MF $(DEPDIR)/taskwait_01.Tpo -c -o taskwait_01.o `test -f 'openmp/taskwait_01.c' || echo '$(srcdir)/'`openmp/taskwait_01.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/taskwait_01.Tpo $(DEPDIR)/taskwait_01.Po
#	$(AM_V_CC)source='openmp/taskwait_01.c' object='taskwait_01.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taskwait_01.o `test -f 'openmp/taskwait_01.c' || echo '$(srcdir)/'`openmp/taskwait_01.c

taskwait_01.obj: openmp/taskwait_01.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT taskwait_01.obj -MD -MP -MF $(DEPDIR)/taskwait_01.Tpo -c -o taskwait_01.obj `if test -f 'openmp/taskwait_01.c'; then $(CYGPATH_W) 'openmp/taskwait_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/taskwait_01.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/taskwait_01.Tpo $(DEPDIR)/taskwait_01.Po
#	$(AM_V_CC)source='openmp/taskwait_01.c' object='taskwait_01.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taskwait_01.obj `if test -f 'openmp/taskwait_01.c'; then $(CYGPATH_W) 'openmp/taskwait_01.c'; else $(CYGPATH_W) '$(srcdir)/openmp/taskwait_01.c'; fi`

gpu_concurrency.o: overlap/gpu_concurrency.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpu_concurrency.o -MD -MP -MF $(DEPDIR)/gpu_concurrency.Tpo -c -o gpu_concurrency.o `test -f 'overlap/gpu_concurrency.c' || echo '$(srcdir)/'`overlap/gpu_concurrency.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/gpu_concurrency.Tpo $(DEPDIR)/gpu_concurrency.Po
#	$(AM_V_CC)source='overlap/gpu_concurrency.c' object='gpu_concurrency.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpu_concurrency.o `test -f 'overlap/gpu_concurrency.c' || echo '$(srcdir)/'`overlap/gpu_concurrency.c

gpu_concurrency.obj: overlap/gpu_concurrency.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpu_concurrency.obj -MD -MP -MF $(DEPDIR)/gpu_concurrency.Tpo -c -o gpu_concurrency.obj `if test -f 'overlap/gpu_concurrency.c'; then $(CYGPATH_W) 'overlap/gpu_concurrency.c'; else $(CYGPATH_W) '$(srcdir)/overlap/gpu_concurrency.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gpu_concurrency.Tpo $(DEPDIR)/gpu_concurrency.Po
#	$(AM_V_CC)source='overlap/gpu_concurrency.c' object='gpu_concurrency.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpu_concurrency.obj `if test -f 'overlap/gpu_concurrency.c'; then $(CYGPATH_W) 'overlap/gpu_concurrency.c'; else $(CYGPATH_W) '$(srcdir)/overlap/gpu_concurrency.c'; fi`

overlap.o: overlap/overlap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT overlap.o -MD -MP -MF $(DEPDIR)/overlap.Tpo -c -o overlap.o `test -f 'overlap/overlap.c' || echo '$(srcdir)/'`overlap/overlap.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/overlap.Tpo $(DEPDIR)/overlap.Po
#	$(AM_V_CC)source='overlap/overlap.c' object='overlap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o overlap.o `test -f 'overlap/overlap.c' || echo '$(srcdir)/'`overlap/overlap.c

overlap.obj: overlap/overlap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT overlap.obj -MD -MP -MF $(DEPDIR)/overlap.Tpo -c -o overlap.obj `if test -f 'overlap/overlap.c'; then $(CYGPATH_W) 'overlap/overlap.c'; else $(CYGPATH_W) '$(srcdir)/overlap/overlap.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/overlap.Tpo $(DEPDIR)/overlap.Po
#	$(AM_V_CC)source='overlap/overlap.c' object='overlap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o overlap.obj `if test -f 'overlap/overlap.c'; then $(CYGPATH_W) 'overlap/overlap.c'; else $(CYGPATH_W) '$(srcdir)/overlap/overlap.c'; fi`

cuda_only.o: parallel_tasks/cuda_only.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cuda_only.o -MD -MP -MF $(DEPDIR)/cuda_only.Tpo -c -o cuda_only.o `test -f 'parallel_tasks/cuda_only.c' || echo '$(srcdir)/'`parallel_tasks/cuda_only.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cuda_only.Tpo $(DEPDIR)/cuda_only.Po
#	$(AM_V_CC)source='parallel_tasks/cuda_only.c' object='cuda_only.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cuda_only.o `test -f 'parallel_tasks/cuda_only.c' || echo '$(srcdir)/'`parallel_tasks/cuda_only.c

cuda_only.obj: parallel_tasks/cuda_only.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cuda_only.obj -MD -MP -MF $(DEPDIR)/cuda_only.Tpo -c -o cuda_only.obj `if test -f 'parallel_tasks/cuda_only.c'; then $(CYGPATH_W) 'parallel_tasks/cuda_only.c'; else $(CYGPATH_W) '$(srcdir)/parallel_tasks/cuda_only.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cuda_only.Tpo $(DEPDIR)/cuda_only.Po
#	$(AM_V_CC)source='parallel_tasks/cuda_only.c' object='cuda_only.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cuda_only.obj `if test -f 'parallel_tasks/cuda_only.c'; then $(CYGPATH_W) 'parallel_tasks/cuda_only.c'; else $(CYGPATH_W) '$(srcdir)/parallel_tasks/cuda_only.c'; fi`

explicit_combined_worker.o: parallel_tasks/explicit_combined_worker.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT explicit_combined_worker.o -MD -MP -MF $(DEPDIR)/explicit_combined_worker.Tpo -c -o explicit_combined_worker.o `test -f 'parallel_tasks/explicit_combined_worker.c' || echo '$(srcdir)/'`parallel_tasks/explicit_combined_worker.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/explicit_combined_worker.Tpo $(DEPDIR)/explicit_combined_worker.Po
#	$(AM_V_CC)source='parallel_tasks/explicit_combined_worker.c' object='explicit_combined_worker.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o explicit_combined_worker.o `test -f 'parallel_tasks/explicit_combined_worker.c' || echo '$(srcdir)/'`parallel_tasks/explicit_combined_worker.c

explicit_combined_worker.obj: parallel_tasks/explicit_combined_worker.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT explicit_combined_worker.obj -MD -MP -MF $(DEPDIR)/explicit_combined_worker.Tpo -c -o explicit_combined_worker.obj `if test -f 'parallel_tasks/explicit_combined_worker.c'; then $(CYGPATH_W) 'parallel_tasks/explicit_combined_worker.c'; else $(CYGPATH_W) '$(srcdir)/parallel_tasks/explicit_combined_worker.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/explicit_combined_worker.Tpo $(DEPDIR)/explicit_combined_worker.Po
#	$(AM_V_CC)source='parallel_tasks/explicit_combined_worker.c' object='explicit_combined_worker.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o explicit_combined_worker.obj `if test -f 'parallel_tasks/explicit_combined_worker.c'; then $(CYGPATH_W) 'parallel_tasks/explicit_combined_worker.c'; else $(CYGPATH_W) '$(srcdir)/parallel_tasks/explicit_combined_worker.c'; fi`

parallel_kernels.o: parallel_tasks/parallel_kernels.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_kernels.o -MD -MP -MF $(DEPDIR)/parallel_kernels.Tpo -c -o parallel_kernels.o `test -f 'parallel_tasks/parallel_kernels.c' || echo '$(srcdir)/'`parallel_tasks/parallel_kernels.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_kernels.Tpo $(DEPDIR)/parallel_kernels.Po
#	$(AM_V_CC)source='parallel_tasks/parallel_kernels.c' object='parallel_kernels.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_kernels.o `test -f 'parallel_tasks/parallel_kernels.c' || echo '$(srcdir)/'`parallel_tasks/parallel_kernels.c

parallel_kernels.obj: parallel_tasks/parallel_kernels.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_kernels.obj -MD -MP -MF $(DEPDIR)/parallel_kernels.Tpo -c -o parallel_kernels.obj `if test -f 'parallel_tasks/parallel_kernels.c'; then $(CYGPATH_W) 'parallel_tasks/parallel_kernels.c'; else $(CYGPATH_W) '$(srcdir)/parallel_tasks/parallel_kernels.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_kernels.Tpo $(DEPDIR)/parallel_kernels.Po
#	$(AM_V_CC)source='parallel_tasks/parallel_kernels.c' object='parallel_kernels.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_kernels.obj `if test -f 'parallel_tasks/parallel_kernels.c'; then $(CYGPATH_W) 'parallel_tasks/parallel_kernels.c'; else $(CYGPATH_W) '$(srcdir)/parallel_tasks/parallel_kernels.c'; fi`

parallel_kernels_spmd.o: parallel_tasks/parallel_kernels_spmd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_kernels_spmd.o -MD -MP -MF $(DEPDIR)/parallel_kernels_spmd.Tpo -c -o parallel_kernels_spmd.o `test -f 'parallel_tasks/parallel_kernels_spmd.c' || echo '$(srcdir)/'`parallel_tasks/parallel_kernels_spmd.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_kernels_spmd.Tpo $(DEPDIR)/parallel_kernels_spmd.Po
#	$(AM_V_CC)source='parallel_tasks/parallel_kernels_spmd.c' object='parallel_kernels_spmd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_kernels_spmd.o `test -f 'parallel_tasks/parallel_kernels_spmd.c' || echo '$(srcdir)/'`parallel_tasks/parallel_kernels_spmd.c

parallel_kernels_spmd.obj: parallel_tasks/parallel_kernels_spmd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_kernels_spmd.obj -MD -MP -MF $(DEPDIR)/parallel_kernels_spmd.Tpo -c -o parallel_kernels_spmd.obj `if test -f 'parallel_tasks/parallel_kernels_spmd.c'; then $(CYGPATH_W) 'parallel_tasks/parallel_kernels_spmd.c'; else $(CYGPATH_W) '$(srcdir)/parallel_tasks/parallel_kernels_spmd.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_kernels_spmd.Tpo $(DEPDIR)/parallel_kernels_spmd.Po
#	$(AM_V_CC)source='parallel_tasks/parallel_kernels_spmd.c' object='parallel_kernels_spmd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_kernels_spmd.obj `if test -f 'parallel_tasks/parallel_kernels_spmd.c'; then $(CYGPATH_W) 'parallel_tasks/parallel_kernels_spmd.c'; else $(CYGPATH_W) '$(srcdir)/parallel_tasks/parallel_kernels_spmd.c'; fi`

parallel_kernels_trivial.o: parallel_tasks/parallel_kernels_trivial.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_kernels_trivial.o -MD -MP -MF $(DEPDIR)/parallel_kernels_trivial.Tpo -c -o parallel_kernels_trivial.o `test -f 'parallel_tasks/parallel_kernels_trivial.c' || echo '$(srcdir)/'`parallel_tasks/parallel_kernels_trivial.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_kernels_trivial.Tpo $(DEPDIR)/parallel_kernels_trivial.Po
#	$(AM_V_CC)source='parallel_tasks/parallel_kernels_trivial.c' object='parallel_kernels_trivial.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_kernels_trivial.o `test -f 'parallel_tasks/parallel_kernels_trivial.c' || echo '$(srcdir)/'`parallel_tasks/parallel_kernels_trivial.c

parallel_kernels_trivial.obj: parallel_tasks/parallel_kernels_trivial.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_kernels_trivial.obj -MD -MP -MF $(DEPDIR)/parallel_kernels_trivial.Tpo -c -o parallel_kernels_trivial.obj `if test -f 'parallel_tasks/parallel_kernels_trivial.c'; then $(CYGPATH_W) 'parallel_tasks/parallel_kernels_trivial.c'; else $(CYGPATH_W) '$(srcdir)/parallel_tasks/parallel_kernels_trivial.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_kernels_trivial.Tpo $(DEPDIR)/parallel_kernels_trivial.Po
#	$(AM_V_CC)source='parallel_tasks/parallel_kernels_trivial.c' object='parallel_kernels_trivial.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_kernels_trivial.obj `if test -f 'parallel_tasks/parallel_kernels_trivial.c'; then $(CYGPATH_W) 'parallel_tasks/parallel_kernels_trivial.c'; else $(CYGPATH_W) '$(srcdir)/parallel_tasks/parallel_kernels_trivial.c'; fi`

spmd_peager.o: parallel_tasks/spmd_peager.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT spmd_peager.o -MD -MP -MF $(DEPDIR)/spmd_peager.Tpo -c -o spmd_peager.o `test -f 'parallel_tasks/spmd_peager.c' || echo '$(srcdir)/'`parallel_tasks/spmd_peager.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/spmd_peager.Tpo $(DEPDIR)/spmd_peager.Po
#	$(AM_V_CC)source='parallel_tasks/spmd_peager.c' object='spmd_peager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spmd_peager.o `test -f 'parallel_tasks/spmd_peager.c' || echo '$(srcdir)/'`parallel_tasks/spmd_peager.c

spmd_peager.obj: parallel_tasks/spmd_peager.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT spmd_peager.obj -MD -MP -MF $(DEPDIR)/spmd_peager.Tpo -c -o spmd_peager.obj `if test -f 'parallel_tasks/spmd_peager.c'; then $(CYGPATH_W) 'parallel_tasks/spmd_peager.c'; else $(CYGPATH_W) '$(srcdir)/parallel_tasks/spmd_peager.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/spmd_peager.Tpo $(DEPDIR)/spmd_peager.Po
#	$(AM_V_CC)source='parallel_tasks/spmd_peager.c' object='spmd_peager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spmd_peager.obj `if test -f 'parallel_tasks/spmd_peager.c'; then $(CYGPATH_W) 'parallel_tasks/spmd_peager.c'; else $(CYGPATH_W) '$(srcdir)/parallel_tasks/spmd_peager.c'; fi`

feed.o: perfmodels/feed.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT feed.o -MD -MP -MF $(DEPDIR)/feed.Tpo -c -o feed.o `test -f 'perfmodels/feed.c' || echo '$(srcdir)/'`perfmodels/feed.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/feed.Tpo $(DEPDIR)/feed.Po
#	$(AM_V_CC)source='perfmodels/feed.c' object='feed.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o feed.o `test -f 'perfmodels/feed.c' || echo '$(srcdir)/'`perfmodels/feed.c

feed.obj: perfmodels/feed.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT feed.obj -MD -MP -MF $(DEPDIR)/feed.Tpo -c -o feed.obj `if test -f 'perfmodels/feed.c'; then $(CYGPATH_W) 'perfmodels/feed.c'; else $(CYGPATH_W) '$(srcdir)/perfmodels/feed.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/feed.Tpo $(DEPDIR)/feed.Po
#	$(AM_V_CC)source='perfmodels/feed.c' object='feed.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o feed.obj `if test -f 'perfmodels/feed.c'; then $(CYGPATH_W) 'perfmodels/feed.c'; else $(CYGPATH_W) '$(srcdir)/perfmodels/feed.c'; fi`

memory.o: perfmodels/memory.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT memory.o -MD -MP -MF $(DEPDIR)/memory.Tpo -c -o memory.o `test -f 'perfmodels/memory.c' || echo '$(srcdir)/'`perfmodels/memory.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/memory.Tpo $(DEPDIR)/memory.Po
#	$(AM_V_CC)source='perfmodels/memory.c' object='memory.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o memory.o `test -f 'perfmodels/memory.c' || echo '$(srcdir)/'`perfmodels/memory.c

memory.obj: perfmodels/memory.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT memory.obj -MD -MP -MF $(DEPDIR)/memory.Tpo -c -o memory.obj `if test -f 'perfmodels/memory.c'; then $(CYGPATH_W) 'perfmodels/memory.c'; else $(CYGPATH_W) '$(srcdir)/perfmodels/memory.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/memory.Tpo $(DEPDIR)/memory.Po
#	$(AM_V_CC)source='perfmodels/memory.c' object='memory.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o memory.obj `if test -f 'perfmodels/memory.c'; then $(CYGPATH_W) 'perfmodels/memory.c'; else $(CYGPATH_W) '$(srcdir)/perfmodels/memory.c'; fi`

non_linear_regression_based.o: perfmodels/non_linear_regression_based.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT non_linear_regression_based.o -MD -MP -MF $(DEPDIR)/non_linear_regression_based.Tpo -c -o non_linear_regression_based.o `test -f 'perfmodels/non_linear_regression_based.c' || echo '$(srcdir)/'`perfmodels/non_linear_regression_based.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/non_linear_regression_based.Tpo $(DEPDIR)/non_linear_regression_based.Po
#	$(AM_V_CC)source='perfmodels/non_linear_regression_based.c' object='non_linear_regression_based.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o non_linear_regression_based.o `test -f 'perfmodels/non_linear_regression_based.c' || echo '$(srcdir)/'`perfmodels/non_linear_regression_based.c

non_linear_regression_based.obj: perfmodels/non_linear_regression_based.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT non_linear_regression_based.obj -MD -MP -MF $(DEPDIR)/non_linear_regression_based.Tpo -c -o non_linear_regression_based.obj `if test -f 'perfmodels/non_linear_regression_based.c'; then $(CYGPATH_W) 'perfmodels/non_linear_regression_based.c'; else $(CYGPATH_W) '$(srcdir)/perfmodels/non_linear_regression_based.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/non_linear_regression_based.Tpo $(DEPDIR)/non_linear_regression_based.Po
#	$(AM_V_CC)source='perfmodels/non_linear_regression_based.c' object='non_linear_regression_based.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o non_linear_regression_based.obj `if test -f 'perfmodels/non_linear_regression_based.c'; then $(CYGPATH_W) 'perfmodels/non_linear_regression_based.c'; else $(CYGPATH_W) '$(srcdir)/perfmodels/non_linear_regression_based.c'; fi`

opencl_memset.o: perfmodels/opencl_memset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opencl_memset.o -MD -MP -MF $(DEPDIR)/opencl_memset.Tpo -c -o opencl_memset.o `test -f 'perfmodels/opencl_memset.c' || echo '$(srcdir)/'`perfmodels/opencl_memset.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/opencl_memset.Tpo $(DEPDIR)/opencl_memset.Po
#	$(AM_V_CC)source='perfmodels/opencl_memset.c' object='opencl_memset.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opencl_memset.o `test -f 'perfmodels/opencl_memset.c' || echo '$(srcdir)/'`perfmodels/opencl_memset.c

opencl_memset.obj: perfmodels/opencl_memset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT opencl_memset.obj -MD -MP -MF $(DEPDIR)/opencl_memset.Tpo -c -o opencl_memset.obj `if test -f 'perfmodels/opencl_memset.c'; then $(CYGPATH_W) 'perfmodels/opencl_memset.c'; else $(CYGPATH_W) '$(srcdir)/perfmodels/opencl_memset.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/opencl_memset.Tpo $(DEPDIR)/opencl_memset.Po
#	$(AM_V_CC)source='perfmodels/opencl_memset.c' object='opencl_memset.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o opencl_memset.obj `if test -f 'perfmodels/opencl_memset.c'; then $(CYGPATH_W) 'perfmodels/opencl_memset.c'; else $(CYGPATH_W) '$(srcdir)/perfmodels/opencl_memset.c'; fi`

regression_based.o: perfmodels/regression_based.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT regression_based.o -MD -MP -MF $(DEPDIR)/regression_based.Tpo -c -o regression_based.o `test -f 'perfmodels/regression_based.c' || echo '$(srcdir)/'`perfmodels/regression_based.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/regression_based.Tpo $(DEPDIR)/regression_based.Po
#	$(AM_V_CC)source='perfmodels/regression_based.c' object='regression_based.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o regression_based.o `test -f 'perfmodels/regression_based.c' || echo '$(srcdir)/'`perfmodels/regression_based.c

regression_based.obj: perfmodels/regression_based.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT regression_based.obj -MD -MP -MF $(DEPDIR)/regression_based.Tpo -c -o regression_based.obj `if test -f 'perfmodels/regression_based.c'; then $(CYGPATH_W) 'perfmodels/regression_based.c'; else $(CYGPATH_W) '$(srcdir)/perfmodels/regression_based.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/regression_based.Tpo $(DEPDIR)/regression_based.Po
#	$(AM_V_CC)source='perfmodels/regression_based.c' object='regression_based.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o regression_based.obj `if test -f 'perfmodels/regression_based.c'; then $(CYGPATH_W) 'perfmodels/regression_based.c'; else $(CYGPATH_W) '$(srcdir)/perfmodels/regression_based.c'; fi`

user_base.o: perfmodels/user_base.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT user_base.o -MD -MP -MF $(DEPDIR)/user_base.Tpo -c -o user_base.o `test -f 'perfmodels/user_base.c' || echo '$(srcdir)/'`perfmodels/user_base.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/user_base.Tpo $(DEPDIR)/user_base.Po
#	$(AM_V_CC)source='perfmodels/user_base.c' object='user_base.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o user_base.o `test -f 'perfmodels/user_base.c' || echo '$(srcdir)/'`perfmodels/user_base.c

user_base.obj: perfmodels/user_base.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT user_base.obj -MD -MP -MF $(DEPDIR)/user_base.Tpo -c -o user_base.obj `if test -f 'perfmodels/user_base.c'; then $(CYGPATH_W) 'perfmodels/user_base.c'; else $(CYGPATH_W) '$(srcdir)/perfmodels/user_base.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/user_base.Tpo $(DEPDIR)/user_base.Po
#	$(AM_V_CC)source='perfmodels/user_base.c' object='user_base.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o user_base.obj `if test -f 'perfmodels/user_base.c'; then $(CYGPATH_W) 'perfmodels/user_base.c'; else $(CYGPATH_W) '$(srcdir)/perfmodels/user_base.c'; fi`

valid_model.o: perfmodels/valid_model.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT valid_model.o -MD -MP -MF $(DEPDIR)/valid_model.Tpo -c -o valid_model.o `test -f 'perfmodels/valid_model.c' || echo '$(srcdir)/'`perfmodels/valid_model.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/valid_model.Tpo $(DEPDIR)/valid_model.Po
#	$(AM_V_CC)source='perfmodels/valid_model.c' object='valid_model.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o valid_model.o `test -f 'perfmodels/valid_model.c' || echo '$(srcdir)/'`perfmodels/valid_model.c

valid_model.obj: perfmodels/valid_model.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT valid_model.obj -MD -MP -MF $(DEPDIR)/valid_model.Tpo -c -o valid_model.obj `if test -f 'perfmodels/valid_model.c'; then $(CYGPATH_W) 'perfmodels/valid_model.c'; else $(CYGPATH_W) '$(srcdir)/perfmodels/valid_model.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/valid_model.Tpo $(DEPDIR)/valid_model.Po
#	$(AM_V_CC)source='perfmodels/valid_model.c' object='valid_model.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o valid_model.obj `if test -f 'perfmodels/valid_model.c'; then $(CYGPATH_W) 'perfmodels/valid_model.c'; else $(CYGPATH_W) '$(srcdir)/perfmodels/valid_model.c'; fi`

value_nan.o: perfmodels/value_nan.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT value_nan.o -MD -MP -MF $(DEPDIR)/value_nan.Tpo -c -o value_nan.o `test -f 'perfmodels/value_nan.c' || echo '$(srcdir)/'`perfmodels/value_nan.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/value_nan.Tpo $(DEPDIR)/value_nan.Po
#	$(AM_V_CC)source='perfmodels/value_nan.c' object='value_nan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o value_nan.o `test -f 'perfmodels/value_nan.c' || echo '$(srcdir)/'`perfmodels/value_nan.c

value_nan.obj: perfmodels/value_nan.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT value_nan.obj -MD -MP -MF $(DEPDIR)/value_nan.Tpo -c -o value_nan.obj `if test -f 'perfmodels/value_nan.c'; then $(CYGPATH_W) 'perfmodels/value_nan.c'; else $(CYGPATH_W) '$(srcdir)/perfmodels/value_nan.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/value_nan.Tpo $(DEPDIR)/value_nan.Po
#	$(AM_V_CC)source='perfmodels/value_nan.c' object='value_nan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o value_nan.obj `if test -f 'perfmodels/value_nan.c'; then $(CYGPATH_W) 'perfmodels/value_nan.c'; else $(CYGPATH_W) '$(srcdir)/perfmodels/value_nan.c'; fi`

sched_ctx_hierarchy.o: sched_ctx/sched_ctx_hierarchy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sched_ctx_hierarchy.o -MD -MP -MF $(DEPDIR)/sched_ctx_hierarchy.Tpo -c -o sched_ctx_hierarchy.o `test -f 'sched_ctx/sched_ctx_hierarchy.c' || echo '$(srcdir)/'`sched_ctx/sched_ctx_hierarchy.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx_hierarchy.Tpo $(DEPDIR)/sched_ctx_hierarchy.Po
#	$(AM_V_CC)source='sched_ctx/sched_ctx_hierarchy.c' object='sched_ctx_hierarchy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sched_ctx_hierarchy.o `test -f 'sched_ctx/sched_ctx_hierarchy.c' || echo '$(srcdir)/'`sched_ctx/sched_ctx_hierarchy.c

sched_ctx_hierarchy.obj: sched_ctx/sched_ctx_hierarchy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sched_ctx_hierarchy.obj -MD -MP -MF $(DEPDIR)/sched_ctx_hierarchy.Tpo -c -o sched_ctx_hierarchy.obj `if test -f 'sched_ctx/sched_ctx_hierarchy.c'; then $(CYGPATH_W) 'sched_ctx/sched_ctx_hierarchy.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/sched_ctx_hierarchy.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx_hierarchy.Tpo $(DEPDIR)/sched_ctx_hierarchy.Po
#	$(AM_V_CC)source='sched_ctx/sched_ctx_hierarchy.c' object='sched_ctx_hierarchy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sched_ctx_hierarchy.obj `if test -f 'sched_ctx/sched_ctx_hierarchy.c'; then $(CYGPATH_W) 'sched_ctx/sched_ctx_hierarchy.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/sched_ctx_hierarchy.c'; fi`

sched_ctx_list.o: sched_ctx/sched_ctx_list.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sched_ctx_list.o -MD -MP -MF $(DEPDIR)/sched_ctx_list.Tpo -c -o sched_ctx_list.o `test -f 'sched_ctx/sched_ctx_list.c' || echo '$(srcdir)/'`sched_ctx/sched_ctx_list.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx_list.Tpo $(DEPDIR)/sched_ctx_list.Po
#	$(AM_V_CC)source='sched_ctx/sched_ctx_list.c' object='sched_ctx_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sched_ctx_list.o `test -f 'sched_ctx/sched_ctx_list.c' || echo '$(srcdir)/'`sched_ctx/sched_ctx_list.c

sched_ctx_list.obj: sched_ctx/sched_ctx_list.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sched_ctx_list.obj -MD -MP -MF $(DEPDIR)/sched_ctx_list.Tpo -c -o sched_ctx_list.obj `if test -f 'sched_ctx/sched_ctx_list.c'; then $(CYGPATH_W) 'sched_ctx/sched_ctx_list.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/sched_ctx_list.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx_list.Tpo $(DEPDIR)/sched_ctx_list.Po
#	$(AM_V_CC)source='sched_ctx/sched_ctx_list.c' object='sched_ctx_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sched_ctx_list.obj `if test -f 'sched_ctx/sched_ctx_list.c'; then $(CYGPATH_W) 'sched_ctx/sched_ctx_list.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/sched_ctx_list.c'; fi`

sched_ctx_policy_data.o: sched_ctx/sched_ctx_policy_data.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sched_ctx_policy_data.o -MD -MP -MF $(DEPDIR)/sched_ctx_policy_data.Tpo -c -o sched_ctx_policy_data.o `test -f 'sched_ctx/sched_ctx_policy_data.c' || echo '$(srcdir)/'`sched_ctx/sched_ctx_policy_data.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx_policy_data.Tpo $(DEPDIR)/sched_ctx_policy_data.Po
#	$(AM_V_CC)source='sched_ctx/sched_ctx_policy_data.c' object='sched_ctx_policy_data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sched_ctx_policy_data.o `test -f 'sched_ctx/sched_ctx_policy_data.c' || echo '$(srcdir)/'`sched_ctx/sched_ctx_policy_data.c

sched_ctx_policy_data.obj: sched_ctx/sched_ctx_policy_data.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sched_ctx_policy_data.obj -MD -MP -MF $(DEPDIR)/sched_ctx_policy_data.Tpo -c -o sched_ctx_policy_data.obj `if test -f 'sched_ctx/sched_ctx_policy_data.c'; then $(CYGPATH_W) 'sched_ctx/sched_ctx_policy_data.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/sched_ctx_policy_data.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx_policy_data.Tpo $(DEPDIR)/sched_ctx_policy_data.Po
#	$(AM_V_CC)source='sched_ctx/sched_ctx_policy_data.c' object='sched_ctx_policy_data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sched_ctx_policy_data.obj `if test -f 'sched_ctx/sched_ctx_policy_data.c'; then $(CYGPATH_W) 'sched_ctx/sched_ctx_policy_data.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/sched_ctx_policy_data.c'; fi`

data_locality.o: sched_policies/data_locality.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT data_locality.o -MD -MP -MF $(DEPDIR)/data_locality.Tpo -c -o data_locality.o `test -f 'sched_policies/data_locality.c' || echo '$(srcdir)/'`sched_policies/data_locality.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/data_locality.Tpo $(DEPDIR)/data_locality.Po
#	$(AM_V_CC)source='sched_policies/data_locality.c' object='data_locality.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o data_locality.o `test -f 'sched_policies/data_locality.c' || echo '$(srcdir)/'`sched_policies/data_locality.c

data_locality.obj: sched_policies/data_locality.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT data_locality.obj -MD -MP -MF $(DEPDIR)/data_locality.Tpo -c -o data_locality.obj `if test -f 'sched_policies/data_locality.c'; then $(CYGPATH_W) 'sched_policies/data_locality.c'; else $(CYGPATH_W) '$(srcdir)/sched_policies/data_locality.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/data_locality.Tpo $(DEPDIR)/data_locality.Po
#	$(AM_V_CC)source='sched_policies/data_locality.c' object='data_locality.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o data_locality.obj `if test -f 'sched_policies/data_locality.c'; then $(CYGPATH_W) 'sched_policies/data_locality.c'; else $(CYGPATH_W) '$(srcdir)/sched_policies/data_locality.c'; fi`

execute_all_tasks.o: sched_policies/execute_all_tasks.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT execute_all_tasks.o -MD -MP -MF $(DEPDIR)/execute_all_tasks.Tpo -c -o execute_all_tasks.o `test -f 'sched_policies/execute_all_tasks.c' || echo '$(srcdir)/'`sched_policies/execute_all_tasks.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/execute_all_tasks.Tpo $(DEPDIR)/execute_all_tasks.Po
#	$(AM_V_CC)source='sched_policies/execute_all_tasks.c' object='execute_all_tasks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o execute_all_tasks.o `test -f 'sched_policies/execute_all_tasks.c' || echo '$(srcdir)/'`sched_policies/execute_all_tasks.c

execute_all_tasks.obj: sched_policies/execute_all_tasks.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT execute_all_tasks.obj -MD -MP -MF $(DEPDIR)/execute_all_tasks.Tpo -c -o execute_all_tasks.obj `if test -f 'sched_policies/execute_all_tasks.c'; then $(CYGPATH_W) 'sched_policies/execute_all_tasks.c'; else $(CYGPATH_W) '$(srcdir)/sched_policies/execute_all_tasks.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/execute_all_tasks.Tpo $(DEPDIR)/execute_all_tasks.Po
#	$(AM_V_CC)source='sched_policies/execute_all_tasks.c' object='execute_all_tasks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o execute_all_tasks.obj `if test -f 'sched_policies/execute_all_tasks.c'; then $(CYGPATH_W) 'sched_policies/execute_all_tasks.c'; else $(CYGPATH_W) '$(srcdir)/sched_policies/execute_all_tasks.c'; fi`

prio.o: sched_policies/prio.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT prio.o -MD -MP -MF $(DEPDIR)/prio.Tpo -c -o prio.o `test -f 'sched_policies/prio.c' || echo '$(srcdir)/'`sched_policies/prio.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/prio.Tpo $(DEPDIR)/prio.Po
#	$(AM_V_CC)source='sched_policies/prio.c' object='prio.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o prio.o `test -f 'sched_policies/prio.c' || echo '$(srcdir)/'`sched_policies/prio.c

prio.obj: sched_policies/prio.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT prio.obj -MD -MP -MF $(DEPDIR)/prio.Tpo -c -o prio.obj `if test -f 'sched_policies/prio.c'; then $(CYGPATH_W) 'sched_policies/prio.c'; else $(CYGPATH_W) '$(srcdir)/sched_policies/prio.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/prio.Tpo $(DEPDIR)/prio.Po
#	$(AM_V_CC)source='sched_policies/prio.c' object='prio.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o prio.obj `if test -f 'sched_policies/prio.c'; then $(CYGPATH_W) 'sched_policies/prio.c'; else $(CYGPATH_W) '$(srcdir)/sched_policies/prio.c'; fi`

simple_cpu_gpu_sched.o: sched_policies/simple_cpu_gpu_sched.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT simple_cpu_gpu_sched.o -MD -MP -MF $(DEPDIR)/simple_cpu_gpu_sched.Tpo -c -o simple_cpu_gpu_sched.o `test -f 'sched_policies/simple_cpu_gpu_sched.c' || echo '$(srcdir)/'`sched_policies/simple_cpu_gpu_sched.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/simple_cpu_gpu_sched.Tpo $(DEPDIR)/simple_cpu_gpu_sched.Po
#	$(AM_V_CC)source='sched_policies/simple_cpu_gpu_sched.c' object='simple_cpu_gpu_sched.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o simple_cpu_gpu_sched.o `test -f 'sched_policies/simple_cpu_gpu_sched.c' || echo '$(srcdir)/'`sched_policies/simple_cpu_gpu_sched.c

simple_cpu_gpu_sched.obj: sched_policies/simple_cpu_gpu_sched.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT simple_cpu_gpu_sched.obj -MD -MP -MF $(DEPDIR)/simple_cpu_gpu_sched.Tpo -c -o simple_cpu_gpu_sched.obj `if test -f 'sched_policies/simple_cpu_gpu_sched.c'; then $(CYGPATH_W) 'sched_policies/simple_cpu_gpu_sched.c'; else $(CYGPATH_W) '$(srcdir)/sched_policies/simple_cpu_gpu_sched.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simple_cpu_gpu_sched.Tpo $(DEPDIR)/simple_cpu_gpu_sched.Po
#	$(AM_V_CC)source='sched_policies/simple_cpu_gpu_sched.c' object='simple_cpu_gpu_sched.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o simple_cpu_gpu_sched.obj `if test -f 'sched_policies/simple_cpu_gpu_sched.c'; then $(CYGPATH_W) 'sched_policies/simple_cpu_gpu_sched.c'; else $(CYGPATH_W) '$(srcdir)/sched_policies/simple_cpu_gpu_sched.c'; fi`

simple_deps.o: sched_policies/simple_deps.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT simple_deps.o -MD -MP -MF $(DEPDIR)/simple_deps.Tpo -c -o simple_deps.o `test -f 'sched_policies/simple_deps.c' || echo '$(srcdir)/'`sched_policies/simple_deps.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/simple_deps.Tpo $(DEPDIR)/simple_deps.Po
#	$(AM_V_CC)source='sched_policies/simple_deps.c' object='simple_deps.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o simple_deps.o `test -f 'sched_policies/simple_deps.c' || echo '$(srcdir)/'`sched_policies/simple_deps.c

simple_deps.obj: sched_policies/simple_deps.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT simple_deps.obj -MD -MP -MF $(DEPDIR)/simple_deps.Tpo -c -o simple_deps.obj `if test -f 'sched_policies/simple_deps.c'; then $(CYGPATH_W) 'sched_policies/simple_deps.c'; else $(CYGPATH_W) '$(srcdir)/sched_policies/simple_deps.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simple_deps.Tpo $(DEPDIR)/simple_deps.Po
#	$(AM_V_CC)source='sched_policies/simple_deps.c' object='simple_deps.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o simple_deps.obj `if test -f 'sched_policies/simple_deps.c'; then $(CYGPATH_W) 'sched_policies/simple_deps.c'; else $(CYGPATH_W) '$(srcdir)/sched_policies/simple_deps.c'; fi`

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

test_arbiter.o: datawizard/test_arbiter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_arbiter.o -MD -MP -MF $(DEPDIR)/test_arbiter.Tpo -c -o test_arbiter.o `test -f 'datawizard/test_arbiter.cpp' || echo '$(srcdir)/'`datawizard/test_arbiter.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_arbiter.Tpo $(DEPDIR)/test_arbiter.Po
#	$(AM_V_CXX)source='datawizard/test_arbiter.cpp' object='test_arbiter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_arbiter.o `test -f 'datawizard/test_arbiter.cpp' || echo '$(srcdir)/'`datawizard/test_arbiter.cpp

test_arbiter.obj: datawizard/test_arbiter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_arbiter.obj -MD -MP -MF $(DEPDIR)/test_arbiter.Tpo -c -o test_arbiter.obj `if test -f 'datawizard/test_arbiter.cpp'; then $(CYGPATH_W) 'datawizard/test_arbiter.cpp'; else $(CYGPATH_W) '$(srcdir)/datawizard/test_arbiter.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_arbiter.Tpo $(DEPDIR)/test_arbiter.Po
#	$(AM_V_CXX)source='datawizard/test_arbiter.cpp' object='test_arbiter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_arbiter.obj `if test -f 'datawizard/test_arbiter.cpp'; then $(CYGPATH_W) 'datawizard/test_arbiter.cpp'; else $(CYGPATH_W) '$(srcdir)/datawizard/test_arbiter.cpp'; fi`

.f90.o:
	$(AM_V_FC)$(FCCOMPILE) -c -o $@ $<

.f90.obj:
	$(AM_V_FC)$(FCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f90.lo:
	$(AM_V_FC)$(LTFCCOMPILE) -c -o $@ $<

starpu_mod.o: $(top_srcdir)/include/starpu_mod.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o starpu_mod.o `test -f '$(top_srcdir)/include/starpu_mod.f90' || echo '$(srcdir)/'`$(top_srcdir)/include/starpu_mod.f90

starpu_mod.obj: $(top_srcdir)/include/starpu_mod.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o starpu_mod.obj `if test -f '$(top_srcdir)/include/starpu_mod.f90'; then $(CYGPATH_W) '$(top_srcdir)/include/starpu_mod.f90'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/include/starpu_mod.f90'; fi`

init_01.o: fortran90/init_01.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o init_01.o `test -f 'fortran90/init_01.f90' || echo '$(srcdir)/'`fortran90/init_01.f90

init_01.obj: fortran90/init_01.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o init_01.obj `if test -f 'fortran90/init_01.f90'; then $(CYGPATH_W) 'fortran90/init_01.f90'; else $(CYGPATH_W) '$(srcdir)/fortran90/init_01.f90'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf datawizard/.libs datawizard/_libs
	-rm -rf datawizard/interfaces/.libs datawizard/interfaces/_libs
	-rm -rf datawizard/interfaces/bcsr/.libs datawizard/interfaces/bcsr/_libs
	-rm -rf datawizard/interfaces/block/.libs datawizard/interfaces/block/_libs
	-rm -rf datawizard/interfaces/coo/.libs datawizard/interfaces/coo/_libs
	-rm -rf datawizard/interfaces/csr/.libs datawizard/interfaces/csr/_libs
	-rm -rf datawizard/interfaces/matrix/.libs datawizard/interfaces/matrix/_libs
	-rm -rf datawizard/interfaces/multiformat/.libs datawizard/interfaces/multiformat/_libs
	-rm -rf datawizard/interfaces/multiformat/advanced/.libs datawizard/interfaces/multiformat/advanced/_libs
	-rm -rf datawizard/interfaces/variable/.libs datawizard/interfaces/variable/_libs
	-rm -rf datawizard/interfaces/vector/.libs datawizard/interfaces/vector/_libs
	-rm -rf datawizard/interfaces/void/.libs datawizard/interfaces/void/_libs
	-rm -rf disk/.libs disk/_libs
	-rm -rf errorcheck/.libs errorcheck/_libs
	-rm -rf fortran90/.libs fortran90/_libs
	-rm -rf helper/.libs helper/_libs
	-rm -rf main/.libs main/_libs
	-rm -rf main/driver_api/.libs main/driver_api/_libs
	-rm -rf microbenchs/.libs microbenchs/_libs
	-rm -rf model-checking/.libs model-checking/_libs
	-rm -rf openmp/.libs openmp/_libs
	-rm -rf overlap/.libs overlap/_libs
	-rm -rf parallel_tasks/.libs parallel_tasks/_libs
	-rm -rf perfmodels/.libs perfmodels/_libs
	-rm -rf sched_ctx/.libs sched_ctx/_libs
	-rm -rf sched_policies/.libs sched_policies/_libs
install-nobase_STARPU_OPENCL_DATADATA: $(nobase_STARPU_OPENCL_DATA_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nobase_STARPU_OPENCL_DATA_DATA)'; test -n "$(STARPU_OPENCL_DATAdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(STARPU_OPENCL_DATAdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(STARPU_OPENCL_DATAdir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(STARPU_OPENCL_DATAdir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(STARPU_OPENCL_DATAdir)/$$dir"; }; \
	    echo " $(INSTALL_DATA) $$xfiles '$(DESTDIR)$(STARPU_OPENCL_DATAdir)/$$dir'"; \
	    $(INSTALL_DATA) $$xfiles "$(DESTDIR)$(STARPU_OPENCL_DATAdir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_STARPU_OPENCL_DATADATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_STARPU_OPENCL_DATA_DATA)'; test -n "$(STARPU_OPENCL_DATAdir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(STARPU_OPENCL_DATAdir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
coverage/coverage.sh.log: coverage/coverage.sh
	@p='coverage/coverage.sh'; \
	b='coverage/coverage.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
microbenchs/tasks_data_overhead.sh.log: microbenchs/tasks_data_overhead.sh
	@p='microbenchs/tasks_data_overhead.sh'; \
	b='microbenchs/tasks_data_overhead.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
microbenchs/sync_tasks_data_overhead.sh.log: microbenchs/sync_tasks_data_overhead.sh
	@p='microbenchs/sync_tasks_data_overhead.sh'; \
	b='microbenchs/sync_tasks_data_overhead.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
microbenchs/async_tasks_data_overhead.sh.log: microbenchs/async_tasks_data_overhead.sh
	@p='microbenchs/async_tasks_data_overhead.sh'; \
	b='microbenchs/async_tasks_data_overhead.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
microbenchs/tasks_size_overhead_scheds.sh.log: microbenchs/tasks_size_overhead_scheds.sh
	@p='microbenchs/tasks_size_overhead_scheds.sh'; \
	b='microbenchs/tasks_size_overhead_scheds.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
microbenchs/parallel_independent_homogeneous_tasks.sh.log: microbenchs/parallel_independent_homogeneous_tasks.sh
	@p='microbenchs/parallel_independent_homogeneous_tasks.sh'; \
	b='microbenchs/parallel_independent_homogeneous_tasks.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
microbenchs/parallel_independent_heterogeneous_tasks.sh.log: microbenchs/parallel_independent_heterogeneous_tasks.sh
	@p='microbenchs/parallel_independent_heterogeneous_tasks.sh'; \
	b='microbenchs/parallel_independent_heterogeneous_tasks.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
microbenchs/parallel_independent_homogeneous_tasks_data.sh.log: microbenchs/parallel_independent_homogeneous_tasks_data.sh
	@p='microbenchs/parallel_independent_homogeneous_tasks_data.sh'; \
	b='microbenchs/parallel_independent_homogeneous_tasks_data.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
microbenchs/parallel_independent_heterogeneous_tasks_data.sh.log: microbenchs/parallel_independent_heterogeneous_tasks_data.sh
	@p='microbenchs/parallel_independent_heterogeneous_tasks_data.sh'; \
	b='microbenchs/parallel_independent_heterogeneous_tasks_data.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
microbenchs/parallel_redux_homogeneous_tasks_data.sh.log: microbenchs/parallel_redux_homogeneous_tasks_data.sh
	@p='microbenchs/parallel_redux_homogeneous_tasks_data.sh'; \
	b='microbenchs/parallel_redux_homogeneous_tasks_data.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
microbenchs/parallel_redux_heterogeneous_tasks_data.sh.log: microbenchs/parallel_redux_heterogeneous_tasks_data.sh
	@p='microbenchs/parallel_redux_heterogeneous_tasks_data.sh'; \
	b='microbenchs/parallel_redux_heterogeneous_tasks_data.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
microbenchs/parallel_dependent_homogeneous_tasks_data.sh.log: microbenchs/parallel_dependent_homogeneous_tasks_data.sh
	@p='microbenchs/parallel_dependent_homogeneous_tasks_data.sh'; \
	b='microbenchs/parallel_dependent_homogeneous_tasks_data.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/locality.sh.log: datawizard/locality.sh
	@p='datawizard/locality.sh'; \
	b='datawizard/locality.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
microbenchs/bandwidth_scheds.sh.log: microbenchs/bandwidth_scheds.sh
	@p='microbenchs/bandwidth_scheds.sh'; \
	b='microbenchs/bandwidth_scheds.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
overlap/overlap.sh.log: overlap/overlap.sh
	@p='overlap/overlap.sh'; \
	b='overlap/overlap.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
model-checking/prio_list.sh.log: model-checking/prio_list.sh
	@p='model-checking/prio_list.sh'; \
	b='model-checking/prio_list.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/callback.log: main/callback$(EXEEXT)
	@p='main/callback$(EXEEXT)'; \
	b='main/callback'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/bind.log: main/bind$(EXEEXT)
	@p='main/bind$(EXEEXT)'; \
	b='main/bind'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/mkdtemp.log: main/mkdtemp$(EXEEXT)
	@p='main/mkdtemp$(EXEEXT)'; \
	b='main/mkdtemp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/execute_schedule.log: main/execute_schedule$(EXEEXT)
	@p='main/execute_schedule$(EXEEXT)'; \
	b='main/execute_schedule'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/insert_task_pack.log: main/insert_task_pack$(EXEEXT)
	@p='main/insert_task_pack$(EXEEXT)'; \
	b='main/insert_task_pack'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/insert_task_nullcodelet.log: main/insert_task_nullcodelet$(EXEEXT)
	@p='main/insert_task_nullcodelet$(EXEEXT)'; \
	b='main/insert_task_nullcodelet'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/multithreaded_init.log: main/multithreaded_init$(EXEEXT)
	@p='main/multithreaded_init$(EXEEXT)'; \
	b='main/multithreaded_init'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/empty_task.log: main/empty_task$(EXEEXT)
	@p='main/empty_task$(EXEEXT)'; \
	b='main/empty_task'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/empty_task_chain.log: main/empty_task_chain$(EXEEXT)
	@p='main/empty_task_chain$(EXEEXT)'; \
	b='main/empty_task_chain'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/starpu_worker_exists.log: main/starpu_worker_exists$(EXEEXT)
	@p='main/starpu_worker_exists$(EXEEXT)'; \
	b='main/starpu_worker_exists'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/codelet_null_callback.log: main/codelet_null_callback$(EXEEXT)
	@p='main/codelet_null_callback$(EXEEXT)'; \
	b='main/codelet_null_callback'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/allocate.log: datawizard/allocate$(EXEEXT)
	@p='datawizard/allocate$(EXEEXT)'; \
	b='datawizard/allocate'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/acquire_cb.log: datawizard/acquire_cb$(EXEEXT)
	@p='datawizard/acquire_cb$(EXEEXT)'; \
	b='datawizard/acquire_cb'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/deps.log: datawizard/deps$(EXEEXT)
	@p='datawizard/deps$(EXEEXT)'; \
	b='datawizard/deps'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/user_interaction_implicit.log: datawizard/user_interaction_implicit$(EXEEXT)
	@p='datawizard/user_interaction_implicit$(EXEEXT)'; \
	b='datawizard/user_interaction_implicit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/interfaces/copy_interfaces.log: datawizard/interfaces/copy_interfaces$(EXEEXT)
	@p='datawizard/interfaces/copy_interfaces$(EXEEXT)'; \
	b='datawizard/interfaces/copy_interfaces'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/numa_overflow.log: datawizard/numa_overflow$(EXEEXT)
	@p='datawizard/numa_overflow$(EXEEXT)'; \
	b='datawizard/numa_overflow'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/locality.log: datawizard/locality$(EXEEXT)
	@p='datawizard/locality$(EXEEXT)'; \
	b='datawizard/locality'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/variable_size.log: datawizard/variable_size$(EXEEXT)
	@p='datawizard/variable_size$(EXEEXT)'; \
	b='datawizard/variable_size'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errorcheck/starpu_init_noworker.log: errorcheck/starpu_init_noworker$(EXEEXT)
	@p='errorcheck/starpu_init_noworker$(EXEEXT)'; \
	b='errorcheck/starpu_init_noworker'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errorcheck/invalid_tasks.log: errorcheck/invalid_tasks$(EXEEXT)
	@p='errorcheck/invalid_tasks$(EXEEXT)'; \
	b='errorcheck/invalid_tasks'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
helper/cublas_init.log: helper/cublas_init$(EXEEXT)
	@p='helper/cublas_init$(EXEEXT)'; \
	b='helper/cublas_init'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
helper/cusparse_init.log: helper/cusparse_init$(EXEEXT)
	@p='helper/cusparse_init$(EXEEXT)'; \
	b='helper/cusparse_init'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
helper/pinned_memory.log: helper/pinned_memory$(EXEEXT)
	@p='helper/pinned_memory$(EXEEXT)'; \
	b='helper/pinned_memory'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
helper/execute_on_all.log: helper/execute_on_all$(EXEEXT)
	@p='helper/execute_on_all$(EXEEXT)'; \
	b='helper/execute_on_all'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
microbenchs/display_structures_size.log: microbenchs/display_structures_size$(EXEEXT)
	@p='microbenchs/display_structures_size$(EXEEXT)'; \
	b='microbenchs/display_structures_size'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
microbenchs/local_pingpong.log: microbenchs/local_pingpong$(EXEEXT)
	@p='microbenchs/local_pingpong$(EXEEXT)'; \
	b='microbenchs/local_pingpong'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
overlap/overlap.log: overlap/overlap$(EXEEXT)
	@p='overlap/overlap$(EXEEXT)'; \
	b='overlap/overlap'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_ctx/sched_ctx_list.log: sched_ctx/sched_ctx_list$(EXEEXT)
	@p='sched_ctx/sched_ctx_list$(EXEEXT)'; \
	b='sched_ctx/sched_ctx_list'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_ctx/sched_ctx_policy_data.log: sched_ctx/sched_ctx_policy_data$(EXEEXT)
	@p='sched_ctx/sched_ctx_policy_data$(EXEEXT)'; \
	b='sched_ctx/sched_ctx_policy_data'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/init_exit_01.log: openmp/init_exit_01$(EXEEXT)
	@p='openmp/init_exit_01$(EXEEXT)'; \
	b='openmp/init_exit_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/init_exit_02.log: openmp/init_exit_02$(EXEEXT)
	@p='openmp/init_exit_02$(EXEEXT)'; \
	b='openmp/init_exit_02'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/environment.log: openmp/environment$(EXEEXT)
	@p='openmp/environment$(EXEEXT)'; \
	b='openmp/environment'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/api_01.log: openmp/api_01$(EXEEXT)
	@p='openmp/api_01$(EXEEXT)'; \
	b='openmp/api_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/parallel_01.log: openmp/parallel_01$(EXEEXT)
	@p='openmp/parallel_01$(EXEEXT)'; \
	b='openmp/parallel_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/parallel_02.log: openmp/parallel_02$(EXEEXT)
	@p='openmp/parallel_02$(EXEEXT)'; \
	b='openmp/parallel_02'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/parallel_03.log: openmp/parallel_03$(EXEEXT)
	@p='openmp/parallel_03$(EXEEXT)'; \
	b='openmp/parallel_03'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/parallel_barrier_01.log: openmp/parallel_barrier_01$(EXEEXT)
	@p='openmp/parallel_barrier_01$(EXEEXT)'; \
	b='openmp/parallel_barrier_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/parallel_master_01.log: openmp/parallel_master_01$(EXEEXT)
	@p='openmp/parallel_master_01$(EXEEXT)'; \
	b='openmp/parallel_master_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/parallel_master_inline_01.log: openmp/parallel_master_inline_01$(EXEEXT)
	@p='openmp/parallel_master_inline_01$(EXEEXT)'; \
	b='openmp/parallel_master_inline_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/parallel_single_wait_01.log: openmp/parallel_single_wait_01$(EXEEXT)
	@p='openmp/parallel_single_wait_01$(EXEEXT)'; \
	b='openmp/parallel_single_wait_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/parallel_single_nowait_01.log: openmp/parallel_single_nowait_01$(EXEEXT)
	@p='openmp/parallel_single_nowait_01$(EXEEXT)'; \
	b='openmp/parallel_single_nowait_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/parallel_single_inline_01.log: openmp/parallel_single_inline_01$(EXEEXT)
	@p='openmp/parallel_single_inline_01$(EXEEXT)'; \
	b='openmp/parallel_single_inline_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/parallel_single_copyprivate_01.log: openmp/parallel_single_copyprivate_01$(EXEEXT)
	@p='openmp/parallel_single_copyprivate_01$(EXEEXT)'; \
	b='openmp/parallel_single_copyprivate_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/parallel_single_copyprivate_inline_01.log: openmp/parallel_single_copyprivate_inline_01$(EXEEXT)
	@p='openmp/parallel_single_copyprivate_inline_01$(EXEEXT)'; \
	b='openmp/parallel_single_copyprivate_inline_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/parallel_critical_01.log: openmp/parallel_critical_01$(EXEEXT)
	@p='openmp/parallel_critical_01$(EXEEXT)'; \
	b='openmp/parallel_critical_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/parallel_critical_inline_01.log: openmp/parallel_critical_inline_01$(EXEEXT)
	@p='openmp/parallel_critical_inline_01$(EXEEXT)'; \
	b='openmp/parallel_critical_inline_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/parallel_critical_named_01.log: openmp/parallel_critical_named_01$(EXEEXT)
	@p='openmp/parallel_critical_named_01$(EXEEXT)'; \
	b='openmp/parallel_critical_named_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/parallel_critical_named_inline_01.log: openmp/parallel_critical_named_inline_01$(EXEEXT)
	@p='openmp/parallel_critical_named_inline_01$(EXEEXT)'; \
	b='openmp/parallel_critical_named_inline_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/parallel_simple_lock_01.log: openmp/parallel_simple_lock_01$(EXEEXT)
	@p='openmp/parallel_simple_lock_01$(EXEEXT)'; \
	b='openmp/parallel_simple_lock_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/parallel_nested_lock_01.log: openmp/parallel_nested_lock_01$(EXEEXT)
	@p='openmp/parallel_nested_lock_01$(EXEEXT)'; \
	b='openmp/parallel_nested_lock_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/parallel_for_01.log: openmp/parallel_for_01$(EXEEXT)
	@p='openmp/parallel_for_01$(EXEEXT)'; \
	b='openmp/parallel_for_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/parallel_for_02.log: openmp/parallel_for_02$(EXEEXT)
	@p='openmp/parallel_for_02$(EXEEXT)'; \
	b='openmp/parallel_for_02'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/parallel_for_ordered_01.log: openmp/parallel_for_ordered_01$(EXEEXT)
	@p='openmp/parallel_for_ordered_01$(EXEEXT)'; \
	b='openmp/parallel_for_ordered_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/parallel_sections_01.log: openmp/parallel_sections_01$(EXEEXT)
	@p='openmp/parallel_sections_01$(EXEEXT)'; \
	b='openmp/parallel_sections_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/parallel_sections_combined_01.log: openmp/parallel_sections_combined_01$(EXEEXT)
	@p='openmp/parallel_sections_combined_01$(EXEEXT)'; \
	b='openmp/parallel_sections_combined_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/task_01.log: openmp/task_01$(EXEEXT)
	@p='openmp/task_01$(EXEEXT)'; \
	b='openmp/task_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/task_02.log: openmp/task_02$(EXEEXT)
	@p='openmp/task_02$(EXEEXT)'; \
	b='openmp/task_02'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/task_03.log: openmp/task_03$(EXEEXT)
	@p='openmp/task_03$(EXEEXT)'; \
	b='openmp/task_03'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/taskloop.log: openmp/taskloop$(EXEEXT)
	@p='openmp/taskloop$(EXEEXT)'; \
	b='openmp/taskloop'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/taskwait_01.log: openmp/taskwait_01$(EXEEXT)
	@p='openmp/taskwait_01$(EXEEXT)'; \
	b='openmp/taskwait_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/taskgroup_01.log: openmp/taskgroup_01$(EXEEXT)
	@p='openmp/taskgroup_01$(EXEEXT)'; \
	b='openmp/taskgroup_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/taskgroup_02.log: openmp/taskgroup_02$(EXEEXT)
	@p='openmp/taskgroup_02$(EXEEXT)'; \
	b='openmp/taskgroup_02'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/array_slice_01.log: openmp/array_slice_01$(EXEEXT)
	@p='openmp/array_slice_01$(EXEEXT)'; \
	b='openmp/array_slice_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/cuda_task_01.log: openmp/cuda_task_01$(EXEEXT)
	@p='openmp/cuda_task_01$(EXEEXT)'; \
	b='openmp/cuda_task_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
perfmodels/value_nan.log: perfmodels/value_nan$(EXEEXT)
	@p='perfmodels/value_nan$(EXEEXT)'; \
	b='perfmodels/value_nan'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/simgrid-locality.log: datawizard/simgrid-locality$(EXEEXT)
	@p='datawizard/simgrid-locality$(EXEEXT)'; \
	b='datawizard/simgrid-locality'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/deprecated_func.log: main/deprecated_func$(EXEEXT)
	@p='main/deprecated_func$(EXEEXT)'; \
	b='main/deprecated_func'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/driver_api/init_run_deinit.log: main/driver_api/init_run_deinit$(EXEEXT)
	@p='main/driver_api/init_run_deinit$(EXEEXT)'; \
	b='main/driver_api/init_run_deinit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/driver_api/run_driver.log: main/driver_api/run_driver$(EXEEXT)
	@p='main/driver_api/run_driver$(EXEEXT)'; \
	b='main/driver_api/run_driver'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/deploop.log: main/deploop$(EXEEXT)
	@p='main/deploop$(EXEEXT)'; \
	b='main/deploop'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/display_binding.log: main/display_binding$(EXEEXT)
	@p='main/display_binding$(EXEEXT)'; \
	b='main/display_binding'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/execute_on_a_specific_worker.log: main/execute_on_a_specific_worker$(EXEEXT)
	@p='main/execute_on_a_specific_worker$(EXEEXT)'; \
	b='main/execute_on_a_specific_worker'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/insert_task.log: main/insert_task$(EXEEXT)
	@p='main/insert_task$(EXEEXT)'; \
	b='main/insert_task'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/insert_task_value.log: main/insert_task_value$(EXEEXT)
	@p='main/insert_task_value$(EXEEXT)'; \
	b='main/insert_task_value'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/insert_task_dyn_handles.log: main/insert_task_dyn_handles$(EXEEXT)
	@p='main/insert_task_dyn_handles$(EXEEXT)'; \
	b='main/insert_task_dyn_handles'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/insert_task_array.log: main/insert_task_array$(EXEEXT)
	@p='main/insert_task_array$(EXEEXT)'; \
	b='main/insert_task_array'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/insert_task_many.log: main/insert_task_many$(EXEEXT)
	@p='main/insert_task_many$(EXEEXT)'; \
	b='main/insert_task_many'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/insert_task_where.log: main/insert_task_where$(EXEEXT)
	@p='main/insert_task_where$(EXEEXT)'; \
	b='main/insert_task_where'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/job.log: main/job$(EXEEXT)
	@p='main/job$(EXEEXT)'; \
	b='main/job'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/multithreaded.log: main/multithreaded$(EXEEXT)
	@p='main/multithreaded$(EXEEXT)'; \
	b='main/multithreaded'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/starpu_task_bundle.log: main/starpu_task_bundle$(EXEEXT)
	@p='main/starpu_task_bundle$(EXEEXT)'; \
	b='main/starpu_task_bundle'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/starpu_task_wait_for_all.log: main/starpu_task_wait_for_all$(EXEEXT)
	@p='main/starpu_task_wait_for_all$(EXEEXT)'; \
	b='main/starpu_task_wait_for_all'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/starpu_task_wait.log: main/starpu_task_wait$(EXEEXT)
	@p='main/starpu_task_wait$(EXEEXT)'; \
	b='main/starpu_task_wait'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/static_restartable.log: main/static_restartable$(EXEEXT)
	@p='main/static_restartable$(EXEEXT)'; \
	b='main/static_restartable'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/static_restartable_using_initializer.log: main/static_restartable_using_initializer$(EXEEXT)
	@p='main/static_restartable_using_initializer$(EXEEXT)'; \
	b='main/static_restartable_using_initializer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/static_restartable_tag.log: main/static_restartable_tag$(EXEEXT)
	@p='main/static_restartable_tag$(EXEEXT)'; \
	b='main/static_restartable_tag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/regenerate.log: main/regenerate$(EXEEXT)
	@p='main/regenerate$(EXEEXT)'; \
	b='main/regenerate'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/regenerate_pipeline.log: main/regenerate_pipeline$(EXEEXT)
	@p='main/regenerate_pipeline$(EXEEXT)'; \
	b='main/regenerate_pipeline'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/restart.log: main/restart$(EXEEXT)
	@p='main/restart$(EXEEXT)'; \
	b='main/restart'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/wait_all_regenerable_tasks.log: main/wait_all_regenerable_tasks$(EXEEXT)
	@p='main/wait_all_regenerable_tasks$(EXEEXT)'; \
	b='main/wait_all_regenerable_tasks'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/subgraph_repeat.log: main/subgraph_repeat$(EXEEXT)
	@p='main/subgraph_repeat$(EXEEXT)'; \
	b='main/subgraph_repeat'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/subgraph_repeat_tag.log: main/subgraph_repeat_tag$(EXEEXT)
	@p='main/subgraph_repeat_tag$(EXEEXT)'; \
	b='main/subgraph_repeat_tag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/subgraph_repeat_regenerate.log: main/subgraph_repeat_regenerate$(EXEEXT)
	@p='main/subgraph_repeat_regenerate$(EXEEXT)'; \
	b='main/subgraph_repeat_regenerate'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/subgraph_repeat_regenerate_tag.log: main/subgraph_repeat_regenerate_tag$(EXEEXT)
	@p='main/subgraph_repeat_regenerate_tag$(EXEEXT)'; \
	b='main/subgraph_repeat_regenerate_tag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/subgraph_repeat_regenerate_tag_cycle.log: main/subgraph_repeat_regenerate_tag_cycle$(EXEEXT)
	@p='main/subgraph_repeat_regenerate_tag_cycle$(EXEEXT)'; \
	b='main/subgraph_repeat_regenerate_tag_cycle'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/empty_task_sync_point.log: main/empty_task_sync_point$(EXEEXT)
	@p='main/empty_task_sync_point$(EXEEXT)'; \
	b='main/empty_task_sync_point'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/empty_task_sync_point_tasks.log: main/empty_task_sync_point_tasks$(EXEEXT)
	@p='main/empty_task_sync_point_tasks$(EXEEXT)'; \
	b='main/empty_task_sync_point_tasks'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/tag_wait_api.log: main/tag_wait_api$(EXEEXT)
	@p='main/tag_wait_api$(EXEEXT)'; \
	b='main/tag_wait_api'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/tag_get_task.log: main/tag_get_task$(EXEEXT)
	@p='main/tag_get_task$(EXEEXT)'; \
	b='main/tag_get_task'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/task_wait_api.log: main/task_wait_api$(EXEEXT)
	@p='main/task_wait_api$(EXEEXT)'; \
	b='main/task_wait_api'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/declare_deps_in_callback.log: main/declare_deps_in_callback$(EXEEXT)
	@p='main/declare_deps_in_callback$(EXEEXT)'; \
	b='main/declare_deps_in_callback'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/declare_deps_after_submission.log: main/declare_deps_after_submission$(EXEEXT)
	@p='main/declare_deps_after_submission$(EXEEXT)'; \
	b='main/declare_deps_after_submission'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/declare_deps_after_submission_synchronous.log: main/declare_deps_after_submission_synchronous$(EXEEXT)
	@p='main/declare_deps_after_submission_synchronous$(EXEEXT)'; \
	b='main/declare_deps_after_submission_synchronous'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/get_current_task.log: main/get_current_task$(EXEEXT)
	@p='main/get_current_task$(EXEEXT)'; \
	b='main/get_current_task'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/starpu_init.log: main/starpu_init$(EXEEXT)
	@p='main/starpu_init$(EXEEXT)'; \
	b='main/starpu_init'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/submit.log: main/submit$(EXEEXT)
	@p='main/submit$(EXEEXT)'; \
	b='main/submit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/pause_resume.log: main/pause_resume$(EXEEXT)
	@p='main/pause_resume$(EXEEXT)'; \
	b='main/pause_resume'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/pack.log: main/pack$(EXEEXT)
	@p='main/pack$(EXEEXT)'; \
	b='main/pack'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/get_children_tasks.log: main/get_children_tasks$(EXEEXT)
	@p='main/get_children_tasks$(EXEEXT)'; \
	b='main/get_children_tasks'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/hwloc_cpuset.log: main/hwloc_cpuset$(EXEEXT)
	@p='main/hwloc_cpuset$(EXEEXT)'; \
	b='main/hwloc_cpuset'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/task_end_dep.log: main/task_end_dep$(EXEEXT)
	@p='main/task_end_dep$(EXEEXT)'; \
	b='main/task_end_dep'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/acquire_cb_insert.log: datawizard/acquire_cb_insert$(EXEEXT)
	@p='datawizard/acquire_cb_insert$(EXEEXT)'; \
	b='datawizard/acquire_cb_insert'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/acquire_release.log: datawizard/acquire_release$(EXEEXT)
	@p='datawizard/acquire_release$(EXEEXT)'; \
	b='datawizard/acquire_release'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/acquire_release2.log: datawizard/acquire_release2$(EXEEXT)
	@p='datawizard/acquire_release2$(EXEEXT)'; \
	b='datawizard/acquire_release2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/acquire_try.log: datawizard/acquire_try$(EXEEXT)
	@p='datawizard/acquire_try$(EXEEXT)'; \
	b='datawizard/acquire_try'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/bcsr.log: datawizard/bcsr$(EXEEXT)
	@p='datawizard/bcsr$(EXEEXT)'; \
	b='datawizard/bcsr'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/cache.log: datawizard/cache$(EXEEXT)
	@p='datawizard/cache$(EXEEXT)'; \
	b='datawizard/cache'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/commute.log: datawizard/commute$(EXEEXT)
	@p='datawizard/commute$(EXEEXT)'; \
	b='datawizard/commute'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/commute2.log: datawizard/commute2$(EXEEXT)
	@p='datawizard/commute2$(EXEEXT)'; \
	b='datawizard/commute2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/copy.log: datawizard/copy$(EXEEXT)
	@p='datawizard/copy$(EXEEXT)'; \
	b='datawizard/copy'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/data_implicit_deps.log: datawizard/data_implicit_deps$(EXEEXT)
	@p='datawizard/data_implicit_deps$(EXEEXT)'; \
	b='datawizard/data_implicit_deps'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/data_lookup.log: datawizard/data_lookup$(EXEEXT)
	@p='datawizard/data_lookup$(EXEEXT)'; \
	b='datawizard/data_lookup'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/scratch.log: datawizard/scratch$(EXEEXT)
	@p='datawizard/scratch$(EXEEXT)'; \
	b='datawizard/scratch'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/scratch_reuse.log: datawizard/scratch_reuse$(EXEEXT)
	@p='datawizard/scratch_reuse$(EXEEXT)'; \
	b='datawizard/scratch_reuse'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/sync_and_notify_data.log: datawizard/sync_and_notify_data$(EXEEXT)
	@p='datawizard/sync_and_notify_data$(EXEEXT)'; \
	b='datawizard/sync_and_notify_data'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/sync_and_notify_data_implicit.log: datawizard/sync_and_notify_data_implicit$(EXEEXT)
	@p='datawizard/sync_and_notify_data_implicit$(EXEEXT)'; \
	b='datawizard/sync_and_notify_data_implicit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/dsm_stress.log: datawizard/dsm_stress$(EXEEXT)
	@p='datawizard/dsm_stress$(EXEEXT)'; \
	b='datawizard/dsm_stress'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/double_parameter.log: datawizard/double_parameter$(EXEEXT)
	@p='datawizard/double_parameter$(EXEEXT)'; \
	b='datawizard/double_parameter'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/write_only_tmp_buffer.log: datawizard/write_only_tmp_buffer$(EXEEXT)
	@p='datawizard/write_only_tmp_buffer$(EXEEXT)'; \
	b='datawizard/write_only_tmp_buffer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/data_invalidation.log: datawizard/data_invalidation$(EXEEXT)
	@p='datawizard/data_invalidation$(EXEEXT)'; \
	b='datawizard/data_invalidation'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/dining_philosophers.log: datawizard/dining_philosophers$(EXEEXT)
	@p='datawizard/dining_philosophers$(EXEEXT)'; \
	b='datawizard/dining_philosophers'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/manual_reduction.log: datawizard/manual_reduction$(EXEEXT)
	@p='datawizard/manual_reduction$(EXEEXT)'; \
	b='datawizard/manual_reduction'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/readers_and_writers.log: datawizard/readers_and_writers$(EXEEXT)
	@p='datawizard/readers_and_writers$(EXEEXT)'; \
	b='datawizard/readers_and_writers'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/unpartition.log: datawizard/unpartition$(EXEEXT)
	@p='datawizard/unpartition$(EXEEXT)'; \
	b='datawizard/unpartition'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/sync_with_data_with_mem.log: datawizard/sync_with_data_with_mem$(EXEEXT)
	@p='datawizard/sync_with_data_with_mem$(EXEEXT)'; \
	b='datawizard/sync_with_data_with_mem'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/sync_with_data_with_mem_non_blocking.log: datawizard/sync_with_data_with_mem_non_blocking$(EXEEXT)
	@p='datawizard/sync_with_data_with_mem_non_blocking$(EXEEXT)'; \
	b='datawizard/sync_with_data_with_mem_non_blocking'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/sync_with_data_with_mem_non_blocking_implicit.log: datawizard/sync_with_data_with_mem_non_blocking_implicit$(EXEEXT)
	@p='datawizard/sync_with_data_with_mem_non_blocking_implicit$(EXEEXT)'; \
	b='datawizard/sync_with_data_with_mem_non_blocking_implicit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/mpi_like.log: datawizard/mpi_like$(EXEEXT)
	@p='datawizard/mpi_like$(EXEEXT)'; \
	b='datawizard/mpi_like'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/mpi_like_async.log: datawizard/mpi_like_async$(EXEEXT)
	@p='datawizard/mpi_like_async$(EXEEXT)'; \
	b='datawizard/mpi_like_async'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/critical_section_with_void_interface.log: datawizard/critical_section_with_void_interface$(EXEEXT)
	@p='datawizard/critical_section_with_void_interface$(EXEEXT)'; \
	b='datawizard/critical_section_with_void_interface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/increment_init.log: datawizard/increment_init$(EXEEXT)
	@p='datawizard/increment_init$(EXEEXT)'; \
	b='datawizard/increment_init'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/increment_redux.log: datawizard/increment_redux$(EXEEXT)
	@p='datawizard/increment_redux$(EXEEXT)'; \
	b='datawizard/increment_redux'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/increment_redux_v2.log: datawizard/increment_redux_v2$(EXEEXT)
	@p='datawizard/increment_redux_v2$(EXEEXT)'; \
	b='datawizard/increment_redux_v2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/increment_redux_lazy.log: datawizard/increment_redux_lazy$(EXEEXT)
	@p='datawizard/increment_redux_lazy$(EXEEXT)'; \
	b='datawizard/increment_redux_lazy'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/handle_to_pointer.log: datawizard/handle_to_pointer$(EXEEXT)
	@p='datawizard/handle_to_pointer$(EXEEXT)'; \
	b='datawizard/handle_to_pointer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/lazy_allocation.log: datawizard/lazy_allocation$(EXEEXT)
	@p='datawizard/lazy_allocation$(EXEEXT)'; \
	b='datawizard/lazy_allocation'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/lazy_unregister.log: datawizard/lazy_unregister$(EXEEXT)
	@p='datawizard/lazy_unregister$(EXEEXT)'; \
	b='datawizard/lazy_unregister'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/no_unregister.log: datawizard/no_unregister$(EXEEXT)
	@p='datawizard/no_unregister$(EXEEXT)'; \
	b='datawizard/no_unregister'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/noreclaim.log: datawizard/noreclaim$(EXEEXT)
	@p='datawizard/noreclaim$(EXEEXT)'; \
	b='datawizard/noreclaim'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/nowhere.log: datawizard/nowhere$(EXEEXT)
	@p='datawizard/nowhere$(EXEEXT)'; \
	b='datawizard/nowhere'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/interfaces/block/block_interface.log: datawizard/interfaces/block/block_interface$(EXEEXT)
	@p='datawizard/interfaces/block/block_interface$(EXEEXT)'; \
	b='datawizard/interfaces/block/block_interface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/interfaces/bcsr/bcsr_interface.log: datawizard/interfaces/bcsr/bcsr_interface$(EXEEXT)
	@p='datawizard/interfaces/bcsr/bcsr_interface$(EXEEXT)'; \
	b='datawizard/interfaces/bcsr/bcsr_interface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/interfaces/coo/coo_interface.log: datawizard/interfaces/coo/coo_interface$(EXEEXT)
	@p='datawizard/interfaces/coo/coo_interface$(EXEEXT)'; \
	b='datawizard/interfaces/coo/coo_interface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/interfaces/csr/csr_interface.log: datawizard/interfaces/csr/csr_interface$(EXEEXT)
	@p='datawizard/interfaces/csr/csr_interface$(EXEEXT)'; \
	b='datawizard/interfaces/csr/csr_interface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/interfaces/matrix/matrix_interface.log: datawizard/interfaces/matrix/matrix_interface$(EXEEXT)
	@p='datawizard/interfaces/matrix/matrix_interface$(EXEEXT)'; \
	b='datawizard/interfaces/matrix/matrix_interface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/interfaces/multiformat/multiformat_interface.log: datawizard/interfaces/multiformat/multiformat_interface$(EXEEXT)
	@p='datawizard/interfaces/multiformat/multiformat_interface$(EXEEXT)'; \
	b='datawizard/interfaces/multiformat/multiformat_interface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl.log: datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl$(EXEEXT)
	@p='datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl$(EXEEXT)'; \
	b='datawizard/interfaces/multiformat/advanced/multiformat_cuda_opencl'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/interfaces/multiformat/advanced/multiformat_data_release.log: datawizard/interfaces/multiformat/advanced/multiformat_data_release$(EXEEXT)
	@p='datawizard/interfaces/multiformat/advanced/multiformat_data_release$(EXEEXT)'; \
	b='datawizard/interfaces/multiformat/advanced/multiformat_data_release'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/interfaces/multiformat/advanced/multiformat_worker.log: datawizard/interfaces/multiformat/advanced/multiformat_worker$(EXEEXT)
	@p='datawizard/interfaces/multiformat/advanced/multiformat_worker$(EXEEXT)'; \
	b='datawizard/interfaces/multiformat/advanced/multiformat_worker'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion.log: datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion$(EXEEXT)
	@p='datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion$(EXEEXT)'; \
	b='datawizard/interfaces/multiformat/advanced/multiformat_handle_conversion'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/interfaces/multiformat/advanced/same_handle.log: datawizard/interfaces/multiformat/advanced/same_handle$(EXEEXT)
	@p='datawizard/interfaces/multiformat/advanced/same_handle$(EXEEXT)'; \
	b='datawizard/interfaces/multiformat/advanced/same_handle'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/interfaces/variable/variable_interface.log: datawizard/interfaces/variable/variable_interface$(EXEEXT)
	@p='datawizard/interfaces/variable/variable_interface$(EXEEXT)'; \
	b='datawizard/interfaces/variable/variable_interface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/interfaces/vector/vector_interface.log: datawizard/interfaces/vector/vector_interface$(EXEEXT)
	@p='datawizard/interfaces/vector/vector_interface$(EXEEXT)'; \
	b='datawizard/interfaces/vector/vector_interface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/interfaces/void/void_interface.log: datawizard/interfaces/void/void_interface$(EXEEXT)
	@p='datawizard/interfaces/void/void_interface$(EXEEXT)'; \
	b='datawizard/interfaces/void/void_interface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/in_place_partition.log: datawizard/in_place_partition$(EXEEXT)
	@p='datawizard/in_place_partition$(EXEEXT)'; \
	b='datawizard/in_place_partition'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/partition_dep.log: datawizard/partition_dep$(EXEEXT)
	@p='datawizard/partition_dep$(EXEEXT)'; \
	b='datawizard/partition_dep'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/partition_lazy.log: datawizard/partition_lazy$(EXEEXT)
	@p='datawizard/partition_lazy$(EXEEXT)'; \
	b='datawizard/partition_lazy'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/partition_init.log: datawizard/partition_init$(EXEEXT)
	@p='datawizard/partition_init$(EXEEXT)'; \
	b='datawizard/partition_init'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/gpu_register.log: datawizard/gpu_register$(EXEEXT)
	@p='datawizard/gpu_register$(EXEEXT)'; \
	b='datawizard/gpu_register'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/gpu_ptr_register.log: datawizard/gpu_ptr_register$(EXEEXT)
	@p='datawizard/gpu_ptr_register$(EXEEXT)'; \
	b='datawizard/gpu_ptr_register'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/variable_parameters.log: datawizard/variable_parameters$(EXEEXT)
	@p='datawizard/variable_parameters$(EXEEXT)'; \
	b='datawizard/variable_parameters'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/wt_host.log: datawizard/wt_host$(EXEEXT)
	@p='datawizard/wt_host$(EXEEXT)'; \
	b='datawizard/wt_host'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/wt_broadcast.log: datawizard/wt_broadcast$(EXEEXT)
	@p='datawizard/wt_broadcast$(EXEEXT)'; \
	b='datawizard/wt_broadcast'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/readonly.log: datawizard/readonly$(EXEEXT)
	@p='datawizard/readonly$(EXEEXT)'; \
	b='datawizard/readonly'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/specific_node.log: datawizard/specific_node$(EXEEXT)
	@p='datawizard/specific_node$(EXEEXT)'; \
	b='datawizard/specific_node'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/task_with_multiple_time_the_same_handle.log: datawizard/task_with_multiple_time_the_same_handle$(EXEEXT)
	@p='datawizard/task_with_multiple_time_the_same_handle$(EXEEXT)'; \
	b='datawizard/task_with_multiple_time_the_same_handle'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/test_arbiter.log: datawizard/test_arbiter$(EXEEXT)
	@p='datawizard/test_arbiter$(EXEEXT)'; \
	b='datawizard/test_arbiter'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/invalidate_pending_requests.log: datawizard/invalidate_pending_requests$(EXEEXT)
	@p='datawizard/invalidate_pending_requests$(EXEEXT)'; \
	b='datawizard/invalidate_pending_requests'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/temporary_partition.log: datawizard/temporary_partition$(EXEEXT)
	@p='datawizard/temporary_partition$(EXEEXT)'; \
	b='datawizard/temporary_partition'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/partitioned_initialization.log: datawizard/partitioned_initialization$(EXEEXT)
	@p='datawizard/partitioned_initialization$(EXEEXT)'; \
	b='datawizard/partitioned_initialization'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/partitioned_acquire.log: datawizard/partitioned_acquire$(EXEEXT)
	@p='datawizard/partitioned_acquire$(EXEEXT)'; \
	b='datawizard/partitioned_acquire'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/temporary_partition_implicit.log: datawizard/temporary_partition_implicit$(EXEEXT)
	@p='datawizard/temporary_partition_implicit$(EXEEXT)'; \
	b='datawizard/temporary_partition_implicit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/redux_acquire.log: datawizard/redux_acquire$(EXEEXT)
	@p='datawizard/redux_acquire$(EXEEXT)'; \
	b='datawizard/redux_acquire'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
disk/disk_copy.log: disk/disk_copy$(EXEEXT)
	@p='disk/disk_copy$(EXEEXT)'; \
	b='disk/disk_copy'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
disk/disk_copy_unpack.log: disk/disk_copy_unpack$(EXEEXT)
	@p='disk/disk_copy_unpack$(EXEEXT)'; \
	b='disk/disk_copy_unpack'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
disk/disk_copy_to_disk.log: disk/disk_copy_to_disk$(EXEEXT)
	@p='disk/disk_copy_to_disk$(EXEEXT)'; \
	b='disk/disk_copy_to_disk'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
disk/disk_compute.log: disk/disk_compute$(EXEEXT)
	@p='disk/disk_compute$(EXEEXT)'; \
	b='disk/disk_compute'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
disk/disk_pack.log: disk/disk_pack$(EXEEXT)
	@p='disk/disk_pack$(EXEEXT)'; \
	b='disk/disk_pack'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
disk/mem_reclaim.log: disk/mem_reclaim$(EXEEXT)
	@p='disk/mem_reclaim$(EXEEXT)'; \
	b='disk/mem_reclaim'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errorcheck/invalid_blocking_calls.log: errorcheck/invalid_blocking_calls$(EXEEXT)
	@p='errorcheck/invalid_blocking_calls$(EXEEXT)'; \
	b='errorcheck/invalid_blocking_calls'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
errorcheck/workers_cpuid.log: errorcheck/workers_cpuid$(EXEEXT)
	@p='errorcheck/workers_cpuid$(EXEEXT)'; \
	b='errorcheck/workers_cpuid'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
helper/starpu_data_cpy.log: helper/starpu_data_cpy$(EXEEXT)
	@p='helper/starpu_data_cpy$(EXEEXT)'; \
	b='helper/starpu_data_cpy'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
helper/starpu_create_sync_task.log: helper/starpu_create_sync_task$(EXEEXT)
	@p='helper/starpu_create_sync_task$(EXEEXT)'; \
	b='helper/starpu_create_sync_task'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
microbenchs/async_tasks_overhead.log: microbenchs/async_tasks_overhead$(EXEEXT)
	@p='microbenchs/async_tasks_overhead$(EXEEXT)'; \
	b='microbenchs/async_tasks_overhead'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
microbenchs/sync_tasks_overhead.log: microbenchs/sync_tasks_overhead$(EXEEXT)
	@p='microbenchs/sync_tasks_overhead$(EXEEXT)'; \
	b='microbenchs/sync_tasks_overhead'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
microbenchs/tasks_overhead.log: microbenchs/tasks_overhead$(EXEEXT)
	@p='microbenchs/tasks_overhead$(EXEEXT)'; \
	b='microbenchs/tasks_overhead'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
microbenchs/tasks_size_overhead.log: microbenchs/tasks_size_overhead$(EXEEXT)
	@p='microbenchs/tasks_size_overhead$(EXEEXT)'; \
	b='microbenchs/tasks_size_overhead'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
microbenchs/prefetch_data_on_node.log: microbenchs/prefetch_data_on_node$(EXEEXT)
	@p='microbenchs/prefetch_data_on_node$(EXEEXT)'; \
	b='microbenchs/prefetch_data_on_node'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
microbenchs/redundant_buffer.log: microbenchs/redundant_buffer$(EXEEXT)
	@p='microbenchs/redundant_buffer$(EXEEXT)'; \
	b='microbenchs/redundant_buffer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
microbenchs/matrix_as_vector.log: microbenchs/matrix_as_vector$(EXEEXT)
	@p='microbenchs/matrix_as_vector$(EXEEXT)'; \
	b='microbenchs/matrix_as_vector'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
microbenchs/bandwidth.log: microbenchs/bandwidth$(EXEEXT)
	@p='microbenchs/bandwidth$(EXEEXT)'; \
	b='microbenchs/bandwidth'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
overlap/gpu_concurrency.log: overlap/gpu_concurrency$(EXEEXT)
	@p='overlap/gpu_concurrency$(EXEEXT)'; \
	b='overlap/gpu_concurrency'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
parallel_tasks/explicit_combined_worker.log: parallel_tasks/explicit_combined_worker$(EXEEXT)
	@p='parallel_tasks/explicit_combined_worker$(EXEEXT)'; \
	b='parallel_tasks/explicit_combined_worker'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
parallel_tasks/parallel_kernels.log: parallel_tasks/parallel_kernels$(EXEEXT)
	@p='parallel_tasks/parallel_kernels$(EXEEXT)'; \
	b='parallel_tasks/parallel_kernels'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
parallel_tasks/parallel_kernels_trivial.log: parallel_tasks/parallel_kernels_trivial$(EXEEXT)
	@p='parallel_tasks/parallel_kernels_trivial$(EXEEXT)'; \
	b='parallel_tasks/parallel_kernels_trivial'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
parallel_tasks/parallel_kernels_spmd.log: parallel_tasks/parallel_kernels_spmd$(EXEEXT)
	@p='parallel_tasks/parallel_kernels_spmd$(EXEEXT)'; \
	b='parallel_tasks/parallel_kernels_spmd'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
parallel_tasks/spmd_peager.log: parallel_tasks/spmd_peager$(EXEEXT)
	@p='parallel_tasks/spmd_peager$(EXEEXT)'; \
	b='parallel_tasks/spmd_peager'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
parallel_tasks/cuda_only.log: parallel_tasks/cuda_only$(EXEEXT)
	@p='parallel_tasks/cuda_only$(EXEEXT)'; \
	b='parallel_tasks/cuda_only'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
perfmodels/regression_based.log: perfmodels/regression_based$(EXEEXT)
	@p='perfmodels/regression_based$(EXEEXT)'; \
	b='perfmodels/regression_based'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
perfmodels/non_linear_regression_based.log: perfmodels/non_linear_regression_based$(EXEEXT)
	@p='perfmodels/non_linear_regression_based$(EXEEXT)'; \
	b='perfmodels/non_linear_regression_based'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
perfmodels/feed.log: perfmodels/feed$(EXEEXT)
	@p='perfmodels/feed$(EXEEXT)'; \
	b='perfmodels/feed'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
perfmodels/user_base.log: perfmodels/user_base$(EXEEXT)
	@p='perfmodels/user_base$(EXEEXT)'; \
	b='perfmodels/user_base'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
perfmodels/valid_model.log: perfmodels/valid_model$(EXEEXT)
	@p='perfmodels/valid_model$(EXEEXT)'; \
	b='perfmodels/valid_model'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
perfmodels/memory.log: perfmodels/memory$(EXEEXT)
	@p='perfmodels/memory$(EXEEXT)'; \
	b='perfmodels/memory'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_policies/data_locality.log: sched_policies/data_locality$(EXEEXT)
	@p='sched_policies/data_locality$(EXEEXT)'; \
	b='sched_policies/data_locality'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_policies/execute_all_tasks.log: sched_policies/execute_all_tasks$(EXEEXT)
	@p='sched_policies/execute_all_tasks$(EXEEXT)'; \
	b='sched_policies/execute_all_tasks'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_policies/prio.log: sched_policies/prio$(EXEEXT)
	@p='sched_policies/prio$(EXEEXT)'; \
	b='sched_policies/prio'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_policies/simple_deps.log: sched_policies/simple_deps$(EXEEXT)
	@p='sched_policies/simple_deps$(EXEEXT)'; \
	b='sched_policies/simple_deps'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_policies/simple_cpu_gpu_sched.log: sched_policies/simple_cpu_gpu_sched$(EXEEXT)
	@p='sched_policies/simple_cpu_gpu_sched$(EXEEXT)'; \
	b='sched_policies/simple_cpu_gpu_sched'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_ctx/sched_ctx_hierarchy.log: sched_ctx/sched_ctx_hierarchy$(EXEEXT)
	@p='sched_ctx/sched_ctx_hierarchy$(EXEEXT)'; \
	b='sched_ctx/sched_ctx_hierarchy'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
fortran90/init_01.log: fortran90/init_01$(EXEEXT)
	@p='fortran90/init_01$(EXEEXT)'; \
	b='fortran90/init_01'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main/tag_task_data_deps.log: main/tag_task_data_deps$(EXEEXT)
	@p='main/tag_task_data_deps$(EXEEXT)'; \
	b='main/tag_task_data_deps'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
datawizard/reclaim.log: datawizard/reclaim$(EXEEXT)
	@p='datawizard/reclaim$(EXEEXT)'; \
	b='datawizard/reclaim'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(PROGRAMS) $(SCRIPTS) $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(examplebindir)" "$(DESTDIR)$(examplebindir)" "$(DESTDIR)$(STARPU_OPENCL_DATAdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f datawizard/$(DEPDIR)/$(am__dirstamp)
	-rm -f datawizard/$(am__dirstamp)
	-rm -f datawizard/interfaces/$(am__dirstamp)
	-rm -f datawizard/interfaces/bcsr/$(DEPDIR)/$(am__dirstamp)
	-rm -f datawizard/interfaces/bcsr/$(am__dirstamp)
	-rm -f datawizard/interfaces/block/$(DEPDIR)/$(am__dirstamp)
	-rm -f datawizard/interfaces/block/$(am__dirstamp)
	-rm -f datawizard/interfaces/coo/$(DEPDIR)/$(am__dirstamp)
	-rm -f datawizard/interfaces/coo/$(am__dirstamp)
	-rm -f datawizard/interfaces/csr/$(DEPDIR)/$(am__dirstamp)
	-rm -f datawizard/interfaces/csr/$(am__dirstamp)
	-rm -f datawizard/interfaces/matrix/$(DEPDIR)/$(am__dirstamp)
	-rm -f datawizard/interfaces/matrix/$(am__dirstamp)
	-rm -f datawizard/interfaces/multiformat/$(DEPDIR)/$(am__dirstamp)
	-rm -f datawizard/interfaces/multiformat/$(am__dirstamp)
	-rm -f datawizard/interfaces/multiformat/advanced/$(am__dirstamp)
	-rm -f datawizard/interfaces/variable/$(DEPDIR)/$(am__dirstamp)
	-rm -f datawizard/interfaces/variable/$(am__dirstamp)
	-rm -f datawizard/interfaces/vector/$(DEPDIR)/$(am__dirstamp)
	-rm -f datawizard/interfaces/vector/$(am__dirstamp)
	-rm -f datawizard/interfaces/void/$(am__dirstamp)
	-rm -f disk/$(am__dirstamp)
	-rm -f errorcheck/$(am__dirstamp)
	-rm -f fortran90/$(am__dirstamp)
	-rm -f helper/$(am__dirstamp)
	-rm -f main/$(DEPDIR)/$(am__dirstamp)
	-rm -f main/$(am__dirstamp)
	-rm -f main/driver_api/$(am__dirstamp)
	-rm -f microbenchs/$(am__dirstamp)
	-rm -f model-checking/$(am__dirstamp)
	-rm -f openmp/$(am__dirstamp)
	-rm -f overlap/$(DEPDIR)/$(am__dirstamp)
	-rm -f overlap/$(am__dirstamp)
	-rm -f parallel_tasks/$(am__dirstamp)
	-rm -f perfmodels/$(am__dirstamp)
	-rm -f sched_ctx/$(am__dirstamp)
	-rm -f sched_policies/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-examplebinPROGRAMS clean-generic \
	clean-libtool clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
		-rm -f ./$(DEPDIR)/acquire_cb.Po
	-rm -f ./$(DEPDIR)/acquire_cb_insert.Po
	-rm -f ./$(DEPDIR)/acquire_release.Po
	-rm -f ./$(DEPDIR)/acquire_release2.Po
	-rm -f ./$(DEPDIR)/acquire_release_opencl.Po
	-rm -f ./$(DEPDIR)/acquire_try.Po
	-rm -f ./$(DEPDIR)/allocate.Po
	-rm -f ./$(DEPDIR)/api_01.Po
	-rm -f ./$(DEPDIR)/array_slice_01.Po
	-rm -f ./$(DEPDIR)/async_tasks_overhead.Po
	-rm -f ./$(DEPDIR)/bandwidth.Po
	-rm -f ./$(DEPDIR)/bcsr.Po
	-rm -f ./$(DEPDIR)/bcsr_interface.Po
	-rm -f ./$(DEPDIR)/bcsr_opencl.Po
	-rm -f ./$(DEPDIR)/bind.Po
	-rm -f ./$(DEPDIR)/block_interface.Po
	-rm -f ./$(DEPDIR)/block_opencl.Po
	-rm -f ./$(DEPDIR)/cache.Po
	-rm -f ./$(DEPDIR)/callback.Po
	-rm -f ./$(DEPDIR)/codelet_null_callback.Po
	-rm -f ./$(DEPDIR)/commute.Po
	-rm -f ./$(DEPDIR)/commute2.Po
	-rm -f ./$(DEPDIR)/coo_interface.Po
	-rm -f ./$(DEPDIR)/coo_opencl.Po
	-rm -f ./$(DEPDIR)/copy.Po
	-rm -f ./$(DEPDIR)/copy_interfaces.Po
	-rm -f ./$(DEPDIR)/critical_section_with_void_interface.Po
	-rm -f ./$(DEPDIR)/csr_interface.Po
	-rm -f ./$(DEPDIR)/csr_opencl.Po
	-rm -f ./$(DEPDIR)/cublas_init.Po
	-rm -f ./$(DEPDIR)/cuda_only.Po
	-rm -f ./$(DEPDIR)/cuda_task_01.Po
	-rm -f ./$(DEPDIR)/cusparse_init.Po
	-rm -f ./$(DEPDIR)/data_implicit_deps.Po
	-rm -f ./$(DEPDIR)/data_invalidation.Po
	-rm -f ./$(DEPDIR)/data_locality.Po
	-rm -f ./$(DEPDIR)/data_lookup.Po
	-rm -f ./$(DEPDIR)/declare_deps_after_submission.Po
	-rm -f ./$(DEPDIR)/declare_deps_after_submission_synchronous.Po
	-rm -f ./$(DEPDIR)/declare_deps_in_callback.Po
	-rm -f ./$(DEPDIR)/deploop.Po
	-rm -f ./$(DEPDIR)/deps.Po
	-rm -f ./$(DEPDIR)/dining_philosophers.Po
	-rm -f ./$(DEPDIR)/disk_compute.Po
	-rm -f ./$(DEPDIR)/disk_copy.Po
	-rm -f ./$(DEPDIR)/disk_copy_to_disk.Po
	-rm -f ./$(DEPDIR)/disk_copy_unpack.Po
	-rm -f ./$(DEPDIR)/disk_pack.Po
	-rm -f ./$(DEPDIR)/display_binding.Po
	-rm -f ./$(DEPDIR)/display_structures_size.Po
	-rm -f ./$(DEPDIR)/double_parameter.Po
	-rm -f ./$(DEPDIR)/dsm_stress.Po
	-rm -f ./$(DEPDIR)/empty_task.Po
	-rm -f ./$(DEPDIR)/empty_task_chain.Po
	-rm -f ./$(DEPDIR)/empty_task_sync_point.Po
	-rm -f ./$(DEPDIR)/empty_task_sync_point_tasks.Po
	-rm -f ./$(DEPDIR)/environment.Po
	-rm -f ./$(DEPDIR)/execute_all_tasks.Po
	-rm -f ./$(DEPDIR)/execute_on_a_specific_worker.Po
	-rm -f ./$(DEPDIR)/execute_on_all.Po
	-rm -f ./$(DEPDIR)/execute_schedule.Po
	-rm -f ./$(DEPDIR)/explicit_combined_worker.Po
	-rm -f ./$(DEPDIR)/feed.Po
	-rm -f ./$(DEPDIR)/generic.Po
	-rm -f ./$(DEPDIR)/get_children_tasks.Po
	-rm -f ./$(DEPDIR)/get_current_task.Po
	-rm -f ./$(DEPDIR)/gpu_concurrency.Po
	-rm -f ./$(DEPDIR)/gpu_ptr_register.Po
	-rm -f ./$(DEPDIR)/gpu_register.Po
	-rm -f ./$(DEPDIR)/handle_to_pointer.Po
	-rm -f ./$(DEPDIR)/hwloc_cpuset.Po
	-rm -f ./$(DEPDIR)/in_place_partition.Po
	-rm -f ./$(DEPDIR)/increment_codelet.Po
	-rm -f ./$(DEPDIR)/increment_init.Po
	-rm -f ./$(DEPDIR)/increment_redux.Po
	-rm -f ./$(DEPDIR)/increment_redux_lazy.Po
	-rm -f ./$(DEPDIR)/increment_redux_v2.Po
	-rm -f ./$(DEPDIR)/init_exit_01.Po
	-rm -f ./$(DEPDIR)/init_exit_02.Po
	-rm -f ./$(DEPDIR)/init_run_deinit.Po
	-rm -f ./$(DEPDIR)/insert_task.Po
	-rm -f ./$(DEPDIR)/insert_task_array.Po
	-rm -f ./$(DEPDIR)/insert_task_dyn_handles.Po
	-rm -f ./$(DEPDIR)/insert_task_many.Po
	-rm -f ./$(DEPDIR)/insert_task_nullcodelet.Po
	-rm -f ./$(DEPDIR)/insert_task_pack.Po
	-rm -f ./$(DEPDIR)/insert_task_value.Po
	-rm -f ./$(DEPDIR)/insert_task_where.Po
	-rm -f ./$(DEPDIR)/invalid_blocking_calls.Po
	-rm -f ./$(DEPDIR)/invalid_tasks.Po
	-rm -f ./$(DEPDIR)/invalidate_pending_requests.Po
	-rm -f ./$(DEPDIR)/job.Po
	-rm -f ./$(DEPDIR)/lazy_allocation.Po
	-rm -f ./$(DEPDIR)/lazy_unregister.Po
	-rm -f ./$(DEPDIR)/loader.Po
	-rm -f ./$(DEPDIR)/local_pingpong.Po
	-rm -f ./$(DEPDIR)/locality.Po
	-rm -f ./$(DEPDIR)/main_deprecated_func-deprecated_func.Po
	-rm -f ./$(DEPDIR)/manual_reduction.Po
	-rm -f ./$(DEPDIR)/matrix_as_vector.Po
	-rm -f ./$(DEPDIR)/matrix_interface.Po
	-rm -f ./$(DEPDIR)/matrix_opencl.Po
	-rm -f ./$(DEPDIR)/mem_reclaim.Po
	-rm -f ./$(DEPDIR)/memory.Po
	-rm -f ./$(DEPDIR)/mkdtemp.Po
	-rm -f ./$(DEPDIR)/mpi_like.Po
	-rm -f ./$(DEPDIR)/mpi_like_async.Po
	-rm -f ./$(DEPDIR)/multiformat_conversion_codelets.Po
	-rm -f ./$(DEPDIR)/multiformat_conversion_codelets_opencl.Po
	-rm -f ./$(DEPDIR)/multiformat_cuda_opencl.Po
	-rm -f ./$(DEPDIR)/multiformat_data_release.Po
	-rm -f ./$(DEPDIR)/multiformat_handle_conversion.Po
	-rm -f ./$(DEPDIR)/multiformat_interface.Po
	-rm -f ./$(DEPDIR)/multiformat_opencl.Po
	-rm -f ./$(DEPDIR)/multiformat_worker.Po
	-rm -f ./$(DEPDIR)/multithreaded.Po
	-rm -f ./$(DEPDIR)/multithreaded_init.Po
	-rm -f ./$(DEPDIR)/no_unregister.Po
	-rm -f ./$(DEPDIR)/non_linear_regression_based.Po
	-rm -f ./$(DEPDIR)/noreclaim.Po
	-rm -f ./$(DEPDIR)/nowhere.Po
	-rm -f ./$(DEPDIR)/numa_overflow.Po
	-rm -f ./$(DEPDIR)/opencl_codelet_unsigned_inc.Po
	-rm -f ./$(DEPDIR)/opencl_memset.Po
	-rm -f ./$(DEPDIR)/overlap.Po
	-rm -f ./$(DEPDIR)/pack.Po
	-rm -f ./$(DEPDIR)/parallel_01.Po
	-rm -f ./$(DEPDIR)/parallel_02.Po
	-rm -f ./$(DEPDIR)/parallel_03.Po
	-rm -f ./$(DEPDIR)/parallel_barrier_01.Po
	-rm -f ./$(DEPDIR)/parallel_critical_01.Po
	-rm -f ./$(DEPDIR)/parallel_critical_inline_01.Po
	-rm -f ./$(DEPDIR)/parallel_critical_named_01.Po
	-rm -f ./$(DEPDIR)/parallel_critical_named_inline_01.Po
	-rm -f ./$(DEPDIR)/parallel_dependent_homogeneous_tasks_data.Po
	-rm -f ./$(DEPDIR)/parallel_for_01.Po
	-rm -f ./$(DEPDIR)/parallel_for_02.Po
	-rm -f ./$(DEPDIR)/parallel_for_ordered_01.Po
	-rm -f ./$(DEPDIR)/parallel_independent_heterogeneous_tasks.Po
	-rm -f ./$(DEPDIR)/parallel_independent_heterogeneous_tasks_data.Po
	-rm -f ./$(DEPDIR)/parallel_independent_homogeneous_tasks.Po
	-rm -f ./$(DEPDIR)/parallel_independent_homogeneous_tasks_data.Po
	-rm -f ./$(DEPDIR)/parallel_kernels.Po
	-rm -f ./$(DEPDIR)/parallel_kernels_spmd.Po
	-rm -f ./$(DEPDIR)/parallel_kernels_trivial.Po
	-rm -f ./$(DEPDIR)/parallel_master_01.Po
	-rm -f ./$(DEPDIR)/parallel_master_inline_01.Po
	-rm -f ./$(DEPDIR)/parallel_nested_lock_01.Po
	-rm -f ./$(DEPDIR)/parallel_redux_heterogeneous_tasks_data.Po
	-rm -f ./$(DEPDIR)/parallel_redux_homogeneous_tasks_data.Po
	-rm -f ./$(DEPDIR)/parallel_sections_01.Po
	-rm -f ./$(DEPDIR)/parallel_sections_combined_01.Po
	-rm -f ./$(DEPDIR)/parallel_simple_lock_01.Po
	-rm -f ./$(DEPDIR)/parallel_single_copyprivate_01.Po
	-rm -f ./$(DEPDIR)/parallel_single_copyprivate_inline_01.Po
	-rm -f ./$(DEPDIR)/parallel_single_inline_01.Po
	-rm -f ./$(DEPDIR)/parallel_single_nowait_01.Po
	-rm -f ./$(DEPDIR)/parallel_single_wait_01.Po
	-rm -f ./$(DEPDIR)/partition_dep.Po
	-rm -f ./$(DEPDIR)/partition_init.Po
	-rm -f ./$(DEPDIR)/partition_lazy.Po
	-rm -f ./$(DEPDIR)/partitioned_acquire.Po
	-rm -f ./$(DEPDIR)/partitioned_initialization.Po
	-rm -f ./$(DEPDIR)/pause_resume.Po
	-rm -f ./$(DEPDIR)/pinned_memory.Po
	-rm -f ./$(DEPDIR)/prefetch_data_on_node.Po
	-rm -f ./$(DEPDIR)/prio.Po
	-rm -f ./$(DEPDIR)/prio_list.Po
	-rm -f ./$(DEPDIR)/readers_and_writers.Po
	-rm -f ./$(DEPDIR)/readonly.Po
	-rm -f ./$(DEPDIR)/reclaim.Po
	-rm -f ./$(DEPDIR)/redundant_buffer.Po
	-rm -f ./$(DEPDIR)/redux_acquire.Po
	-rm -f ./$(DEPDIR)/regenerate.Po
	-rm -f ./$(DEPDIR)/regenerate_pipeline.Po
	-rm -f ./$(DEPDIR)/regression_based.Po
	-rm -f ./$(DEPDIR)/restart.Po
	-rm -f ./$(DEPDIR)/run_driver.Po
	-rm -f ./$(DEPDIR)/same_handle.Po
	-rm -f ./$(DEPDIR)/scal.Po
	-rm -f ./$(DEPDIR)/sched_ctx_hierarchy.Po
	-rm -f ./$(DEPDIR)/sched_ctx_list.Po
	-rm -f ./$(DEPDIR)/sched_ctx_policy_data.Po
	-rm -f ./$(DEPDIR)/scratch.Po
	-rm -f ./$(DEPDIR)/scratch_opencl.Po
	-rm -f ./$(DEPDIR)/scratch_reuse.Po
	-rm -f ./$(DEPDIR)/simgrid-locality.Po
	-rm -f ./$(DEPDIR)/simple_cpu_gpu_sched.Po
	-rm -f ./$(DEPDIR)/simple_deps.Po
	-rm -f ./$(DEPDIR)/specific_node.Po
	-rm -f ./$(DEPDIR)/spmd_peager.Po
	-rm -f ./$(DEPDIR)/starpu_barrier.Po
	-rm -f ./$(DEPDIR)/starpu_create_sync_task.Po
	-rm -f ./$(DEPDIR)/starpu_data_cpy.Po
	-rm -f ./$(DEPDIR)/starpu_init.Po
	-rm -f ./$(DEPDIR)/starpu_init_noworker.Po
	-rm -f ./$(DEPDIR)/starpu_task_bundle.Po
	-rm -f ./$(DEPDIR)/starpu_task_wait.Po
	-rm -f ./$(DEPDIR)/starpu_task_wait_for_all.Po
	-rm -f ./$(DEPDIR)/starpu_worker_exists.Po
	-rm -f ./$(DEPDIR)/static_restartable.Po
	-rm -f ./$(DEPDIR)/static_restartable_tag.Po
	-rm -f ./$(DEPDIR)/static_restartable_using_initializer.Po
	-rm -f ./$(DEPDIR)/subgraph_repeat.Po
	-rm -f ./$(DEPDIR)/subgraph_repeat_regenerate.Po
	-rm -f ./$(DEPDIR)/subgraph_repeat_regenerate_tag.Po
	-rm -f ./$(DEPDIR)/subgraph_repeat_regenerate_tag_cycle.Po
	-rm -f ./$(DEPDIR)/subgraph_repeat_tag.Po
	-rm -f ./$(DEPDIR)/submit.Po
	-rm -f ./$(DEPDIR)/sync_and_notify_data.Po
	-rm -f ./$(DEPDIR)/sync_and_notify_data_implicit.Po
	-rm -f ./$(DEPDIR)/sync_and_notify_data_opencl.Po
	-rm -f ./$(DEPDIR)/sync_tasks_overhead.Po
	-rm -f ./$(DEPDIR)/sync_with_data_with_mem.Po
	-rm -f ./$(DEPDIR)/sync_with_data_with_mem_non_blocking.Po
	-rm -f ./$(DEPDIR)/sync_with_data_with_mem_non_blocking_implicit.Po
	-rm -f ./$(DEPDIR)/tag_get_task.Po
	-rm -f ./$(DEPDIR)/tag_task_data_deps.Po
	-rm -f ./$(DEPDIR)/tag_wait_api.Po
	-rm -f ./$(DEPDIR)/task_01.Po
	-rm -f ./$(DEPDIR)/task_02.Po
	-rm -f ./$(DEPDIR)/task_03.Po
	-rm -f ./$(DEPDIR)/task_end_dep.Po
	-rm -f ./$(DEPDIR)/task_wait_api.Po
	-rm -f ./$(DEPDIR)/task_with_multiple_time_the_same_handle.Po
	-rm -f ./$(DEPDIR)/taskgroup_01.Po
	-rm -f ./$(DEPDIR)/taskgroup_02.Po
	-rm -f ./$(DEPDIR)/taskloop.Po
	-rm -f ./$(DEPDIR)/tasks_overhead.Po
	-rm -f ./$(DEPDIR)/tasks_size_overhead.Po
	-rm -f ./$(DEPDIR)/taskwait_01.Po
	-rm -f ./$(DEPDIR)/temporary_partition.Po
	-rm -f ./$(DEPDIR)/temporary_partition_implicit.Po
	-rm -f ./$(DEPDIR)/test_arbiter.Po
	-rm -f ./$(DEPDIR)/test_interfaces.Po
	-rm -f ./$(DEPDIR)/unpartition.Po
	-rm -f ./$(DEPDIR)/user_base.Po
	-rm -f ./$(DEPDIR)/user_interaction_implicit.Po
	-rm -f ./$(DEPDIR)/valid_model.Po
	-rm -f ./$(DEPDIR)/value_nan.Po
	-rm -f ./$(DEPDIR)/variable_interface.Po
	-rm -f ./$(DEPDIR)/variable_opencl.Po
	-rm -f ./$(DEPDIR)/variable_parameters.Po
	-rm -f ./$(DEPDIR)/variable_size.Po
	-rm -f ./$(DEPDIR)/vector_interface.Po
	-rm -f ./$(DEPDIR)/vector_opencl.Po
	-rm -f ./$(DEPDIR)/void_interface.Po
	-rm -f ./$(DEPDIR)/wait_all_regenerable_tasks.Po
	-rm -f ./$(DEPDIR)/workers_cpuid.Po
	-rm -f ./$(DEPDIR)/write_only_tmp_buffer.Po
	-rm -f ./$(DEPDIR)/wt_broadcast.Po
	-rm -f ./$(DEPDIR)/wt_host.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-examplebinPROGRAMS install-examplebinSCRIPTS \
	install-nobase_STARPU_OPENCL_DATADATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
		-rm -f ./$(DEPDIR)/acquire_cb.Po
	-rm -f ./$(DEPDIR)/acquire_cb_insert.Po
	-rm -f ./$(DEPDIR)/acquire_release.Po
	-rm -f ./$(DEPDIR)/acquire_release2.Po
	-rm -f ./$(DEPDIR)/acquire_release_opencl.Po
	-rm -f ./$(DEPDIR)/acquire_try.Po
	-rm -f ./$(DEPDIR)/allocate.Po
	-rm -f ./$(DEPDIR)/api_01.Po
	-rm -f ./$(DEPDIR)/array_slice_01.Po
	-rm -f ./$(DEPDIR)/async_tasks_overhead.Po
	-rm -f ./$(DEPDIR)/bandwidth.Po
	-rm -f ./$(DEPDIR)/bcsr.Po
	-rm -f ./$(DEPDIR)/bcsr_interface.Po
	-rm -f ./$(DEPDIR)/bcsr_opencl.Po
	-rm -f ./$(DEPDIR)/bind.Po
	-rm -f ./$(DEPDIR)/block_interface.Po
	-rm -f ./$(DEPDIR)/block_opencl.Po
	-rm -f ./$(DEPDIR)/cache.Po
	-rm -f ./$(DEPDIR)/callback.Po
	-rm -f ./$(DEPDIR)/codelet_null_callback.Po
	-rm -f ./$(DEPDIR)/commute.Po
	-rm -f ./$(DEPDIR)/commute2.Po
	-rm -f ./$(DEPDIR)/coo_interface.Po
	-rm -f ./$(DEPDIR)/coo_opencl.Po
	-rm -f ./$(DEPDIR)/copy.Po
	-rm -f ./$(DEPDIR)/copy_interfaces.Po
	-rm -f ./$(DEPDIR)/critical_section_with_void_interface.Po
	-rm -f ./$(DEPDIR)/csr_interface.Po
	-rm -f ./$(DEPDIR)/csr_opencl.Po
	-rm -f ./$(DEPDIR)/cublas_init.Po
	-rm -f ./$(DEPDIR)/cuda_only.Po
	-rm -f ./$(DEPDIR)/cuda_task_01.Po
	-rm -f ./$(DEPDIR)/cusparse_init.Po
	-rm -f ./$(DEPDIR)/data_implicit_deps.Po
	-rm -f ./$(DEPDIR)/data_invalidation.Po
	-rm -f ./$(DEPDIR)/data_locality.Po
	-rm -f ./$(DEPDIR)/data_lookup.Po
	-rm -f ./$(DEPDIR)/declare_deps_after_submission.Po
	-rm -f ./$(DEPDIR)/declare_deps_after_submission_synchronous.Po
	-rm -f ./$(DEPDIR)/declare_deps_in_callback.Po
	-rm -f ./$(DEPDIR)/deploop.Po
	-rm -f ./$(DEPDIR)/deps.Po
	-rm -f ./$(DEPDIR)/dining_philosophers.Po
	-rm -f ./$(DEPDIR)/disk_compute.Po
	-rm -f ./$(DEPDIR)/disk_copy.Po
	-rm -f ./$(DEPDIR)/disk_copy_to_disk.Po
	-rm -f ./$(DEPDIR)/disk_copy_unpack.Po
	-rm -f ./$(DEPDIR)/disk_pack.Po
	-rm -f ./$(DEPDIR)/display_binding.Po
	-rm -f ./$(DEPDIR)/display_structures_size.Po
	-rm -f ./$(DEPDIR)/double_parameter.Po
	-rm -f ./$(DEPDIR)/dsm_stress.Po
	-rm -f ./$(DEPDIR)/empty_task.Po
	-rm -f ./$(DEPDIR)/empty_task_chain.Po
	-rm -f ./$(DEPDIR)/empty_task_sync_point.Po
	-rm -f ./$(DEPDIR)/empty_task_sync_point_tasks.Po
	-rm -f ./$(DEPDIR)/environment.Po
	-rm -f ./$(DEPDIR)/execute_all_tasks.Po
	-rm -f ./$(DEPDIR)/execute_on_a_specific_worker.Po
	-rm -f ./$(DEPDIR)/execute_on_all.Po
	-rm -f ./$(DEPDIR)/execute_schedule.Po
	-rm -f ./$(DEPDIR)/explicit_combined_worker.Po
	-rm -f ./$(DEPDIR)/feed.Po
	-rm -f ./$(DEPDIR)/generic.Po
	-rm -f ./$(DEPDIR)/get_children_tasks.Po
	-rm -f ./$(DEPDIR)/get_current_task.Po
	-rm -f ./$(DEPDIR)/gpu_concurrency.Po
	-rm -f ./$(DEPDIR)/gpu_ptr_register.Po
	-rm -f ./$(DEPDIR)/gpu_register.Po
	-rm -f ./$(DEPDIR)/handle_to_pointer.Po
	-rm -f ./$(DEPDIR)/hwloc_cpuset.Po
	-rm -f ./$(DEPDIR)/in_place_partition.Po
	-rm -f ./$(DEPDIR)/increment_codelet.Po
	-rm -f ./$(DEPDIR)/increment_init.Po
	-rm -f ./$(DEPDIR)/increment_redux.Po
	-rm -f ./$(DEPDIR)/increment_redux_lazy.Po
	-rm -f ./$(DEPDIR)/increment_redux_v2.Po
	-rm -f ./$(DEPDIR)/init_exit_01.Po
	-rm -f ./$(DEPDIR)/init_exit_02.Po
	-rm -f ./$(DEPDIR)/init_run_deinit.Po
	-rm -f ./$(DEPDIR)/insert_task.Po
	-rm -f ./$(DEPDIR)/insert_task_array.Po
	-rm -f ./$(DEPDIR)/insert_task_dyn_handles.Po
	-rm -f ./$(DEPDIR)/insert_task_many.Po
	-rm -f ./$(DEPDIR)/insert_task_nullcodelet.Po
	-rm -f ./$(DEPDIR)/insert_task_pack.Po
	-rm -f ./$(DEPDIR)/insert_task_value.Po
	-rm -f ./$(DEPDIR)/insert_task_where.Po
	-rm -f ./$(DEPDIR)/invalid_blocking_calls.Po
	-rm -f ./$(DEPDIR)/invalid_tasks.Po
	-rm -f ./$(DEPDIR)/invalidate_pending_requests.Po
	-rm -f ./$(DEPDIR)/job.Po
	-rm -f ./$(DEPDIR)/lazy_allocation.Po
	-rm -f ./$(DEPDIR)/lazy_unregister.Po
	-rm -f ./$(DEPDIR)/loader.Po
	-rm -f ./$(DEPDIR)/local_pingpong.Po
	-rm -f ./$(DEPDIR)/locality.Po
	-rm -f ./$(DEPDIR)/main_deprecated_func-deprecated_func.Po
	-rm -f ./$(DEPDIR)/manual_reduction.Po
	-rm -f ./$(DEPDIR)/matrix_as_vector.Po
	-rm -f ./$(DEPDIR)/matrix_interface.Po
	-rm -f ./$(DEPDIR)/matrix_opencl.Po
	-rm -f ./$(DEPDIR)/mem_reclaim.Po
	-rm -f ./$(DEPDIR)/memory.Po
	-rm -f ./$(DEPDIR)/mkdtemp.Po
	-rm -f ./$(DEPDIR)/mpi_like.Po
	-rm -f ./$(DEPDIR)/mpi_like_async.Po
	-rm -f ./$(DEPDIR)/multiformat_conversion_codelets.Po
	-rm -f ./$(DEPDIR)/multiformat_conversion_codelets_opencl.Po
	-rm -f ./$(DEPDIR)/multiformat_cuda_opencl.Po
	-rm -f ./$(DEPDIR)/multiformat_data_release.Po
	-rm -f ./$(DEPDIR)/multiformat_handle_conversion.Po
	-rm -f ./$(DEPDIR)/multiformat_interface.Po
	-rm -f ./$(DEPDIR)/multiformat_opencl.Po
	-rm -f ./$(DEPDIR)/multiformat_worker.Po
	-rm -f ./$(DEPDIR)/multithreaded.Po
	-rm -f ./$(DEPDIR)/multithreaded_init.Po
	-rm -f ./$(DEPDIR)/no_unregister.Po
	-rm -f ./$(DEPDIR)/non_linear_regression_based.Po
	-rm -f ./$(DEPDIR)/noreclaim.Po
	-rm -f ./$(DEPDIR)/nowhere.Po
	-rm -f ./$(DEPDIR)/numa_overflow.Po
	-rm -f ./$(DEPDIR)/opencl_codelet_unsigned_inc.Po
	-rm -f ./$(DEPDIR)/opencl_memset.Po
	-rm -f ./$(DEPDIR)/overlap.Po
	-rm -f ./$(DEPDIR)/pack.Po
	-rm -f ./$(DEPDIR)/parallel_01.Po
	-rm -f ./$(DEPDIR)/parallel_02.Po
	-rm -f ./$(DEPDIR)/parallel_03.Po
	-rm -f ./$(DEPDIR)/parallel_barrier_01.Po
	-rm -f ./$(DEPDIR)/parallel_critical_01.Po
	-rm -f ./$(DEPDIR)/parallel_critical_inline_01.Po
	-rm -f ./$(DEPDIR)/parallel_critical_named_01.Po
	-rm -f ./$(DEPDIR)/parallel_critical_named_inline_01.Po
	-rm -f ./$(DEPDIR)/parallel_dependent_homogeneous_tasks_data.Po
	-rm -f ./$(DEPDIR)/parallel_for_01.Po
	-rm -f ./$(DEPDIR)/parallel_for_02.Po
	-rm -f ./$(DEPDIR)/parallel_for_ordered_01.Po
	-rm -f ./$(DEPDIR)/parallel_independent_heterogeneous_tasks.Po
	-rm -f ./$(DEPDIR)/parallel_independent_heterogeneous_tasks_data.Po
	-rm -f ./$(DEPDIR)/parallel_independent_homogeneous_tasks.Po
	-rm -f ./$(DEPDIR)/parallel_independent_homogeneous_tasks_data.Po
	-rm -f ./$(DEPDIR)/parallel_kernels.Po
	-rm -f ./$(DEPDIR)/parallel_kernels_spmd.Po
	-rm -f ./$(DEPDIR)/parallel_kernels_trivial.Po
	-rm -f ./$(DEPDIR)/parallel_master_01.Po
	-rm -f ./$(DEPDIR)/parallel_master_inline_01.Po
	-rm -f ./$(DEPDIR)/parallel_nested_lock_01.Po
	-rm -f ./$(DEPDIR)/parallel_redux_heterogeneous_tasks_data.Po
	-rm -f ./$(DEPDIR)/parallel_redux_homogeneous_tasks_data.Po
	-rm -f ./$(DEPDIR)/parallel_sections_01.Po
	-rm -f ./$(DEPDIR)/parallel_sections_combined_01.Po
	-rm -f ./$(DEPDIR)/parallel_simple_lock_01.Po
	-rm -f ./$(DEPDIR)/parallel_single_copyprivate_01.Po
	-rm -f ./$(DEPDIR)/parallel_single_copyprivate_inline_01.Po
	-rm -f ./$(DEPDIR)/parallel_single_inline_01.Po
	-rm -f ./$(DEPDIR)/parallel_single_nowait_01.Po
	-rm -f ./$(DEPDIR)/parallel_single_wait_01.Po
	-rm -f ./$(DEPDIR)/partition_dep.Po
	-rm -f ./$(DEPDIR)/partition_init.Po
	-rm -f ./$(DEPDIR)/partition_lazy.Po
	-rm -f ./$(DEPDIR)/partitioned_acquire.Po
	-rm -f ./$(DEPDIR)/partitioned_initialization.Po
	-rm -f ./$(DEPDIR)/pause_resume.Po
	-rm -f ./$(DEPDIR)/pinned_memory.Po
	-rm -f ./$(DEPDIR)/prefetch_data_on_node.Po
	-rm -f ./$(DEPDIR)/prio.Po
	-rm -f ./$(DEPDIR)/prio_list.Po
	-rm -f ./$(DEPDIR)/readers_and_writers.Po
	-rm -f ./$(DEPDIR)/readonly.Po
	-rm -f ./$(DEPDIR)/reclaim.Po
	-rm -f ./$(DEPDIR)/redundant_buffer.Po
	-rm -f ./$(DEPDIR)/redux_acquire.Po
	-rm -f ./$(DEPDIR)/regenerate.Po
	-rm -f ./$(DEPDIR)/regenerate_pipeline.Po
	-rm -f ./$(DEPDIR)/regression_based.Po
	-rm -f ./$(DEPDIR)/restart.Po
	-rm -f ./$(DEPDIR)/run_driver.Po
	-rm -f ./$(DEPDIR)/same_handle.Po
	-rm -f ./$(DEPDIR)/scal.Po
	-rm -f ./$(DEPDIR)/sched_ctx_hierarchy.Po
	-rm -f ./$(DEPDIR)/sched_ctx_list.Po
	-rm -f ./$(DEPDIR)/sched_ctx_policy_data.Po
	-rm -f ./$(DEPDIR)/scratch.Po
	-rm -f ./$(DEPDIR)/scratch_opencl.Po
	-rm -f ./$(DEPDIR)/scratch_reuse.Po
	-rm -f ./$(DEPDIR)/simgrid-locality.Po
	-rm -f ./$(DEPDIR)/simple_cpu_gpu_sched.Po
	-rm -f ./$(DEPDIR)/simple_deps.Po
	-rm -f ./$(DEPDIR)/specific_node.Po
	-rm -f ./$(DEPDIR)/spmd_peager.Po
	-rm -f ./$(DEPDIR)/starpu_barrier.Po
	-rm -f ./$(DEPDIR)/starpu_create_sync_task.Po
	-rm -f ./$(DEPDIR)/starpu_data_cpy.Po
	-rm -f ./$(DEPDIR)/starpu_init.Po
	-rm -f ./$(DEPDIR)/starpu_init_noworker.Po
	-rm -f ./$(DEPDIR)/starpu_task_bundle.Po
	-rm -f ./$(DEPDIR)/starpu_task_wait.Po
	-rm -f ./$(DEPDIR)/starpu_task_wait_for_all.Po
	-rm -f ./$(DEPDIR)/starpu_worker_exists.Po
	-rm -f ./$(DEPDIR)/static_restartable.Po
	-rm -f ./$(DEPDIR)/static_restartable_tag.Po
	-rm -f ./$(DEPDIR)/static_restartable_using_initializer.Po
	-rm -f ./$(DEPDIR)/subgraph_repeat.Po
	-rm -f ./$(DEPDIR)/subgraph_repeat_regenerate.Po
	-rm -f ./$(DEPDIR)/subgraph_repeat_regenerate_tag.Po
	-rm -f ./$(DEPDIR)/subgraph_repeat_regenerate_tag_cycle.Po
	-rm -f ./$(DEPDIR)/subgraph_repeat_tag.Po
	-rm -f ./$(DEPDIR)/submit.Po
	-rm -f ./$(DEPDIR)/sync_and_notify_data.Po
	-rm -f ./$(DEPDIR)/sync_and_notify_data_implicit.Po
	-rm -f ./$(DEPDIR)/sync_and_notify_data_opencl.Po
	-rm -f ./$(DEPDIR)/sync_tasks_overhead.Po
	-rm -f ./$(DEPDIR)/sync_with_data_with_mem.Po
	-rm -f ./$(DEPDIR)/sync_with_data_with_mem_non_blocking.Po
	-rm -f ./$(DEPDIR)/sync_with_data_with_mem_non_blocking_implicit.Po
	-rm -f ./$(DEPDIR)/tag_get_task.Po
	-rm -f ./$(DEPDIR)/tag_task_data_deps.Po
	-rm -f ./$(DEPDIR)/tag_wait_api.Po
	-rm -f ./$(DEPDIR)/task_01.Po
	-rm -f ./$(DEPDIR)/task_02.Po
	-rm -f ./$(DEPDIR)/task_03.Po
	-rm -f ./$(DEPDIR)/task_end_dep.Po
	-rm -f ./$(DEPDIR)/task_wait_api.Po
	-rm -f ./$(DEPDIR)/task_with_multiple_time_the_same_handle.Po
	-rm -f ./$(DEPDIR)/taskgroup_01.Po
	-rm -f ./$(DEPDIR)/taskgroup_02.Po
	-rm -f ./$(DEPDIR)/taskloop.Po
	-rm -f ./$(DEPDIR)/tasks_overhead.Po
	-rm -f ./$(DEPDIR)/tasks_size_overhead.Po
	-rm -f ./$(DEPDIR)/taskwait_01.Po
	-rm -f ./$(DEPDIR)/temporary_partition.Po
	-rm -f ./$(DEPDIR)/temporary_partition_implicit.Po
	-rm -f ./$(DEPDIR)/test_arbiter.Po
	-rm -f ./$(DEPDIR)/test_interfaces.Po
	-rm -f ./$(DEPDIR)/unpartition.Po
	-rm -f ./$(DEPDIR)/user_base.Po
	-rm -f ./$(DEPDIR)/user_interaction_implicit.Po
	-rm -f ./$(DEPDIR)/valid_model.Po
	-rm -f ./$(DEPDIR)/value_nan.Po
	-rm -f ./$(DEPDIR)/variable_interface.Po
	-rm -f ./$(DEPDIR)/variable_opencl.Po
	-rm -f ./$(DEPDIR)/variable_parameters.Po
	-rm -f ./$(DEPDIR)/variable_size.Po
	-rm -f ./$(DEPDIR)/vector_interface.Po
	-rm -f ./$(DEPDIR)/vector_opencl.Po
	-rm -f ./$(DEPDIR)/void_interface.Po
	-rm -f ./$(DEPDIR)/wait_all_regenerable_tasks.Po
	-rm -f ./$(DEPDIR)/workers_cpuid.Po
	-rm -f ./$(DEPDIR)/write_only_tmp_buffer.Po
	-rm -f ./$(DEPDIR)/wt_broadcast.Po
	-rm -f ./$(DEPDIR)/wt_host.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-examplebinPROGRAMS uninstall-examplebinSCRIPTS \
	uninstall-nobase_STARPU_OPENCL_DATADATA

.MAKE: $(am__recursive_targets) all check check-am install install-am \
	install-exec install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--depfiles check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-examplebinPROGRAMS clean-generic \
	clean-libtool clean-noinstPROGRAMS cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am \
	install-examplebinPROGRAMS install-examplebinSCRIPTS \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man \
	install-nobase_STARPU_OPENCL_DATADATA install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am uninstall-examplebinPROGRAMS \
	uninstall-examplebinSCRIPTS \
	uninstall-nobase_STARPU_OPENCL_DATADATA

.PRECIOUS: Makefile


showfailed:
	@! grep "^FAIL " $(TEST_LOGS) /dev/null
	@! grep -l "ERROR: AddressSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -l "WARNING: AddressSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -l "ERROR: ThreadSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -l "WARNING: ThreadSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -l "ERROR: LeakSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -l "WARNING: LeakSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -l " runtime error: " $(TEST_LOGS) /dev/null
	@RET=0 ; \
	for i in $(SUBDIRS) ; do \
		make -C $$i showfailed || RET=1 ; \
	done ; \
	exit $$RET

showcheck:
	-cat $(TEST_LOGS) /dev/null
	@! grep -q "ERROR: AddressSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -q "WARNING: AddressSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -q "ERROR: ThreadSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -q "WARNING: ThreadSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -q "ERROR: LeakSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -q "WARNING: LeakSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -q " runtime error: " $(TEST_LOGS) /dev/null
	RET=0 ; \
	for i in $(SUBDIRS) ; do \
		make -C $$i showcheck || RET=1 ; \
	done ; \
	exit $$RET

showsuite:
	-cat $(TEST_SUITE_LOG) /dev/null
	@! grep -q "ERROR: AddressSanitizer: " $(TEST_SUITE_LOG) /dev/null
	@! grep -q "WARNING: AddressSanitizer: " $(TEST_SUITE_LOG) /dev/null
	@! grep -q "ERROR: ThreadSanitizer: " $(TEST_SUITE_LOG) /dev/null
	@! grep -q "WARNING: ThreadSanitizer: " $(TEST_SUITE_LOG) /dev/null
	@! grep -q "ERROR: LeakSanitizer: " $(TEST_SUITE_LOG) /dev/null
	@! grep -q "WARNING: LeakSanitizer: " $(TEST_SUITE_LOG) /dev/null
	@! grep -q " runtime error: " $(TEST_SUITE_LOG) /dev/null
	RET=0 ; \
	for i in $(SUBDIRS) ; do \
		make -C $$i showsuite || RET=1 ; \
	done ; \
	exit $$RET
#export STARPU_PERF_MODEL_DIR
#export STARPU_HOSTNAME
#export MALLOC_PERTURB_

#env:
#	@echo export STARPU_PERF_MODEL_DIR=$(STARPU_PERF_MODEL_DIR)
#	@echo export STARPU_HOSTNAME=$(STARPU_HOSTNAME)
#	@echo export MALLOC_PERTURB_=$(MALLOC_PERTURB_)
#export STARPU_SIMGRID
#export STARPU_QUICK_CHECK
#export STARPU_LONG_CHECK
#.cu.o:
#	@$(MKDIR_P) `dirname $@`
#	$(V_mynvcc)grep 'extern *"C" *void *' $< | sed -ne 's/extern *"C" *void *\([a-zA-Z0-9_]*\) *(.*/void \1(void) {}/p' | $(CC) -x c - -o $@ -c

.cu.cubin:
	$(V_nvcc) $(NVCC) -cubin $< -o $@ $(NVCCFLAGS)

.cu.o:
	$(V_nvcc) $(NVCC) $< -c -o $@ $(NVCCFLAGS)

# Fortran90 tests
# - list explicit dependences to control proper module files generation
# - the overriding rule fully disables the corresponing default rule, thus
#   the default rule body must be copied entirely
#starpu_mod.mod: starpu_mod.o

#starpu_mod.o: $(top_srcdir)/include/starpu_mod.f90
#	$(AM_V_FC)$(FC) $(fortran90_init_01_FCFLAGS) $(FCFLAGS) -c -o $@ '$(top_srcdir)/'include/starpu_mod.f90

#init_01.o: $(top_srcdir)/tests/fortran90/init_01.f90 starpu_mod.mod
#	$(AM_V_FC)$(FC) $(fortran90_init_01_FCFLAGS) $(FCFLAGS) -c -o $@ `test -f 'fortran90/init_01.f90' || echo '$(srcdir)/'`fortran90/init_01.f90

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
