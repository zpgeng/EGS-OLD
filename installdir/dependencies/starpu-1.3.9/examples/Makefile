# Makefile.in generated by automake 1.16.3 from Makefile.am.
# examples/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2020 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# StarPU --- Runtime system for heterogeneous multicore architectures.
#
# Copyright (C) 2016-2021  UniversitÃ© de Bordeaux, CNRS (LaBRI UMR 5800), Inria
#
# StarPU is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or (at
# your option) any later version.
#
# StarPU is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# See the GNU Lesser General Public License in COPYING.LGPL for more details.
#




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/starpu
pkgincludedir = $(includedir)/starpu
pkglibexecdir = $(libexecdir)/starpu
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
target_triplet = x86_64-pc-linux-gnu
am__append_1 = --compiler-options -fno-strict-aliasing  -I$(top_srcdir)/include/ -I$(top_builddir)/include/ $(HWLOC_CFLAGS)
examplebin_PROGRAMS = $(am__EXEEXT_14) filters/shadow$(EXEEXT) \
	filters/shadow2d$(EXEEXT) filters/shadow3d$(EXEEXT) \
	filters/custom_mf/custom_mf_filter$(EXEEXT) \
	mandelbrot/mandelbrot$(EXEEXT) \
	ppm_downscaler/ppm_downscaler$(EXEEXT) \
	ppm_downscaler/yuv_downscaler$(EXEEXT) $(am__EXEEXT_15) \
	$(am__EXEEXT_16)
TESTS = $(SHELL_TESTS) $(am__EXEEXT_14)
am__append_2 =  \
	scheduler/schedulers.sh \
	scheduler/schedulers_context.sh
am__append_3 = mult/sgemm.sh
check_PROGRAMS = $(am__EXEEXT_14)
noinst_PROGRAMS = $(am__EXEEXT_17)
am__append_4 = loader
am__append_5 = basic_examples/hello_world \
	basic_examples/topology \
	basic_examples/vector_scal \
	basic_examples/mult basic_examples/block \
	basic_examples/variable \
	basic_examples/multiformat \
	basic_examples/dynamic_handles \
	basic_examples/task_insert_color mlr/mlr \
	cpp/incrementer_cpp cpp/add_vectors \
	cpp/add_vectors_interface filters/fread \
	filters/fvector filters/fblock \
	filters/fmatrix filters/fmultiple_manual \
	filters/fmultiple_submit \
	filters/fmultiple_submit_readonly \
	filters/fmultiple_submit_implicit \
	filters/frecursive \
	tag_example/tag_example \
	tag_example/tag_example2 \
	tag_example/tag_example3 \
	tag_example/tag_example4 \
	tag_example/tag_restartable \
	spmd/vector_scal_spmd spmv/spmv \
	callback/callback callback/prologue \
	incrementer/incrementer binary/binary \
	interface/complex matvecmult/matvecmult \
	profiling/profiling \
	scheduler/heteroprio_test \
	sched_ctx/sched_ctx \
	sched_ctx/sched_ctx_empty \
	sched_ctx/sched_ctx_delete \
	sched_ctx/two_cpu_contexts \
	sched_ctx/dummy_sched_with_ctx \
	worker_collections/worker_tree_example \
	reductions/dot_product \
	reductions/minmax_reduction \
	dependency/task_end_dep \
	dependency/task_end_dep_add \
	dependency/sequential_consistency \
	scheduler/dummy_sched
am__append_6 = \
	cpp/add_vectors_cpp11

##am__append_7 = \
##	fortran/hello

#am__append_8 = \
#	basic_examples/vector_scal_fortran

#am__append_9 = \
#	fortran90/f90_example			\
#	native_fortran/nf_vector		\
#	native_fortran/nf_matrix		\
#	native_fortran/nf_example		\
#	native_fortran/nf_dynbuf		\
#	native_fortran/nf_varbuf		\
#	native_fortran/nf_sched_ctx		\
#	native_fortran/nf_partition

am__append_10 = \
	mult/sgemm 				\
	mult/dgemm

am__append_11 = \
	mult/sgemm 				\
	mult/dgemm				\
	lu/lu_example_float			\
	lu/lu_example_double			\
	lu/lu_implicit_example_float		\
	lu/lu_implicit_example_double		\
	cholesky/cholesky_tag			\
	cholesky/cholesky_tile_tag		\
	cholesky/cholesky_implicit		\
	cholesky/cholesky_compil

am__append_12 = \
	axpy/axpy				\
	cholesky/cholesky_grain_tag		\
	heat/heat				\
	cg/cg					\
	pipeline/pipeline

am__append_13 = \
	heat/heat.sh				\
	lu/lu.sh

#am__append_14 = \
#	 cholesky/cholesky.sh

#am__append_15 = \
#	lu/lu_example_complex_float		\
#	lu/lu_example_complex_double		\
#	lu/lu_implicit_example_complex_float	\
#	lu/lu_implicit_example_complex_double

##am__append_16 = \
##	spmv/dw_block_spmv

##am__append_17 = \
##	fortran/hello

#am__append_18 = \
#	basic_examples/vector_scal_fortran

#am__append_19 = \
#	openmp/vector_scal_omp			\
#	sched_ctx/sched_ctx_without_sched_policy\
#	sched_ctx/nested_sched_ctxs		\
#	sched_ctx/sched_ctx_without_sched_policy_awake\
#	sched_ctx/parallel_tasks_reuse_handle	\
#	sched_ctx/parallel_code

#am__append_20 = \
#	sched_ctx/parallel_tasks_with_cluster_api

am__append_21 = \
	sched_ctx/gpu_partition

#am__append_22 = \
#	basic_examples/vector_scal_cpu_icc.icc

am__append_23 = \
	basic_examples/vector_scal_cuda.cu

#am__append_24 = \
#	basic_examples/vector_scal_opencl.c

#am__append_25 = \
#	basic_examples/vector_scal_cuda.cu

am__append_26 = \
	basic_examples/multiformat_cuda.cu                               \
	basic_examples/multiformat_conversion_codelets_cuda.cu

#am__append_27 = \
#	basic_examples/multiformat_opencl.c                              \
#	basic_examples/multiformat_conversion_codelets_opencl.c

am__append_28 = \
	basic_examples/block_cuda.cu

#am__append_29 = \
#	basic_examples/block_opencl.c

am__append_30 = \
	basic_examples/variable_kernels.cu

#am__append_31 = \
#	basic_examples/variable_kernels_opencl.c

am__append_32 = \
	filters/fblock_cuda.cu

#am__append_33 = \
#	filters/fblock_opencl.c

am__append_34 = \
	filters/fmultiple_cuda.cu

am__append_35 = \
	filters/fmultiple_cuda.cu

am__append_36 = \
	filters/fmultiple_cuda.cu

am__append_37 = \
	filters/fmultiple_cuda.cu

am__append_38 = \
	filters/custom_mf/conversion.cu \
	filters/custom_mf/cuda.cu

#am__append_39 = \
#	filters/custom_mf/conversion_opencl.c \
#	filters/custom_mf/custom_opencl.c

#am__append_40 = \
#	axpy/axpy_opencl.c

#am__append_41 = \
#	axpy/axpy_opencl_kernel.cl

am__append_42 = \
	common/blas.c

am__append_43 = \
	common/blas.c

am__append_44 = \
	spmv/spmv_cuda.cu

am__append_45 = \
	incrementer/incrementer_kernels.cu

#am__append_46 = \
#	incrementer/incrementer_kernels_opencl.c

am__append_47 = \
	incrementer/incrementer_kernels.cu

#am__append_48 = \
#	incrementer/incrementer_kernels_opencl.c

#am__append_49 = \
#	incrementer/incrementer_kernels_opencl.c

am__append_50 = \
	interface/complex_kernels.cu

#am__append_51 = \
#	interface/complex_kernels_opencl.c

am__append_52 = \
	reductions/dot_product_kernels.cu

am__append_53 = $(X_CFLAGS)

######
# Pi #
######
am__append_54 = \
	pi/pi					\
	pi/pi_redux

am__append_55 = \
	pi/pi_kernel.cu				\
	pi/SobolQRNG/sobol_gpu.cu

am__append_56 = \
	pi/pi_redux_kernel.cu


###########################
# OpenGL interoperability #
###########################
#am__append_57 = \
#	gl_interop/gl_interop			\
#	gl_interop/gl_interop_idle

subdir = examples
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/acinclude.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/m4/ax_dlb_callback_arg.m4 \
	$(top_srcdir)/m4/libs.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(noinst_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/common/config.h \
	$(top_builddir)/src/common/config-src-build.h \
	$(top_builddir)/include/starpu_config.h \
	$(top_builddir)/starpurm/include/starpurm_config.h
CONFIG_CLEAN_FILES = loader-cross.sh
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 =  \
	basic_examples/hello_world$(EXEEXT) \
	basic_examples/topology$(EXEEXT) \
	basic_examples/vector_scal$(EXEEXT) \
	basic_examples/mult$(EXEEXT) \
	basic_examples/block$(EXEEXT) \
	basic_examples/variable$(EXEEXT) \
	basic_examples/multiformat$(EXEEXT) \
	basic_examples/dynamic_handles$(EXEEXT) \
	basic_examples/task_insert_color$(EXEEXT) \
	mlr/mlr$(EXEEXT) \
	cpp/incrementer_cpp$(EXEEXT) \
	cpp/add_vectors$(EXEEXT) \
	cpp/add_vectors_interface$(EXEEXT) \
	filters/fread$(EXEEXT) \
	filters/fvector$(EXEEXT) \
	filters/fblock$(EXEEXT) \
	filters/fmatrix$(EXEEXT) \
	filters/fmultiple_manual$(EXEEXT) \
	filters/fmultiple_submit$(EXEEXT) \
	filters/fmultiple_submit_readonly$(EXEEXT) \
	filters/fmultiple_submit_implicit$(EXEEXT) \
	filters/frecursive$(EXEEXT) \
	tag_example/tag_example$(EXEEXT) \
	tag_example/tag_example2$(EXEEXT) \
	tag_example/tag_example3$(EXEEXT) \
	tag_example/tag_example4$(EXEEXT) \
	tag_example/tag_restartable$(EXEEXT) \
	spmd/vector_scal_spmd$(EXEEXT) \
	spmv/spmv$(EXEEXT) \
	callback/callback$(EXEEXT) \
	callback/prologue$(EXEEXT) \
	incrementer/incrementer$(EXEEXT) \
	binary/binary$(EXEEXT) \
	interface/complex$(EXEEXT) \
	matvecmult/matvecmult$(EXEEXT) \
	profiling/profiling$(EXEEXT) \
	scheduler/heteroprio_test$(EXEEXT) \
	sched_ctx/sched_ctx$(EXEEXT) \
	sched_ctx/sched_ctx_empty$(EXEEXT) \
	sched_ctx/sched_ctx_delete$(EXEEXT) \
	sched_ctx/two_cpu_contexts$(EXEEXT) \
	sched_ctx/dummy_sched_with_ctx$(EXEEXT) \
	worker_collections/worker_tree_example$(EXEEXT) \
	reductions/dot_product$(EXEEXT) \
	reductions/minmax_reduction$(EXEEXT) \
	dependency/task_end_dep$(EXEEXT) \
	dependency/task_end_dep_add$(EXEEXT) \
	dependency/sequential_consistency$(EXEEXT) \
	scheduler/dummy_sched$(EXEEXT)
am__EXEEXT_2 = cpp/add_vectors_cpp11$(EXEEXT)
##am__EXEEXT_3 = fortran/hello$(EXEEXT)
#am__EXEEXT_4 = basic_examples/vector_scal_fortran$(EXEEXT)
#am__EXEEXT_5 = fortran90/f90_example$(EXEEXT) \
#	native_fortran/nf_vector$(EXEEXT) \
#	native_fortran/nf_matrix$(EXEEXT) \
#	native_fortran/nf_example$(EXEEXT) \
#	native_fortran/nf_dynbuf$(EXEEXT) \
#	native_fortran/nf_varbuf$(EXEEXT) \
#	native_fortran/nf_sched_ctx$(EXEEXT) \
#	native_fortran/nf_partition$(EXEEXT)
am__EXEEXT_6 = mult/sgemm$(EXEEXT) \
	mult/dgemm$(EXEEXT)
am__EXEEXT_7 = mult/sgemm$(EXEEXT) \
	mult/dgemm$(EXEEXT) \
	lu/lu_example_float$(EXEEXT) \
	lu/lu_example_double$(EXEEXT) \
	lu/lu_implicit_example_float$(EXEEXT) \
	lu/lu_implicit_example_double$(EXEEXT) \
	cholesky/cholesky_tag$(EXEEXT) \
	cholesky/cholesky_tile_tag$(EXEEXT) \
	cholesky/cholesky_implicit$(EXEEXT) \
	cholesky/cholesky_compil$(EXEEXT)
am__EXEEXT_8 = axpy/axpy$(EXEEXT) \
	cholesky/cholesky_grain_tag$(EXEEXT) \
	heat/heat$(EXEEXT) \
	cg/cg$(EXEEXT) \
	pipeline/pipeline$(EXEEXT)
#am__EXEEXT_9 = lu/lu_example_complex_float$(EXEEXT) \
#	lu/lu_example_complex_double$(EXEEXT) \
#	lu/lu_implicit_example_complex_float$(EXEEXT) \
#	lu/lu_implicit_example_complex_double$(EXEEXT)
##am__EXEEXT_10 = spmv/dw_block_spmv$(EXEEXT)
#am__EXEEXT_11 = openmp/vector_scal_omp$(EXEEXT) \
#	sched_ctx/sched_ctx_without_sched_policy$(EXEEXT) \
#	sched_ctx/nested_sched_ctxs$(EXEEXT) \
#	sched_ctx/sched_ctx_without_sched_policy_awake$(EXEEXT) \
#	sched_ctx/parallel_tasks_reuse_handle$(EXEEXT) \
#	sched_ctx/parallel_code$(EXEEXT)
#am__EXEEXT_12 = sched_ctx/parallel_tasks_with_cluster_api$(EXEEXT)
am__EXEEXT_13 =  \
	sched_ctx/gpu_partition$(EXEEXT)
am__EXEEXT_14 = sched_ctx/prio$(EXEEXT) scheduler/dummy_sched$(EXEEXT) \
	scheduler/dummy_modular_sched$(EXEEXT) \
	worker_collections/worker_list_example$(EXEEXT) \
	api/bcsr_data_interface$(EXEEXT) \
	api/block_data_interface$(EXEEXT) \
	api/coo_data_interface$(EXEEXT) \
	api/csr_data_interface$(EXEEXT) \
	api/matrix_data_interface$(EXEEXT) \
	api/multiformat_data_interface$(EXEEXT) \
	api/variable_data_interface$(EXEEXT) \
	api/vector_data_interface$(EXEEXT) \
	api/void_data_interface$(EXEEXT) $(am__EXEEXT_1) \
	$(am__EXEEXT_2) $(am__EXEEXT_3) $(am__EXEEXT_4) \
	$(am__EXEEXT_5) $(am__EXEEXT_6) $(am__EXEEXT_7) \
	$(am__EXEEXT_8) $(am__EXEEXT_9) $(am__EXEEXT_10) \
	$(am__EXEEXT_3) $(am__EXEEXT_4) $(am__EXEEXT_11) \
	$(am__EXEEXT_12) $(am__EXEEXT_13)
am__EXEEXT_15 = pi/pi$(EXEEXT) \
	pi/pi_redux$(EXEEXT)
#am__EXEEXT_16 =  \
#	gl_interop/gl_interop$(EXEEXT) \
#	gl_interop/gl_interop_idle$(EXEEXT)
am__installdirs = "$(DESTDIR)$(examplebindir)" \
	"$(DESTDIR)$(STARPU_OPENCL_DATAdir)"
am__EXEEXT_17 = loader$(EXEEXT)
PROGRAMS = $(examplebin_PROGRAMS) $(noinst_PROGRAMS)
api_bcsr_data_interface_SOURCES = api/bcsr_data_interface.c
api_bcsr_data_interface_OBJECTS = bcsr_data_interface.$(OBJEXT)
api_bcsr_data_interface_LDADD = $(LDADD)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am__dirstamp = $(am__leading_dot)dirstamp
api_block_data_interface_SOURCES = api/block_data_interface.c
api_block_data_interface_OBJECTS = block_data_interface.$(OBJEXT)
api_block_data_interface_LDADD = $(LDADD)
api_coo_data_interface_SOURCES = api/coo_data_interface.c
api_coo_data_interface_OBJECTS = coo_data_interface.$(OBJEXT)
api_coo_data_interface_LDADD = $(LDADD)
api_csr_data_interface_SOURCES = api/csr_data_interface.c
api_csr_data_interface_OBJECTS = csr_data_interface.$(OBJEXT)
api_csr_data_interface_LDADD = $(LDADD)
api_matrix_data_interface_SOURCES = api/matrix_data_interface.c
api_matrix_data_interface_OBJECTS = matrix_data_interface.$(OBJEXT)
api_matrix_data_interface_LDADD = $(LDADD)
api_multiformat_data_interface_SOURCES =  \
	api/multiformat_data_interface.c
api_multiformat_data_interface_OBJECTS =  \
	multiformat_data_interface.$(OBJEXT)
api_multiformat_data_interface_LDADD = $(LDADD)
api_variable_data_interface_SOURCES = api/variable_data_interface.c
api_variable_data_interface_OBJECTS =  \
	variable_data_interface.$(OBJEXT)
api_variable_data_interface_LDADD = $(LDADD)
api_vector_data_interface_SOURCES = api/vector_data_interface.c
api_vector_data_interface_OBJECTS = vector_data_interface.$(OBJEXT)
api_vector_data_interface_LDADD = $(LDADD)
api_void_data_interface_SOURCES = api/void_data_interface.c
api_void_data_interface_OBJECTS = void_data_interface.$(OBJEXT)
api_void_data_interface_LDADD = $(LDADD)
am__axpy_axpy_SOURCES_DIST = axpy/axpy.c common/blas.c \
	axpy/axpy_opencl.c
#am__objects_1 = axpy_opencl.$(OBJEXT)
am_axpy_axpy_OBJECTS = axpy.$(OBJEXT) \
	blas.$(OBJEXT) $(am__objects_1)
axpy_axpy_OBJECTS = $(am_axpy_axpy_OBJECTS)
am__DEPENDENCIES_1 =
axpy_axpy_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1)
am__basic_examples_block_SOURCES_DIST = basic_examples/block.c \
	basic_examples/block_cpu.c basic_examples/block_cuda.cu \
	basic_examples/block_opencl.c
am__objects_2 =  \
	basic_examples/block_cuda.$(OBJEXT)
#am__objects_3 = block_opencl.$(OBJEXT)
am_basic_examples_block_OBJECTS = block.$(OBJEXT) block_cpu.$(OBJEXT) \
	$(am__objects_2) $(am__objects_3)
basic_examples_block_OBJECTS = $(am_basic_examples_block_OBJECTS)
basic_examples_block_LDADD = $(LDADD)
basic_examples_dynamic_handles_SOURCES =  \
	basic_examples/dynamic_handles.c
basic_examples_dynamic_handles_OBJECTS = dynamic_handles.$(OBJEXT)
basic_examples_dynamic_handles_LDADD = $(LDADD)
basic_examples_hello_world_SOURCES = basic_examples/hello_world.c
basic_examples_hello_world_OBJECTS = hello_world.$(OBJEXT)
basic_examples_hello_world_LDADD = $(LDADD)
basic_examples_mult_SOURCES = basic_examples/mult.c
basic_examples_mult_OBJECTS = mult.$(OBJEXT)
basic_examples_mult_LDADD = $(LDADD)
am__basic_examples_multiformat_SOURCES_DIST =  \
	basic_examples/multiformat.c \
	basic_examples/multiformat_conversion_codelets.c \
	basic_examples/multiformat_cuda.cu \
	basic_examples/multiformat_conversion_codelets_cuda.cu \
	basic_examples/multiformat_opencl.c \
	basic_examples/multiformat_conversion_codelets_opencl.c
am__objects_4 = basic_examples/multiformat_cuda.$(OBJEXT) \
	basic_examples/multiformat_conversion_codelets_cuda.$(OBJEXT)
#am__objects_5 = multiformat_opencl.$(OBJEXT) \
#	multiformat_conversion_codelets_opencl.$(OBJEXT)
am_basic_examples_multiformat_OBJECTS = multiformat.$(OBJEXT) \
	multiformat_conversion_codelets.$(OBJEXT) $(am__objects_4) \
	$(am__objects_5)
basic_examples_multiformat_OBJECTS =  \
	$(am_basic_examples_multiformat_OBJECTS)
basic_examples_multiformat_LDADD = $(LDADD)
basic_examples_task_insert_color_SOURCES =  \
	basic_examples/task_insert_color.c
basic_examples_task_insert_color_OBJECTS =  \
	task_insert_color.$(OBJEXT)
basic_examples_task_insert_color_LDADD = $(LDADD)
basic_examples_topology_SOURCES = basic_examples/topology.c
basic_examples_topology_OBJECTS = topology.$(OBJEXT)
basic_examples_topology_LDADD = $(LDADD)
am__basic_examples_variable_SOURCES_DIST = basic_examples/variable.c \
	basic_examples/variable_kernels_cpu.c \
	basic_examples/variable_kernels.cu \
	basic_examples/variable_kernels_opencl.c
am__objects_6 = basic_examples/variable_kernels.$(OBJEXT)
#am__objects_7 =  \
#	variable_kernels_opencl.$(OBJEXT)
am_basic_examples_variable_OBJECTS = variable.$(OBJEXT) \
	variable_kernels_cpu.$(OBJEXT) $(am__objects_6) \
	$(am__objects_7)
basic_examples_variable_OBJECTS =  \
	$(am_basic_examples_variable_OBJECTS)
basic_examples_variable_LDADD = $(LDADD)
am__basic_examples_vector_scal_SOURCES_DIST =  \
	basic_examples/vector_scal.c basic_examples/vector_scal_cpu.c \
	basic_examples/vector_scal_cpu_icc.icc \
	basic_examples/vector_scal_cuda.cu \
	basic_examples/vector_scal_opencl.c
#am__objects_8 = basic_examples/vector_scal_cpu_icc.$(OBJEXT)
am__objects_9 = basic_examples/vector_scal_cuda.$(OBJEXT)
#am__objects_10 = vector_scal_opencl.$(OBJEXT)
am_basic_examples_vector_scal_OBJECTS = vector_scal.$(OBJEXT) \
	vector_scal_cpu.$(OBJEXT) $(am__objects_8) $(am__objects_9) \
	$(am__objects_10)
basic_examples_vector_scal_OBJECTS =  \
	$(am_basic_examples_vector_scal_OBJECTS)
basic_examples_vector_scal_LDADD = $(LDADD)
am__basic_examples_vector_scal_fortran_SOURCES_DIST =  \
	basic_examples/vector_scal_fortran.F \
	basic_examples/vector_scal_c.c \
	basic_examples/vector_scal_cpu.c \
	basic_examples/vector_scal_cuda.cu
#am__objects_11 = basic_examples/vector_scal_cuda.$(OBJEXT)
#am_basic_examples_vector_scal_fortran_OBJECTS =  \
#	vector_scal_fortran.$(OBJEXT) \
#	vector_scal_c.$(OBJEXT) \
#	vector_scal_cpu.$(OBJEXT) \
#	$(am__objects_11)
basic_examples_vector_scal_fortran_OBJECTS =  \
	$(am_basic_examples_vector_scal_fortran_OBJECTS)
#basic_examples_vector_scal_fortran_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__binary_binary_SOURCES_DIST = binary/binary.c \
	incrementer/incrementer_kernels_opencl.c
#am__objects_12 =  \
#	incrementer_kernels_opencl.$(OBJEXT)
am_binary_binary_OBJECTS = binary.$(OBJEXT) $(am__objects_12)
binary_binary_OBJECTS = $(am_binary_binary_OBJECTS)
binary_binary_LDADD = $(LDADD)
callback_callback_SOURCES = callback/callback.c
callback_callback_OBJECTS = callback.$(OBJEXT)
callback_callback_LDADD = $(LDADD)
callback_prologue_SOURCES = callback/prologue.c
callback_prologue_OBJECTS = prologue.$(OBJEXT)
callback_prologue_LDADD = $(LDADD)
am__cg_cg_SOURCES_DIST = cg/cg.c cg/cg_kernels.c common/blas.c
am_cg_cg_OBJECTS = cg.$(OBJEXT) \
	cg_kernels.$(OBJEXT) blas.$(OBJEXT)
cg_cg_OBJECTS = $(am_cg_cg_OBJECTS)
cg_cg_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__cholesky_cholesky_compil_SOURCES_DIST =  \
	cholesky/cholesky_compil.c cholesky/cholesky_models.c \
	cholesky/cholesky_kernels.c sched_ctx_utils/sched_ctx_utils.c \
	common/blas.c
am_cholesky_cholesky_compil_OBJECTS =  \
	cholesky_compil.$(OBJEXT) \
	cholesky_models.$(OBJEXT) \
	cholesky_kernels.$(OBJEXT) \
	sched_ctx_utils.$(OBJEXT) \
	blas.$(OBJEXT)
cholesky_cholesky_compil_OBJECTS =  \
	$(am_cholesky_cholesky_compil_OBJECTS)
cholesky_cholesky_compil_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1)
am__cholesky_cholesky_grain_tag_SOURCES_DIST =  \
	cholesky/cholesky_grain_tag.c cholesky/cholesky_models.c \
	cholesky/cholesky_kernels.c common/blas.c
am_cholesky_cholesky_grain_tag_OBJECTS =  \
	cholesky_grain_tag.$(OBJEXT) \
	cholesky_models.$(OBJEXT) \
	cholesky_kernels.$(OBJEXT) \
	blas.$(OBJEXT)
cholesky_cholesky_grain_tag_OBJECTS =  \
	$(am_cholesky_cholesky_grain_tag_OBJECTS)
cholesky_cholesky_grain_tag_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1)
am__cholesky_cholesky_implicit_SOURCES_DIST =  \
	cholesky/cholesky_implicit.c cholesky/cholesky_models.c \
	cholesky/cholesky_kernels.c sched_ctx_utils/sched_ctx_utils.c \
	common/blas.c
am_cholesky_cholesky_implicit_OBJECTS =  \
	cholesky_implicit.$(OBJEXT) \
	cholesky_models.$(OBJEXT) \
	cholesky_kernels.$(OBJEXT) \
	sched_ctx_utils.$(OBJEXT) \
	blas.$(OBJEXT)
cholesky_cholesky_implicit_OBJECTS =  \
	$(am_cholesky_cholesky_implicit_OBJECTS)
cholesky_cholesky_implicit_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1)
am__cholesky_cholesky_tag_SOURCES_DIST = cholesky/cholesky_tag.c \
	cholesky/cholesky_models.c cholesky/cholesky_kernels.c \
	common/blas.c
am_cholesky_cholesky_tag_OBJECTS =  \
	cholesky_tag.$(OBJEXT) \
	cholesky_models.$(OBJEXT) \
	cholesky_kernels.$(OBJEXT) \
	blas.$(OBJEXT)
cholesky_cholesky_tag_OBJECTS = $(am_cholesky_cholesky_tag_OBJECTS)
cholesky_cholesky_tag_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1)
am__cholesky_cholesky_tile_tag_SOURCES_DIST =  \
	cholesky/cholesky_tile_tag.c cholesky/cholesky_models.c \
	cholesky/cholesky_kernels.c common/blas.c
am_cholesky_cholesky_tile_tag_OBJECTS =  \
	cholesky_tile_tag.$(OBJEXT) \
	cholesky_models.$(OBJEXT) \
	cholesky_kernels.$(OBJEXT) \
	blas.$(OBJEXT)
cholesky_cholesky_tile_tag_OBJECTS =  \
	$(am_cholesky_cholesky_tile_tag_OBJECTS)
cholesky_cholesky_tile_tag_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1)
am_cpp_add_vectors_OBJECTS = add_vectors.$(OBJEXT)
cpp_add_vectors_OBJECTS = $(am_cpp_add_vectors_OBJECTS)
cpp_add_vectors_LDADD = $(LDADD)
am__cpp_add_vectors_cpp11_SOURCES_DIST = cpp/add_vectors_cpp11.cpp
am_cpp_add_vectors_cpp11_OBJECTS =  \
	add_vectors_cpp11.$(OBJEXT)
cpp_add_vectors_cpp11_OBJECTS = $(am_cpp_add_vectors_cpp11_OBJECTS)
cpp_add_vectors_cpp11_LDADD = $(LDADD)
am_cpp_add_vectors_interface_OBJECTS =  \
	add_vectors_interface.$(OBJEXT)
cpp_add_vectors_interface_OBJECTS =  \
	$(am_cpp_add_vectors_interface_OBJECTS)
cpp_add_vectors_interface_LDADD = $(LDADD)
am__cpp_incrementer_cpp_SOURCES_DIST = cpp/incrementer_cpp.cpp \
	incrementer/incrementer_kernels.cu \
	incrementer/incrementer_kernels_opencl.c
am__objects_13 = incrementer/incrementer_kernels.$(OBJEXT)
am_cpp_incrementer_cpp_OBJECTS = incrementer_cpp.$(OBJEXT) \
	$(am__objects_13) $(am__objects_12)
cpp_incrementer_cpp_OBJECTS = $(am_cpp_incrementer_cpp_OBJECTS)
cpp_incrementer_cpp_LDADD = $(LDADD)
dependency_sequential_consistency_SOURCES =  \
	dependency/sequential_consistency.c
dependency_sequential_consistency_OBJECTS =  \
	sequential_consistency.$(OBJEXT)
dependency_sequential_consistency_LDADD = $(LDADD)
dependency_task_end_dep_SOURCES = dependency/task_end_dep.c
dependency_task_end_dep_OBJECTS = task_end_dep.$(OBJEXT)
dependency_task_end_dep_LDADD = $(LDADD)
dependency_task_end_dep_add_SOURCES = dependency/task_end_dep_add.c
dependency_task_end_dep_add_OBJECTS = task_end_dep_add.$(OBJEXT)
dependency_task_end_dep_add_LDADD = $(LDADD)
am__filters_custom_mf_custom_mf_filter_SOURCES_DIST =  \
	filters/custom_mf/custom_mf_filter.c \
	filters/custom_mf/custom_interface.c \
	filters/custom_mf/custom_conversion_codelets.c \
	filters/custom_mf/conversion.cu filters/custom_mf/cuda.cu \
	filters/custom_mf/conversion_opencl.c \
	filters/custom_mf/custom_opencl.c
am__objects_14 =  \
	filters/custom_mf/conversion.$(OBJEXT) \
	filters/custom_mf/cuda.$(OBJEXT)
#am__objects_15 = conversion_opencl.$(OBJEXT) \
#	custom_opencl.$(OBJEXT)
am_filters_custom_mf_custom_mf_filter_OBJECTS =  \
	custom_mf_filter.$(OBJEXT) custom_interface.$(OBJEXT) \
	custom_conversion_codelets.$(OBJEXT) $(am__objects_14) \
	$(am__objects_15)
filters_custom_mf_custom_mf_filter_OBJECTS =  \
	$(am_filters_custom_mf_custom_mf_filter_OBJECTS)
filters_custom_mf_custom_mf_filter_LDADD = $(LDADD)
am__filters_fblock_SOURCES_DIST = filters/fblock.c \
	filters/fblock_cpu.c filters/fblock_cuda.cu \
	filters/fblock_opencl.c
am__objects_16 = filters/fblock_cuda.$(OBJEXT)
#am__objects_17 = fblock_opencl.$(OBJEXT)
am_filters_fblock_OBJECTS = fblock.$(OBJEXT) fblock_cpu.$(OBJEXT) \
	$(am__objects_16) $(am__objects_17)
filters_fblock_OBJECTS = $(am_filters_fblock_OBJECTS)
filters_fblock_LDADD = $(LDADD)
filters_fmatrix_SOURCES = filters/fmatrix.c
filters_fmatrix_OBJECTS = fmatrix.$(OBJEXT)
filters_fmatrix_LDADD = $(LDADD)
am__filters_fmultiple_manual_SOURCES_DIST =  \
	filters/fmultiple_manual.c filters/fmultiple_cuda.cu
am__objects_18 =  \
	filters/fmultiple_cuda.$(OBJEXT)
am_filters_fmultiple_manual_OBJECTS = fmultiple_manual.$(OBJEXT) \
	$(am__objects_18)
filters_fmultiple_manual_OBJECTS =  \
	$(am_filters_fmultiple_manual_OBJECTS)
filters_fmultiple_manual_LDADD = $(LDADD)
am__filters_fmultiple_submit_SOURCES_DIST =  \
	filters/fmultiple_submit.c filters/fmultiple_cuda.cu
am_filters_fmultiple_submit_OBJECTS = fmultiple_submit.$(OBJEXT) \
	$(am__objects_18)
filters_fmultiple_submit_OBJECTS =  \
	$(am_filters_fmultiple_submit_OBJECTS)
filters_fmultiple_submit_LDADD = $(LDADD)
am__filters_fmultiple_submit_implicit_SOURCES_DIST =  \
	filters/fmultiple_submit_implicit.c filters/fmultiple_cuda.cu
am_filters_fmultiple_submit_implicit_OBJECTS =  \
	fmultiple_submit_implicit.$(OBJEXT) $(am__objects_18)
filters_fmultiple_submit_implicit_OBJECTS =  \
	$(am_filters_fmultiple_submit_implicit_OBJECTS)
filters_fmultiple_submit_implicit_LDADD = $(LDADD)
am__filters_fmultiple_submit_readonly_SOURCES_DIST =  \
	filters/fmultiple_submit_readonly.c filters/fmultiple_cuda.cu
am_filters_fmultiple_submit_readonly_OBJECTS =  \
	fmultiple_submit_readonly.$(OBJEXT) $(am__objects_18)
filters_fmultiple_submit_readonly_OBJECTS =  \
	$(am_filters_fmultiple_submit_readonly_OBJECTS)
filters_fmultiple_submit_readonly_LDADD = $(LDADD)
filters_fread_SOURCES = filters/fread.c
filters_fread_OBJECTS = fread.$(OBJEXT)
filters_fread_LDADD = $(LDADD)
filters_frecursive_SOURCES = filters/frecursive.c
filters_frecursive_OBJECTS = frecursive.$(OBJEXT)
filters_frecursive_LDADD = $(LDADD)
filters_fvector_SOURCES = filters/fvector.c
filters_fvector_OBJECTS = fvector.$(OBJEXT)
filters_fvector_LDADD = $(LDADD)
filters_shadow_SOURCES = filters/shadow.c
filters_shadow_OBJECTS = shadow.$(OBJEXT)
filters_shadow_LDADD = $(LDADD)
filters_shadow2d_SOURCES = filters/shadow2d.c
filters_shadow2d_OBJECTS = shadow2d.$(OBJEXT)
filters_shadow2d_LDADD = $(LDADD)
filters_shadow3d_SOURCES = filters/shadow3d.c
filters_shadow3d_OBJECTS = shadow3d.$(OBJEXT)
filters_shadow3d_LDADD = $(LDADD)
am__fortran_hello_SOURCES_DIST = fortran/hello_c.c fortran/hello.F \
	fortran/StarPU_fortran.h
##am_fortran_hello_OBJECTS = hello_c.$(OBJEXT) \
##	hello.$(OBJEXT)
fortran_hello_OBJECTS = $(am_fortran_hello_OBJECTS)
fortran_hello_LDADD = $(LDADD)
am__fortran90_f90_example_SOURCES_DIST = fortran90/mod_types.f90 \
	$(top_srcdir)/include/starpu_mod.f90 \
	fortran90/mod_interface.f90 fortran90/mod_compute.f90 \
	fortran90/marshalling.c fortran90/f90_example.f90
#am_fortran90_f90_example_OBJECTS =  \
#	mod_types.$(OBJEXT) starpu_mod.$(OBJEXT) \
#	mod_interface.$(OBJEXT) \
#	mod_compute.$(OBJEXT) \
#	marshalling.$(OBJEXT) \
#	f90_example.$(OBJEXT)
fortran90_f90_example_OBJECTS = $(am_fortran90_f90_example_OBJECTS)
fortran90_f90_example_LDADD = $(LDADD)
am__gl_interop_gl_interop_SOURCES_DIST = gl_interop/gl_interop.c
#am_gl_interop_gl_interop_OBJECTS =  \
#	gl_interop.$(OBJEXT)
gl_interop_gl_interop_OBJECTS = $(am_gl_interop_gl_interop_OBJECTS)
#gl_interop_gl_interop_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__gl_interop_gl_interop_idle_SOURCES_DIST =  \
	gl_interop/gl_interop_idle.c
#am_gl_interop_gl_interop_idle_OBJECTS =  \
#	gl_interop_idle.$(OBJEXT)
gl_interop_gl_interop_idle_OBJECTS =  \
	$(am_gl_interop_gl_interop_idle_OBJECTS)
#gl_interop_gl_interop_idle_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__heat_heat_SOURCES_DIST = heat/heat.c heat/dw_factolu.c \
	heat/dw_factolu_tag.c heat/dw_factolu_grain.c \
	heat/dw_sparse_cg.c heat/heat_display.c \
	heat/lu_kernels_model.c heat/dw_sparse_cg_kernels.c \
	heat/dw_factolu_kernels.c common/blas.c
am_heat_heat_OBJECTS = heat.$(OBJEXT) \
	dw_factolu.$(OBJEXT) \
	dw_factolu_tag.$(OBJEXT) \
	dw_factolu_grain.$(OBJEXT) \
	dw_sparse_cg.$(OBJEXT) \
	heat_display.$(OBJEXT) \
	lu_kernels_model.$(OBJEXT) \
	dw_sparse_cg_kernels.$(OBJEXT) \
	dw_factolu_kernels.$(OBJEXT) \
	blas.$(OBJEXT)
heat_heat_OBJECTS = $(am_heat_heat_OBJECTS)
heat_heat_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__incrementer_incrementer_SOURCES_DIST = incrementer/incrementer.c \
	incrementer/incrementer_kernels.cu \
	incrementer/incrementer_kernels_opencl.c
am_incrementer_incrementer_OBJECTS = incrementer.$(OBJEXT) \
	$(am__objects_13) $(am__objects_12)
incrementer_incrementer_OBJECTS =  \
	$(am_incrementer_incrementer_OBJECTS)
incrementer_incrementer_LDADD = $(LDADD)
am__interface_complex_SOURCES_DIST = interface/complex.c \
	interface/complex_interface.c interface/complex_filters.c \
	interface/complex_kernels.cu \
	interface/complex_kernels_opencl.c
am__objects_19 =  \
	interface/complex_kernels.$(OBJEXT)
#am__objects_20 =  \
#	complex_kernels_opencl.$(OBJEXT)
am_interface_complex_OBJECTS = complex.$(OBJEXT) \
	complex_interface.$(OBJEXT) complex_filters.$(OBJEXT) \
	$(am__objects_19) $(am__objects_20)
interface_complex_OBJECTS = $(am_interface_complex_OBJECTS)
interface_complex_LDADD = $(LDADD)
am__loader_SOURCES_DIST = ../tests/loader.c
am_loader_OBJECTS = loader-loader.$(OBJEXT)
loader_OBJECTS = $(am_loader_OBJECTS)
loader_LDADD = $(LDADD)
am__lu_lu_example_complex_double_SOURCES_DIST =  \
	lu/lu_example_complex_double.c lu/zlu.c lu/zlu_pivot.c \
	lu/zlu_kernels.c lu/blas_complex.c common/blas.c
#am_lu_lu_example_complex_double_OBJECTS = lu_example_complex_double.$(OBJEXT) \
#	zlu.$(OBJEXT) \
#	zlu_pivot.$(OBJEXT) \
#	zlu_kernels.$(OBJEXT) \
#	blas_complex.$(OBJEXT) \
#	blas.$(OBJEXT)
lu_lu_example_complex_double_OBJECTS =  \
	$(am_lu_lu_example_complex_double_OBJECTS)
#lu_lu_example_complex_double_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__lu_lu_example_complex_float_SOURCES_DIST =  \
	lu/lu_example_complex_float.c lu/clu.c lu/clu_pivot.c \
	lu/clu_kernels.c lu/blas_complex.c common/blas.c
#am_lu_lu_example_complex_float_OBJECTS = lu_example_complex_float.$(OBJEXT) \
#	clu.$(OBJEXT) \
#	clu_pivot.$(OBJEXT) \
#	clu_kernels.$(OBJEXT) \
#	blas_complex.$(OBJEXT) \
#	blas.$(OBJEXT)
lu_lu_example_complex_float_OBJECTS =  \
	$(am_lu_lu_example_complex_float_OBJECTS)
#lu_lu_example_complex_float_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__lu_lu_example_double_SOURCES_DIST = lu/lu_example_double.c \
	lu/dlu.c lu/dlu_pivot.c lu/dlu_kernels.c common/blas.c
am_lu_lu_example_double_OBJECTS =  \
	lu_example_double.$(OBJEXT) \
	dlu.$(OBJEXT) dlu_pivot.$(OBJEXT) \
	dlu_kernels.$(OBJEXT) blas.$(OBJEXT)
lu_lu_example_double_OBJECTS = $(am_lu_lu_example_double_OBJECTS)
lu_lu_example_double_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1)
am__lu_lu_example_float_SOURCES_DIST = lu/lu_example_float.c lu/slu.c \
	lu/slu_pivot.c lu/slu_kernels.c common/blas.c
am_lu_lu_example_float_OBJECTS =  \
	lu_example_float.$(OBJEXT) \
	slu.$(OBJEXT) slu_pivot.$(OBJEXT) \
	slu_kernels.$(OBJEXT) blas.$(OBJEXT)
lu_lu_example_float_OBJECTS = $(am_lu_lu_example_float_OBJECTS)
lu_lu_example_float_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1)
am__lu_lu_implicit_example_complex_double_SOURCES_DIST =  \
	lu/lu_example_complex_double.c lu/zlu_implicit.c \
	lu/zlu_implicit_pivot.c lu/zlu_kernels.c lu/blas_complex.c \
	common/blas.c
#am_lu_lu_implicit_example_complex_double_OBJECTS = lu_example_complex_double.$(OBJEXT) \
#	zlu_implicit.$(OBJEXT) \
#	zlu_implicit_pivot.$(OBJEXT) \
#	zlu_kernels.$(OBJEXT) \
#	blas_complex.$(OBJEXT) \
#	blas.$(OBJEXT)
lu_lu_implicit_example_complex_double_OBJECTS =  \
	$(am_lu_lu_implicit_example_complex_double_OBJECTS)
#lu_lu_implicit_example_complex_double_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__lu_lu_implicit_example_complex_float_SOURCES_DIST =  \
	lu/lu_example_complex_float.c lu/clu_implicit.c \
	lu/clu_implicit_pivot.c lu/clu_kernels.c lu/blas_complex.c \
	common/blas.c
#am_lu_lu_implicit_example_complex_float_OBJECTS = lu_example_complex_float.$(OBJEXT) \
#	clu_implicit.$(OBJEXT) \
#	clu_implicit_pivot.$(OBJEXT) \
#	clu_kernels.$(OBJEXT) \
#	blas_complex.$(OBJEXT) \
#	blas.$(OBJEXT)
lu_lu_implicit_example_complex_float_OBJECTS =  \
	$(am_lu_lu_implicit_example_complex_float_OBJECTS)
#lu_lu_implicit_example_complex_float_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__lu_lu_implicit_example_double_SOURCES_DIST =  \
	lu/lu_example_double.c lu/dlu_implicit.c \
	lu/dlu_implicit_pivot.c lu/dlu_kernels.c common/blas.c
am_lu_lu_implicit_example_double_OBJECTS =  \
	lu_example_double.$(OBJEXT) \
	dlu_implicit.$(OBJEXT) \
	dlu_implicit_pivot.$(OBJEXT) \
	dlu_kernels.$(OBJEXT) blas.$(OBJEXT)
lu_lu_implicit_example_double_OBJECTS =  \
	$(am_lu_lu_implicit_example_double_OBJECTS)
lu_lu_implicit_example_double_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1)
am__lu_lu_implicit_example_float_SOURCES_DIST = lu/lu_example_float.c \
	lu/slu_implicit.c lu/slu_implicit_pivot.c lu/slu_kernels.c \
	common/blas.c
am_lu_lu_implicit_example_float_OBJECTS =  \
	lu_example_float.$(OBJEXT) \
	slu_implicit.$(OBJEXT) \
	slu_implicit_pivot.$(OBJEXT) \
	slu_kernels.$(OBJEXT) blas.$(OBJEXT)
lu_lu_implicit_example_float_OBJECTS =  \
	$(am_lu_lu_implicit_example_float_OBJECTS)
lu_lu_implicit_example_float_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1)
mandelbrot_mandelbrot_SOURCES = mandelbrot/mandelbrot.c
mandelbrot_mandelbrot_OBJECTS =  \
	mandelbrot_mandelbrot-mandelbrot.$(OBJEXT)
mandelbrot_mandelbrot_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
matvecmult_matvecmult_SOURCES = matvecmult/matvecmult.c
matvecmult_matvecmult_OBJECTS = matvecmult.$(OBJEXT)
matvecmult_matvecmult_LDADD = $(LDADD)
mlr_mlr_SOURCES = mlr/mlr.c
mlr_mlr_OBJECTS = mlr.$(OBJEXT)
mlr_mlr_LDADD = $(LDADD)
am__mult_dgemm_SOURCES_DIST = mult/dgemm.c common/blas.c
am__objects_21 = blas.$(OBJEXT)
am_mult_dgemm_OBJECTS = dgemm.$(OBJEXT) $(am__objects_21)
mult_dgemm_OBJECTS = $(am_mult_dgemm_OBJECTS)
mult_dgemm_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__mult_sgemm_SOURCES_DIST = mult/sgemm.c common/blas.c
am_mult_sgemm_OBJECTS = sgemm.$(OBJEXT) $(am__objects_21)
mult_sgemm_OBJECTS = $(am_mult_sgemm_OBJECTS)
mult_sgemm_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__native_fortran_nf_dynbuf_SOURCES_DIST =  \
	native_fortran/nf_dynbuf_cl.f90 \
	$(top_srcdir)/include/fstarpu_mod.f90 \
	native_fortran/nf_dynbuf.f90
#am_native_fortran_nf_dynbuf_OBJECTS =  \
#	nf_dynbuf_cl.$(OBJEXT) \
#	fstarpu_mod.$(OBJEXT) nf_dynbuf.$(OBJEXT)
native_fortran_nf_dynbuf_OBJECTS =  \
	$(am_native_fortran_nf_dynbuf_OBJECTS)
native_fortran_nf_dynbuf_LDADD = $(LDADD)
am__native_fortran_nf_example_SOURCES_DIST =  \
	native_fortran/nf_types.f90 native_fortran/nf_compute.f90 \
	$(top_srcdir)/include/fstarpu_mod.f90 \
	native_fortran/nf_example.f90
#am_native_fortran_nf_example_OBJECTS =  \
#	nf_types.$(OBJEXT) nf_compute.$(OBJEXT) \
#	fstarpu_mod.$(OBJEXT) \
#	nf_example.$(OBJEXT)
native_fortran_nf_example_OBJECTS =  \
	$(am_native_fortran_nf_example_OBJECTS)
native_fortran_nf_example_LDADD = $(LDADD)
am__native_fortran_nf_matrix_SOURCES_DIST =  \
	native_fortran/nf_codelets.f90 \
	$(top_srcdir)/include/fstarpu_mod.f90 \
	native_fortran/nf_matrix.f90
#am_native_fortran_nf_matrix_OBJECTS =  \
#	nf_codelets.$(OBJEXT) \
#	fstarpu_mod.$(OBJEXT) nf_matrix.$(OBJEXT)
native_fortran_nf_matrix_OBJECTS =  \
	$(am_native_fortran_nf_matrix_OBJECTS)
native_fortran_nf_matrix_LDADD = $(LDADD)
am__native_fortran_nf_partition_SOURCES_DIST =  \
	native_fortran/nf_partition_cl.f90 \
	$(top_srcdir)/include/fstarpu_mod.f90 \
	native_fortran/nf_partition.f90
#am_native_fortran_nf_partition_OBJECTS =  \
#	nf_partition_cl.$(OBJEXT) \
#	fstarpu_mod.$(OBJEXT) \
#	nf_partition.$(OBJEXT)
native_fortran_nf_partition_OBJECTS =  \
	$(am_native_fortran_nf_partition_OBJECTS)
native_fortran_nf_partition_LDADD = $(LDADD)
am__native_fortran_nf_sched_ctx_SOURCES_DIST =  \
	native_fortran/nf_sched_ctx_cl.f90 \
	$(top_srcdir)/include/fstarpu_mod.f90 \
	native_fortran/nf_sched_ctx.f90
#am_native_fortran_nf_sched_ctx_OBJECTS =  \
#	nf_sched_ctx_cl.$(OBJEXT) \
#	fstarpu_mod.$(OBJEXT) \
#	nf_sched_ctx.$(OBJEXT)
native_fortran_nf_sched_ctx_OBJECTS =  \
	$(am_native_fortran_nf_sched_ctx_OBJECTS)
native_fortran_nf_sched_ctx_LDADD = $(LDADD)
am__native_fortran_nf_varbuf_SOURCES_DIST =  \
	native_fortran/nf_varbuf_cl.f90 \
	$(top_srcdir)/include/fstarpu_mod.f90 \
	native_fortran/nf_varbuf.f90
#am_native_fortran_nf_varbuf_OBJECTS =  \
#	nf_varbuf_cl.$(OBJEXT) \
#	fstarpu_mod.$(OBJEXT) nf_varbuf.$(OBJEXT)
native_fortran_nf_varbuf_OBJECTS =  \
	$(am_native_fortran_nf_varbuf_OBJECTS)
native_fortran_nf_varbuf_LDADD = $(LDADD)
am__native_fortran_nf_vector_SOURCES_DIST =  \
	native_fortran/nf_codelets.f90 \
	$(top_srcdir)/include/fstarpu_mod.f90 \
	native_fortran/nf_vector.f90
#am_native_fortran_nf_vector_OBJECTS =  \
#	nf_codelets.$(OBJEXT) \
#	fstarpu_mod.$(OBJEXT) nf_vector.$(OBJEXT)
native_fortran_nf_vector_OBJECTS =  \
	$(am_native_fortran_nf_vector_OBJECTS)
native_fortran_nf_vector_LDADD = $(LDADD)
openmp_vector_scal_omp_SOURCES = openmp/vector_scal_omp.c
openmp_vector_scal_omp_OBJECTS =  \
	openmp_vector_scal_omp-vector_scal_omp.$(OBJEXT)
openmp_vector_scal_omp_LDADD = $(LDADD)
openmp_vector_scal_omp_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(openmp_vector_scal_omp_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__pi_pi_SOURCES_DIST = pi/pi.c pi/SobolQRNG/sobol_gold.c \
	pi/SobolQRNG/sobol_primitives.c pi/pi_kernel.cu \
	pi/SobolQRNG/sobol_gpu.cu
am__objects_22 = pi/pi_kernel.$(OBJEXT) \
	pi/SobolQRNG/sobol_gpu.$(OBJEXT)
am_pi_pi_OBJECTS = pi.$(OBJEXT) \
	sobol_gold.$(OBJEXT) \
	sobol_primitives.$(OBJEXT) \
	$(am__objects_22)
pi_pi_OBJECTS = $(am_pi_pi_OBJECTS)
pi_pi_LDADD = $(LDADD)
am__pi_pi_redux_SOURCES_DIST = pi/pi_redux.c pi/pi_redux_kernel.cu
am__objects_23 = pi/pi_redux_kernel.$(OBJEXT)
am_pi_pi_redux_OBJECTS =  \
	pi_redux.$(OBJEXT) \
	$(am__objects_23)
pi_pi_redux_OBJECTS = $(am_pi_pi_redux_OBJECTS)
pi_pi_redux_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__pipeline_pipeline_SOURCES_DIST = pipeline/pipeline.c common/blas.c
am_pipeline_pipeline_OBJECTS =  \
	pipeline.$(OBJEXT) blas.$(OBJEXT)
pipeline_pipeline_OBJECTS = $(am_pipeline_pipeline_OBJECTS)
pipeline_pipeline_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1)
ppm_downscaler_ppm_downscaler_SOURCES =  \
	ppm_downscaler/ppm_downscaler.c
ppm_downscaler_ppm_downscaler_OBJECTS = ppm_downscaler.$(OBJEXT)
ppm_downscaler_ppm_downscaler_LDADD = $(LDADD)
ppm_downscaler_yuv_downscaler_SOURCES =  \
	ppm_downscaler/yuv_downscaler.c
ppm_downscaler_yuv_downscaler_OBJECTS = yuv_downscaler.$(OBJEXT)
ppm_downscaler_yuv_downscaler_LDADD = $(LDADD)
profiling_profiling_SOURCES = profiling/profiling.c
profiling_profiling_OBJECTS = profiling.$(OBJEXT)
profiling_profiling_LDADD = $(LDADD)
am__reductions_dot_product_SOURCES_DIST = reductions/dot_product.c \
	reductions/dot_product_kernels.cu
am__objects_24 = reductions/dot_product_kernels.$(OBJEXT)
am_reductions_dot_product_OBJECTS = dot_product.$(OBJEXT) \
	$(am__objects_24)
reductions_dot_product_OBJECTS = $(am_reductions_dot_product_OBJECTS)
reductions_dot_product_LDADD = $(LDADD)
reductions_minmax_reduction_SOURCES = reductions/minmax_reduction.c
reductions_minmax_reduction_OBJECTS = minmax_reduction.$(OBJEXT)
reductions_minmax_reduction_LDADD = $(LDADD)
sched_ctx_dummy_sched_with_ctx_SOURCES =  \
	sched_ctx/dummy_sched_with_ctx.c
sched_ctx_dummy_sched_with_ctx_OBJECTS =  \
	dummy_sched_with_ctx.$(OBJEXT)
sched_ctx_dummy_sched_with_ctx_LDADD = $(LDADD)
am__sched_ctx_gpu_partition_SOURCES_DIST = sched_ctx/gpu_partition.c \
	sched_ctx/axpy_partition_gpu.cu
am_sched_ctx_gpu_partition_OBJECTS =  \
	gpu_partition.$(OBJEXT) \
	sched_ctx/axpy_partition_gpu.$(OBJEXT)
sched_ctx_gpu_partition_OBJECTS =  \
	$(am_sched_ctx_gpu_partition_OBJECTS)
sched_ctx_gpu_partition_LDADD = $(LDADD)
sched_ctx_nested_sched_ctxs_SOURCES = sched_ctx/nested_sched_ctxs.c
sched_ctx_nested_sched_ctxs_OBJECTS =  \
	sched_ctx_nested_sched_ctxs-nested_sched_ctxs.$(OBJEXT)
sched_ctx_nested_sched_ctxs_LDADD = $(LDADD)
sched_ctx_nested_sched_ctxs_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(sched_ctx_nested_sched_ctxs_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
sched_ctx_parallel_code_SOURCES = sched_ctx/parallel_code.c
sched_ctx_parallel_code_OBJECTS =  \
	sched_ctx_parallel_code-parallel_code.$(OBJEXT)
sched_ctx_parallel_code_LDADD = $(LDADD)
sched_ctx_parallel_code_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(sched_ctx_parallel_code_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
sched_ctx_parallel_tasks_reuse_handle_SOURCES =  \
	sched_ctx/parallel_tasks_reuse_handle.c
sched_ctx_parallel_tasks_reuse_handle_OBJECTS = sched_ctx_parallel_tasks_reuse_handle-parallel_tasks_reuse_handle.$(OBJEXT)
sched_ctx_parallel_tasks_reuse_handle_LDADD = $(LDADD)
sched_ctx_parallel_tasks_reuse_handle_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CCLD) $(sched_ctx_parallel_tasks_reuse_handle_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
sched_ctx_parallel_tasks_with_cluster_api_SOURCES =  \
	sched_ctx/parallel_tasks_with_cluster_api.c
sched_ctx_parallel_tasks_with_cluster_api_OBJECTS =  \
	parallel_tasks_with_cluster_api.$(OBJEXT)
sched_ctx_parallel_tasks_with_cluster_api_LDADD = $(LDADD)
sched_ctx_prio_SOURCES = sched_ctx/prio.c
sched_ctx_prio_OBJECTS = prio.$(OBJEXT)
sched_ctx_prio_LDADD = $(LDADD)
sched_ctx_sched_ctx_SOURCES = sched_ctx/sched_ctx.c
sched_ctx_sched_ctx_OBJECTS = sched_ctx.$(OBJEXT)
sched_ctx_sched_ctx_LDADD = $(LDADD)
sched_ctx_sched_ctx_delete_SOURCES = sched_ctx/sched_ctx_delete.c
sched_ctx_sched_ctx_delete_OBJECTS = sched_ctx_delete.$(OBJEXT)
sched_ctx_sched_ctx_delete_LDADD = $(LDADD)
sched_ctx_sched_ctx_empty_SOURCES = sched_ctx/sched_ctx_empty.c
sched_ctx_sched_ctx_empty_OBJECTS = sched_ctx_empty.$(OBJEXT)
sched_ctx_sched_ctx_empty_LDADD = $(LDADD)
sched_ctx_sched_ctx_without_sched_policy_SOURCES =  \
	sched_ctx/sched_ctx_without_sched_policy.c
sched_ctx_sched_ctx_without_sched_policy_OBJECTS = sched_ctx_sched_ctx_without_sched_policy-sched_ctx_without_sched_policy.$(OBJEXT)
sched_ctx_sched_ctx_without_sched_policy_LDADD = $(LDADD)
sched_ctx_sched_ctx_without_sched_policy_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CCLD) $(sched_ctx_sched_ctx_without_sched_policy_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
sched_ctx_sched_ctx_without_sched_policy_awake_SOURCES =  \
	sched_ctx/sched_ctx_without_sched_policy_awake.c
sched_ctx_sched_ctx_without_sched_policy_awake_OBJECTS =  \
	sched_ctx_without_sched_policy_awake.$(OBJEXT)
sched_ctx_sched_ctx_without_sched_policy_awake_LDADD = $(LDADD)
sched_ctx_two_cpu_contexts_SOURCES = sched_ctx/two_cpu_contexts.c
sched_ctx_two_cpu_contexts_OBJECTS = two_cpu_contexts.$(OBJEXT)
sched_ctx_two_cpu_contexts_LDADD = $(LDADD)
scheduler_dummy_modular_sched_SOURCES =  \
	scheduler/dummy_modular_sched.c
scheduler_dummy_modular_sched_OBJECTS = dummy_modular_sched.$(OBJEXT)
scheduler_dummy_modular_sched_LDADD = $(LDADD)
scheduler_dummy_sched_SOURCES = scheduler/dummy_sched.c
scheduler_dummy_sched_OBJECTS = dummy_sched.$(OBJEXT)
scheduler_dummy_sched_LDADD = $(LDADD)
scheduler_heteroprio_test_SOURCES = scheduler/heteroprio_test.c
scheduler_heteroprio_test_OBJECTS = heteroprio_test.$(OBJEXT)
scheduler_heteroprio_test_LDADD = $(LDADD)
am_spmd_vector_scal_spmd_OBJECTS = vector_scal_spmd.$(OBJEXT)
spmd_vector_scal_spmd_OBJECTS = $(am_spmd_vector_scal_spmd_OBJECTS)
spmd_vector_scal_spmd_LDADD = $(LDADD)
am_spmv_dw_block_spmv_OBJECTS = dw_block_spmv.$(OBJEXT) \
	dw_block_spmv_kernels.$(OBJEXT) mm_to_bcsr.$(OBJEXT) \
	mmio.$(OBJEXT)
spmv_dw_block_spmv_OBJECTS = $(am_spmv_dw_block_spmv_OBJECTS)
spmv_dw_block_spmv_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__spmv_spmv_SOURCES_DIST = spmv/spmv.c spmv/spmv_kernels.c \
	spmv/spmv_cuda.cu
am__objects_25 = spmv/spmv_cuda.$(OBJEXT)
am_spmv_spmv_OBJECTS = spmv.$(OBJEXT) spmv_kernels.$(OBJEXT) \
	$(am__objects_25)
spmv_spmv_OBJECTS = $(am_spmv_spmv_OBJECTS)
spmv_spmv_LDADD = $(LDADD)
tag_example_tag_example_SOURCES = tag_example/tag_example.c
tag_example_tag_example_OBJECTS = tag_example.$(OBJEXT)
tag_example_tag_example_LDADD = $(LDADD)
tag_example_tag_example2_SOURCES = tag_example/tag_example2.c
tag_example_tag_example2_OBJECTS = tag_example2.$(OBJEXT)
tag_example_tag_example2_LDADD = $(LDADD)
tag_example_tag_example3_SOURCES = tag_example/tag_example3.c
tag_example_tag_example3_OBJECTS = tag_example3.$(OBJEXT)
tag_example_tag_example3_LDADD = $(LDADD)
tag_example_tag_example4_SOURCES = tag_example/tag_example4.c
tag_example_tag_example4_OBJECTS = tag_example4.$(OBJEXT)
tag_example_tag_example4_LDADD = $(LDADD)
tag_example_tag_restartable_SOURCES = tag_example/tag_restartable.c
tag_example_tag_restartable_OBJECTS = tag_restartable.$(OBJEXT)
tag_example_tag_restartable_LDADD = $(LDADD)
worker_collections_worker_list_example_SOURCES =  \
	worker_collections/worker_list_example.c
worker_collections_worker_list_example_OBJECTS =  \
	worker_list_example.$(OBJEXT)
worker_collections_worker_list_example_LDADD = $(LDADD)
worker_collections_worker_tree_example_SOURCES =  \
	worker_collections/worker_tree_example.c
worker_collections_worker_tree_example_OBJECTS =  \
	worker_tree_example.$(OBJEXT)
worker_collections_worker_tree_example_LDADD = $(LDADD)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src/common -I$(top_builddir)/include -I$(top_builddir)/starpurm/include
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/add_vectors.Po \
	./$(DEPDIR)/add_vectors_cpp11.Po \
	./$(DEPDIR)/add_vectors_interface.Po ./$(DEPDIR)/axpy.Po \
	./$(DEPDIR)/axpy_opencl.Po ./$(DEPDIR)/bcsr_data_interface.Po \
	./$(DEPDIR)/binary.Po ./$(DEPDIR)/blas.Po \
	./$(DEPDIR)/blas_complex.Po ./$(DEPDIR)/block.Po \
	./$(DEPDIR)/block_cpu.Po ./$(DEPDIR)/block_data_interface.Po \
	./$(DEPDIR)/block_opencl.Po ./$(DEPDIR)/callback.Po \
	./$(DEPDIR)/cg.Po ./$(DEPDIR)/cg_kernels.Po \
	./$(DEPDIR)/cholesky_compil.Po \
	./$(DEPDIR)/cholesky_grain_tag.Po \
	./$(DEPDIR)/cholesky_implicit.Po \
	./$(DEPDIR)/cholesky_kernels.Po ./$(DEPDIR)/cholesky_models.Po \
	./$(DEPDIR)/cholesky_tag.Po ./$(DEPDIR)/cholesky_tile_tag.Po \
	./$(DEPDIR)/clu.Po ./$(DEPDIR)/clu_implicit.Po \
	./$(DEPDIR)/clu_implicit_pivot.Po ./$(DEPDIR)/clu_kernels.Po \
	./$(DEPDIR)/clu_pivot.Po ./$(DEPDIR)/complex.Po \
	./$(DEPDIR)/complex_filters.Po \
	./$(DEPDIR)/complex_interface.Po \
	./$(DEPDIR)/complex_kernels_opencl.Po \
	./$(DEPDIR)/conversion_opencl.Po \
	./$(DEPDIR)/coo_data_interface.Po \
	./$(DEPDIR)/csr_data_interface.Po \
	./$(DEPDIR)/custom_conversion_codelets.Po \
	./$(DEPDIR)/custom_interface.Po \
	./$(DEPDIR)/custom_mf_filter.Po ./$(DEPDIR)/custom_opencl.Po \
	./$(DEPDIR)/dgemm.Po ./$(DEPDIR)/dlu.Po \
	./$(DEPDIR)/dlu_implicit.Po ./$(DEPDIR)/dlu_implicit_pivot.Po \
	./$(DEPDIR)/dlu_kernels.Po ./$(DEPDIR)/dlu_pivot.Po \
	./$(DEPDIR)/dot_product.Po ./$(DEPDIR)/dummy_modular_sched.Po \
	./$(DEPDIR)/dummy_sched.Po ./$(DEPDIR)/dummy_sched_with_ctx.Po \
	./$(DEPDIR)/dw_block_spmv.Po \
	./$(DEPDIR)/dw_block_spmv_kernels.Po ./$(DEPDIR)/dw_factolu.Po \
	./$(DEPDIR)/dw_factolu_grain.Po \
	./$(DEPDIR)/dw_factolu_kernels.Po \
	./$(DEPDIR)/dw_factolu_tag.Po ./$(DEPDIR)/dw_sparse_cg.Po \
	./$(DEPDIR)/dw_sparse_cg_kernels.Po \
	./$(DEPDIR)/dynamic_handles.Po ./$(DEPDIR)/fblock.Po \
	./$(DEPDIR)/fblock_cpu.Po ./$(DEPDIR)/fblock_opencl.Po \
	./$(DEPDIR)/fmatrix.Po ./$(DEPDIR)/fmultiple_manual.Po \
	./$(DEPDIR)/fmultiple_submit.Po \
	./$(DEPDIR)/fmultiple_submit_implicit.Po \
	./$(DEPDIR)/fmultiple_submit_readonly.Po ./$(DEPDIR)/fread.Po \
	./$(DEPDIR)/frecursive.Po ./$(DEPDIR)/fvector.Po \
	./$(DEPDIR)/gl_interop.Po ./$(DEPDIR)/gl_interop_idle.Po \
	./$(DEPDIR)/gpu_partition.Po ./$(DEPDIR)/heat.Po \
	./$(DEPDIR)/heat_display.Po ./$(DEPDIR)/hello_c.Po \
	./$(DEPDIR)/hello_world.Po ./$(DEPDIR)/heteroprio_test.Po \
	./$(DEPDIR)/incrementer.Po ./$(DEPDIR)/incrementer_cpp.Po \
	./$(DEPDIR)/incrementer_kernels_opencl.Po \
	./$(DEPDIR)/loader-loader.Po \
	./$(DEPDIR)/lu_example_complex_double.Po \
	./$(DEPDIR)/lu_example_complex_float.Po \
	./$(DEPDIR)/lu_example_double.Po \
	./$(DEPDIR)/lu_example_float.Po \
	./$(DEPDIR)/lu_kernels_model.Po \
	./$(DEPDIR)/mandelbrot_mandelbrot-mandelbrot.Po \
	./$(DEPDIR)/marshalling.Po \
	./$(DEPDIR)/matrix_data_interface.Po ./$(DEPDIR)/matvecmult.Po \
	./$(DEPDIR)/minmax_reduction.Po ./$(DEPDIR)/mlr.Po \
	./$(DEPDIR)/mm_to_bcsr.Po ./$(DEPDIR)/mmio.Po \
	./$(DEPDIR)/mult.Po ./$(DEPDIR)/multiformat.Po \
	./$(DEPDIR)/multiformat_conversion_codelets.Po \
	./$(DEPDIR)/multiformat_conversion_codelets_opencl.Po \
	./$(DEPDIR)/multiformat_data_interface.Po \
	./$(DEPDIR)/multiformat_opencl.Po \
	./$(DEPDIR)/openmp_vector_scal_omp-vector_scal_omp.Po \
	./$(DEPDIR)/parallel_tasks_with_cluster_api.Po \
	./$(DEPDIR)/pi.Po ./$(DEPDIR)/pi_redux.Po \
	./$(DEPDIR)/pipeline.Po ./$(DEPDIR)/ppm_downscaler.Po \
	./$(DEPDIR)/prio.Po ./$(DEPDIR)/profiling.Po \
	./$(DEPDIR)/prologue.Po ./$(DEPDIR)/sched_ctx.Po \
	./$(DEPDIR)/sched_ctx_delete.Po ./$(DEPDIR)/sched_ctx_empty.Po \
	./$(DEPDIR)/sched_ctx_nested_sched_ctxs-nested_sched_ctxs.Po \
	./$(DEPDIR)/sched_ctx_parallel_code-parallel_code.Po \
	./$(DEPDIR)/sched_ctx_parallel_tasks_reuse_handle-parallel_tasks_reuse_handle.Po \
	./$(DEPDIR)/sched_ctx_sched_ctx_without_sched_policy-sched_ctx_without_sched_policy.Po \
	./$(DEPDIR)/sched_ctx_utils.Po \
	./$(DEPDIR)/sched_ctx_without_sched_policy_awake.Po \
	./$(DEPDIR)/sequential_consistency.Po ./$(DEPDIR)/sgemm.Po \
	./$(DEPDIR)/shadow.Po ./$(DEPDIR)/shadow2d.Po \
	./$(DEPDIR)/shadow3d.Po ./$(DEPDIR)/slu.Po \
	./$(DEPDIR)/slu_implicit.Po ./$(DEPDIR)/slu_implicit_pivot.Po \
	./$(DEPDIR)/slu_kernels.Po ./$(DEPDIR)/slu_pivot.Po \
	./$(DEPDIR)/sobol_gold.Po ./$(DEPDIR)/sobol_primitives.Po \
	./$(DEPDIR)/spmv.Po ./$(DEPDIR)/spmv_kernels.Po \
	./$(DEPDIR)/tag_example.Po ./$(DEPDIR)/tag_example2.Po \
	./$(DEPDIR)/tag_example3.Po ./$(DEPDIR)/tag_example4.Po \
	./$(DEPDIR)/tag_restartable.Po ./$(DEPDIR)/task_end_dep.Po \
	./$(DEPDIR)/task_end_dep_add.Po \
	./$(DEPDIR)/task_insert_color.Po ./$(DEPDIR)/topology.Po \
	./$(DEPDIR)/two_cpu_contexts.Po ./$(DEPDIR)/variable.Po \
	./$(DEPDIR)/variable_data_interface.Po \
	./$(DEPDIR)/variable_kernels_cpu.Po \
	./$(DEPDIR)/variable_kernels_opencl.Po \
	./$(DEPDIR)/vector_data_interface.Po \
	./$(DEPDIR)/vector_scal.Po ./$(DEPDIR)/vector_scal_c.Po \
	./$(DEPDIR)/vector_scal_cpu.Po \
	./$(DEPDIR)/vector_scal_opencl.Po \
	./$(DEPDIR)/vector_scal_spmd.Po \
	./$(DEPDIR)/void_data_interface.Po \
	./$(DEPDIR)/worker_list_example.Po \
	./$(DEPDIR)/worker_tree_example.Po \
	./$(DEPDIR)/yuv_downscaler.Po ./$(DEPDIR)/zlu.Po \
	./$(DEPDIR)/zlu_implicit.Po ./$(DEPDIR)/zlu_implicit_pivot.Po \
	./$(DEPDIR)/zlu_kernels.Po ./$(DEPDIR)/zlu_pivot.Po
am__mv = mv -f
PPF77COMPILE = $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FFLAGS) $(FFLAGS)
LTPPF77COMPILE = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_FFLAGS) $(FFLAGS)
AM_V_PPF77 = $(am__v_PPF77_$(V))
am__v_PPF77_ = $(am__v_PPF77_$(AM_DEFAULT_VERBOSITY))
am__v_PPF77_0 = @echo "  PPF77   " $@;
am__v_PPF77_1 = 
F77LD = $(F77)
F77LINK = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(F77LD) $(AM_FFLAGS) $(FFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_F77LD = $(am__v_F77LD_$(V))
am__v_F77LD_ = $(am__v_F77LD_$(AM_DEFAULT_VERBOSITY))
am__v_F77LD_0 = @echo "  F77LD   " $@;
am__v_F77LD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
FCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)
LTFCCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(FC) $(AM_FCFLAGS) $(FCFLAGS)
AM_V_FC = $(am__v_FC_$(V))
am__v_FC_ = $(am__v_FC_$(AM_DEFAULT_VERBOSITY))
am__v_FC_0 = @echo "  FC      " $@;
am__v_FC_1 = 
FCLD = $(FC)
FCLINK = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_FCLD = $(am__v_FCLD_$(V))
am__v_FCLD_ = $(am__v_FCLD_$(AM_DEFAULT_VERBOSITY))
am__v_FCLD_0 = @echo "  FCLD    " $@;
am__v_FCLD_1 = 
SOURCES = api/bcsr_data_interface.c api/block_data_interface.c \
	api/coo_data_interface.c api/csr_data_interface.c \
	api/matrix_data_interface.c api/multiformat_data_interface.c \
	api/variable_data_interface.c api/vector_data_interface.c \
	api/void_data_interface.c $(axpy_axpy_SOURCES) \
	$(basic_examples_block_SOURCES) \
	basic_examples/dynamic_handles.c basic_examples/hello_world.c \
	basic_examples/mult.c $(basic_examples_multiformat_SOURCES) \
	basic_examples/task_insert_color.c basic_examples/topology.c \
	$(basic_examples_variable_SOURCES) \
	$(basic_examples_vector_scal_SOURCES) \
	$(basic_examples_vector_scal_fortran_SOURCES) \
	$(binary_binary_SOURCES) callback/callback.c \
	callback/prologue.c $(cg_cg_SOURCES) \
	$(cholesky_cholesky_compil_SOURCES) \
	$(cholesky_cholesky_grain_tag_SOURCES) \
	$(cholesky_cholesky_implicit_SOURCES) \
	$(cholesky_cholesky_tag_SOURCES) \
	$(cholesky_cholesky_tile_tag_SOURCES) \
	$(cpp_add_vectors_SOURCES) $(cpp_add_vectors_cpp11_SOURCES) \
	$(cpp_add_vectors_interface_SOURCES) \
	$(cpp_incrementer_cpp_SOURCES) \
	dependency/sequential_consistency.c dependency/task_end_dep.c \
	dependency/task_end_dep_add.c \
	$(filters_custom_mf_custom_mf_filter_SOURCES) \
	$(filters_fblock_SOURCES) filters/fmatrix.c \
	$(filters_fmultiple_manual_SOURCES) \
	$(filters_fmultiple_submit_SOURCES) \
	$(filters_fmultiple_submit_implicit_SOURCES) \
	$(filters_fmultiple_submit_readonly_SOURCES) filters/fread.c \
	filters/frecursive.c filters/fvector.c filters/shadow.c \
	filters/shadow2d.c filters/shadow3d.c $(fortran_hello_SOURCES) \
	$(fortran90_f90_example_SOURCES) \
	$(gl_interop_gl_interop_SOURCES) \
	$(gl_interop_gl_interop_idle_SOURCES) $(heat_heat_SOURCES) \
	$(incrementer_incrementer_SOURCES) \
	$(interface_complex_SOURCES) $(loader_SOURCES) \
	$(lu_lu_example_complex_double_SOURCES) \
	$(lu_lu_example_complex_float_SOURCES) \
	$(lu_lu_example_double_SOURCES) $(lu_lu_example_float_SOURCES) \
	$(lu_lu_implicit_example_complex_double_SOURCES) \
	$(lu_lu_implicit_example_complex_float_SOURCES) \
	$(lu_lu_implicit_example_double_SOURCES) \
	$(lu_lu_implicit_example_float_SOURCES) \
	mandelbrot/mandelbrot.c matvecmult/matvecmult.c mlr/mlr.c \
	$(mult_dgemm_SOURCES) $(mult_sgemm_SOURCES) \
	$(native_fortran_nf_dynbuf_SOURCES) \
	$(native_fortran_nf_example_SOURCES) \
	$(native_fortran_nf_matrix_SOURCES) \
	$(native_fortran_nf_partition_SOURCES) \
	$(native_fortran_nf_sched_ctx_SOURCES) \
	$(native_fortran_nf_varbuf_SOURCES) \
	$(native_fortran_nf_vector_SOURCES) openmp/vector_scal_omp.c \
	$(pi_pi_SOURCES) $(pi_pi_redux_SOURCES) \
	$(pipeline_pipeline_SOURCES) ppm_downscaler/ppm_downscaler.c \
	ppm_downscaler/yuv_downscaler.c profiling/profiling.c \
	$(reductions_dot_product_SOURCES) \
	reductions/minmax_reduction.c sched_ctx/dummy_sched_with_ctx.c \
	$(sched_ctx_gpu_partition_SOURCES) \
	sched_ctx/nested_sched_ctxs.c sched_ctx/parallel_code.c \
	sched_ctx/parallel_tasks_reuse_handle.c \
	sched_ctx/parallel_tasks_with_cluster_api.c sched_ctx/prio.c \
	sched_ctx/sched_ctx.c sched_ctx/sched_ctx_delete.c \
	sched_ctx/sched_ctx_empty.c \
	sched_ctx/sched_ctx_without_sched_policy.c \
	sched_ctx/sched_ctx_without_sched_policy_awake.c \
	sched_ctx/two_cpu_contexts.c scheduler/dummy_modular_sched.c \
	scheduler/dummy_sched.c scheduler/heteroprio_test.c \
	$(spmd_vector_scal_spmd_SOURCES) $(spmv_dw_block_spmv_SOURCES) \
	$(spmv_spmv_SOURCES) tag_example/tag_example.c \
	tag_example/tag_example2.c tag_example/tag_example3.c \
	tag_example/tag_example4.c tag_example/tag_restartable.c \
	worker_collections/worker_list_example.c \
	worker_collections/worker_tree_example.c
DIST_SOURCES = api/bcsr_data_interface.c api/block_data_interface.c \
	api/coo_data_interface.c api/csr_data_interface.c \
	api/matrix_data_interface.c api/multiformat_data_interface.c \
	api/variable_data_interface.c api/vector_data_interface.c \
	api/void_data_interface.c $(am__axpy_axpy_SOURCES_DIST) \
	$(am__basic_examples_block_SOURCES_DIST) \
	basic_examples/dynamic_handles.c basic_examples/hello_world.c \
	basic_examples/mult.c \
	$(am__basic_examples_multiformat_SOURCES_DIST) \
	basic_examples/task_insert_color.c basic_examples/topology.c \
	$(am__basic_examples_variable_SOURCES_DIST) \
	$(am__basic_examples_vector_scal_SOURCES_DIST) \
	$(am__basic_examples_vector_scal_fortran_SOURCES_DIST) \
	$(am__binary_binary_SOURCES_DIST) callback/callback.c \
	callback/prologue.c $(am__cg_cg_SOURCES_DIST) \
	$(am__cholesky_cholesky_compil_SOURCES_DIST) \
	$(am__cholesky_cholesky_grain_tag_SOURCES_DIST) \
	$(am__cholesky_cholesky_implicit_SOURCES_DIST) \
	$(am__cholesky_cholesky_tag_SOURCES_DIST) \
	$(am__cholesky_cholesky_tile_tag_SOURCES_DIST) \
	$(cpp_add_vectors_SOURCES) \
	$(am__cpp_add_vectors_cpp11_SOURCES_DIST) \
	$(cpp_add_vectors_interface_SOURCES) \
	$(am__cpp_incrementer_cpp_SOURCES_DIST) \
	dependency/sequential_consistency.c dependency/task_end_dep.c \
	dependency/task_end_dep_add.c \
	$(am__filters_custom_mf_custom_mf_filter_SOURCES_DIST) \
	$(am__filters_fblock_SOURCES_DIST) filters/fmatrix.c \
	$(am__filters_fmultiple_manual_SOURCES_DIST) \
	$(am__filters_fmultiple_submit_SOURCES_DIST) \
	$(am__filters_fmultiple_submit_implicit_SOURCES_DIST) \
	$(am__filters_fmultiple_submit_readonly_SOURCES_DIST) \
	filters/fread.c filters/frecursive.c filters/fvector.c \
	filters/shadow.c filters/shadow2d.c filters/shadow3d.c \
	$(am__fortran_hello_SOURCES_DIST) \
	$(am__fortran90_f90_example_SOURCES_DIST) \
	$(am__gl_interop_gl_interop_SOURCES_DIST) \
	$(am__gl_interop_gl_interop_idle_SOURCES_DIST) \
	$(am__heat_heat_SOURCES_DIST) \
	$(am__incrementer_incrementer_SOURCES_DIST) \
	$(am__interface_complex_SOURCES_DIST) \
	$(am__loader_SOURCES_DIST) \
	$(am__lu_lu_example_complex_double_SOURCES_DIST) \
	$(am__lu_lu_example_complex_float_SOURCES_DIST) \
	$(am__lu_lu_example_double_SOURCES_DIST) \
	$(am__lu_lu_example_float_SOURCES_DIST) \
	$(am__lu_lu_implicit_example_complex_double_SOURCES_DIST) \
	$(am__lu_lu_implicit_example_complex_float_SOURCES_DIST) \
	$(am__lu_lu_implicit_example_double_SOURCES_DIST) \
	$(am__lu_lu_implicit_example_float_SOURCES_DIST) \
	mandelbrot/mandelbrot.c matvecmult/matvecmult.c mlr/mlr.c \
	$(am__mult_dgemm_SOURCES_DIST) $(am__mult_sgemm_SOURCES_DIST) \
	$(am__native_fortran_nf_dynbuf_SOURCES_DIST) \
	$(am__native_fortran_nf_example_SOURCES_DIST) \
	$(am__native_fortran_nf_matrix_SOURCES_DIST) \
	$(am__native_fortran_nf_partition_SOURCES_DIST) \
	$(am__native_fortran_nf_sched_ctx_SOURCES_DIST) \
	$(am__native_fortran_nf_varbuf_SOURCES_DIST) \
	$(am__native_fortran_nf_vector_SOURCES_DIST) \
	openmp/vector_scal_omp.c $(am__pi_pi_SOURCES_DIST) \
	$(am__pi_pi_redux_SOURCES_DIST) \
	$(am__pipeline_pipeline_SOURCES_DIST) \
	ppm_downscaler/ppm_downscaler.c \
	ppm_downscaler/yuv_downscaler.c profiling/profiling.c \
	$(am__reductions_dot_product_SOURCES_DIST) \
	reductions/minmax_reduction.c sched_ctx/dummy_sched_with_ctx.c \
	$(am__sched_ctx_gpu_partition_SOURCES_DIST) \
	sched_ctx/nested_sched_ctxs.c sched_ctx/parallel_code.c \
	sched_ctx/parallel_tasks_reuse_handle.c \
	sched_ctx/parallel_tasks_with_cluster_api.c sched_ctx/prio.c \
	sched_ctx/sched_ctx.c sched_ctx/sched_ctx_delete.c \
	sched_ctx/sched_ctx_empty.c \
	sched_ctx/sched_ctx_without_sched_policy.c \
	sched_ctx/sched_ctx_without_sched_policy_awake.c \
	sched_ctx/two_cpu_contexts.c scheduler/dummy_modular_sched.c \
	scheduler/dummy_sched.c scheduler/heteroprio_test.c \
	$(spmd_vector_scal_spmd_SOURCES) $(spmv_dw_block_spmv_SOURCES) \
	$(am__spmv_spmv_SOURCES_DIST) tag_example/tag_example.c \
	tag_example/tag_example2.c tag_example/tag_example3.c \
	tag_example/tag_example4.c tag_example/tag_restartable.c \
	worker_collections/worker_list_example.c \
	worker_collections/worker_tree_example.c
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
DATA = $(nobase_STARPU_OPENCL_DATA_DATA)
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir distdir-am
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/loader-cross.sh.in \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/test-driver \
	$(top_srcdir)/starpu-mynvcc.mk $(top_srcdir)/starpu.mk
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
pkglibdir = ${libdir}/starpu
ACLOCAL = ${SHELL} '/home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9/build-aux/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AS = as
ATLASDIR = 
AUTOCONF = ${SHELL} '/home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9/build-aux/missing' autoconf
AUTOHEADER = ${SHELL} '/home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9/build-aux/missing' autoheader
AUTOMAKE = ${SHELL} '/home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9/build-aux/missing' automake-1.16
AWK = gawk
BLAS_LIB = openblas
BLAS_LIBS = 
BLAS_OPENBLAS_CFLAGS = -I/usr/include/x86_64-linux-gnu
BLAS_OPENBLAS_LIBS = -L/usr/lib/x86_64-linux-gnu/openblas -lblas
CC = /opt/ecrc/gcc/10.2.0/ub18/bin/gcc
CCDEPMODE = depmode=gcc3
CC_OR_MPICC = /opt/ecrc/gcc/10.2.0/ub18/bin/gcc
CFLAGS = -O3 -g -O2 -gdwarf-2 -g3  -I/usr/include/x86_64-linux-gnu -I/usr/include/x86_64-linux-gnu 
COVERAGE = no
CPP = /opt/ecrc/gcc/10.2.0/ub18/bin/gcc -E
CPPFLAGS = -D_FORTIFY_SOURCE=1 -I/home/gengz/gpu-v2/exageostat/installdir/include -D_GNU_SOURCE 
CXX = /opt/ecrc/gcc/10.2.0/ub18/bin/g++
CXXCPP = /opt/ecrc/gcc/10.2.0/ub18/bin/g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O3 -g -O2 -gdwarf-2 -g3
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DGELS_LIBS = 
DLB_CFLAGS = 
DLB_LIBS = 
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = /opt/ecrc/gcc/10.2.0/ub18/bin/gfortran
FC = /opt/ecrc/gcc/10.2.0/ub18/bin/gfortran
FCFLAGS = -O3 -g -O2 -gdwarf-2 -g3
FFLAGS = -O3 -g -O2 -gdwarf-2 -g3
FFTWF_CFLAGS = 
FFTWF_LIBS = -lfftw3f
FFTWL_CFLAGS = 
FFTWL_LIBS = -lfftw3l
FFTW_CFLAGS = 
FFTW_LIBS = -lfftw3
FGREP = /bin/grep -F
FXTDIR = 
FXT_CFLAGS = 
FXT_LDFLAGS = 
FXT_LIBS = 
GDB = /usr/bin/gdb
GLOBAL_AM_CFLAGS =  -Wall -Werror=implicit -Werror=implicit-function-declaration
GOTODIR = 
GREP = /bin/grep
HAVE_CXX11 = 1
HAVE_FFTWFL = 1
HELP2MAN = 
HWLOC_CFLAGS = -I/home/gengz/gpu-v2/exageostat/installdir/include -I/usr/include/libxml2
HWLOC_LIBS = -L/home/gengz/gpu-v2/exageostat/installdir/lib -lhwloc
HWLOC_REQUIRES = hwloc
ICC = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = -L/home/gengz/gpu-v2/exageostat/installdir/lib -gdwarf-2 -g3
LIBOBJS = 
LIBS = $(top_builddir)/src/libstarpu-1.3.la $(MAGMA_LIBS) $(HWLOC_LIBS) -lrt -lrt -lm  -lpthread -lopenblas -L/usr/lib/x86_64-linux-gnu/openblas -lblas  $(FXT_LIBS)
LIBSOCL_INTERFACE_AGE = 0
LIBSOCL_INTERFACE_CURRENT = 0
LIBSOCL_INTERFACE_REVISION = 3
LIBSTARPUFFT_INTERFACE_AGE = 0
LIBSTARPUFFT_INTERFACE_CURRENT = 2
LIBSTARPUFFT_INTERFACE_REVISION = 1
LIBSTARPUMPI_INTERFACE_AGE = 0
LIBSTARPUMPI_INTERFACE_CURRENT = 3
LIBSTARPUMPI_INTERFACE_REVISION = 2
LIBSTARPURM_INTERFACE_AGE = 0
LIBSTARPURM_INTERFACE_CURRENT = 2
LIBSTARPURM_INTERFACE_REVISION = 0
LIBSTARPU_INTERFACE_AGE = 0
LIBSTARPU_INTERFACE_CURRENT = 8
LIBSTARPU_INTERFACE_REVISION = 0
LIBSTARPU_LDFLAGS =   -lcudart -lcublas -lcudart -lcusparse -lnvidia-ml -lstdc++ -L/home/gengz/gpu-v2/exageostat/installdir/lib -lhwloc            
LIBSTARPU_LINK = libstarpu-1.3.la
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAGMA_CFLAGS = 
MAGMA_LIBS = 
MAKEINFO = ${SHELL} '/home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9/build-aux/missing' makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MPICC = no
MPICC_LDFLAGS = 
MPICXX = no
MPIEXEC = /usr/bin/mpiexec
MPIEXEC_ARGS = 
MPIFORT = 
NM = /usr/bin/nm -B
NMAD_CFLAGS = 
NMAD_LIBS = 
NMEDIT = 
NVCC = /opt/ecrc/cuda/11.4/bin/nvcc
NVCCFLAGS = -std=c++11  -Wno-deprecated-gpu-targets -m64 $(am__append_1)
NVCC_CC = 
OBJDUMP = objdump
OBJEXT = o
OPENBLAS_CFLAGS = -I/usr/include/x86_64-linux-gnu
OPENBLAS_LIBS = -lopenblas
OPENMP_CFLAGS = 
OTOOL = 
OTOOL64 = 
PACKAGE = starpu
PACKAGE_BUGREPORT = starpu-devel@inria.fr
PACKAGE_NAME = StarPU
PACKAGE_STRING = StarPU 1.3.9
PACKAGE_TARNAME = starpu
PACKAGE_URL = http://gitlab.inria.fr/starpu/starpu
PACKAGE_VERSION = 1.3.9
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
POTI_CFLAGS = 
POTI_LIBS = 
PROG_DATE = date
PROG_FIND = /usr/bin/find
PROG_STAT = stat
RANLIB = ranlib
REALBASH = /bin/bash
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SIMGRID_CFLAGS = 
SIMGRID_LIBS = 
SIMGRID_MC = 
SOCL_OCL_LIB_OPENCL_DIR = 
SOCL_VENDORS = vendors/install/socl.icd vendors/nvidia.icd
STARPU_BLAS_LDFLAGS = 
STARPU_BUILD_DIR = /home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9
STARPU_COI_CPPFLAGS = 
STARPU_COI_LDFLAGS = 
STARPU_CUDA_CPPFLAGS = 
STARPU_CUDA_FORTRAN_LDFLAGS = 
STARPU_CUDA_LDFLAGS =  -lcudart -lcublas -lcudart -lcusparse -lnvidia-ml -lstdc++
STARPU_CUFFT_LDFLAGS = -lcufft
STARPU_CURAND_LDFLAGS =  -lcurand
STARPU_EFFECTIVE_VERSION = 1.3
STARPU_EXPORTED_LIBS =  -lpthread
STARPU_EXPORT_DYNAMIC = 
STARPU_GLPK_LDFLAGS =  
STARPU_HAVE_CXX11 = 1
STARPU_HAVE_F77_H = no
STARPU_HAVE_FFTW = 1
STARPU_HAVE_FFTWF = 1
STARPU_HAVE_HWLOC = 1
STARPU_HAVE_MAGMA = 
STARPU_HDF5_LDFLAGS = 
STARPU_LAPACK_LDFLAGS = 
STARPU_LEVELDB_LDFLAGS = 
STARPU_LIBNUMA_LDFLAGS =  
STARPU_MAJOR_VERSION = 1
STARPU_MINOR_VERSION = 3
STARPU_MS_LIB = 
STARPU_MS_LIB_ARCH = X64
STARPU_OPENBLAS = 1
STARPU_OPENBLAS_LDFLAGS = 
STARPU_OPENCL_CPPFLAGS = 
STARPU_OPENCL_DATAdir = 
STARPU_OPENCL_LDFLAGS = 
STARPU_OPENGL_RENDER = no
STARPU_OPENGL_RENDER_LDFLAGS = 
STARPU_PERF_DEBUG = no
STARPU_RELEASE_VERSION = 9
STARPU_SCIF_CPPFLAGS = 
STARPU_SCIF_LDFLAGS = 
STARPU_SC_HYPERVISOR = 
STARPU_SC_HYPERVISOR_DEBUG = no
STARPU_SRC_DIR = /home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9/.
STARPU_USE_CPU = yes
STARPU_USE_CUDA = yes
STARPU_USE_FXT = no
STARPU_USE_OPENCL = no
STRIP = strip
VERSION = 1.3.9
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
abs_builddir = /home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9/examples
abs_srcdir = /home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9/examples
abs_top_builddir = /home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9
abs_top_srcdir = /home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9
ac_ct_AR = ar
ac_ct_CC = /opt/ecrc/gcc/10.2.0/ub18/bin/gcc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
ac_ct_F77 = 
ac_ct_FC = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
doxygencommand = 
dvidir = ${docdir}
epstopdfcommand = /usr/bin/epstopdf
exec_prefix = ${prefix}
gitcommand = /usr/bin/git
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/gengz/gpu-v2/exageostat/installdir/dependencies/starpu-1.3.9/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
mpicc_path = no
mpicxx_path = no
mpiexec_path = /usr/bin/mpiexec
mpifort_path = 
oldincludedir = /usr/include
pdfdir = ${docdir}
pdflatexcommand = /usr/bin/pdflatex
prefix = /home/gengz/gpu-v2/exageostat/installdir
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-pc-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
#MPI_LAUNCHER = $(MPIEXEC)  $(MPIEXEC_ARGS) -np 4
#MPI_RUN_ARGS = STARPU_WORKERS_NOBIND=1 STARPU_NCPU=4 STARPU_NMPIMSTHREADS=4
V_nvcc_ = $(V_nvcc_$(AM_DEFAULT_VERBOSITY))
V_nvcc_0 = @echo "  NVCC    " $@;
V_nvcc_1 = 
V_nvcc = $(V_nvcc_$(V))
V_icc_ = $(V_icc_$(AM_DEFAULT_VERBOSITY))
V_icc_0 = @echo "  ICC     " $@;
V_icc_1 = 
V_icc = $(V_icc_$(V))
#STARPU_PERF_MODEL_DIR = $(abs_top_srcdir)/tools/perfmodels/sampling
#STARPU_HOSTNAME = mirage
#MALLOC_PERTURB_ = 0
#STARPU_SIMGRID = 1
#STARPU_QUICK_CHECK = 1
#STARPU_LONG_CHECK = 1

# StarPU --- Runtime system for heterogeneous multicore architectures.
#
# Copyright (C) 2009-2021  UniversitÃ© de Bordeaux, CNRS (LaBRI UMR 5800), Inria
# Copyright (C) 2011       TÃ©lÃ©com-SudParis
# Copyright (C) 2016       Uppsala University
# Copyright (C) 2017       Erwan Leria
#
# StarPU is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or (at
# your option) any later version.
#
# StarPU is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# See the GNU Lesser General Public License in COPYING.LGPL for more details.
#
AM_CFLAGS = $(MAGMA_CFLAGS) $(HWLOC_CFLAGS) -Wall $(STARPU_CUDA_CPPFLAGS) $(STARPU_OPENCL_CPPFLAGS) $(GLOBAL_AM_CFLAGS) -Wno-unused
AM_CXXFLAGS = $(MAGMA_CFLAGS) $(HWLOC_CFLAGS) -Wall $(STARPU_CUDA_CPPFLAGS) $(STARPU_OPENCL_CPPFLAGS) $(GLOBAL_AM_CXXFLAGS) -Wno-unused
AM_CPPFLAGS = -I$(top_srcdir)/include/ -I$(top_srcdir)/examples/ -I$(top_builddir)/include
AM_LDFLAGS =  $(STARPU_OPENCL_LDFLAGS) $(STARPU_CUDA_LDFLAGS) $(STARPU_COI_LDFLAGS) $(STARPU_SCIF_LDFLAGS)
SUBDIRS = stencil
BUILT_SOURCES = 

######################
# matVecMult example #
######################
#nobase_STARPU_OPENCL_DATA_DATA = basic_examples/vector_scal_opencl_kernel.cl \
#	basic_examples/multiformat_opencl_kernel.cl \
#	basic_examples/multiformat_conversion_codelets_opencl_kernel.cl \
#	basic_examples/block_opencl_kernel.cl \
#	basic_examples/variable_kernels_opencl_kernel.cl \
#	filters/fblock_opencl_kernel.cl \
#	filters/custom_mf/conversion_opencl.cl \
#	filters/custom_mf/custom_opencl.cl \
#	$(am__append_41) \
#	incrementer/incrementer_kernels_opencl_kernel.cl \
#	interface/complex_kernels.cl \
#	matvecmult/matvecmult_kernel.cl \
#	reductions/dot_product_opencl_kernels.cl
EXTRA_DIST = \
	README.txt				\
	axpy/axpy.h				\
	axpy/axpy_opencl_kernel.cl		\
	basic_examples/vector_scal_opencl_kernel.cl \
	basic_examples/multiformat_types.h  \
	basic_examples/multiformat_opencl_kernel.cl  \
	basic_examples/multiformat_conversion_codelets_opencl_kernel.cl \
	common/blas_model.c			\
	spmd/vector_scal_spmd.c			\
	spmv/spmv_cuda.cu			\
	spmv/spmv_opencl.cl			\
	spmv/matrix_market/examples/fidapm05.mtx \
	mult/xgemm.c				\
	mult/sgemm.sh				\
	lu/xlu.c				\
	lu/xlu_pivot.c				\
	lu/xlu_implicit.c			\
	lu/xlu_implicit_pivot.c			\
	lu/xlu_kernels.c			\
	lu/lu_example.c				\
	incrementer/incrementer_kernels_opencl_kernel.cl 	\
	basic_examples/variable_kernels_opencl_kernel.cl	\
	matvecmult/matvecmult_kernel.cl				\
	basic_examples/block_opencl_kernel.cl			\
	filters/fblock_opencl_kernel.cl		\
	filters/custom_mf/conversion_opencl.cl  \
	filters/custom_mf/custom_opencl.cl \
	filters/custom_mf/custom_types.h \
	interface/complex_kernels.cl \
	reductions/dot_product.h	\
	reductions/dot_product_opencl_kernels.cl	\
	scheduler/schedulers.sh				\
	scheduler/schedulers_context.sh			\
	fortran/Makefile				\
	sched_ctx/axpy_partition_gpu.h			\
	sched_ctx/axpy_partition_gpu.cu			\
	heat/heat.sh					\
	cholesky/cholesky.sh				\
	cholesky/cholesky_compiled.c			\
	lu/lu.sh

CLEANFILES = *.gcno *.gcda *.linkinfo *.mod starpu_idle_microsec.log *.mps */*.mps */*/*.mps *.dot */*.dot */*/*.dot *.pl */*.pl */*/*.pl *.png *.output tasks.rec perfs.rec */perfs.rec */*/perfs.rec perfs2.rec

# StarPU --- Runtime system for heterogeneous multicore architectures.
#
# Copyright (C) 2016-2021  UniversitÃ© de Bordeaux, CNRS (LaBRI UMR 5800), Inria
#
# StarPU is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or (at
# your option) any later version.
#
# StarPU is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# See the GNU Lesser General Public License in COPYING.LGPL for more details.
#
# Avoid using nvcc when making a coverity build, nvcc produces millions of
# lines of code which we don't want to analyze.  Instead, build dumb .o files
# containing empty functions.
#V_mynvcc_ = $(V_mynvcc_$(AM_DEFAULT_VERBOSITY))
#V_mynvcc_0 = @echo "  myNVCC  " $@;
#V_mynvcc_1 = 
#V_mynvcc = $(V_mynvcc_$(V))
examplebindir = $(libdir)/starpu/examples/
noinst_HEADERS = \
	axpy/axpy.h                             \
	cg/cg.h					\
	heat/lu_kernels_model.h			\
	heat/dw_sparse_cg.h			\
	heat/heat.h				\
	heat/dw_factolu.h			\
	lu/xlu.h				\
	lu/xlu_kernels.h			\
	lu/lu-float.h				\
	lu/lu-double.h				\
	lu/complex_float.h			\
	lu/complex_double.h			\
	lu/blas_complex.h			\
	cholesky/cholesky.h			\
	sched_ctx_utils/sched_ctx_utils.h	\
	common/blas_model.h			\
	common/blas.h				\
	mult/simple.h				\
	mult/double.h				\
	fortran/StarPU_fortran.h		\
	ppm_downscaler/ppm_downscaler.h		\
	ppm_downscaler/yuv_downscaler.h		\
	spmv/matrix_market/mmio.h		\
	spmv/matrix_market/mm_to_bcsr.h		\
	spmv/spmv.h				\
	spmv/dw_block_spmv.h                    \
	basic_examples/multiformat_types.h      \
	filters/custom_mf/custom_interface.h    \
	filters/custom_mf/custom_types.h	\
	interface/complex_interface.h		\
	interface/complex_codelet.h		\
	pi/pi.h					\
	pi/SobolQRNG/sobol.h			\
	pi/SobolQRNG/sobol_gold.h		\
	pi/SobolQRNG/sobol_gpu.h		\
	pi/SobolQRNG/sobol_primitives.h         \
	reductions/dot_product.h                \
	basic_examples/vector_scal_cpu_template.h \
	sched_ctx/axpy_partition_gpu.h

SHELL_TESTS = $(am__append_2) $(am__append_3) $(am__append_13) \
	$(am__append_14)
LOADER = loader
#LOADER = 
loader_CPPFLAGS = $(AM_CFLAGS) $(AM_CPPFLAGS) -I$(top_builddir)/src/ -I$(top_srcdir)/src/
LOADER_BIN = $(abs_top_builddir)/examples/$(LOADER)
#LOADER_BIN = $(top_builddir)/examples/loader-cross.sh
loader_SOURCES = ../tests/loader.c
LOADER_BIN2 = $(LOADER_BIN)
#LOADER_BIN2 = $(MPI_LAUNCHER) $(LOADER_BIN)
#TESTS_ENVIRONMENT = $(MPI_RUN_ARGS) top_builddir="$(abs_top_builddir)" top_srcdir="$(abs_top_srcdir)" $(LOADER_BIN2)
TESTS_ENVIRONMENT = $(MPI_RUN_ARGS) top_builddir="$(abs_top_builddir)" top_srcdir="$(abs_top_srcdir)"
LOG_COMPILER = $(LOADER_BIN2)

# STARPU_EXAMPLES list all applications which have to be compiled and checked
# Applications which should only be compiled are added directly in examplebin_PROGRAMS
# see for instance mandelbrot/mandelbrot
STARPU_EXAMPLES = sched_ctx/prio scheduler/dummy_sched \
	scheduler/dummy_modular_sched \
	worker_collections/worker_list_example api/bcsr_data_interface \
	api/block_data_interface api/coo_data_interface \
	api/csr_data_interface api/matrix_data_interface \
	api/multiformat_data_interface api/variable_data_interface \
	api/vector_data_interface api/void_data_interface \
	$(am__append_5) $(am__append_6) $(am__append_7) \
	$(am__append_8) $(am__append_9) $(am__append_10) \
	$(am__append_11) $(am__append_12) $(am__append_15) \
	$(am__append_16) $(am__append_17) $(am__append_18) \
	$(am__append_19) $(am__append_20) $(am__append_21)
sched_ctx_gpu_partition_SOURCES = \
	sched_ctx/gpu_partition.c		\
	sched_ctx/axpy_partition_gpu.cu


##################
# Basic examples #
##################
basic_examples_vector_scal_SOURCES = basic_examples/vector_scal.c \
	basic_examples/vector_scal_cpu.c $(am__append_22) \
	$(am__append_23) $(am__append_24)
#basic_examples_vector_scal_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(ICC) $(basic_examples_vector_scal_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
##basic_examples_vector_scal_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) $(basic_examples_vector_scal_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
basic_examples_vector_scal_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) $(basic_examples_vector_scal_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#basic_examples_vector_scal_fortran_SOURCES =  \
#	basic_examples/vector_scal_fortran.F \
#	basic_examples/vector_scal_c.c \
#	basic_examples/vector_scal_cpu.c \
#	$(am__append_25)
#basic_examples_vector_scal_fortran_LDADD = \
#	$(STARPU_CUDA_FORTRAN_LDFLAGS)

##fortran_hello_SOURCES = \
##	fortran/hello_c.c		\
##	fortran/hello.F			\
##	fortran/StarPU_fortran.h

#fortran90_f90_example_SOURCES = \
#	fortran90/mod_types.f90		\
#	$(top_srcdir)/include/starpu_mod.f90	\
#	fortran90/mod_interface.f90	\
#	fortran90/mod_compute.f90	\
#	fortran90/marshalling.c		\
#	fortran90/f90_example.f90

#native_fortran_nf_vector_SOURCES = \
#	native_fortran/nf_codelets.f90		\
#	$(top_srcdir)/include/fstarpu_mod.f90	\
#	native_fortran/nf_vector.f90

#native_fortran_nf_matrix_SOURCES = \
#	native_fortran/nf_codelets.f90		\
#	$(top_srcdir)/include/fstarpu_mod.f90	\
#	native_fortran/nf_matrix.f90

#native_fortran_nf_example_SOURCES = \
#	native_fortran/nf_types.f90		\
#	native_fortran/nf_compute.f90		\
#	$(top_srcdir)/include/fstarpu_mod.f90	\
#	native_fortran/nf_example.f90

#native_fortran_nf_dynbuf_SOURCES = \
#	native_fortran/nf_dynbuf_cl.f90		\
#	$(top_srcdir)/include/fstarpu_mod.f90	\
#	native_fortran/nf_dynbuf.f90

#native_fortran_nf_varbuf_SOURCES = \
#	native_fortran/nf_varbuf_cl.f90		\
#	$(top_srcdir)/include/fstarpu_mod.f90	\
#	native_fortran/nf_varbuf.f90

#native_fortran_nf_sched_ctx_SOURCES = \
#	native_fortran/nf_sched_ctx_cl.f90		\
#	$(top_srcdir)/include/fstarpu_mod.f90	\
#	native_fortran/nf_sched_ctx.f90

#native_fortran_nf_partition_SOURCES = \
#	native_fortran/nf_partition_cl.f90		\
#	$(top_srcdir)/include/fstarpu_mod.f90	\
#	native_fortran/nf_partition.f90


#######################
# Multiformat example #
#######################
basic_examples_multiformat_SOURCES = basic_examples/multiformat.c \
	basic_examples/multiformat_conversion_codelets.c \
	$(am__append_26) $(am__append_27)

#################
# block example #
#################
basic_examples_block_SOURCES = basic_examples/block.c \
	basic_examples/block_cpu.c $(am__append_28) $(am__append_29)

####################
# Variable example #
####################
basic_examples_variable_SOURCES = basic_examples/variable.c \
	basic_examples/variable_kernels_cpu.c $(am__append_30) \
	$(am__append_31)

###########
# Filters #
###########
filters_fblock_SOURCES = filters/fblock.c filters/fblock_cpu.c \
	$(am__append_32) $(am__append_33)
filters_fmultiple_manual_SOURCES = filters/fmultiple_manual.c \
	$(am__append_34)
filters_fmultiple_submit_SOURCES = filters/fmultiple_submit.c \
	$(am__append_35)
filters_fmultiple_submit_readonly_SOURCES =  \
	filters/fmultiple_submit_readonly.c $(am__append_36)
filters_fmultiple_submit_implicit_SOURCES =  \
	filters/fmultiple_submit_implicit.c $(am__append_37)
filters_custom_mf_custom_mf_filter_SOURCES =  \
	filters/custom_mf/custom_mf_filter.c \
	filters/custom_mf/custom_interface.c \
	filters/custom_mf/custom_conversion_codelets.c \
	$(am__append_38) $(am__append_39)

################
# AXPY example #
################
axpy_axpy_SOURCES = axpy/axpy.c \
	common/blas.c $(am__append_40)
axpy_axpy_LDADD = \
	$(STARPU_BLAS_LDFLAGS)


################
# Mult example #
################
mult_sgemm_SOURCES = mult/sgemm.c $(am__append_42)
mult_sgemm_LDADD = \
	$(STARPU_BLAS_LDFLAGS)

mult_dgemm_SOURCES = mult/dgemm.c $(am__append_43)
mult_dgemm_LDADD = \
	$(STARPU_BLAS_LDFLAGS)


####################
# Cholesky example #
####################
cholesky_cholesky_tag_SOURCES = \
	cholesky/cholesky_tag.c			\
	cholesky/cholesky_models.c		\
	cholesky/cholesky_kernels.c		\
	common/blas.c

cholesky_cholesky_tag_LDADD = \
	$(STARPU_BLAS_LDFLAGS)

cholesky_cholesky_tile_tag_SOURCES = \
	cholesky/cholesky_tile_tag.c		\
	cholesky/cholesky_models.c		\
	cholesky/cholesky_kernels.c		\
	common/blas.c

cholesky_cholesky_tile_tag_LDADD = \
	$(STARPU_BLAS_LDFLAGS)

cholesky_cholesky_grain_tag_SOURCES = \
	cholesky/cholesky_grain_tag.c		\
	cholesky/cholesky_models.c		\
	cholesky/cholesky_kernels.c		\
	common/blas.c

cholesky_cholesky_grain_tag_LDADD = \
	$(STARPU_BLAS_LDFLAGS)

cholesky_cholesky_implicit_SOURCES = \
	cholesky/cholesky_implicit.c		\
	cholesky/cholesky_models.c		\
	cholesky/cholesky_kernels.c		\
	sched_ctx_utils/sched_ctx_utils.c	\
	common/blas.c

cholesky_cholesky_implicit_LDADD = \
	$(STARPU_BLAS_LDFLAGS)

cholesky_cholesky_compil_SOURCES = \
	cholesky/cholesky_compil.c		\
	cholesky/cholesky_models.c		\
	cholesky/cholesky_kernels.c		\
	sched_ctx_utils/sched_ctx_utils.c	\
	common/blas.c

cholesky_cholesky_compil_LDADD = \
	$(STARPU_BLAS_LDFLAGS)


##############
# LU example #
##############
lu_lu_example_float_SOURCES = \
	lu/lu_example_float.c			\
	lu/slu.c				\
	lu/slu_pivot.c				\
	lu/slu_kernels.c			\
	common/blas.c

lu_lu_example_float_LDADD = \
	$(STARPU_BLAS_LDFLAGS)

lu_lu_example_double_SOURCES = \
	lu/lu_example_double.c			\
	lu/dlu.c				\
	lu/dlu_pivot.c				\
	lu/dlu_kernels.c			\
	common/blas.c

lu_lu_example_double_LDADD = \
	$(STARPU_BLAS_LDFLAGS)

lu_lu_implicit_example_float_SOURCES = \
	lu/lu_example_float.c			\
	lu/slu_implicit.c			\
	lu/slu_implicit_pivot.c			\
	lu/slu_kernels.c			\
	common/blas.c

lu_lu_implicit_example_float_LDADD = \
	$(STARPU_BLAS_LDFLAGS)

lu_lu_implicit_example_double_SOURCES = \
	lu/lu_example_double.c			\
	lu/dlu_implicit.c			\
	lu/dlu_implicit_pivot.c			\
	lu/dlu_kernels.c			\
	common/blas.c

lu_lu_implicit_example_double_LDADD = \
	$(STARPU_BLAS_LDFLAGS)

#lu_lu_example_complex_float_SOURCES = \
#	lu/lu_example_complex_float.c		\
#	lu/clu.c				\
#	lu/clu_pivot.c				\
#	lu/clu_kernels.c			\
#	lu/blas_complex.c			\
#	common/blas.c

#lu_lu_example_complex_float_LDADD = \
#	$(STARPU_BLAS_LDFLAGS)

#lu_lu_implicit_example_complex_float_SOURCES = \
#	lu/lu_example_complex_float.c		\
#	lu/clu_implicit.c			\
#	lu/clu_implicit_pivot.c			\
#	lu/clu_kernels.c			\
#	lu/blas_complex.c			\
#	common/blas.c

#lu_lu_implicit_example_complex_float_LDADD = \
#	$(STARPU_BLAS_LDFLAGS)

#lu_lu_example_complex_double_SOURCES = \
#	lu/lu_example_complex_double.c		\
#	lu/zlu.c				\
#	lu/zlu_pivot.c				\
#	lu/zlu_kernels.c			\
#	lu/blas_complex.c			\
#	common/blas.c

#lu_lu_example_complex_double_LDADD = \
#	$(STARPU_BLAS_LDFLAGS)

#lu_lu_implicit_example_complex_double_SOURCES = \
#	lu/lu_example_complex_double.c		\
#	lu/zlu_implicit.c			\
#	lu/zlu_implicit_pivot.c			\
#	lu/zlu_kernels.c			\
#	lu/blas_complex.c			\
#	common/blas.c

#lu_lu_implicit_example_complex_double_LDADD = \
#	$(STARPU_BLAS_LDFLAGS)


################
# Heat example #
################
heat_heat_SOURCES = \
	heat/heat.c				\
	heat/dw_factolu.c			\
	heat/dw_factolu_tag.c			\
	heat/dw_factolu_grain.c			\
	heat/dw_sparse_cg.c			\
	heat/heat_display.c			\
	heat/lu_kernels_model.c			\
	heat/dw_sparse_cg_kernels.c		\
	heat/dw_factolu_kernels.c		\
	common/blas.c

heat_heat_LDADD = \
	$(STARPU_OPENGL_RENDER_LDFLAGS)		\
	$(STARPU_BLAS_LDFLAGS)


##############
# CG example #
##############
cg_cg_SOURCES = \
	cg/cg.c					\
	cg/cg_kernels.c				\
	common/blas.c

cg_cg_LDADD = \
	$(STARPU_BLAS_LDFLAGS)


################
# SPMD example #
################
spmd_vector_scal_spmd_SOURCES = \
	spmd/vector_scal_spmd.c


################
# SpMV example #
################
spmv_spmv_SOURCES = spmv/spmv.c spmv/spmv_kernels.c $(am__append_44)
spmv_dw_block_spmv_SOURCES = \
	spmv/dw_block_spmv.c			\
	spmv/dw_block_spmv_kernels.c		\
	spmv/matrix_market/mm_to_bcsr.c		\
	spmv/matrix_market/mmio.c

spmv_dw_block_spmv_LDADD = \
	$(STARPU_BLAS_LDFLAGS)


###########################
# C++ Incrementer example #
###########################
cpp_incrementer_cpp_SOURCES = cpp/incrementer_cpp.cpp $(am__append_45) \
	$(am__append_46)

###########################
# C++ Add vectors example #
###########################
cpp_add_vectors_SOURCES = \
	cpp/add_vectors.cpp

cpp_add_vectors_interface_SOURCES = \
	cpp/add_vectors_interface.cpp

cpp_add_vectors_cpp11_SOURCES = \
	cpp/add_vectors_cpp11.cpp


#######################
# Incrementer example #
#######################
incrementer_incrementer_SOURCES = incrementer/incrementer.c \
	$(am__append_47) $(am__append_48)

##################
# Binary example #
##################
binary_binary_SOURCES = binary/binary.c $(am__append_49)

#####################
# interface example #
#####################
interface_complex_SOURCES = interface/complex.c \
	interface/complex_interface.c interface/complex_filters.c \
	$(am__append_50) $(am__append_51)

#######################
# dot_product example #
#######################
reductions_dot_product_SOURCES = reductions/dot_product.c \
	$(am__append_52)
mandelbrot_mandelbrot_CPPFLAGS = $(AM_CFLAGS) $(AM_CPPFLAGS) \
	$(am__append_53)
mandelbrot_mandelbrot_LDADD = $(X_PRE_LIBS) $(X_LIBS) -lX11 $(X_EXTRA_LIBS)
pi_pi_SOURCES = pi/pi.c \
	pi/SobolQRNG/sobol_gold.c \
	pi/SobolQRNG/sobol_primitives.c \
	$(am__append_55)
pi_pi_redux_SOURCES = pi/pi_redux.c \
	$(am__append_56)
pi_pi_redux_LDADD = \
	$(STARPU_CURAND_LDFLAGS)

#gl_interop_gl_interop_SOURCES = \
#	gl_interop/gl_interop.c

#gl_interop_gl_interop_LDADD = \
#	$(STARPU_OPENGL_RENDER_LDFLAGS)

#gl_interop_gl_interop_idle_SOURCES = \
#	gl_interop/gl_interop_idle.c

#gl_interop_gl_interop_idle_LDADD = \
#	$(STARPU_OPENGL_RENDER_LDFLAGS)


####################
# pipeline example #
####################
pipeline_pipeline_SOURCES = \
	pipeline/pipeline.c		\
	common/blas.c

pipeline_pipeline_LDADD = \
	$(STARPU_BLAS_LDFLAGS)


##################
# openmp example #
##################
#openmp_vector_scal_omp_CFLAGS = \
#	$(AM_CFLAGS) -fopenmp

#sched_ctx_parallel_code_CFLAGS = \
#	$(AM_CFLAGS) -fopenmp

#sched_ctx_sched_ctx_without_sched_policy_CFLAGS = \
#	$(AM_CFLAGS) -fopenmp

#sched_ctx_nested_sched_ctxs_CFLAGS = \
#	$(AM_CFLAGS) -fopenmp

#sched_ctx_parallel_tasks_reuse_handle_CFLAGS = \
#	$(AM_CFLAGS) -fopenmp

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .F .c .cpp .cu .f .f90 .icc .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/starpu.mk $(top_srcdir)/starpu-mynvcc.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign examples/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign examples/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/starpu.mk $(top_srcdir)/starpu-mynvcc.mk $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
loader-cross.sh: $(top_builddir)/config.status $(srcdir)/loader-cross.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-examplebinPROGRAMS: $(examplebin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(examplebin_PROGRAMS)'; test -n "$(examplebindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(examplebindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(examplebindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(examplebindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(examplebindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-examplebinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(examplebin_PROGRAMS)'; test -n "$(examplebindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(examplebindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(examplebindir)" && rm -f $$files

clean-examplebinPROGRAMS:
	@list='$(examplebin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
api/$(am__dirstamp):
	@$(MKDIR_P) api
	@: > api/$(am__dirstamp)

api/bcsr_data_interface$(EXEEXT): $(api_bcsr_data_interface_OBJECTS) $(api_bcsr_data_interface_DEPENDENCIES) $(EXTRA_api_bcsr_data_interface_DEPENDENCIES) api/$(am__dirstamp)
	@rm -f api/bcsr_data_interface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(api_bcsr_data_interface_OBJECTS) $(api_bcsr_data_interface_LDADD) $(LIBS)

api/block_data_interface$(EXEEXT): $(api_block_data_interface_OBJECTS) $(api_block_data_interface_DEPENDENCIES) $(EXTRA_api_block_data_interface_DEPENDENCIES) api/$(am__dirstamp)
	@rm -f api/block_data_interface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(api_block_data_interface_OBJECTS) $(api_block_data_interface_LDADD) $(LIBS)

api/coo_data_interface$(EXEEXT): $(api_coo_data_interface_OBJECTS) $(api_coo_data_interface_DEPENDENCIES) $(EXTRA_api_coo_data_interface_DEPENDENCIES) api/$(am__dirstamp)
	@rm -f api/coo_data_interface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(api_coo_data_interface_OBJECTS) $(api_coo_data_interface_LDADD) $(LIBS)

api/csr_data_interface$(EXEEXT): $(api_csr_data_interface_OBJECTS) $(api_csr_data_interface_DEPENDENCIES) $(EXTRA_api_csr_data_interface_DEPENDENCIES) api/$(am__dirstamp)
	@rm -f api/csr_data_interface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(api_csr_data_interface_OBJECTS) $(api_csr_data_interface_LDADD) $(LIBS)

api/matrix_data_interface$(EXEEXT): $(api_matrix_data_interface_OBJECTS) $(api_matrix_data_interface_DEPENDENCIES) $(EXTRA_api_matrix_data_interface_DEPENDENCIES) api/$(am__dirstamp)
	@rm -f api/matrix_data_interface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(api_matrix_data_interface_OBJECTS) $(api_matrix_data_interface_LDADD) $(LIBS)

api/multiformat_data_interface$(EXEEXT): $(api_multiformat_data_interface_OBJECTS) $(api_multiformat_data_interface_DEPENDENCIES) $(EXTRA_api_multiformat_data_interface_DEPENDENCIES) api/$(am__dirstamp)
	@rm -f api/multiformat_data_interface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(api_multiformat_data_interface_OBJECTS) $(api_multiformat_data_interface_LDADD) $(LIBS)

api/variable_data_interface$(EXEEXT): $(api_variable_data_interface_OBJECTS) $(api_variable_data_interface_DEPENDENCIES) $(EXTRA_api_variable_data_interface_DEPENDENCIES) api/$(am__dirstamp)
	@rm -f api/variable_data_interface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(api_variable_data_interface_OBJECTS) $(api_variable_data_interface_LDADD) $(LIBS)

api/vector_data_interface$(EXEEXT): $(api_vector_data_interface_OBJECTS) $(api_vector_data_interface_DEPENDENCIES) $(EXTRA_api_vector_data_interface_DEPENDENCIES) api/$(am__dirstamp)
	@rm -f api/vector_data_interface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(api_vector_data_interface_OBJECTS) $(api_vector_data_interface_LDADD) $(LIBS)

api/void_data_interface$(EXEEXT): $(api_void_data_interface_OBJECTS) $(api_void_data_interface_DEPENDENCIES) $(EXTRA_api_void_data_interface_DEPENDENCIES) api/$(am__dirstamp)
	@rm -f api/void_data_interface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(api_void_data_interface_OBJECTS) $(api_void_data_interface_LDADD) $(LIBS)
axpy/$(am__dirstamp):
	@$(MKDIR_P) axpy
	@: > axpy/$(am__dirstamp)

axpy/axpy$(EXEEXT): $(axpy_axpy_OBJECTS) $(axpy_axpy_DEPENDENCIES) $(EXTRA_axpy_axpy_DEPENDENCIES) axpy/$(am__dirstamp)
	@rm -f axpy/axpy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(axpy_axpy_OBJECTS) $(axpy_axpy_LDADD) $(LIBS)
basic_examples/$(am__dirstamp):
	@$(MKDIR_P) basic_examples
	@: > basic_examples/$(am__dirstamp)
basic_examples/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) basic_examples/$(DEPDIR)
	@: > basic_examples/$(DEPDIR)/$(am__dirstamp)
basic_examples/block_cuda.$(OBJEXT): basic_examples/$(am__dirstamp) \
	basic_examples/$(DEPDIR)/$(am__dirstamp)

basic_examples/block$(EXEEXT): $(basic_examples_block_OBJECTS) $(basic_examples_block_DEPENDENCIES) $(EXTRA_basic_examples_block_DEPENDENCIES) basic_examples/$(am__dirstamp)
	@rm -f basic_examples/block$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(basic_examples_block_OBJECTS) $(basic_examples_block_LDADD) $(LIBS)

basic_examples/dynamic_handles$(EXEEXT): $(basic_examples_dynamic_handles_OBJECTS) $(basic_examples_dynamic_handles_DEPENDENCIES) $(EXTRA_basic_examples_dynamic_handles_DEPENDENCIES) basic_examples/$(am__dirstamp)
	@rm -f basic_examples/dynamic_handles$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(basic_examples_dynamic_handles_OBJECTS) $(basic_examples_dynamic_handles_LDADD) $(LIBS)

basic_examples/hello_world$(EXEEXT): $(basic_examples_hello_world_OBJECTS) $(basic_examples_hello_world_DEPENDENCIES) $(EXTRA_basic_examples_hello_world_DEPENDENCIES) basic_examples/$(am__dirstamp)
	@rm -f basic_examples/hello_world$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(basic_examples_hello_world_OBJECTS) $(basic_examples_hello_world_LDADD) $(LIBS)

basic_examples/mult$(EXEEXT): $(basic_examples_mult_OBJECTS) $(basic_examples_mult_DEPENDENCIES) $(EXTRA_basic_examples_mult_DEPENDENCIES) basic_examples/$(am__dirstamp)
	@rm -f basic_examples/mult$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(basic_examples_mult_OBJECTS) $(basic_examples_mult_LDADD) $(LIBS)
basic_examples/multiformat_cuda.$(OBJEXT):  \
	basic_examples/$(am__dirstamp) \
	basic_examples/$(DEPDIR)/$(am__dirstamp)
basic_examples/multiformat_conversion_codelets_cuda.$(OBJEXT):  \
	basic_examples/$(am__dirstamp) \
	basic_examples/$(DEPDIR)/$(am__dirstamp)

basic_examples/multiformat$(EXEEXT): $(basic_examples_multiformat_OBJECTS) $(basic_examples_multiformat_DEPENDENCIES) $(EXTRA_basic_examples_multiformat_DEPENDENCIES) basic_examples/$(am__dirstamp)
	@rm -f basic_examples/multiformat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(basic_examples_multiformat_OBJECTS) $(basic_examples_multiformat_LDADD) $(LIBS)

basic_examples/task_insert_color$(EXEEXT): $(basic_examples_task_insert_color_OBJECTS) $(basic_examples_task_insert_color_DEPENDENCIES) $(EXTRA_basic_examples_task_insert_color_DEPENDENCIES) basic_examples/$(am__dirstamp)
	@rm -f basic_examples/task_insert_color$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(basic_examples_task_insert_color_OBJECTS) $(basic_examples_task_insert_color_LDADD) $(LIBS)

basic_examples/topology$(EXEEXT): $(basic_examples_topology_OBJECTS) $(basic_examples_topology_DEPENDENCIES) $(EXTRA_basic_examples_topology_DEPENDENCIES) basic_examples/$(am__dirstamp)
	@rm -f basic_examples/topology$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(basic_examples_topology_OBJECTS) $(basic_examples_topology_LDADD) $(LIBS)
basic_examples/variable_kernels.$(OBJEXT):  \
	basic_examples/$(am__dirstamp) \
	basic_examples/$(DEPDIR)/$(am__dirstamp)

basic_examples/variable$(EXEEXT): $(basic_examples_variable_OBJECTS) $(basic_examples_variable_DEPENDENCIES) $(EXTRA_basic_examples_variable_DEPENDENCIES) basic_examples/$(am__dirstamp)
	@rm -f basic_examples/variable$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(basic_examples_variable_OBJECTS) $(basic_examples_variable_LDADD) $(LIBS)
basic_examples/vector_scal_cpu_icc.$(OBJEXT):  \
	basic_examples/$(am__dirstamp) \
	basic_examples/$(DEPDIR)/$(am__dirstamp)
basic_examples/vector_scal_cuda.$(OBJEXT):  \
	basic_examples/$(am__dirstamp) \
	basic_examples/$(DEPDIR)/$(am__dirstamp)

basic_examples/vector_scal$(EXEEXT): $(basic_examples_vector_scal_OBJECTS) $(basic_examples_vector_scal_DEPENDENCIES) $(EXTRA_basic_examples_vector_scal_DEPENDENCIES) basic_examples/$(am__dirstamp)
	@rm -f basic_examples/vector_scal$(EXEEXT)
	$(AM_V_GEN)$(basic_examples_vector_scal_LINK) $(basic_examples_vector_scal_OBJECTS) $(basic_examples_vector_scal_LDADD) $(LIBS)

basic_examples/vector_scal_fortran$(EXEEXT): $(basic_examples_vector_scal_fortran_OBJECTS) $(basic_examples_vector_scal_fortran_DEPENDENCIES) $(EXTRA_basic_examples_vector_scal_fortran_DEPENDENCIES) basic_examples/$(am__dirstamp)
	@rm -f basic_examples/vector_scal_fortran$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(basic_examples_vector_scal_fortran_OBJECTS) $(basic_examples_vector_scal_fortran_LDADD) $(LIBS)
binary/$(am__dirstamp):
	@$(MKDIR_P) binary
	@: > binary/$(am__dirstamp)

binary/binary$(EXEEXT): $(binary_binary_OBJECTS) $(binary_binary_DEPENDENCIES) $(EXTRA_binary_binary_DEPENDENCIES) binary/$(am__dirstamp)
	@rm -f binary/binary$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(binary_binary_OBJECTS) $(binary_binary_LDADD) $(LIBS)
callback/$(am__dirstamp):
	@$(MKDIR_P) callback
	@: > callback/$(am__dirstamp)

callback/callback$(EXEEXT): $(callback_callback_OBJECTS) $(callback_callback_DEPENDENCIES) $(EXTRA_callback_callback_DEPENDENCIES) callback/$(am__dirstamp)
	@rm -f callback/callback$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(callback_callback_OBJECTS) $(callback_callback_LDADD) $(LIBS)

callback/prologue$(EXEEXT): $(callback_prologue_OBJECTS) $(callback_prologue_DEPENDENCIES) $(EXTRA_callback_prologue_DEPENDENCIES) callback/$(am__dirstamp)
	@rm -f callback/prologue$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(callback_prologue_OBJECTS) $(callback_prologue_LDADD) $(LIBS)
cg/$(am__dirstamp):
	@$(MKDIR_P) cg
	@: > cg/$(am__dirstamp)

cg/cg$(EXEEXT): $(cg_cg_OBJECTS) $(cg_cg_DEPENDENCIES) $(EXTRA_cg_cg_DEPENDENCIES) cg/$(am__dirstamp)
	@rm -f cg/cg$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cg_cg_OBJECTS) $(cg_cg_LDADD) $(LIBS)
cholesky/$(am__dirstamp):
	@$(MKDIR_P) cholesky
	@: > cholesky/$(am__dirstamp)

cholesky/cholesky_compil$(EXEEXT): $(cholesky_cholesky_compil_OBJECTS) $(cholesky_cholesky_compil_DEPENDENCIES) $(EXTRA_cholesky_cholesky_compil_DEPENDENCIES) cholesky/$(am__dirstamp)
	@rm -f cholesky/cholesky_compil$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cholesky_cholesky_compil_OBJECTS) $(cholesky_cholesky_compil_LDADD) $(LIBS)

cholesky/cholesky_grain_tag$(EXEEXT): $(cholesky_cholesky_grain_tag_OBJECTS) $(cholesky_cholesky_grain_tag_DEPENDENCIES) $(EXTRA_cholesky_cholesky_grain_tag_DEPENDENCIES) cholesky/$(am__dirstamp)
	@rm -f cholesky/cholesky_grain_tag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cholesky_cholesky_grain_tag_OBJECTS) $(cholesky_cholesky_grain_tag_LDADD) $(LIBS)

cholesky/cholesky_implicit$(EXEEXT): $(cholesky_cholesky_implicit_OBJECTS) $(cholesky_cholesky_implicit_DEPENDENCIES) $(EXTRA_cholesky_cholesky_implicit_DEPENDENCIES) cholesky/$(am__dirstamp)
	@rm -f cholesky/cholesky_implicit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cholesky_cholesky_implicit_OBJECTS) $(cholesky_cholesky_implicit_LDADD) $(LIBS)

cholesky/cholesky_tag$(EXEEXT): $(cholesky_cholesky_tag_OBJECTS) $(cholesky_cholesky_tag_DEPENDENCIES) $(EXTRA_cholesky_cholesky_tag_DEPENDENCIES) cholesky/$(am__dirstamp)
	@rm -f cholesky/cholesky_tag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cholesky_cholesky_tag_OBJECTS) $(cholesky_cholesky_tag_LDADD) $(LIBS)

cholesky/cholesky_tile_tag$(EXEEXT): $(cholesky_cholesky_tile_tag_OBJECTS) $(cholesky_cholesky_tile_tag_DEPENDENCIES) $(EXTRA_cholesky_cholesky_tile_tag_DEPENDENCIES) cholesky/$(am__dirstamp)
	@rm -f cholesky/cholesky_tile_tag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cholesky_cholesky_tile_tag_OBJECTS) $(cholesky_cholesky_tile_tag_LDADD) $(LIBS)
cpp/$(am__dirstamp):
	@$(MKDIR_P) cpp
	@: > cpp/$(am__dirstamp)

cpp/add_vectors$(EXEEXT): $(cpp_add_vectors_OBJECTS) $(cpp_add_vectors_DEPENDENCIES) $(EXTRA_cpp_add_vectors_DEPENDENCIES) cpp/$(am__dirstamp)
	@rm -f cpp/add_vectors$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(cpp_add_vectors_OBJECTS) $(cpp_add_vectors_LDADD) $(LIBS)

cpp/add_vectors_cpp11$(EXEEXT): $(cpp_add_vectors_cpp11_OBJECTS) $(cpp_add_vectors_cpp11_DEPENDENCIES) $(EXTRA_cpp_add_vectors_cpp11_DEPENDENCIES) cpp/$(am__dirstamp)
	@rm -f cpp/add_vectors_cpp11$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(cpp_add_vectors_cpp11_OBJECTS) $(cpp_add_vectors_cpp11_LDADD) $(LIBS)

cpp/add_vectors_interface$(EXEEXT): $(cpp_add_vectors_interface_OBJECTS) $(cpp_add_vectors_interface_DEPENDENCIES) $(EXTRA_cpp_add_vectors_interface_DEPENDENCIES) cpp/$(am__dirstamp)
	@rm -f cpp/add_vectors_interface$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(cpp_add_vectors_interface_OBJECTS) $(cpp_add_vectors_interface_LDADD) $(LIBS)
incrementer/$(am__dirstamp):
	@$(MKDIR_P) incrementer
	@: > incrementer/$(am__dirstamp)
incrementer/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) incrementer/$(DEPDIR)
	@: > incrementer/$(DEPDIR)/$(am__dirstamp)
incrementer/incrementer_kernels.$(OBJEXT):  \
	incrementer/$(am__dirstamp) \
	incrementer/$(DEPDIR)/$(am__dirstamp)

cpp/incrementer_cpp$(EXEEXT): $(cpp_incrementer_cpp_OBJECTS) $(cpp_incrementer_cpp_DEPENDENCIES) $(EXTRA_cpp_incrementer_cpp_DEPENDENCIES) cpp/$(am__dirstamp)
	@rm -f cpp/incrementer_cpp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(cpp_incrementer_cpp_OBJECTS) $(cpp_incrementer_cpp_LDADD) $(LIBS)
dependency/$(am__dirstamp):
	@$(MKDIR_P) dependency
	@: > dependency/$(am__dirstamp)

dependency/sequential_consistency$(EXEEXT): $(dependency_sequential_consistency_OBJECTS) $(dependency_sequential_consistency_DEPENDENCIES) $(EXTRA_dependency_sequential_consistency_DEPENDENCIES) dependency/$(am__dirstamp)
	@rm -f dependency/sequential_consistency$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dependency_sequential_consistency_OBJECTS) $(dependency_sequential_consistency_LDADD) $(LIBS)

dependency/task_end_dep$(EXEEXT): $(dependency_task_end_dep_OBJECTS) $(dependency_task_end_dep_DEPENDENCIES) $(EXTRA_dependency_task_end_dep_DEPENDENCIES) dependency/$(am__dirstamp)
	@rm -f dependency/task_end_dep$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dependency_task_end_dep_OBJECTS) $(dependency_task_end_dep_LDADD) $(LIBS)

dependency/task_end_dep_add$(EXEEXT): $(dependency_task_end_dep_add_OBJECTS) $(dependency_task_end_dep_add_DEPENDENCIES) $(EXTRA_dependency_task_end_dep_add_DEPENDENCIES) dependency/$(am__dirstamp)
	@rm -f dependency/task_end_dep_add$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dependency_task_end_dep_add_OBJECTS) $(dependency_task_end_dep_add_LDADD) $(LIBS)
filters/custom_mf/$(am__dirstamp):
	@$(MKDIR_P) filters/custom_mf
	@: > filters/custom_mf/$(am__dirstamp)
filters/custom_mf/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) filters/custom_mf/$(DEPDIR)
	@: > filters/custom_mf/$(DEPDIR)/$(am__dirstamp)
filters/custom_mf/conversion.$(OBJEXT):  \
	filters/custom_mf/$(am__dirstamp) \
	filters/custom_mf/$(DEPDIR)/$(am__dirstamp)
filters/custom_mf/cuda.$(OBJEXT): filters/custom_mf/$(am__dirstamp) \
	filters/custom_mf/$(DEPDIR)/$(am__dirstamp)

filters/custom_mf/custom_mf_filter$(EXEEXT): $(filters_custom_mf_custom_mf_filter_OBJECTS) $(filters_custom_mf_custom_mf_filter_DEPENDENCIES) $(EXTRA_filters_custom_mf_custom_mf_filter_DEPENDENCIES) filters/custom_mf/$(am__dirstamp)
	@rm -f filters/custom_mf/custom_mf_filter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(filters_custom_mf_custom_mf_filter_OBJECTS) $(filters_custom_mf_custom_mf_filter_LDADD) $(LIBS)
filters/$(am__dirstamp):
	@$(MKDIR_P) filters
	@: > filters/$(am__dirstamp)
filters/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) filters/$(DEPDIR)
	@: > filters/$(DEPDIR)/$(am__dirstamp)
filters/fblock_cuda.$(OBJEXT): filters/$(am__dirstamp) \
	filters/$(DEPDIR)/$(am__dirstamp)

filters/fblock$(EXEEXT): $(filters_fblock_OBJECTS) $(filters_fblock_DEPENDENCIES) $(EXTRA_filters_fblock_DEPENDENCIES) filters/$(am__dirstamp)
	@rm -f filters/fblock$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(filters_fblock_OBJECTS) $(filters_fblock_LDADD) $(LIBS)

filters/fmatrix$(EXEEXT): $(filters_fmatrix_OBJECTS) $(filters_fmatrix_DEPENDENCIES) $(EXTRA_filters_fmatrix_DEPENDENCIES) filters/$(am__dirstamp)
	@rm -f filters/fmatrix$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(filters_fmatrix_OBJECTS) $(filters_fmatrix_LDADD) $(LIBS)
filters/fmultiple_cuda.$(OBJEXT): filters/$(am__dirstamp) \
	filters/$(DEPDIR)/$(am__dirstamp)

filters/fmultiple_manual$(EXEEXT): $(filters_fmultiple_manual_OBJECTS) $(filters_fmultiple_manual_DEPENDENCIES) $(EXTRA_filters_fmultiple_manual_DEPENDENCIES) filters/$(am__dirstamp)
	@rm -f filters/fmultiple_manual$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(filters_fmultiple_manual_OBJECTS) $(filters_fmultiple_manual_LDADD) $(LIBS)

filters/fmultiple_submit$(EXEEXT): $(filters_fmultiple_submit_OBJECTS) $(filters_fmultiple_submit_DEPENDENCIES) $(EXTRA_filters_fmultiple_submit_DEPENDENCIES) filters/$(am__dirstamp)
	@rm -f filters/fmultiple_submit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(filters_fmultiple_submit_OBJECTS) $(filters_fmultiple_submit_LDADD) $(LIBS)

filters/fmultiple_submit_implicit$(EXEEXT): $(filters_fmultiple_submit_implicit_OBJECTS) $(filters_fmultiple_submit_implicit_DEPENDENCIES) $(EXTRA_filters_fmultiple_submit_implicit_DEPENDENCIES) filters/$(am__dirstamp)
	@rm -f filters/fmultiple_submit_implicit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(filters_fmultiple_submit_implicit_OBJECTS) $(filters_fmultiple_submit_implicit_LDADD) $(LIBS)

filters/fmultiple_submit_readonly$(EXEEXT): $(filters_fmultiple_submit_readonly_OBJECTS) $(filters_fmultiple_submit_readonly_DEPENDENCIES) $(EXTRA_filters_fmultiple_submit_readonly_DEPENDENCIES) filters/$(am__dirstamp)
	@rm -f filters/fmultiple_submit_readonly$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(filters_fmultiple_submit_readonly_OBJECTS) $(filters_fmultiple_submit_readonly_LDADD) $(LIBS)

filters/fread$(EXEEXT): $(filters_fread_OBJECTS) $(filters_fread_DEPENDENCIES) $(EXTRA_filters_fread_DEPENDENCIES) filters/$(am__dirstamp)
	@rm -f filters/fread$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(filters_fread_OBJECTS) $(filters_fread_LDADD) $(LIBS)

filters/frecursive$(EXEEXT): $(filters_frecursive_OBJECTS) $(filters_frecursive_DEPENDENCIES) $(EXTRA_filters_frecursive_DEPENDENCIES) filters/$(am__dirstamp)
	@rm -f filters/frecursive$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(filters_frecursive_OBJECTS) $(filters_frecursive_LDADD) $(LIBS)

filters/fvector$(EXEEXT): $(filters_fvector_OBJECTS) $(filters_fvector_DEPENDENCIES) $(EXTRA_filters_fvector_DEPENDENCIES) filters/$(am__dirstamp)
	@rm -f filters/fvector$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(filters_fvector_OBJECTS) $(filters_fvector_LDADD) $(LIBS)

filters/shadow$(EXEEXT): $(filters_shadow_OBJECTS) $(filters_shadow_DEPENDENCIES) $(EXTRA_filters_shadow_DEPENDENCIES) filters/$(am__dirstamp)
	@rm -f filters/shadow$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(filters_shadow_OBJECTS) $(filters_shadow_LDADD) $(LIBS)

filters/shadow2d$(EXEEXT): $(filters_shadow2d_OBJECTS) $(filters_shadow2d_DEPENDENCIES) $(EXTRA_filters_shadow2d_DEPENDENCIES) filters/$(am__dirstamp)
	@rm -f filters/shadow2d$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(filters_shadow2d_OBJECTS) $(filters_shadow2d_LDADD) $(LIBS)

filters/shadow3d$(EXEEXT): $(filters_shadow3d_OBJECTS) $(filters_shadow3d_DEPENDENCIES) $(EXTRA_filters_shadow3d_DEPENDENCIES) filters/$(am__dirstamp)
	@rm -f filters/shadow3d$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(filters_shadow3d_OBJECTS) $(filters_shadow3d_LDADD) $(LIBS)
fortran/$(am__dirstamp):
	@$(MKDIR_P) fortran
	@: > fortran/$(am__dirstamp)

fortran/hello$(EXEEXT): $(fortran_hello_OBJECTS) $(fortran_hello_DEPENDENCIES) $(EXTRA_fortran_hello_DEPENDENCIES) fortran/$(am__dirstamp)
	@rm -f fortran/hello$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(fortran_hello_OBJECTS) $(fortran_hello_LDADD) $(LIBS)
fortran90/$(am__dirstamp):
	@$(MKDIR_P) fortran90
	@: > fortran90/$(am__dirstamp)

fortran90/f90_example$(EXEEXT): $(fortran90_f90_example_OBJECTS) $(fortran90_f90_example_DEPENDENCIES) $(EXTRA_fortran90_f90_example_DEPENDENCIES) fortran90/$(am__dirstamp)
	@rm -f fortran90/f90_example$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(fortran90_f90_example_OBJECTS) $(fortran90_f90_example_LDADD) $(LIBS)
gl_interop/$(am__dirstamp):
	@$(MKDIR_P) gl_interop
	@: > gl_interop/$(am__dirstamp)

gl_interop/gl_interop$(EXEEXT): $(gl_interop_gl_interop_OBJECTS) $(gl_interop_gl_interop_DEPENDENCIES) $(EXTRA_gl_interop_gl_interop_DEPENDENCIES) gl_interop/$(am__dirstamp)
	@rm -f gl_interop/gl_interop$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gl_interop_gl_interop_OBJECTS) $(gl_interop_gl_interop_LDADD) $(LIBS)

gl_interop/gl_interop_idle$(EXEEXT): $(gl_interop_gl_interop_idle_OBJECTS) $(gl_interop_gl_interop_idle_DEPENDENCIES) $(EXTRA_gl_interop_gl_interop_idle_DEPENDENCIES) gl_interop/$(am__dirstamp)
	@rm -f gl_interop/gl_interop_idle$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gl_interop_gl_interop_idle_OBJECTS) $(gl_interop_gl_interop_idle_LDADD) $(LIBS)
heat/$(am__dirstamp):
	@$(MKDIR_P) heat
	@: > heat/$(am__dirstamp)

heat/heat$(EXEEXT): $(heat_heat_OBJECTS) $(heat_heat_DEPENDENCIES) $(EXTRA_heat_heat_DEPENDENCIES) heat/$(am__dirstamp)
	@rm -f heat/heat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(heat_heat_OBJECTS) $(heat_heat_LDADD) $(LIBS)

incrementer/incrementer$(EXEEXT): $(incrementer_incrementer_OBJECTS) $(incrementer_incrementer_DEPENDENCIES) $(EXTRA_incrementer_incrementer_DEPENDENCIES) incrementer/$(am__dirstamp)
	@rm -f incrementer/incrementer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(incrementer_incrementer_OBJECTS) $(incrementer_incrementer_LDADD) $(LIBS)
interface/$(am__dirstamp):
	@$(MKDIR_P) interface
	@: > interface/$(am__dirstamp)
interface/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) interface/$(DEPDIR)
	@: > interface/$(DEPDIR)/$(am__dirstamp)
interface/complex_kernels.$(OBJEXT): interface/$(am__dirstamp) \
	interface/$(DEPDIR)/$(am__dirstamp)

interface/complex$(EXEEXT): $(interface_complex_OBJECTS) $(interface_complex_DEPENDENCIES) $(EXTRA_interface_complex_DEPENDENCIES) interface/$(am__dirstamp)
	@rm -f interface/complex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(interface_complex_OBJECTS) $(interface_complex_LDADD) $(LIBS)

loader$(EXEEXT): $(loader_OBJECTS) $(loader_DEPENDENCIES) $(EXTRA_loader_DEPENDENCIES) 
	@rm -f loader$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(loader_OBJECTS) $(loader_LDADD) $(LIBS)
lu/$(am__dirstamp):
	@$(MKDIR_P) lu
	@: > lu/$(am__dirstamp)

lu/lu_example_complex_double$(EXEEXT): $(lu_lu_example_complex_double_OBJECTS) $(lu_lu_example_complex_double_DEPENDENCIES) $(EXTRA_lu_lu_example_complex_double_DEPENDENCIES) lu/$(am__dirstamp)
	@rm -f lu/lu_example_complex_double$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lu_lu_example_complex_double_OBJECTS) $(lu_lu_example_complex_double_LDADD) $(LIBS)

lu/lu_example_complex_float$(EXEEXT): $(lu_lu_example_complex_float_OBJECTS) $(lu_lu_example_complex_float_DEPENDENCIES) $(EXTRA_lu_lu_example_complex_float_DEPENDENCIES) lu/$(am__dirstamp)
	@rm -f lu/lu_example_complex_float$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lu_lu_example_complex_float_OBJECTS) $(lu_lu_example_complex_float_LDADD) $(LIBS)

lu/lu_example_double$(EXEEXT): $(lu_lu_example_double_OBJECTS) $(lu_lu_example_double_DEPENDENCIES) $(EXTRA_lu_lu_example_double_DEPENDENCIES) lu/$(am__dirstamp)
	@rm -f lu/lu_example_double$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lu_lu_example_double_OBJECTS) $(lu_lu_example_double_LDADD) $(LIBS)

lu/lu_example_float$(EXEEXT): $(lu_lu_example_float_OBJECTS) $(lu_lu_example_float_DEPENDENCIES) $(EXTRA_lu_lu_example_float_DEPENDENCIES) lu/$(am__dirstamp)
	@rm -f lu/lu_example_float$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lu_lu_example_float_OBJECTS) $(lu_lu_example_float_LDADD) $(LIBS)

lu/lu_implicit_example_complex_double$(EXEEXT): $(lu_lu_implicit_example_complex_double_OBJECTS) $(lu_lu_implicit_example_complex_double_DEPENDENCIES) $(EXTRA_lu_lu_implicit_example_complex_double_DEPENDENCIES) lu/$(am__dirstamp)
	@rm -f lu/lu_implicit_example_complex_double$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lu_lu_implicit_example_complex_double_OBJECTS) $(lu_lu_implicit_example_complex_double_LDADD) $(LIBS)

lu/lu_implicit_example_complex_float$(EXEEXT): $(lu_lu_implicit_example_complex_float_OBJECTS) $(lu_lu_implicit_example_complex_float_DEPENDENCIES) $(EXTRA_lu_lu_implicit_example_complex_float_DEPENDENCIES) lu/$(am__dirstamp)
	@rm -f lu/lu_implicit_example_complex_float$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lu_lu_implicit_example_complex_float_OBJECTS) $(lu_lu_implicit_example_complex_float_LDADD) $(LIBS)

lu/lu_implicit_example_double$(EXEEXT): $(lu_lu_implicit_example_double_OBJECTS) $(lu_lu_implicit_example_double_DEPENDENCIES) $(EXTRA_lu_lu_implicit_example_double_DEPENDENCIES) lu/$(am__dirstamp)
	@rm -f lu/lu_implicit_example_double$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lu_lu_implicit_example_double_OBJECTS) $(lu_lu_implicit_example_double_LDADD) $(LIBS)

lu/lu_implicit_example_float$(EXEEXT): $(lu_lu_implicit_example_float_OBJECTS) $(lu_lu_implicit_example_float_DEPENDENCIES) $(EXTRA_lu_lu_implicit_example_float_DEPENDENCIES) lu/$(am__dirstamp)
	@rm -f lu/lu_implicit_example_float$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lu_lu_implicit_example_float_OBJECTS) $(lu_lu_implicit_example_float_LDADD) $(LIBS)
mandelbrot/$(am__dirstamp):
	@$(MKDIR_P) mandelbrot
	@: > mandelbrot/$(am__dirstamp)

mandelbrot/mandelbrot$(EXEEXT): $(mandelbrot_mandelbrot_OBJECTS) $(mandelbrot_mandelbrot_DEPENDENCIES) $(EXTRA_mandelbrot_mandelbrot_DEPENDENCIES) mandelbrot/$(am__dirstamp)
	@rm -f mandelbrot/mandelbrot$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mandelbrot_mandelbrot_OBJECTS) $(mandelbrot_mandelbrot_LDADD) $(LIBS)
matvecmult/$(am__dirstamp):
	@$(MKDIR_P) matvecmult
	@: > matvecmult/$(am__dirstamp)

matvecmult/matvecmult$(EXEEXT): $(matvecmult_matvecmult_OBJECTS) $(matvecmult_matvecmult_DEPENDENCIES) $(EXTRA_matvecmult_matvecmult_DEPENDENCIES) matvecmult/$(am__dirstamp)
	@rm -f matvecmult/matvecmult$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(matvecmult_matvecmult_OBJECTS) $(matvecmult_matvecmult_LDADD) $(LIBS)
mlr/$(am__dirstamp):
	@$(MKDIR_P) mlr
	@: > mlr/$(am__dirstamp)

mlr/mlr$(EXEEXT): $(mlr_mlr_OBJECTS) $(mlr_mlr_DEPENDENCIES) $(EXTRA_mlr_mlr_DEPENDENCIES) mlr/$(am__dirstamp)
	@rm -f mlr/mlr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mlr_mlr_OBJECTS) $(mlr_mlr_LDADD) $(LIBS)
mult/$(am__dirstamp):
	@$(MKDIR_P) mult
	@: > mult/$(am__dirstamp)

mult/dgemm$(EXEEXT): $(mult_dgemm_OBJECTS) $(mult_dgemm_DEPENDENCIES) $(EXTRA_mult_dgemm_DEPENDENCIES) mult/$(am__dirstamp)
	@rm -f mult/dgemm$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mult_dgemm_OBJECTS) $(mult_dgemm_LDADD) $(LIBS)

mult/sgemm$(EXEEXT): $(mult_sgemm_OBJECTS) $(mult_sgemm_DEPENDENCIES) $(EXTRA_mult_sgemm_DEPENDENCIES) mult/$(am__dirstamp)
	@rm -f mult/sgemm$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mult_sgemm_OBJECTS) $(mult_sgemm_LDADD) $(LIBS)
native_fortran/$(am__dirstamp):
	@$(MKDIR_P) native_fortran
	@: > native_fortran/$(am__dirstamp)

native_fortran/nf_dynbuf$(EXEEXT): $(native_fortran_nf_dynbuf_OBJECTS) $(native_fortran_nf_dynbuf_DEPENDENCIES) $(EXTRA_native_fortran_nf_dynbuf_DEPENDENCIES) native_fortran/$(am__dirstamp)
	@rm -f native_fortran/nf_dynbuf$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(native_fortran_nf_dynbuf_OBJECTS) $(native_fortran_nf_dynbuf_LDADD) $(LIBS)

native_fortran/nf_example$(EXEEXT): $(native_fortran_nf_example_OBJECTS) $(native_fortran_nf_example_DEPENDENCIES) $(EXTRA_native_fortran_nf_example_DEPENDENCIES) native_fortran/$(am__dirstamp)
	@rm -f native_fortran/nf_example$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(native_fortran_nf_example_OBJECTS) $(native_fortran_nf_example_LDADD) $(LIBS)

native_fortran/nf_matrix$(EXEEXT): $(native_fortran_nf_matrix_OBJECTS) $(native_fortran_nf_matrix_DEPENDENCIES) $(EXTRA_native_fortran_nf_matrix_DEPENDENCIES) native_fortran/$(am__dirstamp)
	@rm -f native_fortran/nf_matrix$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(native_fortran_nf_matrix_OBJECTS) $(native_fortran_nf_matrix_LDADD) $(LIBS)

native_fortran/nf_partition$(EXEEXT): $(native_fortran_nf_partition_OBJECTS) $(native_fortran_nf_partition_DEPENDENCIES) $(EXTRA_native_fortran_nf_partition_DEPENDENCIES) native_fortran/$(am__dirstamp)
	@rm -f native_fortran/nf_partition$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(native_fortran_nf_partition_OBJECTS) $(native_fortran_nf_partition_LDADD) $(LIBS)

native_fortran/nf_sched_ctx$(EXEEXT): $(native_fortran_nf_sched_ctx_OBJECTS) $(native_fortran_nf_sched_ctx_DEPENDENCIES) $(EXTRA_native_fortran_nf_sched_ctx_DEPENDENCIES) native_fortran/$(am__dirstamp)
	@rm -f native_fortran/nf_sched_ctx$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(native_fortran_nf_sched_ctx_OBJECTS) $(native_fortran_nf_sched_ctx_LDADD) $(LIBS)

native_fortran/nf_varbuf$(EXEEXT): $(native_fortran_nf_varbuf_OBJECTS) $(native_fortran_nf_varbuf_DEPENDENCIES) $(EXTRA_native_fortran_nf_varbuf_DEPENDENCIES) native_fortran/$(am__dirstamp)
	@rm -f native_fortran/nf_varbuf$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(native_fortran_nf_varbuf_OBJECTS) $(native_fortran_nf_varbuf_LDADD) $(LIBS)

native_fortran/nf_vector$(EXEEXT): $(native_fortran_nf_vector_OBJECTS) $(native_fortran_nf_vector_DEPENDENCIES) $(EXTRA_native_fortran_nf_vector_DEPENDENCIES) native_fortran/$(am__dirstamp)
	@rm -f native_fortran/nf_vector$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(native_fortran_nf_vector_OBJECTS) $(native_fortran_nf_vector_LDADD) $(LIBS)
openmp/$(am__dirstamp):
	@$(MKDIR_P) openmp
	@: > openmp/$(am__dirstamp)

openmp/vector_scal_omp$(EXEEXT): $(openmp_vector_scal_omp_OBJECTS) $(openmp_vector_scal_omp_DEPENDENCIES) $(EXTRA_openmp_vector_scal_omp_DEPENDENCIES) openmp/$(am__dirstamp)
	@rm -f openmp/vector_scal_omp$(EXEEXT)
	$(AM_V_CCLD)$(openmp_vector_scal_omp_LINK) $(openmp_vector_scal_omp_OBJECTS) $(openmp_vector_scal_omp_LDADD) $(LIBS)
pi/$(am__dirstamp):
	@$(MKDIR_P) pi
	@: > pi/$(am__dirstamp)
pi/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) pi/$(DEPDIR)
	@: > pi/$(DEPDIR)/$(am__dirstamp)
pi/pi_kernel.$(OBJEXT): pi/$(am__dirstamp) \
	pi/$(DEPDIR)/$(am__dirstamp)
pi/SobolQRNG/$(am__dirstamp):
	@$(MKDIR_P) pi/SobolQRNG
	@: > pi/SobolQRNG/$(am__dirstamp)
pi/SobolQRNG/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) pi/SobolQRNG/$(DEPDIR)
	@: > pi/SobolQRNG/$(DEPDIR)/$(am__dirstamp)
pi/SobolQRNG/sobol_gpu.$(OBJEXT): pi/SobolQRNG/$(am__dirstamp) \
	pi/SobolQRNG/$(DEPDIR)/$(am__dirstamp)

pi/pi$(EXEEXT): $(pi_pi_OBJECTS) $(pi_pi_DEPENDENCIES) $(EXTRA_pi_pi_DEPENDENCIES) pi/$(am__dirstamp)
	@rm -f pi/pi$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pi_pi_OBJECTS) $(pi_pi_LDADD) $(LIBS)
pi/pi_redux_kernel.$(OBJEXT): pi/$(am__dirstamp) \
	pi/$(DEPDIR)/$(am__dirstamp)

pi/pi_redux$(EXEEXT): $(pi_pi_redux_OBJECTS) $(pi_pi_redux_DEPENDENCIES) $(EXTRA_pi_pi_redux_DEPENDENCIES) pi/$(am__dirstamp)
	@rm -f pi/pi_redux$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pi_pi_redux_OBJECTS) $(pi_pi_redux_LDADD) $(LIBS)
pipeline/$(am__dirstamp):
	@$(MKDIR_P) pipeline
	@: > pipeline/$(am__dirstamp)

pipeline/pipeline$(EXEEXT): $(pipeline_pipeline_OBJECTS) $(pipeline_pipeline_DEPENDENCIES) $(EXTRA_pipeline_pipeline_DEPENDENCIES) pipeline/$(am__dirstamp)
	@rm -f pipeline/pipeline$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pipeline_pipeline_OBJECTS) $(pipeline_pipeline_LDADD) $(LIBS)
ppm_downscaler/$(am__dirstamp):
	@$(MKDIR_P) ppm_downscaler
	@: > ppm_downscaler/$(am__dirstamp)

ppm_downscaler/ppm_downscaler$(EXEEXT): $(ppm_downscaler_ppm_downscaler_OBJECTS) $(ppm_downscaler_ppm_downscaler_DEPENDENCIES) $(EXTRA_ppm_downscaler_ppm_downscaler_DEPENDENCIES) ppm_downscaler/$(am__dirstamp)
	@rm -f ppm_downscaler/ppm_downscaler$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ppm_downscaler_ppm_downscaler_OBJECTS) $(ppm_downscaler_ppm_downscaler_LDADD) $(LIBS)

ppm_downscaler/yuv_downscaler$(EXEEXT): $(ppm_downscaler_yuv_downscaler_OBJECTS) $(ppm_downscaler_yuv_downscaler_DEPENDENCIES) $(EXTRA_ppm_downscaler_yuv_downscaler_DEPENDENCIES) ppm_downscaler/$(am__dirstamp)
	@rm -f ppm_downscaler/yuv_downscaler$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ppm_downscaler_yuv_downscaler_OBJECTS) $(ppm_downscaler_yuv_downscaler_LDADD) $(LIBS)
profiling/$(am__dirstamp):
	@$(MKDIR_P) profiling
	@: > profiling/$(am__dirstamp)

profiling/profiling$(EXEEXT): $(profiling_profiling_OBJECTS) $(profiling_profiling_DEPENDENCIES) $(EXTRA_profiling_profiling_DEPENDENCIES) profiling/$(am__dirstamp)
	@rm -f profiling/profiling$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(profiling_profiling_OBJECTS) $(profiling_profiling_LDADD) $(LIBS)
reductions/$(am__dirstamp):
	@$(MKDIR_P) reductions
	@: > reductions/$(am__dirstamp)
reductions/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) reductions/$(DEPDIR)
	@: > reductions/$(DEPDIR)/$(am__dirstamp)
reductions/dot_product_kernels.$(OBJEXT): reductions/$(am__dirstamp) \
	reductions/$(DEPDIR)/$(am__dirstamp)

reductions/dot_product$(EXEEXT): $(reductions_dot_product_OBJECTS) $(reductions_dot_product_DEPENDENCIES) $(EXTRA_reductions_dot_product_DEPENDENCIES) reductions/$(am__dirstamp)
	@rm -f reductions/dot_product$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(reductions_dot_product_OBJECTS) $(reductions_dot_product_LDADD) $(LIBS)

reductions/minmax_reduction$(EXEEXT): $(reductions_minmax_reduction_OBJECTS) $(reductions_minmax_reduction_DEPENDENCIES) $(EXTRA_reductions_minmax_reduction_DEPENDENCIES) reductions/$(am__dirstamp)
	@rm -f reductions/minmax_reduction$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(reductions_minmax_reduction_OBJECTS) $(reductions_minmax_reduction_LDADD) $(LIBS)
sched_ctx/$(am__dirstamp):
	@$(MKDIR_P) sched_ctx
	@: > sched_ctx/$(am__dirstamp)

sched_ctx/dummy_sched_with_ctx$(EXEEXT): $(sched_ctx_dummy_sched_with_ctx_OBJECTS) $(sched_ctx_dummy_sched_with_ctx_DEPENDENCIES) $(EXTRA_sched_ctx_dummy_sched_with_ctx_DEPENDENCIES) sched_ctx/$(am__dirstamp)
	@rm -f sched_ctx/dummy_sched_with_ctx$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_ctx_dummy_sched_with_ctx_OBJECTS) $(sched_ctx_dummy_sched_with_ctx_LDADD) $(LIBS)
sched_ctx/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) sched_ctx/$(DEPDIR)
	@: > sched_ctx/$(DEPDIR)/$(am__dirstamp)
sched_ctx/axpy_partition_gpu.$(OBJEXT): sched_ctx/$(am__dirstamp) \
	sched_ctx/$(DEPDIR)/$(am__dirstamp)

sched_ctx/gpu_partition$(EXEEXT): $(sched_ctx_gpu_partition_OBJECTS) $(sched_ctx_gpu_partition_DEPENDENCIES) $(EXTRA_sched_ctx_gpu_partition_DEPENDENCIES) sched_ctx/$(am__dirstamp)
	@rm -f sched_ctx/gpu_partition$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_ctx_gpu_partition_OBJECTS) $(sched_ctx_gpu_partition_LDADD) $(LIBS)

sched_ctx/nested_sched_ctxs$(EXEEXT): $(sched_ctx_nested_sched_ctxs_OBJECTS) $(sched_ctx_nested_sched_ctxs_DEPENDENCIES) $(EXTRA_sched_ctx_nested_sched_ctxs_DEPENDENCIES) sched_ctx/$(am__dirstamp)
	@rm -f sched_ctx/nested_sched_ctxs$(EXEEXT)
	$(AM_V_CCLD)$(sched_ctx_nested_sched_ctxs_LINK) $(sched_ctx_nested_sched_ctxs_OBJECTS) $(sched_ctx_nested_sched_ctxs_LDADD) $(LIBS)

sched_ctx/parallel_code$(EXEEXT): $(sched_ctx_parallel_code_OBJECTS) $(sched_ctx_parallel_code_DEPENDENCIES) $(EXTRA_sched_ctx_parallel_code_DEPENDENCIES) sched_ctx/$(am__dirstamp)
	@rm -f sched_ctx/parallel_code$(EXEEXT)
	$(AM_V_CCLD)$(sched_ctx_parallel_code_LINK) $(sched_ctx_parallel_code_OBJECTS) $(sched_ctx_parallel_code_LDADD) $(LIBS)

sched_ctx/parallel_tasks_reuse_handle$(EXEEXT): $(sched_ctx_parallel_tasks_reuse_handle_OBJECTS) $(sched_ctx_parallel_tasks_reuse_handle_DEPENDENCIES) $(EXTRA_sched_ctx_parallel_tasks_reuse_handle_DEPENDENCIES) sched_ctx/$(am__dirstamp)
	@rm -f sched_ctx/parallel_tasks_reuse_handle$(EXEEXT)
	$(AM_V_CCLD)$(sched_ctx_parallel_tasks_reuse_handle_LINK) $(sched_ctx_parallel_tasks_reuse_handle_OBJECTS) $(sched_ctx_parallel_tasks_reuse_handle_LDADD) $(LIBS)

sched_ctx/parallel_tasks_with_cluster_api$(EXEEXT): $(sched_ctx_parallel_tasks_with_cluster_api_OBJECTS) $(sched_ctx_parallel_tasks_with_cluster_api_DEPENDENCIES) $(EXTRA_sched_ctx_parallel_tasks_with_cluster_api_DEPENDENCIES) sched_ctx/$(am__dirstamp)
	@rm -f sched_ctx/parallel_tasks_with_cluster_api$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_ctx_parallel_tasks_with_cluster_api_OBJECTS) $(sched_ctx_parallel_tasks_with_cluster_api_LDADD) $(LIBS)

sched_ctx/prio$(EXEEXT): $(sched_ctx_prio_OBJECTS) $(sched_ctx_prio_DEPENDENCIES) $(EXTRA_sched_ctx_prio_DEPENDENCIES) sched_ctx/$(am__dirstamp)
	@rm -f sched_ctx/prio$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_ctx_prio_OBJECTS) $(sched_ctx_prio_LDADD) $(LIBS)

sched_ctx/sched_ctx$(EXEEXT): $(sched_ctx_sched_ctx_OBJECTS) $(sched_ctx_sched_ctx_DEPENDENCIES) $(EXTRA_sched_ctx_sched_ctx_DEPENDENCIES) sched_ctx/$(am__dirstamp)
	@rm -f sched_ctx/sched_ctx$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_ctx_sched_ctx_OBJECTS) $(sched_ctx_sched_ctx_LDADD) $(LIBS)

sched_ctx/sched_ctx_delete$(EXEEXT): $(sched_ctx_sched_ctx_delete_OBJECTS) $(sched_ctx_sched_ctx_delete_DEPENDENCIES) $(EXTRA_sched_ctx_sched_ctx_delete_DEPENDENCIES) sched_ctx/$(am__dirstamp)
	@rm -f sched_ctx/sched_ctx_delete$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_ctx_sched_ctx_delete_OBJECTS) $(sched_ctx_sched_ctx_delete_LDADD) $(LIBS)

sched_ctx/sched_ctx_empty$(EXEEXT): $(sched_ctx_sched_ctx_empty_OBJECTS) $(sched_ctx_sched_ctx_empty_DEPENDENCIES) $(EXTRA_sched_ctx_sched_ctx_empty_DEPENDENCIES) sched_ctx/$(am__dirstamp)
	@rm -f sched_ctx/sched_ctx_empty$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_ctx_sched_ctx_empty_OBJECTS) $(sched_ctx_sched_ctx_empty_LDADD) $(LIBS)

sched_ctx/sched_ctx_without_sched_policy$(EXEEXT): $(sched_ctx_sched_ctx_without_sched_policy_OBJECTS) $(sched_ctx_sched_ctx_without_sched_policy_DEPENDENCIES) $(EXTRA_sched_ctx_sched_ctx_without_sched_policy_DEPENDENCIES) sched_ctx/$(am__dirstamp)
	@rm -f sched_ctx/sched_ctx_without_sched_policy$(EXEEXT)
	$(AM_V_CCLD)$(sched_ctx_sched_ctx_without_sched_policy_LINK) $(sched_ctx_sched_ctx_without_sched_policy_OBJECTS) $(sched_ctx_sched_ctx_without_sched_policy_LDADD) $(LIBS)

sched_ctx/sched_ctx_without_sched_policy_awake$(EXEEXT): $(sched_ctx_sched_ctx_without_sched_policy_awake_OBJECTS) $(sched_ctx_sched_ctx_without_sched_policy_awake_DEPENDENCIES) $(EXTRA_sched_ctx_sched_ctx_without_sched_policy_awake_DEPENDENCIES) sched_ctx/$(am__dirstamp)
	@rm -f sched_ctx/sched_ctx_without_sched_policy_awake$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_ctx_sched_ctx_without_sched_policy_awake_OBJECTS) $(sched_ctx_sched_ctx_without_sched_policy_awake_LDADD) $(LIBS)

sched_ctx/two_cpu_contexts$(EXEEXT): $(sched_ctx_two_cpu_contexts_OBJECTS) $(sched_ctx_two_cpu_contexts_DEPENDENCIES) $(EXTRA_sched_ctx_two_cpu_contexts_DEPENDENCIES) sched_ctx/$(am__dirstamp)
	@rm -f sched_ctx/two_cpu_contexts$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_ctx_two_cpu_contexts_OBJECTS) $(sched_ctx_two_cpu_contexts_LDADD) $(LIBS)
scheduler/$(am__dirstamp):
	@$(MKDIR_P) scheduler
	@: > scheduler/$(am__dirstamp)

scheduler/dummy_modular_sched$(EXEEXT): $(scheduler_dummy_modular_sched_OBJECTS) $(scheduler_dummy_modular_sched_DEPENDENCIES) $(EXTRA_scheduler_dummy_modular_sched_DEPENDENCIES) scheduler/$(am__dirstamp)
	@rm -f scheduler/dummy_modular_sched$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scheduler_dummy_modular_sched_OBJECTS) $(scheduler_dummy_modular_sched_LDADD) $(LIBS)

scheduler/dummy_sched$(EXEEXT): $(scheduler_dummy_sched_OBJECTS) $(scheduler_dummy_sched_DEPENDENCIES) $(EXTRA_scheduler_dummy_sched_DEPENDENCIES) scheduler/$(am__dirstamp)
	@rm -f scheduler/dummy_sched$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scheduler_dummy_sched_OBJECTS) $(scheduler_dummy_sched_LDADD) $(LIBS)

scheduler/heteroprio_test$(EXEEXT): $(scheduler_heteroprio_test_OBJECTS) $(scheduler_heteroprio_test_DEPENDENCIES) $(EXTRA_scheduler_heteroprio_test_DEPENDENCIES) scheduler/$(am__dirstamp)
	@rm -f scheduler/heteroprio_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scheduler_heteroprio_test_OBJECTS) $(scheduler_heteroprio_test_LDADD) $(LIBS)
spmd/$(am__dirstamp):
	@$(MKDIR_P) spmd
	@: > spmd/$(am__dirstamp)

spmd/vector_scal_spmd$(EXEEXT): $(spmd_vector_scal_spmd_OBJECTS) $(spmd_vector_scal_spmd_DEPENDENCIES) $(EXTRA_spmd_vector_scal_spmd_DEPENDENCIES) spmd/$(am__dirstamp)
	@rm -f spmd/vector_scal_spmd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(spmd_vector_scal_spmd_OBJECTS) $(spmd_vector_scal_spmd_LDADD) $(LIBS)
spmv/$(am__dirstamp):
	@$(MKDIR_P) spmv
	@: > spmv/$(am__dirstamp)

spmv/dw_block_spmv$(EXEEXT): $(spmv_dw_block_spmv_OBJECTS) $(spmv_dw_block_spmv_DEPENDENCIES) $(EXTRA_spmv_dw_block_spmv_DEPENDENCIES) spmv/$(am__dirstamp)
	@rm -f spmv/dw_block_spmv$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(spmv_dw_block_spmv_OBJECTS) $(spmv_dw_block_spmv_LDADD) $(LIBS)
spmv/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) spmv/$(DEPDIR)
	@: > spmv/$(DEPDIR)/$(am__dirstamp)
spmv/spmv_cuda.$(OBJEXT): spmv/$(am__dirstamp) \
	spmv/$(DEPDIR)/$(am__dirstamp)

spmv/spmv$(EXEEXT): $(spmv_spmv_OBJECTS) $(spmv_spmv_DEPENDENCIES) $(EXTRA_spmv_spmv_DEPENDENCIES) spmv/$(am__dirstamp)
	@rm -f spmv/spmv$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(spmv_spmv_OBJECTS) $(spmv_spmv_LDADD) $(LIBS)
tag_example/$(am__dirstamp):
	@$(MKDIR_P) tag_example
	@: > tag_example/$(am__dirstamp)

tag_example/tag_example$(EXEEXT): $(tag_example_tag_example_OBJECTS) $(tag_example_tag_example_DEPENDENCIES) $(EXTRA_tag_example_tag_example_DEPENDENCIES) tag_example/$(am__dirstamp)
	@rm -f tag_example/tag_example$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tag_example_tag_example_OBJECTS) $(tag_example_tag_example_LDADD) $(LIBS)

tag_example/tag_example2$(EXEEXT): $(tag_example_tag_example2_OBJECTS) $(tag_example_tag_example2_DEPENDENCIES) $(EXTRA_tag_example_tag_example2_DEPENDENCIES) tag_example/$(am__dirstamp)
	@rm -f tag_example/tag_example2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tag_example_tag_example2_OBJECTS) $(tag_example_tag_example2_LDADD) $(LIBS)

tag_example/tag_example3$(EXEEXT): $(tag_example_tag_example3_OBJECTS) $(tag_example_tag_example3_DEPENDENCIES) $(EXTRA_tag_example_tag_example3_DEPENDENCIES) tag_example/$(am__dirstamp)
	@rm -f tag_example/tag_example3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tag_example_tag_example3_OBJECTS) $(tag_example_tag_example3_LDADD) $(LIBS)

tag_example/tag_example4$(EXEEXT): $(tag_example_tag_example4_OBJECTS) $(tag_example_tag_example4_DEPENDENCIES) $(EXTRA_tag_example_tag_example4_DEPENDENCIES) tag_example/$(am__dirstamp)
	@rm -f tag_example/tag_example4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tag_example_tag_example4_OBJECTS) $(tag_example_tag_example4_LDADD) $(LIBS)

tag_example/tag_restartable$(EXEEXT): $(tag_example_tag_restartable_OBJECTS) $(tag_example_tag_restartable_DEPENDENCIES) $(EXTRA_tag_example_tag_restartable_DEPENDENCIES) tag_example/$(am__dirstamp)
	@rm -f tag_example/tag_restartable$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tag_example_tag_restartable_OBJECTS) $(tag_example_tag_restartable_LDADD) $(LIBS)
worker_collections/$(am__dirstamp):
	@$(MKDIR_P) worker_collections
	@: > worker_collections/$(am__dirstamp)

worker_collections/worker_list_example$(EXEEXT): $(worker_collections_worker_list_example_OBJECTS) $(worker_collections_worker_list_example_DEPENDENCIES) $(EXTRA_worker_collections_worker_list_example_DEPENDENCIES) worker_collections/$(am__dirstamp)
	@rm -f worker_collections/worker_list_example$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(worker_collections_worker_list_example_OBJECTS) $(worker_collections_worker_list_example_LDADD) $(LIBS)

worker_collections/worker_tree_example$(EXEEXT): $(worker_collections_worker_tree_example_OBJECTS) $(worker_collections_worker_tree_example_DEPENDENCIES) $(EXTRA_worker_collections_worker_tree_example_DEPENDENCIES) worker_collections/$(am__dirstamp)
	@rm -f worker_collections/worker_tree_example$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(worker_collections_worker_tree_example_OBJECTS) $(worker_collections_worker_tree_example_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f basic_examples/*.$(OBJEXT)
	-rm -f filters/*.$(OBJEXT)
	-rm -f filters/custom_mf/*.$(OBJEXT)
	-rm -f incrementer/*.$(OBJEXT)
	-rm -f interface/*.$(OBJEXT)
	-rm -f pi/*.$(OBJEXT)
	-rm -f pi/SobolQRNG/*.$(OBJEXT)
	-rm -f reductions/*.$(OBJEXT)
	-rm -f sched_ctx/*.$(OBJEXT)
	-rm -f spmv/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/add_vectors.Po # am--include-marker
include ./$(DEPDIR)/add_vectors_cpp11.Po # am--include-marker
include ./$(DEPDIR)/add_vectors_interface.Po # am--include-marker
include ./$(DEPDIR)/axpy.Po # am--include-marker
include ./$(DEPDIR)/axpy_opencl.Po # am--include-marker
include ./$(DEPDIR)/bcsr_data_interface.Po # am--include-marker
include ./$(DEPDIR)/binary.Po # am--include-marker
include ./$(DEPDIR)/blas.Po # am--include-marker
include ./$(DEPDIR)/blas_complex.Po # am--include-marker
include ./$(DEPDIR)/block.Po # am--include-marker
include ./$(DEPDIR)/block_cpu.Po # am--include-marker
include ./$(DEPDIR)/block_data_interface.Po # am--include-marker
include ./$(DEPDIR)/block_opencl.Po # am--include-marker
include ./$(DEPDIR)/callback.Po # am--include-marker
include ./$(DEPDIR)/cg.Po # am--include-marker
include ./$(DEPDIR)/cg_kernels.Po # am--include-marker
include ./$(DEPDIR)/cholesky_compil.Po # am--include-marker
include ./$(DEPDIR)/cholesky_grain_tag.Po # am--include-marker
include ./$(DEPDIR)/cholesky_implicit.Po # am--include-marker
include ./$(DEPDIR)/cholesky_kernels.Po # am--include-marker
include ./$(DEPDIR)/cholesky_models.Po # am--include-marker
include ./$(DEPDIR)/cholesky_tag.Po # am--include-marker
include ./$(DEPDIR)/cholesky_tile_tag.Po # am--include-marker
include ./$(DEPDIR)/clu.Po # am--include-marker
include ./$(DEPDIR)/clu_implicit.Po # am--include-marker
include ./$(DEPDIR)/clu_implicit_pivot.Po # am--include-marker
include ./$(DEPDIR)/clu_kernels.Po # am--include-marker
include ./$(DEPDIR)/clu_pivot.Po # am--include-marker
include ./$(DEPDIR)/complex.Po # am--include-marker
include ./$(DEPDIR)/complex_filters.Po # am--include-marker
include ./$(DEPDIR)/complex_interface.Po # am--include-marker
include ./$(DEPDIR)/complex_kernels_opencl.Po # am--include-marker
include ./$(DEPDIR)/conversion_opencl.Po # am--include-marker
include ./$(DEPDIR)/coo_data_interface.Po # am--include-marker
include ./$(DEPDIR)/csr_data_interface.Po # am--include-marker
include ./$(DEPDIR)/custom_conversion_codelets.Po # am--include-marker
include ./$(DEPDIR)/custom_interface.Po # am--include-marker
include ./$(DEPDIR)/custom_mf_filter.Po # am--include-marker
include ./$(DEPDIR)/custom_opencl.Po # am--include-marker
include ./$(DEPDIR)/dgemm.Po # am--include-marker
include ./$(DEPDIR)/dlu.Po # am--include-marker
include ./$(DEPDIR)/dlu_implicit.Po # am--include-marker
include ./$(DEPDIR)/dlu_implicit_pivot.Po # am--include-marker
include ./$(DEPDIR)/dlu_kernels.Po # am--include-marker
include ./$(DEPDIR)/dlu_pivot.Po # am--include-marker
include ./$(DEPDIR)/dot_product.Po # am--include-marker
include ./$(DEPDIR)/dummy_modular_sched.Po # am--include-marker
include ./$(DEPDIR)/dummy_sched.Po # am--include-marker
include ./$(DEPDIR)/dummy_sched_with_ctx.Po # am--include-marker
include ./$(DEPDIR)/dw_block_spmv.Po # am--include-marker
include ./$(DEPDIR)/dw_block_spmv_kernels.Po # am--include-marker
include ./$(DEPDIR)/dw_factolu.Po # am--include-marker
include ./$(DEPDIR)/dw_factolu_grain.Po # am--include-marker
include ./$(DEPDIR)/dw_factolu_kernels.Po # am--include-marker
include ./$(DEPDIR)/dw_factolu_tag.Po # am--include-marker
include ./$(DEPDIR)/dw_sparse_cg.Po # am--include-marker
include ./$(DEPDIR)/dw_sparse_cg_kernels.Po # am--include-marker
include ./$(DEPDIR)/dynamic_handles.Po # am--include-marker
include ./$(DEPDIR)/fblock.Po # am--include-marker
include ./$(DEPDIR)/fblock_cpu.Po # am--include-marker
include ./$(DEPDIR)/fblock_opencl.Po # am--include-marker
include ./$(DEPDIR)/fmatrix.Po # am--include-marker
include ./$(DEPDIR)/fmultiple_manual.Po # am--include-marker
include ./$(DEPDIR)/fmultiple_submit.Po # am--include-marker
include ./$(DEPDIR)/fmultiple_submit_implicit.Po # am--include-marker
include ./$(DEPDIR)/fmultiple_submit_readonly.Po # am--include-marker
include ./$(DEPDIR)/fread.Po # am--include-marker
include ./$(DEPDIR)/frecursive.Po # am--include-marker
include ./$(DEPDIR)/fvector.Po # am--include-marker
include ./$(DEPDIR)/gl_interop.Po # am--include-marker
include ./$(DEPDIR)/gl_interop_idle.Po # am--include-marker
include ./$(DEPDIR)/gpu_partition.Po # am--include-marker
include ./$(DEPDIR)/heat.Po # am--include-marker
include ./$(DEPDIR)/heat_display.Po # am--include-marker
include ./$(DEPDIR)/hello_c.Po # am--include-marker
include ./$(DEPDIR)/hello_world.Po # am--include-marker
include ./$(DEPDIR)/heteroprio_test.Po # am--include-marker
include ./$(DEPDIR)/incrementer.Po # am--include-marker
include ./$(DEPDIR)/incrementer_cpp.Po # am--include-marker
include ./$(DEPDIR)/incrementer_kernels_opencl.Po # am--include-marker
include ./$(DEPDIR)/loader-loader.Po # am--include-marker
include ./$(DEPDIR)/lu_example_complex_double.Po # am--include-marker
include ./$(DEPDIR)/lu_example_complex_float.Po # am--include-marker
include ./$(DEPDIR)/lu_example_double.Po # am--include-marker
include ./$(DEPDIR)/lu_example_float.Po # am--include-marker
include ./$(DEPDIR)/lu_kernels_model.Po # am--include-marker
include ./$(DEPDIR)/mandelbrot_mandelbrot-mandelbrot.Po # am--include-marker
include ./$(DEPDIR)/marshalling.Po # am--include-marker
include ./$(DEPDIR)/matrix_data_interface.Po # am--include-marker
include ./$(DEPDIR)/matvecmult.Po # am--include-marker
include ./$(DEPDIR)/minmax_reduction.Po # am--include-marker
include ./$(DEPDIR)/mlr.Po # am--include-marker
include ./$(DEPDIR)/mm_to_bcsr.Po # am--include-marker
include ./$(DEPDIR)/mmio.Po # am--include-marker
include ./$(DEPDIR)/mult.Po # am--include-marker
include ./$(DEPDIR)/multiformat.Po # am--include-marker
include ./$(DEPDIR)/multiformat_conversion_codelets.Po # am--include-marker
include ./$(DEPDIR)/multiformat_conversion_codelets_opencl.Po # am--include-marker
include ./$(DEPDIR)/multiformat_data_interface.Po # am--include-marker
include ./$(DEPDIR)/multiformat_opencl.Po # am--include-marker
include ./$(DEPDIR)/openmp_vector_scal_omp-vector_scal_omp.Po # am--include-marker
include ./$(DEPDIR)/parallel_tasks_with_cluster_api.Po # am--include-marker
include ./$(DEPDIR)/pi.Po # am--include-marker
include ./$(DEPDIR)/pi_redux.Po # am--include-marker
include ./$(DEPDIR)/pipeline.Po # am--include-marker
include ./$(DEPDIR)/ppm_downscaler.Po # am--include-marker
include ./$(DEPDIR)/prio.Po # am--include-marker
include ./$(DEPDIR)/profiling.Po # am--include-marker
include ./$(DEPDIR)/prologue.Po # am--include-marker
include ./$(DEPDIR)/sched_ctx.Po # am--include-marker
include ./$(DEPDIR)/sched_ctx_delete.Po # am--include-marker
include ./$(DEPDIR)/sched_ctx_empty.Po # am--include-marker
include ./$(DEPDIR)/sched_ctx_nested_sched_ctxs-nested_sched_ctxs.Po # am--include-marker
include ./$(DEPDIR)/sched_ctx_parallel_code-parallel_code.Po # am--include-marker
include ./$(DEPDIR)/sched_ctx_parallel_tasks_reuse_handle-parallel_tasks_reuse_handle.Po # am--include-marker
include ./$(DEPDIR)/sched_ctx_sched_ctx_without_sched_policy-sched_ctx_without_sched_policy.Po # am--include-marker
include ./$(DEPDIR)/sched_ctx_utils.Po # am--include-marker
include ./$(DEPDIR)/sched_ctx_without_sched_policy_awake.Po # am--include-marker
include ./$(DEPDIR)/sequential_consistency.Po # am--include-marker
include ./$(DEPDIR)/sgemm.Po # am--include-marker
include ./$(DEPDIR)/shadow.Po # am--include-marker
include ./$(DEPDIR)/shadow2d.Po # am--include-marker
include ./$(DEPDIR)/shadow3d.Po # am--include-marker
include ./$(DEPDIR)/slu.Po # am--include-marker
include ./$(DEPDIR)/slu_implicit.Po # am--include-marker
include ./$(DEPDIR)/slu_implicit_pivot.Po # am--include-marker
include ./$(DEPDIR)/slu_kernels.Po # am--include-marker
include ./$(DEPDIR)/slu_pivot.Po # am--include-marker
include ./$(DEPDIR)/sobol_gold.Po # am--include-marker
include ./$(DEPDIR)/sobol_primitives.Po # am--include-marker
include ./$(DEPDIR)/spmv.Po # am--include-marker
include ./$(DEPDIR)/spmv_kernels.Po # am--include-marker
include ./$(DEPDIR)/tag_example.Po # am--include-marker
include ./$(DEPDIR)/tag_example2.Po # am--include-marker
include ./$(DEPDIR)/tag_example3.Po # am--include-marker
include ./$(DEPDIR)/tag_example4.Po # am--include-marker
include ./$(DEPDIR)/tag_restartable.Po # am--include-marker
include ./$(DEPDIR)/task_end_dep.Po # am--include-marker
include ./$(DEPDIR)/task_end_dep_add.Po # am--include-marker
include ./$(DEPDIR)/task_insert_color.Po # am--include-marker
include ./$(DEPDIR)/topology.Po # am--include-marker
include ./$(DEPDIR)/two_cpu_contexts.Po # am--include-marker
include ./$(DEPDIR)/variable.Po # am--include-marker
include ./$(DEPDIR)/variable_data_interface.Po # am--include-marker
include ./$(DEPDIR)/variable_kernels_cpu.Po # am--include-marker
include ./$(DEPDIR)/variable_kernels_opencl.Po # am--include-marker
include ./$(DEPDIR)/vector_data_interface.Po # am--include-marker
include ./$(DEPDIR)/vector_scal.Po # am--include-marker
include ./$(DEPDIR)/vector_scal_c.Po # am--include-marker
include ./$(DEPDIR)/vector_scal_cpu.Po # am--include-marker
include ./$(DEPDIR)/vector_scal_opencl.Po # am--include-marker
include ./$(DEPDIR)/vector_scal_spmd.Po # am--include-marker
include ./$(DEPDIR)/void_data_interface.Po # am--include-marker
include ./$(DEPDIR)/worker_list_example.Po # am--include-marker
include ./$(DEPDIR)/worker_tree_example.Po # am--include-marker
include ./$(DEPDIR)/yuv_downscaler.Po # am--include-marker
include ./$(DEPDIR)/zlu.Po # am--include-marker
include ./$(DEPDIR)/zlu_implicit.Po # am--include-marker
include ./$(DEPDIR)/zlu_implicit_pivot.Po # am--include-marker
include ./$(DEPDIR)/zlu_kernels.Po # am--include-marker
include ./$(DEPDIR)/zlu_pivot.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.F.o:
	$(AM_V_PPF77)$(PPF77COMPILE) -c -o $@ $<

.F.obj:
	$(AM_V_PPF77)$(PPF77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.F.lo:
	$(AM_V_PPF77)$(LTPPF77COMPILE) -c -o $@ $<

vector_scal_fortran.o: basic_examples/vector_scal_fortran.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FFLAGS) $(FFLAGS) -c -o vector_scal_fortran.o `test -f 'basic_examples/vector_scal_fortran.F' || echo '$(srcdir)/'`basic_examples/vector_scal_fortran.F

vector_scal_fortran.obj: basic_examples/vector_scal_fortran.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FFLAGS) $(FFLAGS) -c -o vector_scal_fortran.obj `if test -f 'basic_examples/vector_scal_fortran.F'; then $(CYGPATH_W) 'basic_examples/vector_scal_fortran.F'; else $(CYGPATH_W) '$(srcdir)/basic_examples/vector_scal_fortran.F'; fi`

hello.o: fortran/hello.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FFLAGS) $(FFLAGS) -c -o hello.o `test -f 'fortran/hello.F' || echo '$(srcdir)/'`fortran/hello.F

hello.obj: fortran/hello.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FFLAGS) $(FFLAGS) -c -o hello.obj `if test -f 'fortran/hello.F'; then $(CYGPATH_W) 'fortran/hello.F'; else $(CYGPATH_W) '$(srcdir)/fortran/hello.F'; fi`
.F.f:
	$(F77COMPILE) -F $<

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

bcsr_data_interface.o: api/bcsr_data_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bcsr_data_interface.o -MD -MP -MF $(DEPDIR)/bcsr_data_interface.Tpo -c -o bcsr_data_interface.o `test -f 'api/bcsr_data_interface.c' || echo '$(srcdir)/'`api/bcsr_data_interface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bcsr_data_interface.Tpo $(DEPDIR)/bcsr_data_interface.Po
#	$(AM_V_CC)source='api/bcsr_data_interface.c' object='bcsr_data_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bcsr_data_interface.o `test -f 'api/bcsr_data_interface.c' || echo '$(srcdir)/'`api/bcsr_data_interface.c

bcsr_data_interface.obj: api/bcsr_data_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bcsr_data_interface.obj -MD -MP -MF $(DEPDIR)/bcsr_data_interface.Tpo -c -o bcsr_data_interface.obj `if test -f 'api/bcsr_data_interface.c'; then $(CYGPATH_W) 'api/bcsr_data_interface.c'; else $(CYGPATH_W) '$(srcdir)/api/bcsr_data_interface.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bcsr_data_interface.Tpo $(DEPDIR)/bcsr_data_interface.Po
#	$(AM_V_CC)source='api/bcsr_data_interface.c' object='bcsr_data_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bcsr_data_interface.obj `if test -f 'api/bcsr_data_interface.c'; then $(CYGPATH_W) 'api/bcsr_data_interface.c'; else $(CYGPATH_W) '$(srcdir)/api/bcsr_data_interface.c'; fi`

block_data_interface.o: api/block_data_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT block_data_interface.o -MD -MP -MF $(DEPDIR)/block_data_interface.Tpo -c -o block_data_interface.o `test -f 'api/block_data_interface.c' || echo '$(srcdir)/'`api/block_data_interface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/block_data_interface.Tpo $(DEPDIR)/block_data_interface.Po
#	$(AM_V_CC)source='api/block_data_interface.c' object='block_data_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o block_data_interface.o `test -f 'api/block_data_interface.c' || echo '$(srcdir)/'`api/block_data_interface.c

block_data_interface.obj: api/block_data_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT block_data_interface.obj -MD -MP -MF $(DEPDIR)/block_data_interface.Tpo -c -o block_data_interface.obj `if test -f 'api/block_data_interface.c'; then $(CYGPATH_W) 'api/block_data_interface.c'; else $(CYGPATH_W) '$(srcdir)/api/block_data_interface.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/block_data_interface.Tpo $(DEPDIR)/block_data_interface.Po
#	$(AM_V_CC)source='api/block_data_interface.c' object='block_data_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o block_data_interface.obj `if test -f 'api/block_data_interface.c'; then $(CYGPATH_W) 'api/block_data_interface.c'; else $(CYGPATH_W) '$(srcdir)/api/block_data_interface.c'; fi`

coo_data_interface.o: api/coo_data_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT coo_data_interface.o -MD -MP -MF $(DEPDIR)/coo_data_interface.Tpo -c -o coo_data_interface.o `test -f 'api/coo_data_interface.c' || echo '$(srcdir)/'`api/coo_data_interface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/coo_data_interface.Tpo $(DEPDIR)/coo_data_interface.Po
#	$(AM_V_CC)source='api/coo_data_interface.c' object='coo_data_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o coo_data_interface.o `test -f 'api/coo_data_interface.c' || echo '$(srcdir)/'`api/coo_data_interface.c

coo_data_interface.obj: api/coo_data_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT coo_data_interface.obj -MD -MP -MF $(DEPDIR)/coo_data_interface.Tpo -c -o coo_data_interface.obj `if test -f 'api/coo_data_interface.c'; then $(CYGPATH_W) 'api/coo_data_interface.c'; else $(CYGPATH_W) '$(srcdir)/api/coo_data_interface.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/coo_data_interface.Tpo $(DEPDIR)/coo_data_interface.Po
#	$(AM_V_CC)source='api/coo_data_interface.c' object='coo_data_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o coo_data_interface.obj `if test -f 'api/coo_data_interface.c'; then $(CYGPATH_W) 'api/coo_data_interface.c'; else $(CYGPATH_W) '$(srcdir)/api/coo_data_interface.c'; fi`

csr_data_interface.o: api/csr_data_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT csr_data_interface.o -MD -MP -MF $(DEPDIR)/csr_data_interface.Tpo -c -o csr_data_interface.o `test -f 'api/csr_data_interface.c' || echo '$(srcdir)/'`api/csr_data_interface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/csr_data_interface.Tpo $(DEPDIR)/csr_data_interface.Po
#	$(AM_V_CC)source='api/csr_data_interface.c' object='csr_data_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o csr_data_interface.o `test -f 'api/csr_data_interface.c' || echo '$(srcdir)/'`api/csr_data_interface.c

csr_data_interface.obj: api/csr_data_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT csr_data_interface.obj -MD -MP -MF $(DEPDIR)/csr_data_interface.Tpo -c -o csr_data_interface.obj `if test -f 'api/csr_data_interface.c'; then $(CYGPATH_W) 'api/csr_data_interface.c'; else $(CYGPATH_W) '$(srcdir)/api/csr_data_interface.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/csr_data_interface.Tpo $(DEPDIR)/csr_data_interface.Po
#	$(AM_V_CC)source='api/csr_data_interface.c' object='csr_data_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o csr_data_interface.obj `if test -f 'api/csr_data_interface.c'; then $(CYGPATH_W) 'api/csr_data_interface.c'; else $(CYGPATH_W) '$(srcdir)/api/csr_data_interface.c'; fi`

matrix_data_interface.o: api/matrix_data_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT matrix_data_interface.o -MD -MP -MF $(DEPDIR)/matrix_data_interface.Tpo -c -o matrix_data_interface.o `test -f 'api/matrix_data_interface.c' || echo '$(srcdir)/'`api/matrix_data_interface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/matrix_data_interface.Tpo $(DEPDIR)/matrix_data_interface.Po
#	$(AM_V_CC)source='api/matrix_data_interface.c' object='matrix_data_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matrix_data_interface.o `test -f 'api/matrix_data_interface.c' || echo '$(srcdir)/'`api/matrix_data_interface.c

matrix_data_interface.obj: api/matrix_data_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT matrix_data_interface.obj -MD -MP -MF $(DEPDIR)/matrix_data_interface.Tpo -c -o matrix_data_interface.obj `if test -f 'api/matrix_data_interface.c'; then $(CYGPATH_W) 'api/matrix_data_interface.c'; else $(CYGPATH_W) '$(srcdir)/api/matrix_data_interface.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/matrix_data_interface.Tpo $(DEPDIR)/matrix_data_interface.Po
#	$(AM_V_CC)source='api/matrix_data_interface.c' object='matrix_data_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matrix_data_interface.obj `if test -f 'api/matrix_data_interface.c'; then $(CYGPATH_W) 'api/matrix_data_interface.c'; else $(CYGPATH_W) '$(srcdir)/api/matrix_data_interface.c'; fi`

multiformat_data_interface.o: api/multiformat_data_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_data_interface.o -MD -MP -MF $(DEPDIR)/multiformat_data_interface.Tpo -c -o multiformat_data_interface.o `test -f 'api/multiformat_data_interface.c' || echo '$(srcdir)/'`api/multiformat_data_interface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_data_interface.Tpo $(DEPDIR)/multiformat_data_interface.Po
#	$(AM_V_CC)source='api/multiformat_data_interface.c' object='multiformat_data_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_data_interface.o `test -f 'api/multiformat_data_interface.c' || echo '$(srcdir)/'`api/multiformat_data_interface.c

multiformat_data_interface.obj: api/multiformat_data_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_data_interface.obj -MD -MP -MF $(DEPDIR)/multiformat_data_interface.Tpo -c -o multiformat_data_interface.obj `if test -f 'api/multiformat_data_interface.c'; then $(CYGPATH_W) 'api/multiformat_data_interface.c'; else $(CYGPATH_W) '$(srcdir)/api/multiformat_data_interface.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_data_interface.Tpo $(DEPDIR)/multiformat_data_interface.Po
#	$(AM_V_CC)source='api/multiformat_data_interface.c' object='multiformat_data_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_data_interface.obj `if test -f 'api/multiformat_data_interface.c'; then $(CYGPATH_W) 'api/multiformat_data_interface.c'; else $(CYGPATH_W) '$(srcdir)/api/multiformat_data_interface.c'; fi`

variable_data_interface.o: api/variable_data_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT variable_data_interface.o -MD -MP -MF $(DEPDIR)/variable_data_interface.Tpo -c -o variable_data_interface.o `test -f 'api/variable_data_interface.c' || echo '$(srcdir)/'`api/variable_data_interface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/variable_data_interface.Tpo $(DEPDIR)/variable_data_interface.Po
#	$(AM_V_CC)source='api/variable_data_interface.c' object='variable_data_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o variable_data_interface.o `test -f 'api/variable_data_interface.c' || echo '$(srcdir)/'`api/variable_data_interface.c

variable_data_interface.obj: api/variable_data_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT variable_data_interface.obj -MD -MP -MF $(DEPDIR)/variable_data_interface.Tpo -c -o variable_data_interface.obj `if test -f 'api/variable_data_interface.c'; then $(CYGPATH_W) 'api/variable_data_interface.c'; else $(CYGPATH_W) '$(srcdir)/api/variable_data_interface.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/variable_data_interface.Tpo $(DEPDIR)/variable_data_interface.Po
#	$(AM_V_CC)source='api/variable_data_interface.c' object='variable_data_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o variable_data_interface.obj `if test -f 'api/variable_data_interface.c'; then $(CYGPATH_W) 'api/variable_data_interface.c'; else $(CYGPATH_W) '$(srcdir)/api/variable_data_interface.c'; fi`

vector_data_interface.o: api/vector_data_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vector_data_interface.o -MD -MP -MF $(DEPDIR)/vector_data_interface.Tpo -c -o vector_data_interface.o `test -f 'api/vector_data_interface.c' || echo '$(srcdir)/'`api/vector_data_interface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/vector_data_interface.Tpo $(DEPDIR)/vector_data_interface.Po
#	$(AM_V_CC)source='api/vector_data_interface.c' object='vector_data_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vector_data_interface.o `test -f 'api/vector_data_interface.c' || echo '$(srcdir)/'`api/vector_data_interface.c

vector_data_interface.obj: api/vector_data_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vector_data_interface.obj -MD -MP -MF $(DEPDIR)/vector_data_interface.Tpo -c -o vector_data_interface.obj `if test -f 'api/vector_data_interface.c'; then $(CYGPATH_W) 'api/vector_data_interface.c'; else $(CYGPATH_W) '$(srcdir)/api/vector_data_interface.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/vector_data_interface.Tpo $(DEPDIR)/vector_data_interface.Po
#	$(AM_V_CC)source='api/vector_data_interface.c' object='vector_data_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vector_data_interface.obj `if test -f 'api/vector_data_interface.c'; then $(CYGPATH_W) 'api/vector_data_interface.c'; else $(CYGPATH_W) '$(srcdir)/api/vector_data_interface.c'; fi`

void_data_interface.o: api/void_data_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT void_data_interface.o -MD -MP -MF $(DEPDIR)/void_data_interface.Tpo -c -o void_data_interface.o `test -f 'api/void_data_interface.c' || echo '$(srcdir)/'`api/void_data_interface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/void_data_interface.Tpo $(DEPDIR)/void_data_interface.Po
#	$(AM_V_CC)source='api/void_data_interface.c' object='void_data_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o void_data_interface.o `test -f 'api/void_data_interface.c' || echo '$(srcdir)/'`api/void_data_interface.c

void_data_interface.obj: api/void_data_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT void_data_interface.obj -MD -MP -MF $(DEPDIR)/void_data_interface.Tpo -c -o void_data_interface.obj `if test -f 'api/void_data_interface.c'; then $(CYGPATH_W) 'api/void_data_interface.c'; else $(CYGPATH_W) '$(srcdir)/api/void_data_interface.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/void_data_interface.Tpo $(DEPDIR)/void_data_interface.Po
#	$(AM_V_CC)source='api/void_data_interface.c' object='void_data_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o void_data_interface.obj `if test -f 'api/void_data_interface.c'; then $(CYGPATH_W) 'api/void_data_interface.c'; else $(CYGPATH_W) '$(srcdir)/api/void_data_interface.c'; fi`

axpy.o: axpy/axpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT axpy.o -MD -MP -MF $(DEPDIR)/axpy.Tpo -c -o axpy.o `test -f 'axpy/axpy.c' || echo '$(srcdir)/'`axpy/axpy.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/axpy.Tpo $(DEPDIR)/axpy.Po
#	$(AM_V_CC)source='axpy/axpy.c' object='axpy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o axpy.o `test -f 'axpy/axpy.c' || echo '$(srcdir)/'`axpy/axpy.c

axpy.obj: axpy/axpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT axpy.obj -MD -MP -MF $(DEPDIR)/axpy.Tpo -c -o axpy.obj `if test -f 'axpy/axpy.c'; then $(CYGPATH_W) 'axpy/axpy.c'; else $(CYGPATH_W) '$(srcdir)/axpy/axpy.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/axpy.Tpo $(DEPDIR)/axpy.Po
#	$(AM_V_CC)source='axpy/axpy.c' object='axpy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o axpy.obj `if test -f 'axpy/axpy.c'; then $(CYGPATH_W) 'axpy/axpy.c'; else $(CYGPATH_W) '$(srcdir)/axpy/axpy.c'; fi`

blas.o: common/blas.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT blas.o -MD -MP -MF $(DEPDIR)/blas.Tpo -c -o blas.o `test -f 'common/blas.c' || echo '$(srcdir)/'`common/blas.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/blas.Tpo $(DEPDIR)/blas.Po
#	$(AM_V_CC)source='common/blas.c' object='blas.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o blas.o `test -f 'common/blas.c' || echo '$(srcdir)/'`common/blas.c

blas.obj: common/blas.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT blas.obj -MD -MP -MF $(DEPDIR)/blas.Tpo -c -o blas.obj `if test -f 'common/blas.c'; then $(CYGPATH_W) 'common/blas.c'; else $(CYGPATH_W) '$(srcdir)/common/blas.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/blas.Tpo $(DEPDIR)/blas.Po
#	$(AM_V_CC)source='common/blas.c' object='blas.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o blas.obj `if test -f 'common/blas.c'; then $(CYGPATH_W) 'common/blas.c'; else $(CYGPATH_W) '$(srcdir)/common/blas.c'; fi`

axpy_opencl.o: axpy/axpy_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT axpy_opencl.o -MD -MP -MF $(DEPDIR)/axpy_opencl.Tpo -c -o axpy_opencl.o `test -f 'axpy/axpy_opencl.c' || echo '$(srcdir)/'`axpy/axpy_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/axpy_opencl.Tpo $(DEPDIR)/axpy_opencl.Po
#	$(AM_V_CC)source='axpy/axpy_opencl.c' object='axpy_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o axpy_opencl.o `test -f 'axpy/axpy_opencl.c' || echo '$(srcdir)/'`axpy/axpy_opencl.c

axpy_opencl.obj: axpy/axpy_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT axpy_opencl.obj -MD -MP -MF $(DEPDIR)/axpy_opencl.Tpo -c -o axpy_opencl.obj `if test -f 'axpy/axpy_opencl.c'; then $(CYGPATH_W) 'axpy/axpy_opencl.c'; else $(CYGPATH_W) '$(srcdir)/axpy/axpy_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/axpy_opencl.Tpo $(DEPDIR)/axpy_opencl.Po
#	$(AM_V_CC)source='axpy/axpy_opencl.c' object='axpy_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o axpy_opencl.obj `if test -f 'axpy/axpy_opencl.c'; then $(CYGPATH_W) 'axpy/axpy_opencl.c'; else $(CYGPATH_W) '$(srcdir)/axpy/axpy_opencl.c'; fi`

block.o: basic_examples/block.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT block.o -MD -MP -MF $(DEPDIR)/block.Tpo -c -o block.o `test -f 'basic_examples/block.c' || echo '$(srcdir)/'`basic_examples/block.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/block.Tpo $(DEPDIR)/block.Po
#	$(AM_V_CC)source='basic_examples/block.c' object='block.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o block.o `test -f 'basic_examples/block.c' || echo '$(srcdir)/'`basic_examples/block.c

block.obj: basic_examples/block.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT block.obj -MD -MP -MF $(DEPDIR)/block.Tpo -c -o block.obj `if test -f 'basic_examples/block.c'; then $(CYGPATH_W) 'basic_examples/block.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/block.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/block.Tpo $(DEPDIR)/block.Po
#	$(AM_V_CC)source='basic_examples/block.c' object='block.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o block.obj `if test -f 'basic_examples/block.c'; then $(CYGPATH_W) 'basic_examples/block.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/block.c'; fi`

block_cpu.o: basic_examples/block_cpu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT block_cpu.o -MD -MP -MF $(DEPDIR)/block_cpu.Tpo -c -o block_cpu.o `test -f 'basic_examples/block_cpu.c' || echo '$(srcdir)/'`basic_examples/block_cpu.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/block_cpu.Tpo $(DEPDIR)/block_cpu.Po
#	$(AM_V_CC)source='basic_examples/block_cpu.c' object='block_cpu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o block_cpu.o `test -f 'basic_examples/block_cpu.c' || echo '$(srcdir)/'`basic_examples/block_cpu.c

block_cpu.obj: basic_examples/block_cpu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT block_cpu.obj -MD -MP -MF $(DEPDIR)/block_cpu.Tpo -c -o block_cpu.obj `if test -f 'basic_examples/block_cpu.c'; then $(CYGPATH_W) 'basic_examples/block_cpu.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/block_cpu.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/block_cpu.Tpo $(DEPDIR)/block_cpu.Po
#	$(AM_V_CC)source='basic_examples/block_cpu.c' object='block_cpu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o block_cpu.obj `if test -f 'basic_examples/block_cpu.c'; then $(CYGPATH_W) 'basic_examples/block_cpu.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/block_cpu.c'; fi`

block_opencl.o: basic_examples/block_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT block_opencl.o -MD -MP -MF $(DEPDIR)/block_opencl.Tpo -c -o block_opencl.o `test -f 'basic_examples/block_opencl.c' || echo '$(srcdir)/'`basic_examples/block_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/block_opencl.Tpo $(DEPDIR)/block_opencl.Po
#	$(AM_V_CC)source='basic_examples/block_opencl.c' object='block_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o block_opencl.o `test -f 'basic_examples/block_opencl.c' || echo '$(srcdir)/'`basic_examples/block_opencl.c

block_opencl.obj: basic_examples/block_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT block_opencl.obj -MD -MP -MF $(DEPDIR)/block_opencl.Tpo -c -o block_opencl.obj `if test -f 'basic_examples/block_opencl.c'; then $(CYGPATH_W) 'basic_examples/block_opencl.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/block_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/block_opencl.Tpo $(DEPDIR)/block_opencl.Po
#	$(AM_V_CC)source='basic_examples/block_opencl.c' object='block_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o block_opencl.obj `if test -f 'basic_examples/block_opencl.c'; then $(CYGPATH_W) 'basic_examples/block_opencl.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/block_opencl.c'; fi`

dynamic_handles.o: basic_examples/dynamic_handles.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dynamic_handles.o -MD -MP -MF $(DEPDIR)/dynamic_handles.Tpo -c -o dynamic_handles.o `test -f 'basic_examples/dynamic_handles.c' || echo '$(srcdir)/'`basic_examples/dynamic_handles.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dynamic_handles.Tpo $(DEPDIR)/dynamic_handles.Po
#	$(AM_V_CC)source='basic_examples/dynamic_handles.c' object='dynamic_handles.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dynamic_handles.o `test -f 'basic_examples/dynamic_handles.c' || echo '$(srcdir)/'`basic_examples/dynamic_handles.c

dynamic_handles.obj: basic_examples/dynamic_handles.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dynamic_handles.obj -MD -MP -MF $(DEPDIR)/dynamic_handles.Tpo -c -o dynamic_handles.obj `if test -f 'basic_examples/dynamic_handles.c'; then $(CYGPATH_W) 'basic_examples/dynamic_handles.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/dynamic_handles.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dynamic_handles.Tpo $(DEPDIR)/dynamic_handles.Po
#	$(AM_V_CC)source='basic_examples/dynamic_handles.c' object='dynamic_handles.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dynamic_handles.obj `if test -f 'basic_examples/dynamic_handles.c'; then $(CYGPATH_W) 'basic_examples/dynamic_handles.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/dynamic_handles.c'; fi`

hello_world.o: basic_examples/hello_world.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hello_world.o -MD -MP -MF $(DEPDIR)/hello_world.Tpo -c -o hello_world.o `test -f 'basic_examples/hello_world.c' || echo '$(srcdir)/'`basic_examples/hello_world.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hello_world.Tpo $(DEPDIR)/hello_world.Po
#	$(AM_V_CC)source='basic_examples/hello_world.c' object='hello_world.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hello_world.o `test -f 'basic_examples/hello_world.c' || echo '$(srcdir)/'`basic_examples/hello_world.c

hello_world.obj: basic_examples/hello_world.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hello_world.obj -MD -MP -MF $(DEPDIR)/hello_world.Tpo -c -o hello_world.obj `if test -f 'basic_examples/hello_world.c'; then $(CYGPATH_W) 'basic_examples/hello_world.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/hello_world.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hello_world.Tpo $(DEPDIR)/hello_world.Po
#	$(AM_V_CC)source='basic_examples/hello_world.c' object='hello_world.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hello_world.obj `if test -f 'basic_examples/hello_world.c'; then $(CYGPATH_W) 'basic_examples/hello_world.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/hello_world.c'; fi`

mult.o: basic_examples/mult.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mult.o -MD -MP -MF $(DEPDIR)/mult.Tpo -c -o mult.o `test -f 'basic_examples/mult.c' || echo '$(srcdir)/'`basic_examples/mult.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mult.Tpo $(DEPDIR)/mult.Po
#	$(AM_V_CC)source='basic_examples/mult.c' object='mult.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mult.o `test -f 'basic_examples/mult.c' || echo '$(srcdir)/'`basic_examples/mult.c

mult.obj: basic_examples/mult.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mult.obj -MD -MP -MF $(DEPDIR)/mult.Tpo -c -o mult.obj `if test -f 'basic_examples/mult.c'; then $(CYGPATH_W) 'basic_examples/mult.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/mult.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mult.Tpo $(DEPDIR)/mult.Po
#	$(AM_V_CC)source='basic_examples/mult.c' object='mult.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mult.obj `if test -f 'basic_examples/mult.c'; then $(CYGPATH_W) 'basic_examples/mult.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/mult.c'; fi`

multiformat.o: basic_examples/multiformat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat.o -MD -MP -MF $(DEPDIR)/multiformat.Tpo -c -o multiformat.o `test -f 'basic_examples/multiformat.c' || echo '$(srcdir)/'`basic_examples/multiformat.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat.Tpo $(DEPDIR)/multiformat.Po
#	$(AM_V_CC)source='basic_examples/multiformat.c' object='multiformat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat.o `test -f 'basic_examples/multiformat.c' || echo '$(srcdir)/'`basic_examples/multiformat.c

multiformat.obj: basic_examples/multiformat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat.obj -MD -MP -MF $(DEPDIR)/multiformat.Tpo -c -o multiformat.obj `if test -f 'basic_examples/multiformat.c'; then $(CYGPATH_W) 'basic_examples/multiformat.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/multiformat.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat.Tpo $(DEPDIR)/multiformat.Po
#	$(AM_V_CC)source='basic_examples/multiformat.c' object='multiformat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat.obj `if test -f 'basic_examples/multiformat.c'; then $(CYGPATH_W) 'basic_examples/multiformat.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/multiformat.c'; fi`

multiformat_conversion_codelets.o: basic_examples/multiformat_conversion_codelets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_conversion_codelets.o -MD -MP -MF $(DEPDIR)/multiformat_conversion_codelets.Tpo -c -o multiformat_conversion_codelets.o `test -f 'basic_examples/multiformat_conversion_codelets.c' || echo '$(srcdir)/'`basic_examples/multiformat_conversion_codelets.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_conversion_codelets.Tpo $(DEPDIR)/multiformat_conversion_codelets.Po
#	$(AM_V_CC)source='basic_examples/multiformat_conversion_codelets.c' object='multiformat_conversion_codelets.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_conversion_codelets.o `test -f 'basic_examples/multiformat_conversion_codelets.c' || echo '$(srcdir)/'`basic_examples/multiformat_conversion_codelets.c

multiformat_conversion_codelets.obj: basic_examples/multiformat_conversion_codelets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_conversion_codelets.obj -MD -MP -MF $(DEPDIR)/multiformat_conversion_codelets.Tpo -c -o multiformat_conversion_codelets.obj `if test -f 'basic_examples/multiformat_conversion_codelets.c'; then $(CYGPATH_W) 'basic_examples/multiformat_conversion_codelets.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/multiformat_conversion_codelets.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_conversion_codelets.Tpo $(DEPDIR)/multiformat_conversion_codelets.Po
#	$(AM_V_CC)source='basic_examples/multiformat_conversion_codelets.c' object='multiformat_conversion_codelets.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_conversion_codelets.obj `if test -f 'basic_examples/multiformat_conversion_codelets.c'; then $(CYGPATH_W) 'basic_examples/multiformat_conversion_codelets.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/multiformat_conversion_codelets.c'; fi`

multiformat_opencl.o: basic_examples/multiformat_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_opencl.o -MD -MP -MF $(DEPDIR)/multiformat_opencl.Tpo -c -o multiformat_opencl.o `test -f 'basic_examples/multiformat_opencl.c' || echo '$(srcdir)/'`basic_examples/multiformat_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_opencl.Tpo $(DEPDIR)/multiformat_opencl.Po
#	$(AM_V_CC)source='basic_examples/multiformat_opencl.c' object='multiformat_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_opencl.o `test -f 'basic_examples/multiformat_opencl.c' || echo '$(srcdir)/'`basic_examples/multiformat_opencl.c

multiformat_opencl.obj: basic_examples/multiformat_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_opencl.obj -MD -MP -MF $(DEPDIR)/multiformat_opencl.Tpo -c -o multiformat_opencl.obj `if test -f 'basic_examples/multiformat_opencl.c'; then $(CYGPATH_W) 'basic_examples/multiformat_opencl.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/multiformat_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_opencl.Tpo $(DEPDIR)/multiformat_opencl.Po
#	$(AM_V_CC)source='basic_examples/multiformat_opencl.c' object='multiformat_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_opencl.obj `if test -f 'basic_examples/multiformat_opencl.c'; then $(CYGPATH_W) 'basic_examples/multiformat_opencl.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/multiformat_opencl.c'; fi`

multiformat_conversion_codelets_opencl.o: basic_examples/multiformat_conversion_codelets_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_conversion_codelets_opencl.o -MD -MP -MF $(DEPDIR)/multiformat_conversion_codelets_opencl.Tpo -c -o multiformat_conversion_codelets_opencl.o `test -f 'basic_examples/multiformat_conversion_codelets_opencl.c' || echo '$(srcdir)/'`basic_examples/multiformat_conversion_codelets_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_conversion_codelets_opencl.Tpo $(DEPDIR)/multiformat_conversion_codelets_opencl.Po
#	$(AM_V_CC)source='basic_examples/multiformat_conversion_codelets_opencl.c' object='multiformat_conversion_codelets_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_conversion_codelets_opencl.o `test -f 'basic_examples/multiformat_conversion_codelets_opencl.c' || echo '$(srcdir)/'`basic_examples/multiformat_conversion_codelets_opencl.c

multiformat_conversion_codelets_opencl.obj: basic_examples/multiformat_conversion_codelets_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT multiformat_conversion_codelets_opencl.obj -MD -MP -MF $(DEPDIR)/multiformat_conversion_codelets_opencl.Tpo -c -o multiformat_conversion_codelets_opencl.obj `if test -f 'basic_examples/multiformat_conversion_codelets_opencl.c'; then $(CYGPATH_W) 'basic_examples/multiformat_conversion_codelets_opencl.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/multiformat_conversion_codelets_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/multiformat_conversion_codelets_opencl.Tpo $(DEPDIR)/multiformat_conversion_codelets_opencl.Po
#	$(AM_V_CC)source='basic_examples/multiformat_conversion_codelets_opencl.c' object='multiformat_conversion_codelets_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o multiformat_conversion_codelets_opencl.obj `if test -f 'basic_examples/multiformat_conversion_codelets_opencl.c'; then $(CYGPATH_W) 'basic_examples/multiformat_conversion_codelets_opencl.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/multiformat_conversion_codelets_opencl.c'; fi`

task_insert_color.o: basic_examples/task_insert_color.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT task_insert_color.o -MD -MP -MF $(DEPDIR)/task_insert_color.Tpo -c -o task_insert_color.o `test -f 'basic_examples/task_insert_color.c' || echo '$(srcdir)/'`basic_examples/task_insert_color.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/task_insert_color.Tpo $(DEPDIR)/task_insert_color.Po
#	$(AM_V_CC)source='basic_examples/task_insert_color.c' object='task_insert_color.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o task_insert_color.o `test -f 'basic_examples/task_insert_color.c' || echo '$(srcdir)/'`basic_examples/task_insert_color.c

task_insert_color.obj: basic_examples/task_insert_color.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT task_insert_color.obj -MD -MP -MF $(DEPDIR)/task_insert_color.Tpo -c -o task_insert_color.obj `if test -f 'basic_examples/task_insert_color.c'; then $(CYGPATH_W) 'basic_examples/task_insert_color.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/task_insert_color.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/task_insert_color.Tpo $(DEPDIR)/task_insert_color.Po
#	$(AM_V_CC)source='basic_examples/task_insert_color.c' object='task_insert_color.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o task_insert_color.obj `if test -f 'basic_examples/task_insert_color.c'; then $(CYGPATH_W) 'basic_examples/task_insert_color.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/task_insert_color.c'; fi`

topology.o: basic_examples/topology.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT topology.o -MD -MP -MF $(DEPDIR)/topology.Tpo -c -o topology.o `test -f 'basic_examples/topology.c' || echo '$(srcdir)/'`basic_examples/topology.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/topology.Tpo $(DEPDIR)/topology.Po
#	$(AM_V_CC)source='basic_examples/topology.c' object='topology.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o topology.o `test -f 'basic_examples/topology.c' || echo '$(srcdir)/'`basic_examples/topology.c

topology.obj: basic_examples/topology.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT topology.obj -MD -MP -MF $(DEPDIR)/topology.Tpo -c -o topology.obj `if test -f 'basic_examples/topology.c'; then $(CYGPATH_W) 'basic_examples/topology.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/topology.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/topology.Tpo $(DEPDIR)/topology.Po
#	$(AM_V_CC)source='basic_examples/topology.c' object='topology.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o topology.obj `if test -f 'basic_examples/topology.c'; then $(CYGPATH_W) 'basic_examples/topology.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/topology.c'; fi`

variable.o: basic_examples/variable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT variable.o -MD -MP -MF $(DEPDIR)/variable.Tpo -c -o variable.o `test -f 'basic_examples/variable.c' || echo '$(srcdir)/'`basic_examples/variable.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/variable.Tpo $(DEPDIR)/variable.Po
#	$(AM_V_CC)source='basic_examples/variable.c' object='variable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o variable.o `test -f 'basic_examples/variable.c' || echo '$(srcdir)/'`basic_examples/variable.c

variable.obj: basic_examples/variable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT variable.obj -MD -MP -MF $(DEPDIR)/variable.Tpo -c -o variable.obj `if test -f 'basic_examples/variable.c'; then $(CYGPATH_W) 'basic_examples/variable.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/variable.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/variable.Tpo $(DEPDIR)/variable.Po
#	$(AM_V_CC)source='basic_examples/variable.c' object='variable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o variable.obj `if test -f 'basic_examples/variable.c'; then $(CYGPATH_W) 'basic_examples/variable.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/variable.c'; fi`

variable_kernels_cpu.o: basic_examples/variable_kernels_cpu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT variable_kernels_cpu.o -MD -MP -MF $(DEPDIR)/variable_kernels_cpu.Tpo -c -o variable_kernels_cpu.o `test -f 'basic_examples/variable_kernels_cpu.c' || echo '$(srcdir)/'`basic_examples/variable_kernels_cpu.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/variable_kernels_cpu.Tpo $(DEPDIR)/variable_kernels_cpu.Po
#	$(AM_V_CC)source='basic_examples/variable_kernels_cpu.c' object='variable_kernels_cpu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o variable_kernels_cpu.o `test -f 'basic_examples/variable_kernels_cpu.c' || echo '$(srcdir)/'`basic_examples/variable_kernels_cpu.c

variable_kernels_cpu.obj: basic_examples/variable_kernels_cpu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT variable_kernels_cpu.obj -MD -MP -MF $(DEPDIR)/variable_kernels_cpu.Tpo -c -o variable_kernels_cpu.obj `if test -f 'basic_examples/variable_kernels_cpu.c'; then $(CYGPATH_W) 'basic_examples/variable_kernels_cpu.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/variable_kernels_cpu.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/variable_kernels_cpu.Tpo $(DEPDIR)/variable_kernels_cpu.Po
#	$(AM_V_CC)source='basic_examples/variable_kernels_cpu.c' object='variable_kernels_cpu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o variable_kernels_cpu.obj `if test -f 'basic_examples/variable_kernels_cpu.c'; then $(CYGPATH_W) 'basic_examples/variable_kernels_cpu.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/variable_kernels_cpu.c'; fi`

variable_kernels_opencl.o: basic_examples/variable_kernels_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT variable_kernels_opencl.o -MD -MP -MF $(DEPDIR)/variable_kernels_opencl.Tpo -c -o variable_kernels_opencl.o `test -f 'basic_examples/variable_kernels_opencl.c' || echo '$(srcdir)/'`basic_examples/variable_kernels_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/variable_kernels_opencl.Tpo $(DEPDIR)/variable_kernels_opencl.Po
#	$(AM_V_CC)source='basic_examples/variable_kernels_opencl.c' object='variable_kernels_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o variable_kernels_opencl.o `test -f 'basic_examples/variable_kernels_opencl.c' || echo '$(srcdir)/'`basic_examples/variable_kernels_opencl.c

variable_kernels_opencl.obj: basic_examples/variable_kernels_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT variable_kernels_opencl.obj -MD -MP -MF $(DEPDIR)/variable_kernels_opencl.Tpo -c -o variable_kernels_opencl.obj `if test -f 'basic_examples/variable_kernels_opencl.c'; then $(CYGPATH_W) 'basic_examples/variable_kernels_opencl.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/variable_kernels_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/variable_kernels_opencl.Tpo $(DEPDIR)/variable_kernels_opencl.Po
#	$(AM_V_CC)source='basic_examples/variable_kernels_opencl.c' object='variable_kernels_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o variable_kernels_opencl.obj `if test -f 'basic_examples/variable_kernels_opencl.c'; then $(CYGPATH_W) 'basic_examples/variable_kernels_opencl.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/variable_kernels_opencl.c'; fi`

vector_scal.o: basic_examples/vector_scal.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vector_scal.o -MD -MP -MF $(DEPDIR)/vector_scal.Tpo -c -o vector_scal.o `test -f 'basic_examples/vector_scal.c' || echo '$(srcdir)/'`basic_examples/vector_scal.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/vector_scal.Tpo $(DEPDIR)/vector_scal.Po
#	$(AM_V_CC)source='basic_examples/vector_scal.c' object='vector_scal.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vector_scal.o `test -f 'basic_examples/vector_scal.c' || echo '$(srcdir)/'`basic_examples/vector_scal.c

vector_scal.obj: basic_examples/vector_scal.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vector_scal.obj -MD -MP -MF $(DEPDIR)/vector_scal.Tpo -c -o vector_scal.obj `if test -f 'basic_examples/vector_scal.c'; then $(CYGPATH_W) 'basic_examples/vector_scal.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/vector_scal.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/vector_scal.Tpo $(DEPDIR)/vector_scal.Po
#	$(AM_V_CC)source='basic_examples/vector_scal.c' object='vector_scal.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vector_scal.obj `if test -f 'basic_examples/vector_scal.c'; then $(CYGPATH_W) 'basic_examples/vector_scal.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/vector_scal.c'; fi`

vector_scal_cpu.o: basic_examples/vector_scal_cpu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vector_scal_cpu.o -MD -MP -MF $(DEPDIR)/vector_scal_cpu.Tpo -c -o vector_scal_cpu.o `test -f 'basic_examples/vector_scal_cpu.c' || echo '$(srcdir)/'`basic_examples/vector_scal_cpu.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/vector_scal_cpu.Tpo $(DEPDIR)/vector_scal_cpu.Po
#	$(AM_V_CC)source='basic_examples/vector_scal_cpu.c' object='vector_scal_cpu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vector_scal_cpu.o `test -f 'basic_examples/vector_scal_cpu.c' || echo '$(srcdir)/'`basic_examples/vector_scal_cpu.c

vector_scal_cpu.obj: basic_examples/vector_scal_cpu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vector_scal_cpu.obj -MD -MP -MF $(DEPDIR)/vector_scal_cpu.Tpo -c -o vector_scal_cpu.obj `if test -f 'basic_examples/vector_scal_cpu.c'; then $(CYGPATH_W) 'basic_examples/vector_scal_cpu.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/vector_scal_cpu.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/vector_scal_cpu.Tpo $(DEPDIR)/vector_scal_cpu.Po
#	$(AM_V_CC)source='basic_examples/vector_scal_cpu.c' object='vector_scal_cpu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vector_scal_cpu.obj `if test -f 'basic_examples/vector_scal_cpu.c'; then $(CYGPATH_W) 'basic_examples/vector_scal_cpu.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/vector_scal_cpu.c'; fi`

vector_scal_opencl.o: basic_examples/vector_scal_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vector_scal_opencl.o -MD -MP -MF $(DEPDIR)/vector_scal_opencl.Tpo -c -o vector_scal_opencl.o `test -f 'basic_examples/vector_scal_opencl.c' || echo '$(srcdir)/'`basic_examples/vector_scal_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/vector_scal_opencl.Tpo $(DEPDIR)/vector_scal_opencl.Po
#	$(AM_V_CC)source='basic_examples/vector_scal_opencl.c' object='vector_scal_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vector_scal_opencl.o `test -f 'basic_examples/vector_scal_opencl.c' || echo '$(srcdir)/'`basic_examples/vector_scal_opencl.c

vector_scal_opencl.obj: basic_examples/vector_scal_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vector_scal_opencl.obj -MD -MP -MF $(DEPDIR)/vector_scal_opencl.Tpo -c -o vector_scal_opencl.obj `if test -f 'basic_examples/vector_scal_opencl.c'; then $(CYGPATH_W) 'basic_examples/vector_scal_opencl.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/vector_scal_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/vector_scal_opencl.Tpo $(DEPDIR)/vector_scal_opencl.Po
#	$(AM_V_CC)source='basic_examples/vector_scal_opencl.c' object='vector_scal_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vector_scal_opencl.obj `if test -f 'basic_examples/vector_scal_opencl.c'; then $(CYGPATH_W) 'basic_examples/vector_scal_opencl.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/vector_scal_opencl.c'; fi`

vector_scal_c.o: basic_examples/vector_scal_c.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vector_scal_c.o -MD -MP -MF $(DEPDIR)/vector_scal_c.Tpo -c -o vector_scal_c.o `test -f 'basic_examples/vector_scal_c.c' || echo '$(srcdir)/'`basic_examples/vector_scal_c.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/vector_scal_c.Tpo $(DEPDIR)/vector_scal_c.Po
#	$(AM_V_CC)source='basic_examples/vector_scal_c.c' object='vector_scal_c.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vector_scal_c.o `test -f 'basic_examples/vector_scal_c.c' || echo '$(srcdir)/'`basic_examples/vector_scal_c.c

vector_scal_c.obj: basic_examples/vector_scal_c.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vector_scal_c.obj -MD -MP -MF $(DEPDIR)/vector_scal_c.Tpo -c -o vector_scal_c.obj `if test -f 'basic_examples/vector_scal_c.c'; then $(CYGPATH_W) 'basic_examples/vector_scal_c.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/vector_scal_c.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/vector_scal_c.Tpo $(DEPDIR)/vector_scal_c.Po
#	$(AM_V_CC)source='basic_examples/vector_scal_c.c' object='vector_scal_c.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vector_scal_c.obj `if test -f 'basic_examples/vector_scal_c.c'; then $(CYGPATH_W) 'basic_examples/vector_scal_c.c'; else $(CYGPATH_W) '$(srcdir)/basic_examples/vector_scal_c.c'; fi`

binary.o: binary/binary.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT binary.o -MD -MP -MF $(DEPDIR)/binary.Tpo -c -o binary.o `test -f 'binary/binary.c' || echo '$(srcdir)/'`binary/binary.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/binary.Tpo $(DEPDIR)/binary.Po
#	$(AM_V_CC)source='binary/binary.c' object='binary.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o binary.o `test -f 'binary/binary.c' || echo '$(srcdir)/'`binary/binary.c

binary.obj: binary/binary.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT binary.obj -MD -MP -MF $(DEPDIR)/binary.Tpo -c -o binary.obj `if test -f 'binary/binary.c'; then $(CYGPATH_W) 'binary/binary.c'; else $(CYGPATH_W) '$(srcdir)/binary/binary.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/binary.Tpo $(DEPDIR)/binary.Po
#	$(AM_V_CC)source='binary/binary.c' object='binary.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o binary.obj `if test -f 'binary/binary.c'; then $(CYGPATH_W) 'binary/binary.c'; else $(CYGPATH_W) '$(srcdir)/binary/binary.c'; fi`

incrementer_kernels_opencl.o: incrementer/incrementer_kernels_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT incrementer_kernels_opencl.o -MD -MP -MF $(DEPDIR)/incrementer_kernels_opencl.Tpo -c -o incrementer_kernels_opencl.o `test -f 'incrementer/incrementer_kernels_opencl.c' || echo '$(srcdir)/'`incrementer/incrementer_kernels_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/incrementer_kernels_opencl.Tpo $(DEPDIR)/incrementer_kernels_opencl.Po
#	$(AM_V_CC)source='incrementer/incrementer_kernels_opencl.c' object='incrementer_kernels_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o incrementer_kernels_opencl.o `test -f 'incrementer/incrementer_kernels_opencl.c' || echo '$(srcdir)/'`incrementer/incrementer_kernels_opencl.c

incrementer_kernels_opencl.obj: incrementer/incrementer_kernels_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT incrementer_kernels_opencl.obj -MD -MP -MF $(DEPDIR)/incrementer_kernels_opencl.Tpo -c -o incrementer_kernels_opencl.obj `if test -f 'incrementer/incrementer_kernels_opencl.c'; then $(CYGPATH_W) 'incrementer/incrementer_kernels_opencl.c'; else $(CYGPATH_W) '$(srcdir)/incrementer/incrementer_kernels_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/incrementer_kernels_opencl.Tpo $(DEPDIR)/incrementer_kernels_opencl.Po
#	$(AM_V_CC)source='incrementer/incrementer_kernels_opencl.c' object='incrementer_kernels_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o incrementer_kernels_opencl.obj `if test -f 'incrementer/incrementer_kernels_opencl.c'; then $(CYGPATH_W) 'incrementer/incrementer_kernels_opencl.c'; else $(CYGPATH_W) '$(srcdir)/incrementer/incrementer_kernels_opencl.c'; fi`

callback.o: callback/callback.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT callback.o -MD -MP -MF $(DEPDIR)/callback.Tpo -c -o callback.o `test -f 'callback/callback.c' || echo '$(srcdir)/'`callback/callback.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/callback.Tpo $(DEPDIR)/callback.Po
#	$(AM_V_CC)source='callback/callback.c' object='callback.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o callback.o `test -f 'callback/callback.c' || echo '$(srcdir)/'`callback/callback.c

callback.obj: callback/callback.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT callback.obj -MD -MP -MF $(DEPDIR)/callback.Tpo -c -o callback.obj `if test -f 'callback/callback.c'; then $(CYGPATH_W) 'callback/callback.c'; else $(CYGPATH_W) '$(srcdir)/callback/callback.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/callback.Tpo $(DEPDIR)/callback.Po
#	$(AM_V_CC)source='callback/callback.c' object='callback.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o callback.obj `if test -f 'callback/callback.c'; then $(CYGPATH_W) 'callback/callback.c'; else $(CYGPATH_W) '$(srcdir)/callback/callback.c'; fi`

prologue.o: callback/prologue.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT prologue.o -MD -MP -MF $(DEPDIR)/prologue.Tpo -c -o prologue.o `test -f 'callback/prologue.c' || echo '$(srcdir)/'`callback/prologue.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/prologue.Tpo $(DEPDIR)/prologue.Po
#	$(AM_V_CC)source='callback/prologue.c' object='prologue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o prologue.o `test -f 'callback/prologue.c' || echo '$(srcdir)/'`callback/prologue.c

prologue.obj: callback/prologue.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT prologue.obj -MD -MP -MF $(DEPDIR)/prologue.Tpo -c -o prologue.obj `if test -f 'callback/prologue.c'; then $(CYGPATH_W) 'callback/prologue.c'; else $(CYGPATH_W) '$(srcdir)/callback/prologue.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/prologue.Tpo $(DEPDIR)/prologue.Po
#	$(AM_V_CC)source='callback/prologue.c' object='prologue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o prologue.obj `if test -f 'callback/prologue.c'; then $(CYGPATH_W) 'callback/prologue.c'; else $(CYGPATH_W) '$(srcdir)/callback/prologue.c'; fi`

cg.o: cg/cg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cg.o -MD -MP -MF $(DEPDIR)/cg.Tpo -c -o cg.o `test -f 'cg/cg.c' || echo '$(srcdir)/'`cg/cg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cg.Tpo $(DEPDIR)/cg.Po
#	$(AM_V_CC)source='cg/cg.c' object='cg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cg.o `test -f 'cg/cg.c' || echo '$(srcdir)/'`cg/cg.c

cg.obj: cg/cg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cg.obj -MD -MP -MF $(DEPDIR)/cg.Tpo -c -o cg.obj `if test -f 'cg/cg.c'; then $(CYGPATH_W) 'cg/cg.c'; else $(CYGPATH_W) '$(srcdir)/cg/cg.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cg.Tpo $(DEPDIR)/cg.Po
#	$(AM_V_CC)source='cg/cg.c' object='cg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cg.obj `if test -f 'cg/cg.c'; then $(CYGPATH_W) 'cg/cg.c'; else $(CYGPATH_W) '$(srcdir)/cg/cg.c'; fi`

cg_kernels.o: cg/cg_kernels.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cg_kernels.o -MD -MP -MF $(DEPDIR)/cg_kernels.Tpo -c -o cg_kernels.o `test -f 'cg/cg_kernels.c' || echo '$(srcdir)/'`cg/cg_kernels.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cg_kernels.Tpo $(DEPDIR)/cg_kernels.Po
#	$(AM_V_CC)source='cg/cg_kernels.c' object='cg_kernels.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cg_kernels.o `test -f 'cg/cg_kernels.c' || echo '$(srcdir)/'`cg/cg_kernels.c

cg_kernels.obj: cg/cg_kernels.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cg_kernels.obj -MD -MP -MF $(DEPDIR)/cg_kernels.Tpo -c -o cg_kernels.obj `if test -f 'cg/cg_kernels.c'; then $(CYGPATH_W) 'cg/cg_kernels.c'; else $(CYGPATH_W) '$(srcdir)/cg/cg_kernels.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cg_kernels.Tpo $(DEPDIR)/cg_kernels.Po
#	$(AM_V_CC)source='cg/cg_kernels.c' object='cg_kernels.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cg_kernels.obj `if test -f 'cg/cg_kernels.c'; then $(CYGPATH_W) 'cg/cg_kernels.c'; else $(CYGPATH_W) '$(srcdir)/cg/cg_kernels.c'; fi`

cholesky_compil.o: cholesky/cholesky_compil.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cholesky_compil.o -MD -MP -MF $(DEPDIR)/cholesky_compil.Tpo -c -o cholesky_compil.o `test -f 'cholesky/cholesky_compil.c' || echo '$(srcdir)/'`cholesky/cholesky_compil.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cholesky_compil.Tpo $(DEPDIR)/cholesky_compil.Po
#	$(AM_V_CC)source='cholesky/cholesky_compil.c' object='cholesky_compil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cholesky_compil.o `test -f 'cholesky/cholesky_compil.c' || echo '$(srcdir)/'`cholesky/cholesky_compil.c

cholesky_compil.obj: cholesky/cholesky_compil.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cholesky_compil.obj -MD -MP -MF $(DEPDIR)/cholesky_compil.Tpo -c -o cholesky_compil.obj `if test -f 'cholesky/cholesky_compil.c'; then $(CYGPATH_W) 'cholesky/cholesky_compil.c'; else $(CYGPATH_W) '$(srcdir)/cholesky/cholesky_compil.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cholesky_compil.Tpo $(DEPDIR)/cholesky_compil.Po
#	$(AM_V_CC)source='cholesky/cholesky_compil.c' object='cholesky_compil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cholesky_compil.obj `if test -f 'cholesky/cholesky_compil.c'; then $(CYGPATH_W) 'cholesky/cholesky_compil.c'; else $(CYGPATH_W) '$(srcdir)/cholesky/cholesky_compil.c'; fi`

cholesky_models.o: cholesky/cholesky_models.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cholesky_models.o -MD -MP -MF $(DEPDIR)/cholesky_models.Tpo -c -o cholesky_models.o `test -f 'cholesky/cholesky_models.c' || echo '$(srcdir)/'`cholesky/cholesky_models.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cholesky_models.Tpo $(DEPDIR)/cholesky_models.Po
#	$(AM_V_CC)source='cholesky/cholesky_models.c' object='cholesky_models.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cholesky_models.o `test -f 'cholesky/cholesky_models.c' || echo '$(srcdir)/'`cholesky/cholesky_models.c

cholesky_models.obj: cholesky/cholesky_models.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cholesky_models.obj -MD -MP -MF $(DEPDIR)/cholesky_models.Tpo -c -o cholesky_models.obj `if test -f 'cholesky/cholesky_models.c'; then $(CYGPATH_W) 'cholesky/cholesky_models.c'; else $(CYGPATH_W) '$(srcdir)/cholesky/cholesky_models.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cholesky_models.Tpo $(DEPDIR)/cholesky_models.Po
#	$(AM_V_CC)source='cholesky/cholesky_models.c' object='cholesky_models.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cholesky_models.obj `if test -f 'cholesky/cholesky_models.c'; then $(CYGPATH_W) 'cholesky/cholesky_models.c'; else $(CYGPATH_W) '$(srcdir)/cholesky/cholesky_models.c'; fi`

cholesky_kernels.o: cholesky/cholesky_kernels.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cholesky_kernels.o -MD -MP -MF $(DEPDIR)/cholesky_kernels.Tpo -c -o cholesky_kernels.o `test -f 'cholesky/cholesky_kernels.c' || echo '$(srcdir)/'`cholesky/cholesky_kernels.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cholesky_kernels.Tpo $(DEPDIR)/cholesky_kernels.Po
#	$(AM_V_CC)source='cholesky/cholesky_kernels.c' object='cholesky_kernels.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cholesky_kernels.o `test -f 'cholesky/cholesky_kernels.c' || echo '$(srcdir)/'`cholesky/cholesky_kernels.c

cholesky_kernels.obj: cholesky/cholesky_kernels.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cholesky_kernels.obj -MD -MP -MF $(DEPDIR)/cholesky_kernels.Tpo -c -o cholesky_kernels.obj `if test -f 'cholesky/cholesky_kernels.c'; then $(CYGPATH_W) 'cholesky/cholesky_kernels.c'; else $(CYGPATH_W) '$(srcdir)/cholesky/cholesky_kernels.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cholesky_kernels.Tpo $(DEPDIR)/cholesky_kernels.Po
#	$(AM_V_CC)source='cholesky/cholesky_kernels.c' object='cholesky_kernels.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cholesky_kernels.obj `if test -f 'cholesky/cholesky_kernels.c'; then $(CYGPATH_W) 'cholesky/cholesky_kernels.c'; else $(CYGPATH_W) '$(srcdir)/cholesky/cholesky_kernels.c'; fi`

sched_ctx_utils.o: sched_ctx_utils/sched_ctx_utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sched_ctx_utils.o -MD -MP -MF $(DEPDIR)/sched_ctx_utils.Tpo -c -o sched_ctx_utils.o `test -f 'sched_ctx_utils/sched_ctx_utils.c' || echo '$(srcdir)/'`sched_ctx_utils/sched_ctx_utils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx_utils.Tpo $(DEPDIR)/sched_ctx_utils.Po
#	$(AM_V_CC)source='sched_ctx_utils/sched_ctx_utils.c' object='sched_ctx_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sched_ctx_utils.o `test -f 'sched_ctx_utils/sched_ctx_utils.c' || echo '$(srcdir)/'`sched_ctx_utils/sched_ctx_utils.c

sched_ctx_utils.obj: sched_ctx_utils/sched_ctx_utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sched_ctx_utils.obj -MD -MP -MF $(DEPDIR)/sched_ctx_utils.Tpo -c -o sched_ctx_utils.obj `if test -f 'sched_ctx_utils/sched_ctx_utils.c'; then $(CYGPATH_W) 'sched_ctx_utils/sched_ctx_utils.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx_utils/sched_ctx_utils.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx_utils.Tpo $(DEPDIR)/sched_ctx_utils.Po
#	$(AM_V_CC)source='sched_ctx_utils/sched_ctx_utils.c' object='sched_ctx_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sched_ctx_utils.obj `if test -f 'sched_ctx_utils/sched_ctx_utils.c'; then $(CYGPATH_W) 'sched_ctx_utils/sched_ctx_utils.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx_utils/sched_ctx_utils.c'; fi`

cholesky_grain_tag.o: cholesky/cholesky_grain_tag.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cholesky_grain_tag.o -MD -MP -MF $(DEPDIR)/cholesky_grain_tag.Tpo -c -o cholesky_grain_tag.o `test -f 'cholesky/cholesky_grain_tag.c' || echo '$(srcdir)/'`cholesky/cholesky_grain_tag.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cholesky_grain_tag.Tpo $(DEPDIR)/cholesky_grain_tag.Po
#	$(AM_V_CC)source='cholesky/cholesky_grain_tag.c' object='cholesky_grain_tag.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cholesky_grain_tag.o `test -f 'cholesky/cholesky_grain_tag.c' || echo '$(srcdir)/'`cholesky/cholesky_grain_tag.c

cholesky_grain_tag.obj: cholesky/cholesky_grain_tag.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cholesky_grain_tag.obj -MD -MP -MF $(DEPDIR)/cholesky_grain_tag.Tpo -c -o cholesky_grain_tag.obj `if test -f 'cholesky/cholesky_grain_tag.c'; then $(CYGPATH_W) 'cholesky/cholesky_grain_tag.c'; else $(CYGPATH_W) '$(srcdir)/cholesky/cholesky_grain_tag.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cholesky_grain_tag.Tpo $(DEPDIR)/cholesky_grain_tag.Po
#	$(AM_V_CC)source='cholesky/cholesky_grain_tag.c' object='cholesky_grain_tag.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cholesky_grain_tag.obj `if test -f 'cholesky/cholesky_grain_tag.c'; then $(CYGPATH_W) 'cholesky/cholesky_grain_tag.c'; else $(CYGPATH_W) '$(srcdir)/cholesky/cholesky_grain_tag.c'; fi`

cholesky_implicit.o: cholesky/cholesky_implicit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cholesky_implicit.o -MD -MP -MF $(DEPDIR)/cholesky_implicit.Tpo -c -o cholesky_implicit.o `test -f 'cholesky/cholesky_implicit.c' || echo '$(srcdir)/'`cholesky/cholesky_implicit.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cholesky_implicit.Tpo $(DEPDIR)/cholesky_implicit.Po
#	$(AM_V_CC)source='cholesky/cholesky_implicit.c' object='cholesky_implicit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cholesky_implicit.o `test -f 'cholesky/cholesky_implicit.c' || echo '$(srcdir)/'`cholesky/cholesky_implicit.c

cholesky_implicit.obj: cholesky/cholesky_implicit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cholesky_implicit.obj -MD -MP -MF $(DEPDIR)/cholesky_implicit.Tpo -c -o cholesky_implicit.obj `if test -f 'cholesky/cholesky_implicit.c'; then $(CYGPATH_W) 'cholesky/cholesky_implicit.c'; else $(CYGPATH_W) '$(srcdir)/cholesky/cholesky_implicit.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cholesky_implicit.Tpo $(DEPDIR)/cholesky_implicit.Po
#	$(AM_V_CC)source='cholesky/cholesky_implicit.c' object='cholesky_implicit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cholesky_implicit.obj `if test -f 'cholesky/cholesky_implicit.c'; then $(CYGPATH_W) 'cholesky/cholesky_implicit.c'; else $(CYGPATH_W) '$(srcdir)/cholesky/cholesky_implicit.c'; fi`

cholesky_tag.o: cholesky/cholesky_tag.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cholesky_tag.o -MD -MP -MF $(DEPDIR)/cholesky_tag.Tpo -c -o cholesky_tag.o `test -f 'cholesky/cholesky_tag.c' || echo '$(srcdir)/'`cholesky/cholesky_tag.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cholesky_tag.Tpo $(DEPDIR)/cholesky_tag.Po
#	$(AM_V_CC)source='cholesky/cholesky_tag.c' object='cholesky_tag.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cholesky_tag.o `test -f 'cholesky/cholesky_tag.c' || echo '$(srcdir)/'`cholesky/cholesky_tag.c

cholesky_tag.obj: cholesky/cholesky_tag.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cholesky_tag.obj -MD -MP -MF $(DEPDIR)/cholesky_tag.Tpo -c -o cholesky_tag.obj `if test -f 'cholesky/cholesky_tag.c'; then $(CYGPATH_W) 'cholesky/cholesky_tag.c'; else $(CYGPATH_W) '$(srcdir)/cholesky/cholesky_tag.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cholesky_tag.Tpo $(DEPDIR)/cholesky_tag.Po
#	$(AM_V_CC)source='cholesky/cholesky_tag.c' object='cholesky_tag.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cholesky_tag.obj `if test -f 'cholesky/cholesky_tag.c'; then $(CYGPATH_W) 'cholesky/cholesky_tag.c'; else $(CYGPATH_W) '$(srcdir)/cholesky/cholesky_tag.c'; fi`

cholesky_tile_tag.o: cholesky/cholesky_tile_tag.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cholesky_tile_tag.o -MD -MP -MF $(DEPDIR)/cholesky_tile_tag.Tpo -c -o cholesky_tile_tag.o `test -f 'cholesky/cholesky_tile_tag.c' || echo '$(srcdir)/'`cholesky/cholesky_tile_tag.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cholesky_tile_tag.Tpo $(DEPDIR)/cholesky_tile_tag.Po
#	$(AM_V_CC)source='cholesky/cholesky_tile_tag.c' object='cholesky_tile_tag.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cholesky_tile_tag.o `test -f 'cholesky/cholesky_tile_tag.c' || echo '$(srcdir)/'`cholesky/cholesky_tile_tag.c

cholesky_tile_tag.obj: cholesky/cholesky_tile_tag.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cholesky_tile_tag.obj -MD -MP -MF $(DEPDIR)/cholesky_tile_tag.Tpo -c -o cholesky_tile_tag.obj `if test -f 'cholesky/cholesky_tile_tag.c'; then $(CYGPATH_W) 'cholesky/cholesky_tile_tag.c'; else $(CYGPATH_W) '$(srcdir)/cholesky/cholesky_tile_tag.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cholesky_tile_tag.Tpo $(DEPDIR)/cholesky_tile_tag.Po
#	$(AM_V_CC)source='cholesky/cholesky_tile_tag.c' object='cholesky_tile_tag.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cholesky_tile_tag.obj `if test -f 'cholesky/cholesky_tile_tag.c'; then $(CYGPATH_W) 'cholesky/cholesky_tile_tag.c'; else $(CYGPATH_W) '$(srcdir)/cholesky/cholesky_tile_tag.c'; fi`

sequential_consistency.o: dependency/sequential_consistency.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sequential_consistency.o -MD -MP -MF $(DEPDIR)/sequential_consistency.Tpo -c -o sequential_consistency.o `test -f 'dependency/sequential_consistency.c' || echo '$(srcdir)/'`dependency/sequential_consistency.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sequential_consistency.Tpo $(DEPDIR)/sequential_consistency.Po
#	$(AM_V_CC)source='dependency/sequential_consistency.c' object='sequential_consistency.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sequential_consistency.o `test -f 'dependency/sequential_consistency.c' || echo '$(srcdir)/'`dependency/sequential_consistency.c

sequential_consistency.obj: dependency/sequential_consistency.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sequential_consistency.obj -MD -MP -MF $(DEPDIR)/sequential_consistency.Tpo -c -o sequential_consistency.obj `if test -f 'dependency/sequential_consistency.c'; then $(CYGPATH_W) 'dependency/sequential_consistency.c'; else $(CYGPATH_W) '$(srcdir)/dependency/sequential_consistency.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sequential_consistency.Tpo $(DEPDIR)/sequential_consistency.Po
#	$(AM_V_CC)source='dependency/sequential_consistency.c' object='sequential_consistency.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sequential_consistency.obj `if test -f 'dependency/sequential_consistency.c'; then $(CYGPATH_W) 'dependency/sequential_consistency.c'; else $(CYGPATH_W) '$(srcdir)/dependency/sequential_consistency.c'; fi`

task_end_dep.o: dependency/task_end_dep.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT task_end_dep.o -MD -MP -MF $(DEPDIR)/task_end_dep.Tpo -c -o task_end_dep.o `test -f 'dependency/task_end_dep.c' || echo '$(srcdir)/'`dependency/task_end_dep.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/task_end_dep.Tpo $(DEPDIR)/task_end_dep.Po
#	$(AM_V_CC)source='dependency/task_end_dep.c' object='task_end_dep.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o task_end_dep.o `test -f 'dependency/task_end_dep.c' || echo '$(srcdir)/'`dependency/task_end_dep.c

task_end_dep.obj: dependency/task_end_dep.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT task_end_dep.obj -MD -MP -MF $(DEPDIR)/task_end_dep.Tpo -c -o task_end_dep.obj `if test -f 'dependency/task_end_dep.c'; then $(CYGPATH_W) 'dependency/task_end_dep.c'; else $(CYGPATH_W) '$(srcdir)/dependency/task_end_dep.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/task_end_dep.Tpo $(DEPDIR)/task_end_dep.Po
#	$(AM_V_CC)source='dependency/task_end_dep.c' object='task_end_dep.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o task_end_dep.obj `if test -f 'dependency/task_end_dep.c'; then $(CYGPATH_W) 'dependency/task_end_dep.c'; else $(CYGPATH_W) '$(srcdir)/dependency/task_end_dep.c'; fi`

task_end_dep_add.o: dependency/task_end_dep_add.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT task_end_dep_add.o -MD -MP -MF $(DEPDIR)/task_end_dep_add.Tpo -c -o task_end_dep_add.o `test -f 'dependency/task_end_dep_add.c' || echo '$(srcdir)/'`dependency/task_end_dep_add.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/task_end_dep_add.Tpo $(DEPDIR)/task_end_dep_add.Po
#	$(AM_V_CC)source='dependency/task_end_dep_add.c' object='task_end_dep_add.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o task_end_dep_add.o `test -f 'dependency/task_end_dep_add.c' || echo '$(srcdir)/'`dependency/task_end_dep_add.c

task_end_dep_add.obj: dependency/task_end_dep_add.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT task_end_dep_add.obj -MD -MP -MF $(DEPDIR)/task_end_dep_add.Tpo -c -o task_end_dep_add.obj `if test -f 'dependency/task_end_dep_add.c'; then $(CYGPATH_W) 'dependency/task_end_dep_add.c'; else $(CYGPATH_W) '$(srcdir)/dependency/task_end_dep_add.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/task_end_dep_add.Tpo $(DEPDIR)/task_end_dep_add.Po
#	$(AM_V_CC)source='dependency/task_end_dep_add.c' object='task_end_dep_add.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o task_end_dep_add.obj `if test -f 'dependency/task_end_dep_add.c'; then $(CYGPATH_W) 'dependency/task_end_dep_add.c'; else $(CYGPATH_W) '$(srcdir)/dependency/task_end_dep_add.c'; fi`

custom_mf_filter.o: filters/custom_mf/custom_mf_filter.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT custom_mf_filter.o -MD -MP -MF $(DEPDIR)/custom_mf_filter.Tpo -c -o custom_mf_filter.o `test -f 'filters/custom_mf/custom_mf_filter.c' || echo '$(srcdir)/'`filters/custom_mf/custom_mf_filter.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/custom_mf_filter.Tpo $(DEPDIR)/custom_mf_filter.Po
#	$(AM_V_CC)source='filters/custom_mf/custom_mf_filter.c' object='custom_mf_filter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o custom_mf_filter.o `test -f 'filters/custom_mf/custom_mf_filter.c' || echo '$(srcdir)/'`filters/custom_mf/custom_mf_filter.c

custom_mf_filter.obj: filters/custom_mf/custom_mf_filter.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT custom_mf_filter.obj -MD -MP -MF $(DEPDIR)/custom_mf_filter.Tpo -c -o custom_mf_filter.obj `if test -f 'filters/custom_mf/custom_mf_filter.c'; then $(CYGPATH_W) 'filters/custom_mf/custom_mf_filter.c'; else $(CYGPATH_W) '$(srcdir)/filters/custom_mf/custom_mf_filter.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/custom_mf_filter.Tpo $(DEPDIR)/custom_mf_filter.Po
#	$(AM_V_CC)source='filters/custom_mf/custom_mf_filter.c' object='custom_mf_filter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o custom_mf_filter.obj `if test -f 'filters/custom_mf/custom_mf_filter.c'; then $(CYGPATH_W) 'filters/custom_mf/custom_mf_filter.c'; else $(CYGPATH_W) '$(srcdir)/filters/custom_mf/custom_mf_filter.c'; fi`

custom_interface.o: filters/custom_mf/custom_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT custom_interface.o -MD -MP -MF $(DEPDIR)/custom_interface.Tpo -c -o custom_interface.o `test -f 'filters/custom_mf/custom_interface.c' || echo '$(srcdir)/'`filters/custom_mf/custom_interface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/custom_interface.Tpo $(DEPDIR)/custom_interface.Po
#	$(AM_V_CC)source='filters/custom_mf/custom_interface.c' object='custom_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o custom_interface.o `test -f 'filters/custom_mf/custom_interface.c' || echo '$(srcdir)/'`filters/custom_mf/custom_interface.c

custom_interface.obj: filters/custom_mf/custom_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT custom_interface.obj -MD -MP -MF $(DEPDIR)/custom_interface.Tpo -c -o custom_interface.obj `if test -f 'filters/custom_mf/custom_interface.c'; then $(CYGPATH_W) 'filters/custom_mf/custom_interface.c'; else $(CYGPATH_W) '$(srcdir)/filters/custom_mf/custom_interface.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/custom_interface.Tpo $(DEPDIR)/custom_interface.Po
#	$(AM_V_CC)source='filters/custom_mf/custom_interface.c' object='custom_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o custom_interface.obj `if test -f 'filters/custom_mf/custom_interface.c'; then $(CYGPATH_W) 'filters/custom_mf/custom_interface.c'; else $(CYGPATH_W) '$(srcdir)/filters/custom_mf/custom_interface.c'; fi`

custom_conversion_codelets.o: filters/custom_mf/custom_conversion_codelets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT custom_conversion_codelets.o -MD -MP -MF $(DEPDIR)/custom_conversion_codelets.Tpo -c -o custom_conversion_codelets.o `test -f 'filters/custom_mf/custom_conversion_codelets.c' || echo '$(srcdir)/'`filters/custom_mf/custom_conversion_codelets.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/custom_conversion_codelets.Tpo $(DEPDIR)/custom_conversion_codelets.Po
#	$(AM_V_CC)source='filters/custom_mf/custom_conversion_codelets.c' object='custom_conversion_codelets.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o custom_conversion_codelets.o `test -f 'filters/custom_mf/custom_conversion_codelets.c' || echo '$(srcdir)/'`filters/custom_mf/custom_conversion_codelets.c

custom_conversion_codelets.obj: filters/custom_mf/custom_conversion_codelets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT custom_conversion_codelets.obj -MD -MP -MF $(DEPDIR)/custom_conversion_codelets.Tpo -c -o custom_conversion_codelets.obj `if test -f 'filters/custom_mf/custom_conversion_codelets.c'; then $(CYGPATH_W) 'filters/custom_mf/custom_conversion_codelets.c'; else $(CYGPATH_W) '$(srcdir)/filters/custom_mf/custom_conversion_codelets.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/custom_conversion_codelets.Tpo $(DEPDIR)/custom_conversion_codelets.Po
#	$(AM_V_CC)source='filters/custom_mf/custom_conversion_codelets.c' object='custom_conversion_codelets.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o custom_conversion_codelets.obj `if test -f 'filters/custom_mf/custom_conversion_codelets.c'; then $(CYGPATH_W) 'filters/custom_mf/custom_conversion_codelets.c'; else $(CYGPATH_W) '$(srcdir)/filters/custom_mf/custom_conversion_codelets.c'; fi`

conversion_opencl.o: filters/custom_mf/conversion_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT conversion_opencl.o -MD -MP -MF $(DEPDIR)/conversion_opencl.Tpo -c -o conversion_opencl.o `test -f 'filters/custom_mf/conversion_opencl.c' || echo '$(srcdir)/'`filters/custom_mf/conversion_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/conversion_opencl.Tpo $(DEPDIR)/conversion_opencl.Po
#	$(AM_V_CC)source='filters/custom_mf/conversion_opencl.c' object='conversion_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o conversion_opencl.o `test -f 'filters/custom_mf/conversion_opencl.c' || echo '$(srcdir)/'`filters/custom_mf/conversion_opencl.c

conversion_opencl.obj: filters/custom_mf/conversion_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT conversion_opencl.obj -MD -MP -MF $(DEPDIR)/conversion_opencl.Tpo -c -o conversion_opencl.obj `if test -f 'filters/custom_mf/conversion_opencl.c'; then $(CYGPATH_W) 'filters/custom_mf/conversion_opencl.c'; else $(CYGPATH_W) '$(srcdir)/filters/custom_mf/conversion_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/conversion_opencl.Tpo $(DEPDIR)/conversion_opencl.Po
#	$(AM_V_CC)source='filters/custom_mf/conversion_opencl.c' object='conversion_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o conversion_opencl.obj `if test -f 'filters/custom_mf/conversion_opencl.c'; then $(CYGPATH_W) 'filters/custom_mf/conversion_opencl.c'; else $(CYGPATH_W) '$(srcdir)/filters/custom_mf/conversion_opencl.c'; fi`

custom_opencl.o: filters/custom_mf/custom_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT custom_opencl.o -MD -MP -MF $(DEPDIR)/custom_opencl.Tpo -c -o custom_opencl.o `test -f 'filters/custom_mf/custom_opencl.c' || echo '$(srcdir)/'`filters/custom_mf/custom_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/custom_opencl.Tpo $(DEPDIR)/custom_opencl.Po
#	$(AM_V_CC)source='filters/custom_mf/custom_opencl.c' object='custom_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o custom_opencl.o `test -f 'filters/custom_mf/custom_opencl.c' || echo '$(srcdir)/'`filters/custom_mf/custom_opencl.c

custom_opencl.obj: filters/custom_mf/custom_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT custom_opencl.obj -MD -MP -MF $(DEPDIR)/custom_opencl.Tpo -c -o custom_opencl.obj `if test -f 'filters/custom_mf/custom_opencl.c'; then $(CYGPATH_W) 'filters/custom_mf/custom_opencl.c'; else $(CYGPATH_W) '$(srcdir)/filters/custom_mf/custom_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/custom_opencl.Tpo $(DEPDIR)/custom_opencl.Po
#	$(AM_V_CC)source='filters/custom_mf/custom_opencl.c' object='custom_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o custom_opencl.obj `if test -f 'filters/custom_mf/custom_opencl.c'; then $(CYGPATH_W) 'filters/custom_mf/custom_opencl.c'; else $(CYGPATH_W) '$(srcdir)/filters/custom_mf/custom_opencl.c'; fi`

fblock.o: filters/fblock.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fblock.o -MD -MP -MF $(DEPDIR)/fblock.Tpo -c -o fblock.o `test -f 'filters/fblock.c' || echo '$(srcdir)/'`filters/fblock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fblock.Tpo $(DEPDIR)/fblock.Po
#	$(AM_V_CC)source='filters/fblock.c' object='fblock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fblock.o `test -f 'filters/fblock.c' || echo '$(srcdir)/'`filters/fblock.c

fblock.obj: filters/fblock.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fblock.obj -MD -MP -MF $(DEPDIR)/fblock.Tpo -c -o fblock.obj `if test -f 'filters/fblock.c'; then $(CYGPATH_W) 'filters/fblock.c'; else $(CYGPATH_W) '$(srcdir)/filters/fblock.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fblock.Tpo $(DEPDIR)/fblock.Po
#	$(AM_V_CC)source='filters/fblock.c' object='fblock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fblock.obj `if test -f 'filters/fblock.c'; then $(CYGPATH_W) 'filters/fblock.c'; else $(CYGPATH_W) '$(srcdir)/filters/fblock.c'; fi`

fblock_cpu.o: filters/fblock_cpu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fblock_cpu.o -MD -MP -MF $(DEPDIR)/fblock_cpu.Tpo -c -o fblock_cpu.o `test -f 'filters/fblock_cpu.c' || echo '$(srcdir)/'`filters/fblock_cpu.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fblock_cpu.Tpo $(DEPDIR)/fblock_cpu.Po
#	$(AM_V_CC)source='filters/fblock_cpu.c' object='fblock_cpu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fblock_cpu.o `test -f 'filters/fblock_cpu.c' || echo '$(srcdir)/'`filters/fblock_cpu.c

fblock_cpu.obj: filters/fblock_cpu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fblock_cpu.obj -MD -MP -MF $(DEPDIR)/fblock_cpu.Tpo -c -o fblock_cpu.obj `if test -f 'filters/fblock_cpu.c'; then $(CYGPATH_W) 'filters/fblock_cpu.c'; else $(CYGPATH_W) '$(srcdir)/filters/fblock_cpu.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fblock_cpu.Tpo $(DEPDIR)/fblock_cpu.Po
#	$(AM_V_CC)source='filters/fblock_cpu.c' object='fblock_cpu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fblock_cpu.obj `if test -f 'filters/fblock_cpu.c'; then $(CYGPATH_W) 'filters/fblock_cpu.c'; else $(CYGPATH_W) '$(srcdir)/filters/fblock_cpu.c'; fi`

fblock_opencl.o: filters/fblock_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fblock_opencl.o -MD -MP -MF $(DEPDIR)/fblock_opencl.Tpo -c -o fblock_opencl.o `test -f 'filters/fblock_opencl.c' || echo '$(srcdir)/'`filters/fblock_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fblock_opencl.Tpo $(DEPDIR)/fblock_opencl.Po
#	$(AM_V_CC)source='filters/fblock_opencl.c' object='fblock_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fblock_opencl.o `test -f 'filters/fblock_opencl.c' || echo '$(srcdir)/'`filters/fblock_opencl.c

fblock_opencl.obj: filters/fblock_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fblock_opencl.obj -MD -MP -MF $(DEPDIR)/fblock_opencl.Tpo -c -o fblock_opencl.obj `if test -f 'filters/fblock_opencl.c'; then $(CYGPATH_W) 'filters/fblock_opencl.c'; else $(CYGPATH_W) '$(srcdir)/filters/fblock_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fblock_opencl.Tpo $(DEPDIR)/fblock_opencl.Po
#	$(AM_V_CC)source='filters/fblock_opencl.c' object='fblock_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fblock_opencl.obj `if test -f 'filters/fblock_opencl.c'; then $(CYGPATH_W) 'filters/fblock_opencl.c'; else $(CYGPATH_W) '$(srcdir)/filters/fblock_opencl.c'; fi`

fmatrix.o: filters/fmatrix.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fmatrix.o -MD -MP -MF $(DEPDIR)/fmatrix.Tpo -c -o fmatrix.o `test -f 'filters/fmatrix.c' || echo '$(srcdir)/'`filters/fmatrix.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fmatrix.Tpo $(DEPDIR)/fmatrix.Po
#	$(AM_V_CC)source='filters/fmatrix.c' object='fmatrix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fmatrix.o `test -f 'filters/fmatrix.c' || echo '$(srcdir)/'`filters/fmatrix.c

fmatrix.obj: filters/fmatrix.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fmatrix.obj -MD -MP -MF $(DEPDIR)/fmatrix.Tpo -c -o fmatrix.obj `if test -f 'filters/fmatrix.c'; then $(CYGPATH_W) 'filters/fmatrix.c'; else $(CYGPATH_W) '$(srcdir)/filters/fmatrix.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fmatrix.Tpo $(DEPDIR)/fmatrix.Po
#	$(AM_V_CC)source='filters/fmatrix.c' object='fmatrix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fmatrix.obj `if test -f 'filters/fmatrix.c'; then $(CYGPATH_W) 'filters/fmatrix.c'; else $(CYGPATH_W) '$(srcdir)/filters/fmatrix.c'; fi`

fmultiple_manual.o: filters/fmultiple_manual.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fmultiple_manual.o -MD -MP -MF $(DEPDIR)/fmultiple_manual.Tpo -c -o fmultiple_manual.o `test -f 'filters/fmultiple_manual.c' || echo '$(srcdir)/'`filters/fmultiple_manual.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fmultiple_manual.Tpo $(DEPDIR)/fmultiple_manual.Po
#	$(AM_V_CC)source='filters/fmultiple_manual.c' object='fmultiple_manual.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fmultiple_manual.o `test -f 'filters/fmultiple_manual.c' || echo '$(srcdir)/'`filters/fmultiple_manual.c

fmultiple_manual.obj: filters/fmultiple_manual.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fmultiple_manual.obj -MD -MP -MF $(DEPDIR)/fmultiple_manual.Tpo -c -o fmultiple_manual.obj `if test -f 'filters/fmultiple_manual.c'; then $(CYGPATH_W) 'filters/fmultiple_manual.c'; else $(CYGPATH_W) '$(srcdir)/filters/fmultiple_manual.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fmultiple_manual.Tpo $(DEPDIR)/fmultiple_manual.Po
#	$(AM_V_CC)source='filters/fmultiple_manual.c' object='fmultiple_manual.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fmultiple_manual.obj `if test -f 'filters/fmultiple_manual.c'; then $(CYGPATH_W) 'filters/fmultiple_manual.c'; else $(CYGPATH_W) '$(srcdir)/filters/fmultiple_manual.c'; fi`

fmultiple_submit.o: filters/fmultiple_submit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fmultiple_submit.o -MD -MP -MF $(DEPDIR)/fmultiple_submit.Tpo -c -o fmultiple_submit.o `test -f 'filters/fmultiple_submit.c' || echo '$(srcdir)/'`filters/fmultiple_submit.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fmultiple_submit.Tpo $(DEPDIR)/fmultiple_submit.Po
#	$(AM_V_CC)source='filters/fmultiple_submit.c' object='fmultiple_submit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fmultiple_submit.o `test -f 'filters/fmultiple_submit.c' || echo '$(srcdir)/'`filters/fmultiple_submit.c

fmultiple_submit.obj: filters/fmultiple_submit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fmultiple_submit.obj -MD -MP -MF $(DEPDIR)/fmultiple_submit.Tpo -c -o fmultiple_submit.obj `if test -f 'filters/fmultiple_submit.c'; then $(CYGPATH_W) 'filters/fmultiple_submit.c'; else $(CYGPATH_W) '$(srcdir)/filters/fmultiple_submit.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fmultiple_submit.Tpo $(DEPDIR)/fmultiple_submit.Po
#	$(AM_V_CC)source='filters/fmultiple_submit.c' object='fmultiple_submit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fmultiple_submit.obj `if test -f 'filters/fmultiple_submit.c'; then $(CYGPATH_W) 'filters/fmultiple_submit.c'; else $(CYGPATH_W) '$(srcdir)/filters/fmultiple_submit.c'; fi`

fmultiple_submit_implicit.o: filters/fmultiple_submit_implicit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fmultiple_submit_implicit.o -MD -MP -MF $(DEPDIR)/fmultiple_submit_implicit.Tpo -c -o fmultiple_submit_implicit.o `test -f 'filters/fmultiple_submit_implicit.c' || echo '$(srcdir)/'`filters/fmultiple_submit_implicit.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fmultiple_submit_implicit.Tpo $(DEPDIR)/fmultiple_submit_implicit.Po
#	$(AM_V_CC)source='filters/fmultiple_submit_implicit.c' object='fmultiple_submit_implicit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fmultiple_submit_implicit.o `test -f 'filters/fmultiple_submit_implicit.c' || echo '$(srcdir)/'`filters/fmultiple_submit_implicit.c

fmultiple_submit_implicit.obj: filters/fmultiple_submit_implicit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fmultiple_submit_implicit.obj -MD -MP -MF $(DEPDIR)/fmultiple_submit_implicit.Tpo -c -o fmultiple_submit_implicit.obj `if test -f 'filters/fmultiple_submit_implicit.c'; then $(CYGPATH_W) 'filters/fmultiple_submit_implicit.c'; else $(CYGPATH_W) '$(srcdir)/filters/fmultiple_submit_implicit.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fmultiple_submit_implicit.Tpo $(DEPDIR)/fmultiple_submit_implicit.Po
#	$(AM_V_CC)source='filters/fmultiple_submit_implicit.c' object='fmultiple_submit_implicit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fmultiple_submit_implicit.obj `if test -f 'filters/fmultiple_submit_implicit.c'; then $(CYGPATH_W) 'filters/fmultiple_submit_implicit.c'; else $(CYGPATH_W) '$(srcdir)/filters/fmultiple_submit_implicit.c'; fi`

fmultiple_submit_readonly.o: filters/fmultiple_submit_readonly.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fmultiple_submit_readonly.o -MD -MP -MF $(DEPDIR)/fmultiple_submit_readonly.Tpo -c -o fmultiple_submit_readonly.o `test -f 'filters/fmultiple_submit_readonly.c' || echo '$(srcdir)/'`filters/fmultiple_submit_readonly.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fmultiple_submit_readonly.Tpo $(DEPDIR)/fmultiple_submit_readonly.Po
#	$(AM_V_CC)source='filters/fmultiple_submit_readonly.c' object='fmultiple_submit_readonly.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fmultiple_submit_readonly.o `test -f 'filters/fmultiple_submit_readonly.c' || echo '$(srcdir)/'`filters/fmultiple_submit_readonly.c

fmultiple_submit_readonly.obj: filters/fmultiple_submit_readonly.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fmultiple_submit_readonly.obj -MD -MP -MF $(DEPDIR)/fmultiple_submit_readonly.Tpo -c -o fmultiple_submit_readonly.obj `if test -f 'filters/fmultiple_submit_readonly.c'; then $(CYGPATH_W) 'filters/fmultiple_submit_readonly.c'; else $(CYGPATH_W) '$(srcdir)/filters/fmultiple_submit_readonly.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fmultiple_submit_readonly.Tpo $(DEPDIR)/fmultiple_submit_readonly.Po
#	$(AM_V_CC)source='filters/fmultiple_submit_readonly.c' object='fmultiple_submit_readonly.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fmultiple_submit_readonly.obj `if test -f 'filters/fmultiple_submit_readonly.c'; then $(CYGPATH_W) 'filters/fmultiple_submit_readonly.c'; else $(CYGPATH_W) '$(srcdir)/filters/fmultiple_submit_readonly.c'; fi`

fread.o: filters/fread.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fread.o -MD -MP -MF $(DEPDIR)/fread.Tpo -c -o fread.o `test -f 'filters/fread.c' || echo '$(srcdir)/'`filters/fread.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fread.Tpo $(DEPDIR)/fread.Po
#	$(AM_V_CC)source='filters/fread.c' object='fread.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fread.o `test -f 'filters/fread.c' || echo '$(srcdir)/'`filters/fread.c

fread.obj: filters/fread.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fread.obj -MD -MP -MF $(DEPDIR)/fread.Tpo -c -o fread.obj `if test -f 'filters/fread.c'; then $(CYGPATH_W) 'filters/fread.c'; else $(CYGPATH_W) '$(srcdir)/filters/fread.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fread.Tpo $(DEPDIR)/fread.Po
#	$(AM_V_CC)source='filters/fread.c' object='fread.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fread.obj `if test -f 'filters/fread.c'; then $(CYGPATH_W) 'filters/fread.c'; else $(CYGPATH_W) '$(srcdir)/filters/fread.c'; fi`

frecursive.o: filters/frecursive.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT frecursive.o -MD -MP -MF $(DEPDIR)/frecursive.Tpo -c -o frecursive.o `test -f 'filters/frecursive.c' || echo '$(srcdir)/'`filters/frecursive.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/frecursive.Tpo $(DEPDIR)/frecursive.Po
#	$(AM_V_CC)source='filters/frecursive.c' object='frecursive.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o frecursive.o `test -f 'filters/frecursive.c' || echo '$(srcdir)/'`filters/frecursive.c

frecursive.obj: filters/frecursive.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT frecursive.obj -MD -MP -MF $(DEPDIR)/frecursive.Tpo -c -o frecursive.obj `if test -f 'filters/frecursive.c'; then $(CYGPATH_W) 'filters/frecursive.c'; else $(CYGPATH_W) '$(srcdir)/filters/frecursive.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/frecursive.Tpo $(DEPDIR)/frecursive.Po
#	$(AM_V_CC)source='filters/frecursive.c' object='frecursive.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o frecursive.obj `if test -f 'filters/frecursive.c'; then $(CYGPATH_W) 'filters/frecursive.c'; else $(CYGPATH_W) '$(srcdir)/filters/frecursive.c'; fi`

fvector.o: filters/fvector.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fvector.o -MD -MP -MF $(DEPDIR)/fvector.Tpo -c -o fvector.o `test -f 'filters/fvector.c' || echo '$(srcdir)/'`filters/fvector.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fvector.Tpo $(DEPDIR)/fvector.Po
#	$(AM_V_CC)source='filters/fvector.c' object='fvector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fvector.o `test -f 'filters/fvector.c' || echo '$(srcdir)/'`filters/fvector.c

fvector.obj: filters/fvector.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fvector.obj -MD -MP -MF $(DEPDIR)/fvector.Tpo -c -o fvector.obj `if test -f 'filters/fvector.c'; then $(CYGPATH_W) 'filters/fvector.c'; else $(CYGPATH_W) '$(srcdir)/filters/fvector.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fvector.Tpo $(DEPDIR)/fvector.Po
#	$(AM_V_CC)source='filters/fvector.c' object='fvector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fvector.obj `if test -f 'filters/fvector.c'; then $(CYGPATH_W) 'filters/fvector.c'; else $(CYGPATH_W) '$(srcdir)/filters/fvector.c'; fi`

shadow.o: filters/shadow.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT shadow.o -MD -MP -MF $(DEPDIR)/shadow.Tpo -c -o shadow.o `test -f 'filters/shadow.c' || echo '$(srcdir)/'`filters/shadow.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/shadow.Tpo $(DEPDIR)/shadow.Po
#	$(AM_V_CC)source='filters/shadow.c' object='shadow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o shadow.o `test -f 'filters/shadow.c' || echo '$(srcdir)/'`filters/shadow.c

shadow.obj: filters/shadow.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT shadow.obj -MD -MP -MF $(DEPDIR)/shadow.Tpo -c -o shadow.obj `if test -f 'filters/shadow.c'; then $(CYGPATH_W) 'filters/shadow.c'; else $(CYGPATH_W) '$(srcdir)/filters/shadow.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shadow.Tpo $(DEPDIR)/shadow.Po
#	$(AM_V_CC)source='filters/shadow.c' object='shadow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o shadow.obj `if test -f 'filters/shadow.c'; then $(CYGPATH_W) 'filters/shadow.c'; else $(CYGPATH_W) '$(srcdir)/filters/shadow.c'; fi`

shadow2d.o: filters/shadow2d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT shadow2d.o -MD -MP -MF $(DEPDIR)/shadow2d.Tpo -c -o shadow2d.o `test -f 'filters/shadow2d.c' || echo '$(srcdir)/'`filters/shadow2d.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/shadow2d.Tpo $(DEPDIR)/shadow2d.Po
#	$(AM_V_CC)source='filters/shadow2d.c' object='shadow2d.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o shadow2d.o `test -f 'filters/shadow2d.c' || echo '$(srcdir)/'`filters/shadow2d.c

shadow2d.obj: filters/shadow2d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT shadow2d.obj -MD -MP -MF $(DEPDIR)/shadow2d.Tpo -c -o shadow2d.obj `if test -f 'filters/shadow2d.c'; then $(CYGPATH_W) 'filters/shadow2d.c'; else $(CYGPATH_W) '$(srcdir)/filters/shadow2d.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shadow2d.Tpo $(DEPDIR)/shadow2d.Po
#	$(AM_V_CC)source='filters/shadow2d.c' object='shadow2d.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o shadow2d.obj `if test -f 'filters/shadow2d.c'; then $(CYGPATH_W) 'filters/shadow2d.c'; else $(CYGPATH_W) '$(srcdir)/filters/shadow2d.c'; fi`

shadow3d.o: filters/shadow3d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT shadow3d.o -MD -MP -MF $(DEPDIR)/shadow3d.Tpo -c -o shadow3d.o `test -f 'filters/shadow3d.c' || echo '$(srcdir)/'`filters/shadow3d.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/shadow3d.Tpo $(DEPDIR)/shadow3d.Po
#	$(AM_V_CC)source='filters/shadow3d.c' object='shadow3d.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o shadow3d.o `test -f 'filters/shadow3d.c' || echo '$(srcdir)/'`filters/shadow3d.c

shadow3d.obj: filters/shadow3d.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT shadow3d.obj -MD -MP -MF $(DEPDIR)/shadow3d.Tpo -c -o shadow3d.obj `if test -f 'filters/shadow3d.c'; then $(CYGPATH_W) 'filters/shadow3d.c'; else $(CYGPATH_W) '$(srcdir)/filters/shadow3d.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shadow3d.Tpo $(DEPDIR)/shadow3d.Po
#	$(AM_V_CC)source='filters/shadow3d.c' object='shadow3d.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o shadow3d.obj `if test -f 'filters/shadow3d.c'; then $(CYGPATH_W) 'filters/shadow3d.c'; else $(CYGPATH_W) '$(srcdir)/filters/shadow3d.c'; fi`

hello_c.o: fortran/hello_c.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hello_c.o -MD -MP -MF $(DEPDIR)/hello_c.Tpo -c -o hello_c.o `test -f 'fortran/hello_c.c' || echo '$(srcdir)/'`fortran/hello_c.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hello_c.Tpo $(DEPDIR)/hello_c.Po
#	$(AM_V_CC)source='fortran/hello_c.c' object='hello_c.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hello_c.o `test -f 'fortran/hello_c.c' || echo '$(srcdir)/'`fortran/hello_c.c

hello_c.obj: fortran/hello_c.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hello_c.obj -MD -MP -MF $(DEPDIR)/hello_c.Tpo -c -o hello_c.obj `if test -f 'fortran/hello_c.c'; then $(CYGPATH_W) 'fortran/hello_c.c'; else $(CYGPATH_W) '$(srcdir)/fortran/hello_c.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hello_c.Tpo $(DEPDIR)/hello_c.Po
#	$(AM_V_CC)source='fortran/hello_c.c' object='hello_c.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hello_c.obj `if test -f 'fortran/hello_c.c'; then $(CYGPATH_W) 'fortran/hello_c.c'; else $(CYGPATH_W) '$(srcdir)/fortran/hello_c.c'; fi`

marshalling.o: fortran90/marshalling.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT marshalling.o -MD -MP -MF $(DEPDIR)/marshalling.Tpo -c -o marshalling.o `test -f 'fortran90/marshalling.c' || echo '$(srcdir)/'`fortran90/marshalling.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/marshalling.Tpo $(DEPDIR)/marshalling.Po
#	$(AM_V_CC)source='fortran90/marshalling.c' object='marshalling.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o marshalling.o `test -f 'fortran90/marshalling.c' || echo '$(srcdir)/'`fortran90/marshalling.c

marshalling.obj: fortran90/marshalling.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT marshalling.obj -MD -MP -MF $(DEPDIR)/marshalling.Tpo -c -o marshalling.obj `if test -f 'fortran90/marshalling.c'; then $(CYGPATH_W) 'fortran90/marshalling.c'; else $(CYGPATH_W) '$(srcdir)/fortran90/marshalling.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/marshalling.Tpo $(DEPDIR)/marshalling.Po
#	$(AM_V_CC)source='fortran90/marshalling.c' object='marshalling.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o marshalling.obj `if test -f 'fortran90/marshalling.c'; then $(CYGPATH_W) 'fortran90/marshalling.c'; else $(CYGPATH_W) '$(srcdir)/fortran90/marshalling.c'; fi`

gl_interop.o: gl_interop/gl_interop.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gl_interop.o -MD -MP -MF $(DEPDIR)/gl_interop.Tpo -c -o gl_interop.o `test -f 'gl_interop/gl_interop.c' || echo '$(srcdir)/'`gl_interop/gl_interop.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/gl_interop.Tpo $(DEPDIR)/gl_interop.Po
#	$(AM_V_CC)source='gl_interop/gl_interop.c' object='gl_interop.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gl_interop.o `test -f 'gl_interop/gl_interop.c' || echo '$(srcdir)/'`gl_interop/gl_interop.c

gl_interop.obj: gl_interop/gl_interop.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gl_interop.obj -MD -MP -MF $(DEPDIR)/gl_interop.Tpo -c -o gl_interop.obj `if test -f 'gl_interop/gl_interop.c'; then $(CYGPATH_W) 'gl_interop/gl_interop.c'; else $(CYGPATH_W) '$(srcdir)/gl_interop/gl_interop.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gl_interop.Tpo $(DEPDIR)/gl_interop.Po
#	$(AM_V_CC)source='gl_interop/gl_interop.c' object='gl_interop.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gl_interop.obj `if test -f 'gl_interop/gl_interop.c'; then $(CYGPATH_W) 'gl_interop/gl_interop.c'; else $(CYGPATH_W) '$(srcdir)/gl_interop/gl_interop.c'; fi`

gl_interop_idle.o: gl_interop/gl_interop_idle.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gl_interop_idle.o -MD -MP -MF $(DEPDIR)/gl_interop_idle.Tpo -c -o gl_interop_idle.o `test -f 'gl_interop/gl_interop_idle.c' || echo '$(srcdir)/'`gl_interop/gl_interop_idle.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/gl_interop_idle.Tpo $(DEPDIR)/gl_interop_idle.Po
#	$(AM_V_CC)source='gl_interop/gl_interop_idle.c' object='gl_interop_idle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gl_interop_idle.o `test -f 'gl_interop/gl_interop_idle.c' || echo '$(srcdir)/'`gl_interop/gl_interop_idle.c

gl_interop_idle.obj: gl_interop/gl_interop_idle.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gl_interop_idle.obj -MD -MP -MF $(DEPDIR)/gl_interop_idle.Tpo -c -o gl_interop_idle.obj `if test -f 'gl_interop/gl_interop_idle.c'; then $(CYGPATH_W) 'gl_interop/gl_interop_idle.c'; else $(CYGPATH_W) '$(srcdir)/gl_interop/gl_interop_idle.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gl_interop_idle.Tpo $(DEPDIR)/gl_interop_idle.Po
#	$(AM_V_CC)source='gl_interop/gl_interop_idle.c' object='gl_interop_idle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gl_interop_idle.obj `if test -f 'gl_interop/gl_interop_idle.c'; then $(CYGPATH_W) 'gl_interop/gl_interop_idle.c'; else $(CYGPATH_W) '$(srcdir)/gl_interop/gl_interop_idle.c'; fi`

heat.o: heat/heat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT heat.o -MD -MP -MF $(DEPDIR)/heat.Tpo -c -o heat.o `test -f 'heat/heat.c' || echo '$(srcdir)/'`heat/heat.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/heat.Tpo $(DEPDIR)/heat.Po
#	$(AM_V_CC)source='heat/heat.c' object='heat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o heat.o `test -f 'heat/heat.c' || echo '$(srcdir)/'`heat/heat.c

heat.obj: heat/heat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT heat.obj -MD -MP -MF $(DEPDIR)/heat.Tpo -c -o heat.obj `if test -f 'heat/heat.c'; then $(CYGPATH_W) 'heat/heat.c'; else $(CYGPATH_W) '$(srcdir)/heat/heat.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/heat.Tpo $(DEPDIR)/heat.Po
#	$(AM_V_CC)source='heat/heat.c' object='heat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o heat.obj `if test -f 'heat/heat.c'; then $(CYGPATH_W) 'heat/heat.c'; else $(CYGPATH_W) '$(srcdir)/heat/heat.c'; fi`

dw_factolu.o: heat/dw_factolu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dw_factolu.o -MD -MP -MF $(DEPDIR)/dw_factolu.Tpo -c -o dw_factolu.o `test -f 'heat/dw_factolu.c' || echo '$(srcdir)/'`heat/dw_factolu.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dw_factolu.Tpo $(DEPDIR)/dw_factolu.Po
#	$(AM_V_CC)source='heat/dw_factolu.c' object='dw_factolu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dw_factolu.o `test -f 'heat/dw_factolu.c' || echo '$(srcdir)/'`heat/dw_factolu.c

dw_factolu.obj: heat/dw_factolu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dw_factolu.obj -MD -MP -MF $(DEPDIR)/dw_factolu.Tpo -c -o dw_factolu.obj `if test -f 'heat/dw_factolu.c'; then $(CYGPATH_W) 'heat/dw_factolu.c'; else $(CYGPATH_W) '$(srcdir)/heat/dw_factolu.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dw_factolu.Tpo $(DEPDIR)/dw_factolu.Po
#	$(AM_V_CC)source='heat/dw_factolu.c' object='dw_factolu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dw_factolu.obj `if test -f 'heat/dw_factolu.c'; then $(CYGPATH_W) 'heat/dw_factolu.c'; else $(CYGPATH_W) '$(srcdir)/heat/dw_factolu.c'; fi`

dw_factolu_tag.o: heat/dw_factolu_tag.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dw_factolu_tag.o -MD -MP -MF $(DEPDIR)/dw_factolu_tag.Tpo -c -o dw_factolu_tag.o `test -f 'heat/dw_factolu_tag.c' || echo '$(srcdir)/'`heat/dw_factolu_tag.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dw_factolu_tag.Tpo $(DEPDIR)/dw_factolu_tag.Po
#	$(AM_V_CC)source='heat/dw_factolu_tag.c' object='dw_factolu_tag.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dw_factolu_tag.o `test -f 'heat/dw_factolu_tag.c' || echo '$(srcdir)/'`heat/dw_factolu_tag.c

dw_factolu_tag.obj: heat/dw_factolu_tag.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dw_factolu_tag.obj -MD -MP -MF $(DEPDIR)/dw_factolu_tag.Tpo -c -o dw_factolu_tag.obj `if test -f 'heat/dw_factolu_tag.c'; then $(CYGPATH_W) 'heat/dw_factolu_tag.c'; else $(CYGPATH_W) '$(srcdir)/heat/dw_factolu_tag.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dw_factolu_tag.Tpo $(DEPDIR)/dw_factolu_tag.Po
#	$(AM_V_CC)source='heat/dw_factolu_tag.c' object='dw_factolu_tag.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dw_factolu_tag.obj `if test -f 'heat/dw_factolu_tag.c'; then $(CYGPATH_W) 'heat/dw_factolu_tag.c'; else $(CYGPATH_W) '$(srcdir)/heat/dw_factolu_tag.c'; fi`

dw_factolu_grain.o: heat/dw_factolu_grain.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dw_factolu_grain.o -MD -MP -MF $(DEPDIR)/dw_factolu_grain.Tpo -c -o dw_factolu_grain.o `test -f 'heat/dw_factolu_grain.c' || echo '$(srcdir)/'`heat/dw_factolu_grain.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dw_factolu_grain.Tpo $(DEPDIR)/dw_factolu_grain.Po
#	$(AM_V_CC)source='heat/dw_factolu_grain.c' object='dw_factolu_grain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dw_factolu_grain.o `test -f 'heat/dw_factolu_grain.c' || echo '$(srcdir)/'`heat/dw_factolu_grain.c

dw_factolu_grain.obj: heat/dw_factolu_grain.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dw_factolu_grain.obj -MD -MP -MF $(DEPDIR)/dw_factolu_grain.Tpo -c -o dw_factolu_grain.obj `if test -f 'heat/dw_factolu_grain.c'; then $(CYGPATH_W) 'heat/dw_factolu_grain.c'; else $(CYGPATH_W) '$(srcdir)/heat/dw_factolu_grain.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dw_factolu_grain.Tpo $(DEPDIR)/dw_factolu_grain.Po
#	$(AM_V_CC)source='heat/dw_factolu_grain.c' object='dw_factolu_grain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dw_factolu_grain.obj `if test -f 'heat/dw_factolu_grain.c'; then $(CYGPATH_W) 'heat/dw_factolu_grain.c'; else $(CYGPATH_W) '$(srcdir)/heat/dw_factolu_grain.c'; fi`

dw_sparse_cg.o: heat/dw_sparse_cg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dw_sparse_cg.o -MD -MP -MF $(DEPDIR)/dw_sparse_cg.Tpo -c -o dw_sparse_cg.o `test -f 'heat/dw_sparse_cg.c' || echo '$(srcdir)/'`heat/dw_sparse_cg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dw_sparse_cg.Tpo $(DEPDIR)/dw_sparse_cg.Po
#	$(AM_V_CC)source='heat/dw_sparse_cg.c' object='dw_sparse_cg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dw_sparse_cg.o `test -f 'heat/dw_sparse_cg.c' || echo '$(srcdir)/'`heat/dw_sparse_cg.c

dw_sparse_cg.obj: heat/dw_sparse_cg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dw_sparse_cg.obj -MD -MP -MF $(DEPDIR)/dw_sparse_cg.Tpo -c -o dw_sparse_cg.obj `if test -f 'heat/dw_sparse_cg.c'; then $(CYGPATH_W) 'heat/dw_sparse_cg.c'; else $(CYGPATH_W) '$(srcdir)/heat/dw_sparse_cg.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dw_sparse_cg.Tpo $(DEPDIR)/dw_sparse_cg.Po
#	$(AM_V_CC)source='heat/dw_sparse_cg.c' object='dw_sparse_cg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dw_sparse_cg.obj `if test -f 'heat/dw_sparse_cg.c'; then $(CYGPATH_W) 'heat/dw_sparse_cg.c'; else $(CYGPATH_W) '$(srcdir)/heat/dw_sparse_cg.c'; fi`

heat_display.o: heat/heat_display.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT heat_display.o -MD -MP -MF $(DEPDIR)/heat_display.Tpo -c -o heat_display.o `test -f 'heat/heat_display.c' || echo '$(srcdir)/'`heat/heat_display.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/heat_display.Tpo $(DEPDIR)/heat_display.Po
#	$(AM_V_CC)source='heat/heat_display.c' object='heat_display.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o heat_display.o `test -f 'heat/heat_display.c' || echo '$(srcdir)/'`heat/heat_display.c

heat_display.obj: heat/heat_display.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT heat_display.obj -MD -MP -MF $(DEPDIR)/heat_display.Tpo -c -o heat_display.obj `if test -f 'heat/heat_display.c'; then $(CYGPATH_W) 'heat/heat_display.c'; else $(CYGPATH_W) '$(srcdir)/heat/heat_display.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/heat_display.Tpo $(DEPDIR)/heat_display.Po
#	$(AM_V_CC)source='heat/heat_display.c' object='heat_display.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o heat_display.obj `if test -f 'heat/heat_display.c'; then $(CYGPATH_W) 'heat/heat_display.c'; else $(CYGPATH_W) '$(srcdir)/heat/heat_display.c'; fi`

lu_kernels_model.o: heat/lu_kernels_model.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lu_kernels_model.o -MD -MP -MF $(DEPDIR)/lu_kernels_model.Tpo -c -o lu_kernels_model.o `test -f 'heat/lu_kernels_model.c' || echo '$(srcdir)/'`heat/lu_kernels_model.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/lu_kernels_model.Tpo $(DEPDIR)/lu_kernels_model.Po
#	$(AM_V_CC)source='heat/lu_kernels_model.c' object='lu_kernels_model.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lu_kernels_model.o `test -f 'heat/lu_kernels_model.c' || echo '$(srcdir)/'`heat/lu_kernels_model.c

lu_kernels_model.obj: heat/lu_kernels_model.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lu_kernels_model.obj -MD -MP -MF $(DEPDIR)/lu_kernels_model.Tpo -c -o lu_kernels_model.obj `if test -f 'heat/lu_kernels_model.c'; then $(CYGPATH_W) 'heat/lu_kernels_model.c'; else $(CYGPATH_W) '$(srcdir)/heat/lu_kernels_model.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lu_kernels_model.Tpo $(DEPDIR)/lu_kernels_model.Po
#	$(AM_V_CC)source='heat/lu_kernels_model.c' object='lu_kernels_model.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lu_kernels_model.obj `if test -f 'heat/lu_kernels_model.c'; then $(CYGPATH_W) 'heat/lu_kernels_model.c'; else $(CYGPATH_W) '$(srcdir)/heat/lu_kernels_model.c'; fi`

dw_sparse_cg_kernels.o: heat/dw_sparse_cg_kernels.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dw_sparse_cg_kernels.o -MD -MP -MF $(DEPDIR)/dw_sparse_cg_kernels.Tpo -c -o dw_sparse_cg_kernels.o `test -f 'heat/dw_sparse_cg_kernels.c' || echo '$(srcdir)/'`heat/dw_sparse_cg_kernels.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dw_sparse_cg_kernels.Tpo $(DEPDIR)/dw_sparse_cg_kernels.Po
#	$(AM_V_CC)source='heat/dw_sparse_cg_kernels.c' object='dw_sparse_cg_kernels.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dw_sparse_cg_kernels.o `test -f 'heat/dw_sparse_cg_kernels.c' || echo '$(srcdir)/'`heat/dw_sparse_cg_kernels.c

dw_sparse_cg_kernels.obj: heat/dw_sparse_cg_kernels.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dw_sparse_cg_kernels.obj -MD -MP -MF $(DEPDIR)/dw_sparse_cg_kernels.Tpo -c -o dw_sparse_cg_kernels.obj `if test -f 'heat/dw_sparse_cg_kernels.c'; then $(CYGPATH_W) 'heat/dw_sparse_cg_kernels.c'; else $(CYGPATH_W) '$(srcdir)/heat/dw_sparse_cg_kernels.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dw_sparse_cg_kernels.Tpo $(DEPDIR)/dw_sparse_cg_kernels.Po
#	$(AM_V_CC)source='heat/dw_sparse_cg_kernels.c' object='dw_sparse_cg_kernels.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dw_sparse_cg_kernels.obj `if test -f 'heat/dw_sparse_cg_kernels.c'; then $(CYGPATH_W) 'heat/dw_sparse_cg_kernels.c'; else $(CYGPATH_W) '$(srcdir)/heat/dw_sparse_cg_kernels.c'; fi`

dw_factolu_kernels.o: heat/dw_factolu_kernels.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dw_factolu_kernels.o -MD -MP -MF $(DEPDIR)/dw_factolu_kernels.Tpo -c -o dw_factolu_kernels.o `test -f 'heat/dw_factolu_kernels.c' || echo '$(srcdir)/'`heat/dw_factolu_kernels.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dw_factolu_kernels.Tpo $(DEPDIR)/dw_factolu_kernels.Po
#	$(AM_V_CC)source='heat/dw_factolu_kernels.c' object='dw_factolu_kernels.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dw_factolu_kernels.o `test -f 'heat/dw_factolu_kernels.c' || echo '$(srcdir)/'`heat/dw_factolu_kernels.c

dw_factolu_kernels.obj: heat/dw_factolu_kernels.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dw_factolu_kernels.obj -MD -MP -MF $(DEPDIR)/dw_factolu_kernels.Tpo -c -o dw_factolu_kernels.obj `if test -f 'heat/dw_factolu_kernels.c'; then $(CYGPATH_W) 'heat/dw_factolu_kernels.c'; else $(CYGPATH_W) '$(srcdir)/heat/dw_factolu_kernels.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dw_factolu_kernels.Tpo $(DEPDIR)/dw_factolu_kernels.Po
#	$(AM_V_CC)source='heat/dw_factolu_kernels.c' object='dw_factolu_kernels.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dw_factolu_kernels.obj `if test -f 'heat/dw_factolu_kernels.c'; then $(CYGPATH_W) 'heat/dw_factolu_kernels.c'; else $(CYGPATH_W) '$(srcdir)/heat/dw_factolu_kernels.c'; fi`

incrementer.o: incrementer/incrementer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT incrementer.o -MD -MP -MF $(DEPDIR)/incrementer.Tpo -c -o incrementer.o `test -f 'incrementer/incrementer.c' || echo '$(srcdir)/'`incrementer/incrementer.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/incrementer.Tpo $(DEPDIR)/incrementer.Po
#	$(AM_V_CC)source='incrementer/incrementer.c' object='incrementer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o incrementer.o `test -f 'incrementer/incrementer.c' || echo '$(srcdir)/'`incrementer/incrementer.c

incrementer.obj: incrementer/incrementer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT incrementer.obj -MD -MP -MF $(DEPDIR)/incrementer.Tpo -c -o incrementer.obj `if test -f 'incrementer/incrementer.c'; then $(CYGPATH_W) 'incrementer/incrementer.c'; else $(CYGPATH_W) '$(srcdir)/incrementer/incrementer.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/incrementer.Tpo $(DEPDIR)/incrementer.Po
#	$(AM_V_CC)source='incrementer/incrementer.c' object='incrementer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o incrementer.obj `if test -f 'incrementer/incrementer.c'; then $(CYGPATH_W) 'incrementer/incrementer.c'; else $(CYGPATH_W) '$(srcdir)/incrementer/incrementer.c'; fi`

complex.o: interface/complex.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complex.o -MD -MP -MF $(DEPDIR)/complex.Tpo -c -o complex.o `test -f 'interface/complex.c' || echo '$(srcdir)/'`interface/complex.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/complex.Tpo $(DEPDIR)/complex.Po
#	$(AM_V_CC)source='interface/complex.c' object='complex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complex.o `test -f 'interface/complex.c' || echo '$(srcdir)/'`interface/complex.c

complex.obj: interface/complex.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complex.obj -MD -MP -MF $(DEPDIR)/complex.Tpo -c -o complex.obj `if test -f 'interface/complex.c'; then $(CYGPATH_W) 'interface/complex.c'; else $(CYGPATH_W) '$(srcdir)/interface/complex.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/complex.Tpo $(DEPDIR)/complex.Po
#	$(AM_V_CC)source='interface/complex.c' object='complex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complex.obj `if test -f 'interface/complex.c'; then $(CYGPATH_W) 'interface/complex.c'; else $(CYGPATH_W) '$(srcdir)/interface/complex.c'; fi`

complex_interface.o: interface/complex_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complex_interface.o -MD -MP -MF $(DEPDIR)/complex_interface.Tpo -c -o complex_interface.o `test -f 'interface/complex_interface.c' || echo '$(srcdir)/'`interface/complex_interface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/complex_interface.Tpo $(DEPDIR)/complex_interface.Po
#	$(AM_V_CC)source='interface/complex_interface.c' object='complex_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complex_interface.o `test -f 'interface/complex_interface.c' || echo '$(srcdir)/'`interface/complex_interface.c

complex_interface.obj: interface/complex_interface.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complex_interface.obj -MD -MP -MF $(DEPDIR)/complex_interface.Tpo -c -o complex_interface.obj `if test -f 'interface/complex_interface.c'; then $(CYGPATH_W) 'interface/complex_interface.c'; else $(CYGPATH_W) '$(srcdir)/interface/complex_interface.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/complex_interface.Tpo $(DEPDIR)/complex_interface.Po
#	$(AM_V_CC)source='interface/complex_interface.c' object='complex_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complex_interface.obj `if test -f 'interface/complex_interface.c'; then $(CYGPATH_W) 'interface/complex_interface.c'; else $(CYGPATH_W) '$(srcdir)/interface/complex_interface.c'; fi`

complex_filters.o: interface/complex_filters.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complex_filters.o -MD -MP -MF $(DEPDIR)/complex_filters.Tpo -c -o complex_filters.o `test -f 'interface/complex_filters.c' || echo '$(srcdir)/'`interface/complex_filters.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/complex_filters.Tpo $(DEPDIR)/complex_filters.Po
#	$(AM_V_CC)source='interface/complex_filters.c' object='complex_filters.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complex_filters.o `test -f 'interface/complex_filters.c' || echo '$(srcdir)/'`interface/complex_filters.c

complex_filters.obj: interface/complex_filters.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complex_filters.obj -MD -MP -MF $(DEPDIR)/complex_filters.Tpo -c -o complex_filters.obj `if test -f 'interface/complex_filters.c'; then $(CYGPATH_W) 'interface/complex_filters.c'; else $(CYGPATH_W) '$(srcdir)/interface/complex_filters.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/complex_filters.Tpo $(DEPDIR)/complex_filters.Po
#	$(AM_V_CC)source='interface/complex_filters.c' object='complex_filters.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complex_filters.obj `if test -f 'interface/complex_filters.c'; then $(CYGPATH_W) 'interface/complex_filters.c'; else $(CYGPATH_W) '$(srcdir)/interface/complex_filters.c'; fi`

complex_kernels_opencl.o: interface/complex_kernels_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complex_kernels_opencl.o -MD -MP -MF $(DEPDIR)/complex_kernels_opencl.Tpo -c -o complex_kernels_opencl.o `test -f 'interface/complex_kernels_opencl.c' || echo '$(srcdir)/'`interface/complex_kernels_opencl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/complex_kernels_opencl.Tpo $(DEPDIR)/complex_kernels_opencl.Po
#	$(AM_V_CC)source='interface/complex_kernels_opencl.c' object='complex_kernels_opencl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complex_kernels_opencl.o `test -f 'interface/complex_kernels_opencl.c' || echo '$(srcdir)/'`interface/complex_kernels_opencl.c

complex_kernels_opencl.obj: interface/complex_kernels_opencl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complex_kernels_opencl.obj -MD -MP -MF $(DEPDIR)/complex_kernels_opencl.Tpo -c -o complex_kernels_opencl.obj `if test -f 'interface/complex_kernels_opencl.c'; then $(CYGPATH_W) 'interface/complex_kernels_opencl.c'; else $(CYGPATH_W) '$(srcdir)/interface/complex_kernels_opencl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/complex_kernels_opencl.Tpo $(DEPDIR)/complex_kernels_opencl.Po
#	$(AM_V_CC)source='interface/complex_kernels_opencl.c' object='complex_kernels_opencl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complex_kernels_opencl.obj `if test -f 'interface/complex_kernels_opencl.c'; then $(CYGPATH_W) 'interface/complex_kernels_opencl.c'; else $(CYGPATH_W) '$(srcdir)/interface/complex_kernels_opencl.c'; fi`

loader-loader.o: ../tests/loader.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(loader_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT loader-loader.o -MD -MP -MF $(DEPDIR)/loader-loader.Tpo -c -o loader-loader.o `test -f '../tests/loader.c' || echo '$(srcdir)/'`../tests/loader.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/loader-loader.Tpo $(DEPDIR)/loader-loader.Po
#	$(AM_V_CC)source='../tests/loader.c' object='loader-loader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(loader_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o loader-loader.o `test -f '../tests/loader.c' || echo '$(srcdir)/'`../tests/loader.c

loader-loader.obj: ../tests/loader.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(loader_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT loader-loader.obj -MD -MP -MF $(DEPDIR)/loader-loader.Tpo -c -o loader-loader.obj `if test -f '../tests/loader.c'; then $(CYGPATH_W) '../tests/loader.c'; else $(CYGPATH_W) '$(srcdir)/../tests/loader.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/loader-loader.Tpo $(DEPDIR)/loader-loader.Po
#	$(AM_V_CC)source='../tests/loader.c' object='loader-loader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(loader_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o loader-loader.obj `if test -f '../tests/loader.c'; then $(CYGPATH_W) '../tests/loader.c'; else $(CYGPATH_W) '$(srcdir)/../tests/loader.c'; fi`

lu_example_complex_double.o: lu/lu_example_complex_double.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lu_example_complex_double.o -MD -MP -MF $(DEPDIR)/lu_example_complex_double.Tpo -c -o lu_example_complex_double.o `test -f 'lu/lu_example_complex_double.c' || echo '$(srcdir)/'`lu/lu_example_complex_double.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/lu_example_complex_double.Tpo $(DEPDIR)/lu_example_complex_double.Po
#	$(AM_V_CC)source='lu/lu_example_complex_double.c' object='lu_example_complex_double.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lu_example_complex_double.o `test -f 'lu/lu_example_complex_double.c' || echo '$(srcdir)/'`lu/lu_example_complex_double.c

lu_example_complex_double.obj: lu/lu_example_complex_double.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lu_example_complex_double.obj -MD -MP -MF $(DEPDIR)/lu_example_complex_double.Tpo -c -o lu_example_complex_double.obj `if test -f 'lu/lu_example_complex_double.c'; then $(CYGPATH_W) 'lu/lu_example_complex_double.c'; else $(CYGPATH_W) '$(srcdir)/lu/lu_example_complex_double.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lu_example_complex_double.Tpo $(DEPDIR)/lu_example_complex_double.Po
#	$(AM_V_CC)source='lu/lu_example_complex_double.c' object='lu_example_complex_double.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lu_example_complex_double.obj `if test -f 'lu/lu_example_complex_double.c'; then $(CYGPATH_W) 'lu/lu_example_complex_double.c'; else $(CYGPATH_W) '$(srcdir)/lu/lu_example_complex_double.c'; fi`

zlu.o: lu/zlu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zlu.o -MD -MP -MF $(DEPDIR)/zlu.Tpo -c -o zlu.o `test -f 'lu/zlu.c' || echo '$(srcdir)/'`lu/zlu.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/zlu.Tpo $(DEPDIR)/zlu.Po
#	$(AM_V_CC)source='lu/zlu.c' object='zlu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zlu.o `test -f 'lu/zlu.c' || echo '$(srcdir)/'`lu/zlu.c

zlu.obj: lu/zlu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zlu.obj -MD -MP -MF $(DEPDIR)/zlu.Tpo -c -o zlu.obj `if test -f 'lu/zlu.c'; then $(CYGPATH_W) 'lu/zlu.c'; else $(CYGPATH_W) '$(srcdir)/lu/zlu.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/zlu.Tpo $(DEPDIR)/zlu.Po
#	$(AM_V_CC)source='lu/zlu.c' object='zlu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zlu.obj `if test -f 'lu/zlu.c'; then $(CYGPATH_W) 'lu/zlu.c'; else $(CYGPATH_W) '$(srcdir)/lu/zlu.c'; fi`

zlu_pivot.o: lu/zlu_pivot.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zlu_pivot.o -MD -MP -MF $(DEPDIR)/zlu_pivot.Tpo -c -o zlu_pivot.o `test -f 'lu/zlu_pivot.c' || echo '$(srcdir)/'`lu/zlu_pivot.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/zlu_pivot.Tpo $(DEPDIR)/zlu_pivot.Po
#	$(AM_V_CC)source='lu/zlu_pivot.c' object='zlu_pivot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zlu_pivot.o `test -f 'lu/zlu_pivot.c' || echo '$(srcdir)/'`lu/zlu_pivot.c

zlu_pivot.obj: lu/zlu_pivot.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zlu_pivot.obj -MD -MP -MF $(DEPDIR)/zlu_pivot.Tpo -c -o zlu_pivot.obj `if test -f 'lu/zlu_pivot.c'; then $(CYGPATH_W) 'lu/zlu_pivot.c'; else $(CYGPATH_W) '$(srcdir)/lu/zlu_pivot.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/zlu_pivot.Tpo $(DEPDIR)/zlu_pivot.Po
#	$(AM_V_CC)source='lu/zlu_pivot.c' object='zlu_pivot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zlu_pivot.obj `if test -f 'lu/zlu_pivot.c'; then $(CYGPATH_W) 'lu/zlu_pivot.c'; else $(CYGPATH_W) '$(srcdir)/lu/zlu_pivot.c'; fi`

zlu_kernels.o: lu/zlu_kernels.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zlu_kernels.o -MD -MP -MF $(DEPDIR)/zlu_kernels.Tpo -c -o zlu_kernels.o `test -f 'lu/zlu_kernels.c' || echo '$(srcdir)/'`lu/zlu_kernels.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/zlu_kernels.Tpo $(DEPDIR)/zlu_kernels.Po
#	$(AM_V_CC)source='lu/zlu_kernels.c' object='zlu_kernels.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zlu_kernels.o `test -f 'lu/zlu_kernels.c' || echo '$(srcdir)/'`lu/zlu_kernels.c

zlu_kernels.obj: lu/zlu_kernels.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zlu_kernels.obj -MD -MP -MF $(DEPDIR)/zlu_kernels.Tpo -c -o zlu_kernels.obj `if test -f 'lu/zlu_kernels.c'; then $(CYGPATH_W) 'lu/zlu_kernels.c'; else $(CYGPATH_W) '$(srcdir)/lu/zlu_kernels.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/zlu_kernels.Tpo $(DEPDIR)/zlu_kernels.Po
#	$(AM_V_CC)source='lu/zlu_kernels.c' object='zlu_kernels.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zlu_kernels.obj `if test -f 'lu/zlu_kernels.c'; then $(CYGPATH_W) 'lu/zlu_kernels.c'; else $(CYGPATH_W) '$(srcdir)/lu/zlu_kernels.c'; fi`

blas_complex.o: lu/blas_complex.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT blas_complex.o -MD -MP -MF $(DEPDIR)/blas_complex.Tpo -c -o blas_complex.o `test -f 'lu/blas_complex.c' || echo '$(srcdir)/'`lu/blas_complex.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/blas_complex.Tpo $(DEPDIR)/blas_complex.Po
#	$(AM_V_CC)source='lu/blas_complex.c' object='blas_complex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o blas_complex.o `test -f 'lu/blas_complex.c' || echo '$(srcdir)/'`lu/blas_complex.c

blas_complex.obj: lu/blas_complex.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT blas_complex.obj -MD -MP -MF $(DEPDIR)/blas_complex.Tpo -c -o blas_complex.obj `if test -f 'lu/blas_complex.c'; then $(CYGPATH_W) 'lu/blas_complex.c'; else $(CYGPATH_W) '$(srcdir)/lu/blas_complex.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/blas_complex.Tpo $(DEPDIR)/blas_complex.Po
#	$(AM_V_CC)source='lu/blas_complex.c' object='blas_complex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o blas_complex.obj `if test -f 'lu/blas_complex.c'; then $(CYGPATH_W) 'lu/blas_complex.c'; else $(CYGPATH_W) '$(srcdir)/lu/blas_complex.c'; fi`

lu_example_complex_float.o: lu/lu_example_complex_float.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lu_example_complex_float.o -MD -MP -MF $(DEPDIR)/lu_example_complex_float.Tpo -c -o lu_example_complex_float.o `test -f 'lu/lu_example_complex_float.c' || echo '$(srcdir)/'`lu/lu_example_complex_float.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/lu_example_complex_float.Tpo $(DEPDIR)/lu_example_complex_float.Po
#	$(AM_V_CC)source='lu/lu_example_complex_float.c' object='lu_example_complex_float.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lu_example_complex_float.o `test -f 'lu/lu_example_complex_float.c' || echo '$(srcdir)/'`lu/lu_example_complex_float.c

lu_example_complex_float.obj: lu/lu_example_complex_float.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lu_example_complex_float.obj -MD -MP -MF $(DEPDIR)/lu_example_complex_float.Tpo -c -o lu_example_complex_float.obj `if test -f 'lu/lu_example_complex_float.c'; then $(CYGPATH_W) 'lu/lu_example_complex_float.c'; else $(CYGPATH_W) '$(srcdir)/lu/lu_example_complex_float.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lu_example_complex_float.Tpo $(DEPDIR)/lu_example_complex_float.Po
#	$(AM_V_CC)source='lu/lu_example_complex_float.c' object='lu_example_complex_float.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lu_example_complex_float.obj `if test -f 'lu/lu_example_complex_float.c'; then $(CYGPATH_W) 'lu/lu_example_complex_float.c'; else $(CYGPATH_W) '$(srcdir)/lu/lu_example_complex_float.c'; fi`

clu.o: lu/clu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT clu.o -MD -MP -MF $(DEPDIR)/clu.Tpo -c -o clu.o `test -f 'lu/clu.c' || echo '$(srcdir)/'`lu/clu.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/clu.Tpo $(DEPDIR)/clu.Po
#	$(AM_V_CC)source='lu/clu.c' object='clu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o clu.o `test -f 'lu/clu.c' || echo '$(srcdir)/'`lu/clu.c

clu.obj: lu/clu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT clu.obj -MD -MP -MF $(DEPDIR)/clu.Tpo -c -o clu.obj `if test -f 'lu/clu.c'; then $(CYGPATH_W) 'lu/clu.c'; else $(CYGPATH_W) '$(srcdir)/lu/clu.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clu.Tpo $(DEPDIR)/clu.Po
#	$(AM_V_CC)source='lu/clu.c' object='clu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o clu.obj `if test -f 'lu/clu.c'; then $(CYGPATH_W) 'lu/clu.c'; else $(CYGPATH_W) '$(srcdir)/lu/clu.c'; fi`

clu_pivot.o: lu/clu_pivot.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT clu_pivot.o -MD -MP -MF $(DEPDIR)/clu_pivot.Tpo -c -o clu_pivot.o `test -f 'lu/clu_pivot.c' || echo '$(srcdir)/'`lu/clu_pivot.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/clu_pivot.Tpo $(DEPDIR)/clu_pivot.Po
#	$(AM_V_CC)source='lu/clu_pivot.c' object='clu_pivot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o clu_pivot.o `test -f 'lu/clu_pivot.c' || echo '$(srcdir)/'`lu/clu_pivot.c

clu_pivot.obj: lu/clu_pivot.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT clu_pivot.obj -MD -MP -MF $(DEPDIR)/clu_pivot.Tpo -c -o clu_pivot.obj `if test -f 'lu/clu_pivot.c'; then $(CYGPATH_W) 'lu/clu_pivot.c'; else $(CYGPATH_W) '$(srcdir)/lu/clu_pivot.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clu_pivot.Tpo $(DEPDIR)/clu_pivot.Po
#	$(AM_V_CC)source='lu/clu_pivot.c' object='clu_pivot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o clu_pivot.obj `if test -f 'lu/clu_pivot.c'; then $(CYGPATH_W) 'lu/clu_pivot.c'; else $(CYGPATH_W) '$(srcdir)/lu/clu_pivot.c'; fi`

clu_kernels.o: lu/clu_kernels.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT clu_kernels.o -MD -MP -MF $(DEPDIR)/clu_kernels.Tpo -c -o clu_kernels.o `test -f 'lu/clu_kernels.c' || echo '$(srcdir)/'`lu/clu_kernels.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/clu_kernels.Tpo $(DEPDIR)/clu_kernels.Po
#	$(AM_V_CC)source='lu/clu_kernels.c' object='clu_kernels.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o clu_kernels.o `test -f 'lu/clu_kernels.c' || echo '$(srcdir)/'`lu/clu_kernels.c

clu_kernels.obj: lu/clu_kernels.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT clu_kernels.obj -MD -MP -MF $(DEPDIR)/clu_kernels.Tpo -c -o clu_kernels.obj `if test -f 'lu/clu_kernels.c'; then $(CYGPATH_W) 'lu/clu_kernels.c'; else $(CYGPATH_W) '$(srcdir)/lu/clu_kernels.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clu_kernels.Tpo $(DEPDIR)/clu_kernels.Po
#	$(AM_V_CC)source='lu/clu_kernels.c' object='clu_kernels.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o clu_kernels.obj `if test -f 'lu/clu_kernels.c'; then $(CYGPATH_W) 'lu/clu_kernels.c'; else $(CYGPATH_W) '$(srcdir)/lu/clu_kernels.c'; fi`

lu_example_double.o: lu/lu_example_double.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lu_example_double.o -MD -MP -MF $(DEPDIR)/lu_example_double.Tpo -c -o lu_example_double.o `test -f 'lu/lu_example_double.c' || echo '$(srcdir)/'`lu/lu_example_double.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/lu_example_double.Tpo $(DEPDIR)/lu_example_double.Po
#	$(AM_V_CC)source='lu/lu_example_double.c' object='lu_example_double.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lu_example_double.o `test -f 'lu/lu_example_double.c' || echo '$(srcdir)/'`lu/lu_example_double.c

lu_example_double.obj: lu/lu_example_double.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lu_example_double.obj -MD -MP -MF $(DEPDIR)/lu_example_double.Tpo -c -o lu_example_double.obj `if test -f 'lu/lu_example_double.c'; then $(CYGPATH_W) 'lu/lu_example_double.c'; else $(CYGPATH_W) '$(srcdir)/lu/lu_example_double.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lu_example_double.Tpo $(DEPDIR)/lu_example_double.Po
#	$(AM_V_CC)source='lu/lu_example_double.c' object='lu_example_double.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lu_example_double.obj `if test -f 'lu/lu_example_double.c'; then $(CYGPATH_W) 'lu/lu_example_double.c'; else $(CYGPATH_W) '$(srcdir)/lu/lu_example_double.c'; fi`

dlu.o: lu/dlu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dlu.o -MD -MP -MF $(DEPDIR)/dlu.Tpo -c -o dlu.o `test -f 'lu/dlu.c' || echo '$(srcdir)/'`lu/dlu.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dlu.Tpo $(DEPDIR)/dlu.Po
#	$(AM_V_CC)source='lu/dlu.c' object='dlu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dlu.o `test -f 'lu/dlu.c' || echo '$(srcdir)/'`lu/dlu.c

dlu.obj: lu/dlu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dlu.obj -MD -MP -MF $(DEPDIR)/dlu.Tpo -c -o dlu.obj `if test -f 'lu/dlu.c'; then $(CYGPATH_W) 'lu/dlu.c'; else $(CYGPATH_W) '$(srcdir)/lu/dlu.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dlu.Tpo $(DEPDIR)/dlu.Po
#	$(AM_V_CC)source='lu/dlu.c' object='dlu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dlu.obj `if test -f 'lu/dlu.c'; then $(CYGPATH_W) 'lu/dlu.c'; else $(CYGPATH_W) '$(srcdir)/lu/dlu.c'; fi`

dlu_pivot.o: lu/dlu_pivot.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dlu_pivot.o -MD -MP -MF $(DEPDIR)/dlu_pivot.Tpo -c -o dlu_pivot.o `test -f 'lu/dlu_pivot.c' || echo '$(srcdir)/'`lu/dlu_pivot.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dlu_pivot.Tpo $(DEPDIR)/dlu_pivot.Po
#	$(AM_V_CC)source='lu/dlu_pivot.c' object='dlu_pivot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dlu_pivot.o `test -f 'lu/dlu_pivot.c' || echo '$(srcdir)/'`lu/dlu_pivot.c

dlu_pivot.obj: lu/dlu_pivot.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dlu_pivot.obj -MD -MP -MF $(DEPDIR)/dlu_pivot.Tpo -c -o dlu_pivot.obj `if test -f 'lu/dlu_pivot.c'; then $(CYGPATH_W) 'lu/dlu_pivot.c'; else $(CYGPATH_W) '$(srcdir)/lu/dlu_pivot.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dlu_pivot.Tpo $(DEPDIR)/dlu_pivot.Po
#	$(AM_V_CC)source='lu/dlu_pivot.c' object='dlu_pivot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dlu_pivot.obj `if test -f 'lu/dlu_pivot.c'; then $(CYGPATH_W) 'lu/dlu_pivot.c'; else $(CYGPATH_W) '$(srcdir)/lu/dlu_pivot.c'; fi`

dlu_kernels.o: lu/dlu_kernels.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dlu_kernels.o -MD -MP -MF $(DEPDIR)/dlu_kernels.Tpo -c -o dlu_kernels.o `test -f 'lu/dlu_kernels.c' || echo '$(srcdir)/'`lu/dlu_kernels.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dlu_kernels.Tpo $(DEPDIR)/dlu_kernels.Po
#	$(AM_V_CC)source='lu/dlu_kernels.c' object='dlu_kernels.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dlu_kernels.o `test -f 'lu/dlu_kernels.c' || echo '$(srcdir)/'`lu/dlu_kernels.c

dlu_kernels.obj: lu/dlu_kernels.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dlu_kernels.obj -MD -MP -MF $(DEPDIR)/dlu_kernels.Tpo -c -o dlu_kernels.obj `if test -f 'lu/dlu_kernels.c'; then $(CYGPATH_W) 'lu/dlu_kernels.c'; else $(CYGPATH_W) '$(srcdir)/lu/dlu_kernels.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dlu_kernels.Tpo $(DEPDIR)/dlu_kernels.Po
#	$(AM_V_CC)source='lu/dlu_kernels.c' object='dlu_kernels.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dlu_kernels.obj `if test -f 'lu/dlu_kernels.c'; then $(CYGPATH_W) 'lu/dlu_kernels.c'; else $(CYGPATH_W) '$(srcdir)/lu/dlu_kernels.c'; fi`

lu_example_float.o: lu/lu_example_float.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lu_example_float.o -MD -MP -MF $(DEPDIR)/lu_example_float.Tpo -c -o lu_example_float.o `test -f 'lu/lu_example_float.c' || echo '$(srcdir)/'`lu/lu_example_float.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/lu_example_float.Tpo $(DEPDIR)/lu_example_float.Po
#	$(AM_V_CC)source='lu/lu_example_float.c' object='lu_example_float.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lu_example_float.o `test -f 'lu/lu_example_float.c' || echo '$(srcdir)/'`lu/lu_example_float.c

lu_example_float.obj: lu/lu_example_float.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lu_example_float.obj -MD -MP -MF $(DEPDIR)/lu_example_float.Tpo -c -o lu_example_float.obj `if test -f 'lu/lu_example_float.c'; then $(CYGPATH_W) 'lu/lu_example_float.c'; else $(CYGPATH_W) '$(srcdir)/lu/lu_example_float.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lu_example_float.Tpo $(DEPDIR)/lu_example_float.Po
#	$(AM_V_CC)source='lu/lu_example_float.c' object='lu_example_float.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lu_example_float.obj `if test -f 'lu/lu_example_float.c'; then $(CYGPATH_W) 'lu/lu_example_float.c'; else $(CYGPATH_W) '$(srcdir)/lu/lu_example_float.c'; fi`

slu.o: lu/slu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT slu.o -MD -MP -MF $(DEPDIR)/slu.Tpo -c -o slu.o `test -f 'lu/slu.c' || echo '$(srcdir)/'`lu/slu.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/slu.Tpo $(DEPDIR)/slu.Po
#	$(AM_V_CC)source='lu/slu.c' object='slu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o slu.o `test -f 'lu/slu.c' || echo '$(srcdir)/'`lu/slu.c

slu.obj: lu/slu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT slu.obj -MD -MP -MF $(DEPDIR)/slu.Tpo -c -o slu.obj `if test -f 'lu/slu.c'; then $(CYGPATH_W) 'lu/slu.c'; else $(CYGPATH_W) '$(srcdir)/lu/slu.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/slu.Tpo $(DEPDIR)/slu.Po
#	$(AM_V_CC)source='lu/slu.c' object='slu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o slu.obj `if test -f 'lu/slu.c'; then $(CYGPATH_W) 'lu/slu.c'; else $(CYGPATH_W) '$(srcdir)/lu/slu.c'; fi`

slu_pivot.o: lu/slu_pivot.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT slu_pivot.o -MD -MP -MF $(DEPDIR)/slu_pivot.Tpo -c -o slu_pivot.o `test -f 'lu/slu_pivot.c' || echo '$(srcdir)/'`lu/slu_pivot.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/slu_pivot.Tpo $(DEPDIR)/slu_pivot.Po
#	$(AM_V_CC)source='lu/slu_pivot.c' object='slu_pivot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o slu_pivot.o `test -f 'lu/slu_pivot.c' || echo '$(srcdir)/'`lu/slu_pivot.c

slu_pivot.obj: lu/slu_pivot.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT slu_pivot.obj -MD -MP -MF $(DEPDIR)/slu_pivot.Tpo -c -o slu_pivot.obj `if test -f 'lu/slu_pivot.c'; then $(CYGPATH_W) 'lu/slu_pivot.c'; else $(CYGPATH_W) '$(srcdir)/lu/slu_pivot.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/slu_pivot.Tpo $(DEPDIR)/slu_pivot.Po
#	$(AM_V_CC)source='lu/slu_pivot.c' object='slu_pivot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o slu_pivot.obj `if test -f 'lu/slu_pivot.c'; then $(CYGPATH_W) 'lu/slu_pivot.c'; else $(CYGPATH_W) '$(srcdir)/lu/slu_pivot.c'; fi`

slu_kernels.o: lu/slu_kernels.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT slu_kernels.o -MD -MP -MF $(DEPDIR)/slu_kernels.Tpo -c -o slu_kernels.o `test -f 'lu/slu_kernels.c' || echo '$(srcdir)/'`lu/slu_kernels.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/slu_kernels.Tpo $(DEPDIR)/slu_kernels.Po
#	$(AM_V_CC)source='lu/slu_kernels.c' object='slu_kernels.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o slu_kernels.o `test -f 'lu/slu_kernels.c' || echo '$(srcdir)/'`lu/slu_kernels.c

slu_kernels.obj: lu/slu_kernels.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT slu_kernels.obj -MD -MP -MF $(DEPDIR)/slu_kernels.Tpo -c -o slu_kernels.obj `if test -f 'lu/slu_kernels.c'; then $(CYGPATH_W) 'lu/slu_kernels.c'; else $(CYGPATH_W) '$(srcdir)/lu/slu_kernels.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/slu_kernels.Tpo $(DEPDIR)/slu_kernels.Po
#	$(AM_V_CC)source='lu/slu_kernels.c' object='slu_kernels.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o slu_kernels.obj `if test -f 'lu/slu_kernels.c'; then $(CYGPATH_W) 'lu/slu_kernels.c'; else $(CYGPATH_W) '$(srcdir)/lu/slu_kernels.c'; fi`

zlu_implicit.o: lu/zlu_implicit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zlu_implicit.o -MD -MP -MF $(DEPDIR)/zlu_implicit.Tpo -c -o zlu_implicit.o `test -f 'lu/zlu_implicit.c' || echo '$(srcdir)/'`lu/zlu_implicit.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/zlu_implicit.Tpo $(DEPDIR)/zlu_implicit.Po
#	$(AM_V_CC)source='lu/zlu_implicit.c' object='zlu_implicit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zlu_implicit.o `test -f 'lu/zlu_implicit.c' || echo '$(srcdir)/'`lu/zlu_implicit.c

zlu_implicit.obj: lu/zlu_implicit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zlu_implicit.obj -MD -MP -MF $(DEPDIR)/zlu_implicit.Tpo -c -o zlu_implicit.obj `if test -f 'lu/zlu_implicit.c'; then $(CYGPATH_W) 'lu/zlu_implicit.c'; else $(CYGPATH_W) '$(srcdir)/lu/zlu_implicit.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/zlu_implicit.Tpo $(DEPDIR)/zlu_implicit.Po
#	$(AM_V_CC)source='lu/zlu_implicit.c' object='zlu_implicit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zlu_implicit.obj `if test -f 'lu/zlu_implicit.c'; then $(CYGPATH_W) 'lu/zlu_implicit.c'; else $(CYGPATH_W) '$(srcdir)/lu/zlu_implicit.c'; fi`

zlu_implicit_pivot.o: lu/zlu_implicit_pivot.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zlu_implicit_pivot.o -MD -MP -MF $(DEPDIR)/zlu_implicit_pivot.Tpo -c -o zlu_implicit_pivot.o `test -f 'lu/zlu_implicit_pivot.c' || echo '$(srcdir)/'`lu/zlu_implicit_pivot.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/zlu_implicit_pivot.Tpo $(DEPDIR)/zlu_implicit_pivot.Po
#	$(AM_V_CC)source='lu/zlu_implicit_pivot.c' object='zlu_implicit_pivot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zlu_implicit_pivot.o `test -f 'lu/zlu_implicit_pivot.c' || echo '$(srcdir)/'`lu/zlu_implicit_pivot.c

zlu_implicit_pivot.obj: lu/zlu_implicit_pivot.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zlu_implicit_pivot.obj -MD -MP -MF $(DEPDIR)/zlu_implicit_pivot.Tpo -c -o zlu_implicit_pivot.obj `if test -f 'lu/zlu_implicit_pivot.c'; then $(CYGPATH_W) 'lu/zlu_implicit_pivot.c'; else $(CYGPATH_W) '$(srcdir)/lu/zlu_implicit_pivot.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/zlu_implicit_pivot.Tpo $(DEPDIR)/zlu_implicit_pivot.Po
#	$(AM_V_CC)source='lu/zlu_implicit_pivot.c' object='zlu_implicit_pivot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zlu_implicit_pivot.obj `if test -f 'lu/zlu_implicit_pivot.c'; then $(CYGPATH_W) 'lu/zlu_implicit_pivot.c'; else $(CYGPATH_W) '$(srcdir)/lu/zlu_implicit_pivot.c'; fi`

clu_implicit.o: lu/clu_implicit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT clu_implicit.o -MD -MP -MF $(DEPDIR)/clu_implicit.Tpo -c -o clu_implicit.o `test -f 'lu/clu_implicit.c' || echo '$(srcdir)/'`lu/clu_implicit.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/clu_implicit.Tpo $(DEPDIR)/clu_implicit.Po
#	$(AM_V_CC)source='lu/clu_implicit.c' object='clu_implicit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o clu_implicit.o `test -f 'lu/clu_implicit.c' || echo '$(srcdir)/'`lu/clu_implicit.c

clu_implicit.obj: lu/clu_implicit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT clu_implicit.obj -MD -MP -MF $(DEPDIR)/clu_implicit.Tpo -c -o clu_implicit.obj `if test -f 'lu/clu_implicit.c'; then $(CYGPATH_W) 'lu/clu_implicit.c'; else $(CYGPATH_W) '$(srcdir)/lu/clu_implicit.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clu_implicit.Tpo $(DEPDIR)/clu_implicit.Po
#	$(AM_V_CC)source='lu/clu_implicit.c' object='clu_implicit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o clu_implicit.obj `if test -f 'lu/clu_implicit.c'; then $(CYGPATH_W) 'lu/clu_implicit.c'; else $(CYGPATH_W) '$(srcdir)/lu/clu_implicit.c'; fi`

clu_implicit_pivot.o: lu/clu_implicit_pivot.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT clu_implicit_pivot.o -MD -MP -MF $(DEPDIR)/clu_implicit_pivot.Tpo -c -o clu_implicit_pivot.o `test -f 'lu/clu_implicit_pivot.c' || echo '$(srcdir)/'`lu/clu_implicit_pivot.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/clu_implicit_pivot.Tpo $(DEPDIR)/clu_implicit_pivot.Po
#	$(AM_V_CC)source='lu/clu_implicit_pivot.c' object='clu_implicit_pivot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o clu_implicit_pivot.o `test -f 'lu/clu_implicit_pivot.c' || echo '$(srcdir)/'`lu/clu_implicit_pivot.c

clu_implicit_pivot.obj: lu/clu_implicit_pivot.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT clu_implicit_pivot.obj -MD -MP -MF $(DEPDIR)/clu_implicit_pivot.Tpo -c -o clu_implicit_pivot.obj `if test -f 'lu/clu_implicit_pivot.c'; then $(CYGPATH_W) 'lu/clu_implicit_pivot.c'; else $(CYGPATH_W) '$(srcdir)/lu/clu_implicit_pivot.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clu_implicit_pivot.Tpo $(DEPDIR)/clu_implicit_pivot.Po
#	$(AM_V_CC)source='lu/clu_implicit_pivot.c' object='clu_implicit_pivot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o clu_implicit_pivot.obj `if test -f 'lu/clu_implicit_pivot.c'; then $(CYGPATH_W) 'lu/clu_implicit_pivot.c'; else $(CYGPATH_W) '$(srcdir)/lu/clu_implicit_pivot.c'; fi`

dlu_implicit.o: lu/dlu_implicit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dlu_implicit.o -MD -MP -MF $(DEPDIR)/dlu_implicit.Tpo -c -o dlu_implicit.o `test -f 'lu/dlu_implicit.c' || echo '$(srcdir)/'`lu/dlu_implicit.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dlu_implicit.Tpo $(DEPDIR)/dlu_implicit.Po
#	$(AM_V_CC)source='lu/dlu_implicit.c' object='dlu_implicit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dlu_implicit.o `test -f 'lu/dlu_implicit.c' || echo '$(srcdir)/'`lu/dlu_implicit.c

dlu_implicit.obj: lu/dlu_implicit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dlu_implicit.obj -MD -MP -MF $(DEPDIR)/dlu_implicit.Tpo -c -o dlu_implicit.obj `if test -f 'lu/dlu_implicit.c'; then $(CYGPATH_W) 'lu/dlu_implicit.c'; else $(CYGPATH_W) '$(srcdir)/lu/dlu_implicit.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dlu_implicit.Tpo $(DEPDIR)/dlu_implicit.Po
#	$(AM_V_CC)source='lu/dlu_implicit.c' object='dlu_implicit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dlu_implicit.obj `if test -f 'lu/dlu_implicit.c'; then $(CYGPATH_W) 'lu/dlu_implicit.c'; else $(CYGPATH_W) '$(srcdir)/lu/dlu_implicit.c'; fi`

dlu_implicit_pivot.o: lu/dlu_implicit_pivot.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dlu_implicit_pivot.o -MD -MP -MF $(DEPDIR)/dlu_implicit_pivot.Tpo -c -o dlu_implicit_pivot.o `test -f 'lu/dlu_implicit_pivot.c' || echo '$(srcdir)/'`lu/dlu_implicit_pivot.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dlu_implicit_pivot.Tpo $(DEPDIR)/dlu_implicit_pivot.Po
#	$(AM_V_CC)source='lu/dlu_implicit_pivot.c' object='dlu_implicit_pivot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dlu_implicit_pivot.o `test -f 'lu/dlu_implicit_pivot.c' || echo '$(srcdir)/'`lu/dlu_implicit_pivot.c

dlu_implicit_pivot.obj: lu/dlu_implicit_pivot.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dlu_implicit_pivot.obj -MD -MP -MF $(DEPDIR)/dlu_implicit_pivot.Tpo -c -o dlu_implicit_pivot.obj `if test -f 'lu/dlu_implicit_pivot.c'; then $(CYGPATH_W) 'lu/dlu_implicit_pivot.c'; else $(CYGPATH_W) '$(srcdir)/lu/dlu_implicit_pivot.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dlu_implicit_pivot.Tpo $(DEPDIR)/dlu_implicit_pivot.Po
#	$(AM_V_CC)source='lu/dlu_implicit_pivot.c' object='dlu_implicit_pivot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dlu_implicit_pivot.obj `if test -f 'lu/dlu_implicit_pivot.c'; then $(CYGPATH_W) 'lu/dlu_implicit_pivot.c'; else $(CYGPATH_W) '$(srcdir)/lu/dlu_implicit_pivot.c'; fi`

slu_implicit.o: lu/slu_implicit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT slu_implicit.o -MD -MP -MF $(DEPDIR)/slu_implicit.Tpo -c -o slu_implicit.o `test -f 'lu/slu_implicit.c' || echo '$(srcdir)/'`lu/slu_implicit.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/slu_implicit.Tpo $(DEPDIR)/slu_implicit.Po
#	$(AM_V_CC)source='lu/slu_implicit.c' object='slu_implicit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o slu_implicit.o `test -f 'lu/slu_implicit.c' || echo '$(srcdir)/'`lu/slu_implicit.c

slu_implicit.obj: lu/slu_implicit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT slu_implicit.obj -MD -MP -MF $(DEPDIR)/slu_implicit.Tpo -c -o slu_implicit.obj `if test -f 'lu/slu_implicit.c'; then $(CYGPATH_W) 'lu/slu_implicit.c'; else $(CYGPATH_W) '$(srcdir)/lu/slu_implicit.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/slu_implicit.Tpo $(DEPDIR)/slu_implicit.Po
#	$(AM_V_CC)source='lu/slu_implicit.c' object='slu_implicit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o slu_implicit.obj `if test -f 'lu/slu_implicit.c'; then $(CYGPATH_W) 'lu/slu_implicit.c'; else $(CYGPATH_W) '$(srcdir)/lu/slu_implicit.c'; fi`

slu_implicit_pivot.o: lu/slu_implicit_pivot.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT slu_implicit_pivot.o -MD -MP -MF $(DEPDIR)/slu_implicit_pivot.Tpo -c -o slu_implicit_pivot.o `test -f 'lu/slu_implicit_pivot.c' || echo '$(srcdir)/'`lu/slu_implicit_pivot.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/slu_implicit_pivot.Tpo $(DEPDIR)/slu_implicit_pivot.Po
#	$(AM_V_CC)source='lu/slu_implicit_pivot.c' object='slu_implicit_pivot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o slu_implicit_pivot.o `test -f 'lu/slu_implicit_pivot.c' || echo '$(srcdir)/'`lu/slu_implicit_pivot.c

slu_implicit_pivot.obj: lu/slu_implicit_pivot.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT slu_implicit_pivot.obj -MD -MP -MF $(DEPDIR)/slu_implicit_pivot.Tpo -c -o slu_implicit_pivot.obj `if test -f 'lu/slu_implicit_pivot.c'; then $(CYGPATH_W) 'lu/slu_implicit_pivot.c'; else $(CYGPATH_W) '$(srcdir)/lu/slu_implicit_pivot.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/slu_implicit_pivot.Tpo $(DEPDIR)/slu_implicit_pivot.Po
#	$(AM_V_CC)source='lu/slu_implicit_pivot.c' object='slu_implicit_pivot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o slu_implicit_pivot.obj `if test -f 'lu/slu_implicit_pivot.c'; then $(CYGPATH_W) 'lu/slu_implicit_pivot.c'; else $(CYGPATH_W) '$(srcdir)/lu/slu_implicit_pivot.c'; fi`

mandelbrot_mandelbrot-mandelbrot.o: mandelbrot/mandelbrot.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mandelbrot_mandelbrot_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mandelbrot_mandelbrot-mandelbrot.o -MD -MP -MF $(DEPDIR)/mandelbrot_mandelbrot-mandelbrot.Tpo -c -o mandelbrot_mandelbrot-mandelbrot.o `test -f 'mandelbrot/mandelbrot.c' || echo '$(srcdir)/'`mandelbrot/mandelbrot.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mandelbrot_mandelbrot-mandelbrot.Tpo $(DEPDIR)/mandelbrot_mandelbrot-mandelbrot.Po
#	$(AM_V_CC)source='mandelbrot/mandelbrot.c' object='mandelbrot_mandelbrot-mandelbrot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mandelbrot_mandelbrot_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mandelbrot_mandelbrot-mandelbrot.o `test -f 'mandelbrot/mandelbrot.c' || echo '$(srcdir)/'`mandelbrot/mandelbrot.c

mandelbrot_mandelbrot-mandelbrot.obj: mandelbrot/mandelbrot.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mandelbrot_mandelbrot_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mandelbrot_mandelbrot-mandelbrot.obj -MD -MP -MF $(DEPDIR)/mandelbrot_mandelbrot-mandelbrot.Tpo -c -o mandelbrot_mandelbrot-mandelbrot.obj `if test -f 'mandelbrot/mandelbrot.c'; then $(CYGPATH_W) 'mandelbrot/mandelbrot.c'; else $(CYGPATH_W) '$(srcdir)/mandelbrot/mandelbrot.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mandelbrot_mandelbrot-mandelbrot.Tpo $(DEPDIR)/mandelbrot_mandelbrot-mandelbrot.Po
#	$(AM_V_CC)source='mandelbrot/mandelbrot.c' object='mandelbrot_mandelbrot-mandelbrot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mandelbrot_mandelbrot_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mandelbrot_mandelbrot-mandelbrot.obj `if test -f 'mandelbrot/mandelbrot.c'; then $(CYGPATH_W) 'mandelbrot/mandelbrot.c'; else $(CYGPATH_W) '$(srcdir)/mandelbrot/mandelbrot.c'; fi`

matvecmult.o: matvecmult/matvecmult.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT matvecmult.o -MD -MP -MF $(DEPDIR)/matvecmult.Tpo -c -o matvecmult.o `test -f 'matvecmult/matvecmult.c' || echo '$(srcdir)/'`matvecmult/matvecmult.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/matvecmult.Tpo $(DEPDIR)/matvecmult.Po
#	$(AM_V_CC)source='matvecmult/matvecmult.c' object='matvecmult.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matvecmult.o `test -f 'matvecmult/matvecmult.c' || echo '$(srcdir)/'`matvecmult/matvecmult.c

matvecmult.obj: matvecmult/matvecmult.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT matvecmult.obj -MD -MP -MF $(DEPDIR)/matvecmult.Tpo -c -o matvecmult.obj `if test -f 'matvecmult/matvecmult.c'; then $(CYGPATH_W) 'matvecmult/matvecmult.c'; else $(CYGPATH_W) '$(srcdir)/matvecmult/matvecmult.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/matvecmult.Tpo $(DEPDIR)/matvecmult.Po
#	$(AM_V_CC)source='matvecmult/matvecmult.c' object='matvecmult.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matvecmult.obj `if test -f 'matvecmult/matvecmult.c'; then $(CYGPATH_W) 'matvecmult/matvecmult.c'; else $(CYGPATH_W) '$(srcdir)/matvecmult/matvecmult.c'; fi`

mlr.o: mlr/mlr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mlr.o -MD -MP -MF $(DEPDIR)/mlr.Tpo -c -o mlr.o `test -f 'mlr/mlr.c' || echo '$(srcdir)/'`mlr/mlr.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mlr.Tpo $(DEPDIR)/mlr.Po
#	$(AM_V_CC)source='mlr/mlr.c' object='mlr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mlr.o `test -f 'mlr/mlr.c' || echo '$(srcdir)/'`mlr/mlr.c

mlr.obj: mlr/mlr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mlr.obj -MD -MP -MF $(DEPDIR)/mlr.Tpo -c -o mlr.obj `if test -f 'mlr/mlr.c'; then $(CYGPATH_W) 'mlr/mlr.c'; else $(CYGPATH_W) '$(srcdir)/mlr/mlr.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mlr.Tpo $(DEPDIR)/mlr.Po
#	$(AM_V_CC)source='mlr/mlr.c' object='mlr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mlr.obj `if test -f 'mlr/mlr.c'; then $(CYGPATH_W) 'mlr/mlr.c'; else $(CYGPATH_W) '$(srcdir)/mlr/mlr.c'; fi`

dgemm.o: mult/dgemm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dgemm.o -MD -MP -MF $(DEPDIR)/dgemm.Tpo -c -o dgemm.o `test -f 'mult/dgemm.c' || echo '$(srcdir)/'`mult/dgemm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dgemm.Tpo $(DEPDIR)/dgemm.Po
#	$(AM_V_CC)source='mult/dgemm.c' object='dgemm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dgemm.o `test -f 'mult/dgemm.c' || echo '$(srcdir)/'`mult/dgemm.c

dgemm.obj: mult/dgemm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dgemm.obj -MD -MP -MF $(DEPDIR)/dgemm.Tpo -c -o dgemm.obj `if test -f 'mult/dgemm.c'; then $(CYGPATH_W) 'mult/dgemm.c'; else $(CYGPATH_W) '$(srcdir)/mult/dgemm.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dgemm.Tpo $(DEPDIR)/dgemm.Po
#	$(AM_V_CC)source='mult/dgemm.c' object='dgemm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dgemm.obj `if test -f 'mult/dgemm.c'; then $(CYGPATH_W) 'mult/dgemm.c'; else $(CYGPATH_W) '$(srcdir)/mult/dgemm.c'; fi`

sgemm.o: mult/sgemm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sgemm.o -MD -MP -MF $(DEPDIR)/sgemm.Tpo -c -o sgemm.o `test -f 'mult/sgemm.c' || echo '$(srcdir)/'`mult/sgemm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sgemm.Tpo $(DEPDIR)/sgemm.Po
#	$(AM_V_CC)source='mult/sgemm.c' object='sgemm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sgemm.o `test -f 'mult/sgemm.c' || echo '$(srcdir)/'`mult/sgemm.c

sgemm.obj: mult/sgemm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sgemm.obj -MD -MP -MF $(DEPDIR)/sgemm.Tpo -c -o sgemm.obj `if test -f 'mult/sgemm.c'; then $(CYGPATH_W) 'mult/sgemm.c'; else $(CYGPATH_W) '$(srcdir)/mult/sgemm.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sgemm.Tpo $(DEPDIR)/sgemm.Po
#	$(AM_V_CC)source='mult/sgemm.c' object='sgemm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sgemm.obj `if test -f 'mult/sgemm.c'; then $(CYGPATH_W) 'mult/sgemm.c'; else $(CYGPATH_W) '$(srcdir)/mult/sgemm.c'; fi`

openmp_vector_scal_omp-vector_scal_omp.o: openmp/vector_scal_omp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openmp_vector_scal_omp_CFLAGS) $(CFLAGS) -MT openmp_vector_scal_omp-vector_scal_omp.o -MD -MP -MF $(DEPDIR)/openmp_vector_scal_omp-vector_scal_omp.Tpo -c -o openmp_vector_scal_omp-vector_scal_omp.o `test -f 'openmp/vector_scal_omp.c' || echo '$(srcdir)/'`openmp/vector_scal_omp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/openmp_vector_scal_omp-vector_scal_omp.Tpo $(DEPDIR)/openmp_vector_scal_omp-vector_scal_omp.Po
#	$(AM_V_CC)source='openmp/vector_scal_omp.c' object='openmp_vector_scal_omp-vector_scal_omp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openmp_vector_scal_omp_CFLAGS) $(CFLAGS) -c -o openmp_vector_scal_omp-vector_scal_omp.o `test -f 'openmp/vector_scal_omp.c' || echo '$(srcdir)/'`openmp/vector_scal_omp.c

openmp_vector_scal_omp-vector_scal_omp.obj: openmp/vector_scal_omp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openmp_vector_scal_omp_CFLAGS) $(CFLAGS) -MT openmp_vector_scal_omp-vector_scal_omp.obj -MD -MP -MF $(DEPDIR)/openmp_vector_scal_omp-vector_scal_omp.Tpo -c -o openmp_vector_scal_omp-vector_scal_omp.obj `if test -f 'openmp/vector_scal_omp.c'; then $(CYGPATH_W) 'openmp/vector_scal_omp.c'; else $(CYGPATH_W) '$(srcdir)/openmp/vector_scal_omp.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/openmp_vector_scal_omp-vector_scal_omp.Tpo $(DEPDIR)/openmp_vector_scal_omp-vector_scal_omp.Po
#	$(AM_V_CC)source='openmp/vector_scal_omp.c' object='openmp_vector_scal_omp-vector_scal_omp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(openmp_vector_scal_omp_CFLAGS) $(CFLAGS) -c -o openmp_vector_scal_omp-vector_scal_omp.obj `if test -f 'openmp/vector_scal_omp.c'; then $(CYGPATH_W) 'openmp/vector_scal_omp.c'; else $(CYGPATH_W) '$(srcdir)/openmp/vector_scal_omp.c'; fi`

pi.o: pi/pi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pi.o -MD -MP -MF $(DEPDIR)/pi.Tpo -c -o pi.o `test -f 'pi/pi.c' || echo '$(srcdir)/'`pi/pi.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/pi.Tpo $(DEPDIR)/pi.Po
#	$(AM_V_CC)source='pi/pi.c' object='pi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pi.o `test -f 'pi/pi.c' || echo '$(srcdir)/'`pi/pi.c

pi.obj: pi/pi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pi.obj -MD -MP -MF $(DEPDIR)/pi.Tpo -c -o pi.obj `if test -f 'pi/pi.c'; then $(CYGPATH_W) 'pi/pi.c'; else $(CYGPATH_W) '$(srcdir)/pi/pi.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pi.Tpo $(DEPDIR)/pi.Po
#	$(AM_V_CC)source='pi/pi.c' object='pi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pi.obj `if test -f 'pi/pi.c'; then $(CYGPATH_W) 'pi/pi.c'; else $(CYGPATH_W) '$(srcdir)/pi/pi.c'; fi`

sobol_gold.o: pi/SobolQRNG/sobol_gold.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sobol_gold.o -MD -MP -MF $(DEPDIR)/sobol_gold.Tpo -c -o sobol_gold.o `test -f 'pi/SobolQRNG/sobol_gold.c' || echo '$(srcdir)/'`pi/SobolQRNG/sobol_gold.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sobol_gold.Tpo $(DEPDIR)/sobol_gold.Po
#	$(AM_V_CC)source='pi/SobolQRNG/sobol_gold.c' object='sobol_gold.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sobol_gold.o `test -f 'pi/SobolQRNG/sobol_gold.c' || echo '$(srcdir)/'`pi/SobolQRNG/sobol_gold.c

sobol_gold.obj: pi/SobolQRNG/sobol_gold.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sobol_gold.obj -MD -MP -MF $(DEPDIR)/sobol_gold.Tpo -c -o sobol_gold.obj `if test -f 'pi/SobolQRNG/sobol_gold.c'; then $(CYGPATH_W) 'pi/SobolQRNG/sobol_gold.c'; else $(CYGPATH_W) '$(srcdir)/pi/SobolQRNG/sobol_gold.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sobol_gold.Tpo $(DEPDIR)/sobol_gold.Po
#	$(AM_V_CC)source='pi/SobolQRNG/sobol_gold.c' object='sobol_gold.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sobol_gold.obj `if test -f 'pi/SobolQRNG/sobol_gold.c'; then $(CYGPATH_W) 'pi/SobolQRNG/sobol_gold.c'; else $(CYGPATH_W) '$(srcdir)/pi/SobolQRNG/sobol_gold.c'; fi`

sobol_primitives.o: pi/SobolQRNG/sobol_primitives.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sobol_primitives.o -MD -MP -MF $(DEPDIR)/sobol_primitives.Tpo -c -o sobol_primitives.o `test -f 'pi/SobolQRNG/sobol_primitives.c' || echo '$(srcdir)/'`pi/SobolQRNG/sobol_primitives.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sobol_primitives.Tpo $(DEPDIR)/sobol_primitives.Po
#	$(AM_V_CC)source='pi/SobolQRNG/sobol_primitives.c' object='sobol_primitives.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sobol_primitives.o `test -f 'pi/SobolQRNG/sobol_primitives.c' || echo '$(srcdir)/'`pi/SobolQRNG/sobol_primitives.c

sobol_primitives.obj: pi/SobolQRNG/sobol_primitives.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sobol_primitives.obj -MD -MP -MF $(DEPDIR)/sobol_primitives.Tpo -c -o sobol_primitives.obj `if test -f 'pi/SobolQRNG/sobol_primitives.c'; then $(CYGPATH_W) 'pi/SobolQRNG/sobol_primitives.c'; else $(CYGPATH_W) '$(srcdir)/pi/SobolQRNG/sobol_primitives.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sobol_primitives.Tpo $(DEPDIR)/sobol_primitives.Po
#	$(AM_V_CC)source='pi/SobolQRNG/sobol_primitives.c' object='sobol_primitives.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sobol_primitives.obj `if test -f 'pi/SobolQRNG/sobol_primitives.c'; then $(CYGPATH_W) 'pi/SobolQRNG/sobol_primitives.c'; else $(CYGPATH_W) '$(srcdir)/pi/SobolQRNG/sobol_primitives.c'; fi`

pi_redux.o: pi/pi_redux.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pi_redux.o -MD -MP -MF $(DEPDIR)/pi_redux.Tpo -c -o pi_redux.o `test -f 'pi/pi_redux.c' || echo '$(srcdir)/'`pi/pi_redux.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/pi_redux.Tpo $(DEPDIR)/pi_redux.Po
#	$(AM_V_CC)source='pi/pi_redux.c' object='pi_redux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pi_redux.o `test -f 'pi/pi_redux.c' || echo '$(srcdir)/'`pi/pi_redux.c

pi_redux.obj: pi/pi_redux.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pi_redux.obj -MD -MP -MF $(DEPDIR)/pi_redux.Tpo -c -o pi_redux.obj `if test -f 'pi/pi_redux.c'; then $(CYGPATH_W) 'pi/pi_redux.c'; else $(CYGPATH_W) '$(srcdir)/pi/pi_redux.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pi_redux.Tpo $(DEPDIR)/pi_redux.Po
#	$(AM_V_CC)source='pi/pi_redux.c' object='pi_redux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pi_redux.obj `if test -f 'pi/pi_redux.c'; then $(CYGPATH_W) 'pi/pi_redux.c'; else $(CYGPATH_W) '$(srcdir)/pi/pi_redux.c'; fi`

pipeline.o: pipeline/pipeline.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pipeline.o -MD -MP -MF $(DEPDIR)/pipeline.Tpo -c -o pipeline.o `test -f 'pipeline/pipeline.c' || echo '$(srcdir)/'`pipeline/pipeline.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/pipeline.Tpo $(DEPDIR)/pipeline.Po
#	$(AM_V_CC)source='pipeline/pipeline.c' object='pipeline.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pipeline.o `test -f 'pipeline/pipeline.c' || echo '$(srcdir)/'`pipeline/pipeline.c

pipeline.obj: pipeline/pipeline.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pipeline.obj -MD -MP -MF $(DEPDIR)/pipeline.Tpo -c -o pipeline.obj `if test -f 'pipeline/pipeline.c'; then $(CYGPATH_W) 'pipeline/pipeline.c'; else $(CYGPATH_W) '$(srcdir)/pipeline/pipeline.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pipeline.Tpo $(DEPDIR)/pipeline.Po
#	$(AM_V_CC)source='pipeline/pipeline.c' object='pipeline.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pipeline.obj `if test -f 'pipeline/pipeline.c'; then $(CYGPATH_W) 'pipeline/pipeline.c'; else $(CYGPATH_W) '$(srcdir)/pipeline/pipeline.c'; fi`

ppm_downscaler.o: ppm_downscaler/ppm_downscaler.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ppm_downscaler.o -MD -MP -MF $(DEPDIR)/ppm_downscaler.Tpo -c -o ppm_downscaler.o `test -f 'ppm_downscaler/ppm_downscaler.c' || echo '$(srcdir)/'`ppm_downscaler/ppm_downscaler.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ppm_downscaler.Tpo $(DEPDIR)/ppm_downscaler.Po
#	$(AM_V_CC)source='ppm_downscaler/ppm_downscaler.c' object='ppm_downscaler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ppm_downscaler.o `test -f 'ppm_downscaler/ppm_downscaler.c' || echo '$(srcdir)/'`ppm_downscaler/ppm_downscaler.c

ppm_downscaler.obj: ppm_downscaler/ppm_downscaler.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ppm_downscaler.obj -MD -MP -MF $(DEPDIR)/ppm_downscaler.Tpo -c -o ppm_downscaler.obj `if test -f 'ppm_downscaler/ppm_downscaler.c'; then $(CYGPATH_W) 'ppm_downscaler/ppm_downscaler.c'; else $(CYGPATH_W) '$(srcdir)/ppm_downscaler/ppm_downscaler.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ppm_downscaler.Tpo $(DEPDIR)/ppm_downscaler.Po
#	$(AM_V_CC)source='ppm_downscaler/ppm_downscaler.c' object='ppm_downscaler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ppm_downscaler.obj `if test -f 'ppm_downscaler/ppm_downscaler.c'; then $(CYGPATH_W) 'ppm_downscaler/ppm_downscaler.c'; else $(CYGPATH_W) '$(srcdir)/ppm_downscaler/ppm_downscaler.c'; fi`

yuv_downscaler.o: ppm_downscaler/yuv_downscaler.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT yuv_downscaler.o -MD -MP -MF $(DEPDIR)/yuv_downscaler.Tpo -c -o yuv_downscaler.o `test -f 'ppm_downscaler/yuv_downscaler.c' || echo '$(srcdir)/'`ppm_downscaler/yuv_downscaler.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/yuv_downscaler.Tpo $(DEPDIR)/yuv_downscaler.Po
#	$(AM_V_CC)source='ppm_downscaler/yuv_downscaler.c' object='yuv_downscaler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o yuv_downscaler.o `test -f 'ppm_downscaler/yuv_downscaler.c' || echo '$(srcdir)/'`ppm_downscaler/yuv_downscaler.c

yuv_downscaler.obj: ppm_downscaler/yuv_downscaler.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT yuv_downscaler.obj -MD -MP -MF $(DEPDIR)/yuv_downscaler.Tpo -c -o yuv_downscaler.obj `if test -f 'ppm_downscaler/yuv_downscaler.c'; then $(CYGPATH_W) 'ppm_downscaler/yuv_downscaler.c'; else $(CYGPATH_W) '$(srcdir)/ppm_downscaler/yuv_downscaler.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/yuv_downscaler.Tpo $(DEPDIR)/yuv_downscaler.Po
#	$(AM_V_CC)source='ppm_downscaler/yuv_downscaler.c' object='yuv_downscaler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o yuv_downscaler.obj `if test -f 'ppm_downscaler/yuv_downscaler.c'; then $(CYGPATH_W) 'ppm_downscaler/yuv_downscaler.c'; else $(CYGPATH_W) '$(srcdir)/ppm_downscaler/yuv_downscaler.c'; fi`

profiling.o: profiling/profiling.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT profiling.o -MD -MP -MF $(DEPDIR)/profiling.Tpo -c -o profiling.o `test -f 'profiling/profiling.c' || echo '$(srcdir)/'`profiling/profiling.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/profiling.Tpo $(DEPDIR)/profiling.Po
#	$(AM_V_CC)source='profiling/profiling.c' object='profiling.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o profiling.o `test -f 'profiling/profiling.c' || echo '$(srcdir)/'`profiling/profiling.c

profiling.obj: profiling/profiling.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT profiling.obj -MD -MP -MF $(DEPDIR)/profiling.Tpo -c -o profiling.obj `if test -f 'profiling/profiling.c'; then $(CYGPATH_W) 'profiling/profiling.c'; else $(CYGPATH_W) '$(srcdir)/profiling/profiling.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/profiling.Tpo $(DEPDIR)/profiling.Po
#	$(AM_V_CC)source='profiling/profiling.c' object='profiling.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o profiling.obj `if test -f 'profiling/profiling.c'; then $(CYGPATH_W) 'profiling/profiling.c'; else $(CYGPATH_W) '$(srcdir)/profiling/profiling.c'; fi`

dot_product.o: reductions/dot_product.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dot_product.o -MD -MP -MF $(DEPDIR)/dot_product.Tpo -c -o dot_product.o `test -f 'reductions/dot_product.c' || echo '$(srcdir)/'`reductions/dot_product.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dot_product.Tpo $(DEPDIR)/dot_product.Po
#	$(AM_V_CC)source='reductions/dot_product.c' object='dot_product.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dot_product.o `test -f 'reductions/dot_product.c' || echo '$(srcdir)/'`reductions/dot_product.c

dot_product.obj: reductions/dot_product.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dot_product.obj -MD -MP -MF $(DEPDIR)/dot_product.Tpo -c -o dot_product.obj `if test -f 'reductions/dot_product.c'; then $(CYGPATH_W) 'reductions/dot_product.c'; else $(CYGPATH_W) '$(srcdir)/reductions/dot_product.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dot_product.Tpo $(DEPDIR)/dot_product.Po
#	$(AM_V_CC)source='reductions/dot_product.c' object='dot_product.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dot_product.obj `if test -f 'reductions/dot_product.c'; then $(CYGPATH_W) 'reductions/dot_product.c'; else $(CYGPATH_W) '$(srcdir)/reductions/dot_product.c'; fi`

minmax_reduction.o: reductions/minmax_reduction.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minmax_reduction.o -MD -MP -MF $(DEPDIR)/minmax_reduction.Tpo -c -o minmax_reduction.o `test -f 'reductions/minmax_reduction.c' || echo '$(srcdir)/'`reductions/minmax_reduction.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/minmax_reduction.Tpo $(DEPDIR)/minmax_reduction.Po
#	$(AM_V_CC)source='reductions/minmax_reduction.c' object='minmax_reduction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minmax_reduction.o `test -f 'reductions/minmax_reduction.c' || echo '$(srcdir)/'`reductions/minmax_reduction.c

minmax_reduction.obj: reductions/minmax_reduction.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minmax_reduction.obj -MD -MP -MF $(DEPDIR)/minmax_reduction.Tpo -c -o minmax_reduction.obj `if test -f 'reductions/minmax_reduction.c'; then $(CYGPATH_W) 'reductions/minmax_reduction.c'; else $(CYGPATH_W) '$(srcdir)/reductions/minmax_reduction.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/minmax_reduction.Tpo $(DEPDIR)/minmax_reduction.Po
#	$(AM_V_CC)source='reductions/minmax_reduction.c' object='minmax_reduction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minmax_reduction.obj `if test -f 'reductions/minmax_reduction.c'; then $(CYGPATH_W) 'reductions/minmax_reduction.c'; else $(CYGPATH_W) '$(srcdir)/reductions/minmax_reduction.c'; fi`

dummy_sched_with_ctx.o: sched_ctx/dummy_sched_with_ctx.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dummy_sched_with_ctx.o -MD -MP -MF $(DEPDIR)/dummy_sched_with_ctx.Tpo -c -o dummy_sched_with_ctx.o `test -f 'sched_ctx/dummy_sched_with_ctx.c' || echo '$(srcdir)/'`sched_ctx/dummy_sched_with_ctx.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dummy_sched_with_ctx.Tpo $(DEPDIR)/dummy_sched_with_ctx.Po
#	$(AM_V_CC)source='sched_ctx/dummy_sched_with_ctx.c' object='dummy_sched_with_ctx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dummy_sched_with_ctx.o `test -f 'sched_ctx/dummy_sched_with_ctx.c' || echo '$(srcdir)/'`sched_ctx/dummy_sched_with_ctx.c

dummy_sched_with_ctx.obj: sched_ctx/dummy_sched_with_ctx.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dummy_sched_with_ctx.obj -MD -MP -MF $(DEPDIR)/dummy_sched_with_ctx.Tpo -c -o dummy_sched_with_ctx.obj `if test -f 'sched_ctx/dummy_sched_with_ctx.c'; then $(CYGPATH_W) 'sched_ctx/dummy_sched_with_ctx.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/dummy_sched_with_ctx.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dummy_sched_with_ctx.Tpo $(DEPDIR)/dummy_sched_with_ctx.Po
#	$(AM_V_CC)source='sched_ctx/dummy_sched_with_ctx.c' object='dummy_sched_with_ctx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dummy_sched_with_ctx.obj `if test -f 'sched_ctx/dummy_sched_with_ctx.c'; then $(CYGPATH_W) 'sched_ctx/dummy_sched_with_ctx.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/dummy_sched_with_ctx.c'; fi`

gpu_partition.o: sched_ctx/gpu_partition.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpu_partition.o -MD -MP -MF $(DEPDIR)/gpu_partition.Tpo -c -o gpu_partition.o `test -f 'sched_ctx/gpu_partition.c' || echo '$(srcdir)/'`sched_ctx/gpu_partition.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/gpu_partition.Tpo $(DEPDIR)/gpu_partition.Po
#	$(AM_V_CC)source='sched_ctx/gpu_partition.c' object='gpu_partition.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpu_partition.o `test -f 'sched_ctx/gpu_partition.c' || echo '$(srcdir)/'`sched_ctx/gpu_partition.c

gpu_partition.obj: sched_ctx/gpu_partition.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpu_partition.obj -MD -MP -MF $(DEPDIR)/gpu_partition.Tpo -c -o gpu_partition.obj `if test -f 'sched_ctx/gpu_partition.c'; then $(CYGPATH_W) 'sched_ctx/gpu_partition.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/gpu_partition.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gpu_partition.Tpo $(DEPDIR)/gpu_partition.Po
#	$(AM_V_CC)source='sched_ctx/gpu_partition.c' object='gpu_partition.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpu_partition.obj `if test -f 'sched_ctx/gpu_partition.c'; then $(CYGPATH_W) 'sched_ctx/gpu_partition.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/gpu_partition.c'; fi`

sched_ctx_nested_sched_ctxs-nested_sched_ctxs.o: sched_ctx/nested_sched_ctxs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sched_ctx_nested_sched_ctxs_CFLAGS) $(CFLAGS) -MT sched_ctx_nested_sched_ctxs-nested_sched_ctxs.o -MD -MP -MF $(DEPDIR)/sched_ctx_nested_sched_ctxs-nested_sched_ctxs.Tpo -c -o sched_ctx_nested_sched_ctxs-nested_sched_ctxs.o `test -f 'sched_ctx/nested_sched_ctxs.c' || echo '$(srcdir)/'`sched_ctx/nested_sched_ctxs.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx_nested_sched_ctxs-nested_sched_ctxs.Tpo $(DEPDIR)/sched_ctx_nested_sched_ctxs-nested_sched_ctxs.Po
#	$(AM_V_CC)source='sched_ctx/nested_sched_ctxs.c' object='sched_ctx_nested_sched_ctxs-nested_sched_ctxs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sched_ctx_nested_sched_ctxs_CFLAGS) $(CFLAGS) -c -o sched_ctx_nested_sched_ctxs-nested_sched_ctxs.o `test -f 'sched_ctx/nested_sched_ctxs.c' || echo '$(srcdir)/'`sched_ctx/nested_sched_ctxs.c

sched_ctx_nested_sched_ctxs-nested_sched_ctxs.obj: sched_ctx/nested_sched_ctxs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sched_ctx_nested_sched_ctxs_CFLAGS) $(CFLAGS) -MT sched_ctx_nested_sched_ctxs-nested_sched_ctxs.obj -MD -MP -MF $(DEPDIR)/sched_ctx_nested_sched_ctxs-nested_sched_ctxs.Tpo -c -o sched_ctx_nested_sched_ctxs-nested_sched_ctxs.obj `if test -f 'sched_ctx/nested_sched_ctxs.c'; then $(CYGPATH_W) 'sched_ctx/nested_sched_ctxs.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/nested_sched_ctxs.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx_nested_sched_ctxs-nested_sched_ctxs.Tpo $(DEPDIR)/sched_ctx_nested_sched_ctxs-nested_sched_ctxs.Po
#	$(AM_V_CC)source='sched_ctx/nested_sched_ctxs.c' object='sched_ctx_nested_sched_ctxs-nested_sched_ctxs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sched_ctx_nested_sched_ctxs_CFLAGS) $(CFLAGS) -c -o sched_ctx_nested_sched_ctxs-nested_sched_ctxs.obj `if test -f 'sched_ctx/nested_sched_ctxs.c'; then $(CYGPATH_W) 'sched_ctx/nested_sched_ctxs.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/nested_sched_ctxs.c'; fi`

sched_ctx_parallel_code-parallel_code.o: sched_ctx/parallel_code.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sched_ctx_parallel_code_CFLAGS) $(CFLAGS) -MT sched_ctx_parallel_code-parallel_code.o -MD -MP -MF $(DEPDIR)/sched_ctx_parallel_code-parallel_code.Tpo -c -o sched_ctx_parallel_code-parallel_code.o `test -f 'sched_ctx/parallel_code.c' || echo '$(srcdir)/'`sched_ctx/parallel_code.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx_parallel_code-parallel_code.Tpo $(DEPDIR)/sched_ctx_parallel_code-parallel_code.Po
#	$(AM_V_CC)source='sched_ctx/parallel_code.c' object='sched_ctx_parallel_code-parallel_code.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sched_ctx_parallel_code_CFLAGS) $(CFLAGS) -c -o sched_ctx_parallel_code-parallel_code.o `test -f 'sched_ctx/parallel_code.c' || echo '$(srcdir)/'`sched_ctx/parallel_code.c

sched_ctx_parallel_code-parallel_code.obj: sched_ctx/parallel_code.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sched_ctx_parallel_code_CFLAGS) $(CFLAGS) -MT sched_ctx_parallel_code-parallel_code.obj -MD -MP -MF $(DEPDIR)/sched_ctx_parallel_code-parallel_code.Tpo -c -o sched_ctx_parallel_code-parallel_code.obj `if test -f 'sched_ctx/parallel_code.c'; then $(CYGPATH_W) 'sched_ctx/parallel_code.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/parallel_code.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx_parallel_code-parallel_code.Tpo $(DEPDIR)/sched_ctx_parallel_code-parallel_code.Po
#	$(AM_V_CC)source='sched_ctx/parallel_code.c' object='sched_ctx_parallel_code-parallel_code.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sched_ctx_parallel_code_CFLAGS) $(CFLAGS) -c -o sched_ctx_parallel_code-parallel_code.obj `if test -f 'sched_ctx/parallel_code.c'; then $(CYGPATH_W) 'sched_ctx/parallel_code.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/parallel_code.c'; fi`

sched_ctx_parallel_tasks_reuse_handle-parallel_tasks_reuse_handle.o: sched_ctx/parallel_tasks_reuse_handle.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sched_ctx_parallel_tasks_reuse_handle_CFLAGS) $(CFLAGS) -MT sched_ctx_parallel_tasks_reuse_handle-parallel_tasks_reuse_handle.o -MD -MP -MF $(DEPDIR)/sched_ctx_parallel_tasks_reuse_handle-parallel_tasks_reuse_handle.Tpo -c -o sched_ctx_parallel_tasks_reuse_handle-parallel_tasks_reuse_handle.o `test -f 'sched_ctx/parallel_tasks_reuse_handle.c' || echo '$(srcdir)/'`sched_ctx/parallel_tasks_reuse_handle.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx_parallel_tasks_reuse_handle-parallel_tasks_reuse_handle.Tpo $(DEPDIR)/sched_ctx_parallel_tasks_reuse_handle-parallel_tasks_reuse_handle.Po
#	$(AM_V_CC)source='sched_ctx/parallel_tasks_reuse_handle.c' object='sched_ctx_parallel_tasks_reuse_handle-parallel_tasks_reuse_handle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sched_ctx_parallel_tasks_reuse_handle_CFLAGS) $(CFLAGS) -c -o sched_ctx_parallel_tasks_reuse_handle-parallel_tasks_reuse_handle.o `test -f 'sched_ctx/parallel_tasks_reuse_handle.c' || echo '$(srcdir)/'`sched_ctx/parallel_tasks_reuse_handle.c

sched_ctx_parallel_tasks_reuse_handle-parallel_tasks_reuse_handle.obj: sched_ctx/parallel_tasks_reuse_handle.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sched_ctx_parallel_tasks_reuse_handle_CFLAGS) $(CFLAGS) -MT sched_ctx_parallel_tasks_reuse_handle-parallel_tasks_reuse_handle.obj -MD -MP -MF $(DEPDIR)/sched_ctx_parallel_tasks_reuse_handle-parallel_tasks_reuse_handle.Tpo -c -o sched_ctx_parallel_tasks_reuse_handle-parallel_tasks_reuse_handle.obj `if test -f 'sched_ctx/parallel_tasks_reuse_handle.c'; then $(CYGPATH_W) 'sched_ctx/parallel_tasks_reuse_handle.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/parallel_tasks_reuse_handle.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx_parallel_tasks_reuse_handle-parallel_tasks_reuse_handle.Tpo $(DEPDIR)/sched_ctx_parallel_tasks_reuse_handle-parallel_tasks_reuse_handle.Po
#	$(AM_V_CC)source='sched_ctx/parallel_tasks_reuse_handle.c' object='sched_ctx_parallel_tasks_reuse_handle-parallel_tasks_reuse_handle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sched_ctx_parallel_tasks_reuse_handle_CFLAGS) $(CFLAGS) -c -o sched_ctx_parallel_tasks_reuse_handle-parallel_tasks_reuse_handle.obj `if test -f 'sched_ctx/parallel_tasks_reuse_handle.c'; then $(CYGPATH_W) 'sched_ctx/parallel_tasks_reuse_handle.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/parallel_tasks_reuse_handle.c'; fi`

parallel_tasks_with_cluster_api.o: sched_ctx/parallel_tasks_with_cluster_api.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_tasks_with_cluster_api.o -MD -MP -MF $(DEPDIR)/parallel_tasks_with_cluster_api.Tpo -c -o parallel_tasks_with_cluster_api.o `test -f 'sched_ctx/parallel_tasks_with_cluster_api.c' || echo '$(srcdir)/'`sched_ctx/parallel_tasks_with_cluster_api.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_tasks_with_cluster_api.Tpo $(DEPDIR)/parallel_tasks_with_cluster_api.Po
#	$(AM_V_CC)source='sched_ctx/parallel_tasks_with_cluster_api.c' object='parallel_tasks_with_cluster_api.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_tasks_with_cluster_api.o `test -f 'sched_ctx/parallel_tasks_with_cluster_api.c' || echo '$(srcdir)/'`sched_ctx/parallel_tasks_with_cluster_api.c

parallel_tasks_with_cluster_api.obj: sched_ctx/parallel_tasks_with_cluster_api.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parallel_tasks_with_cluster_api.obj -MD -MP -MF $(DEPDIR)/parallel_tasks_with_cluster_api.Tpo -c -o parallel_tasks_with_cluster_api.obj `if test -f 'sched_ctx/parallel_tasks_with_cluster_api.c'; then $(CYGPATH_W) 'sched_ctx/parallel_tasks_with_cluster_api.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/parallel_tasks_with_cluster_api.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parallel_tasks_with_cluster_api.Tpo $(DEPDIR)/parallel_tasks_with_cluster_api.Po
#	$(AM_V_CC)source='sched_ctx/parallel_tasks_with_cluster_api.c' object='parallel_tasks_with_cluster_api.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parallel_tasks_with_cluster_api.obj `if test -f 'sched_ctx/parallel_tasks_with_cluster_api.c'; then $(CYGPATH_W) 'sched_ctx/parallel_tasks_with_cluster_api.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/parallel_tasks_with_cluster_api.c'; fi`

prio.o: sched_ctx/prio.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT prio.o -MD -MP -MF $(DEPDIR)/prio.Tpo -c -o prio.o `test -f 'sched_ctx/prio.c' || echo '$(srcdir)/'`sched_ctx/prio.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/prio.Tpo $(DEPDIR)/prio.Po
#	$(AM_V_CC)source='sched_ctx/prio.c' object='prio.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o prio.o `test -f 'sched_ctx/prio.c' || echo '$(srcdir)/'`sched_ctx/prio.c

prio.obj: sched_ctx/prio.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT prio.obj -MD -MP -MF $(DEPDIR)/prio.Tpo -c -o prio.obj `if test -f 'sched_ctx/prio.c'; then $(CYGPATH_W) 'sched_ctx/prio.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/prio.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/prio.Tpo $(DEPDIR)/prio.Po
#	$(AM_V_CC)source='sched_ctx/prio.c' object='prio.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o prio.obj `if test -f 'sched_ctx/prio.c'; then $(CYGPATH_W) 'sched_ctx/prio.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/prio.c'; fi`

sched_ctx.o: sched_ctx/sched_ctx.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sched_ctx.o -MD -MP -MF $(DEPDIR)/sched_ctx.Tpo -c -o sched_ctx.o `test -f 'sched_ctx/sched_ctx.c' || echo '$(srcdir)/'`sched_ctx/sched_ctx.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx.Tpo $(DEPDIR)/sched_ctx.Po
#	$(AM_V_CC)source='sched_ctx/sched_ctx.c' object='sched_ctx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sched_ctx.o `test -f 'sched_ctx/sched_ctx.c' || echo '$(srcdir)/'`sched_ctx/sched_ctx.c

sched_ctx.obj: sched_ctx/sched_ctx.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sched_ctx.obj -MD -MP -MF $(DEPDIR)/sched_ctx.Tpo -c -o sched_ctx.obj `if test -f 'sched_ctx/sched_ctx.c'; then $(CYGPATH_W) 'sched_ctx/sched_ctx.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/sched_ctx.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx.Tpo $(DEPDIR)/sched_ctx.Po
#	$(AM_V_CC)source='sched_ctx/sched_ctx.c' object='sched_ctx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sched_ctx.obj `if test -f 'sched_ctx/sched_ctx.c'; then $(CYGPATH_W) 'sched_ctx/sched_ctx.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/sched_ctx.c'; fi`

sched_ctx_delete.o: sched_ctx/sched_ctx_delete.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sched_ctx_delete.o -MD -MP -MF $(DEPDIR)/sched_ctx_delete.Tpo -c -o sched_ctx_delete.o `test -f 'sched_ctx/sched_ctx_delete.c' || echo '$(srcdir)/'`sched_ctx/sched_ctx_delete.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx_delete.Tpo $(DEPDIR)/sched_ctx_delete.Po
#	$(AM_V_CC)source='sched_ctx/sched_ctx_delete.c' object='sched_ctx_delete.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sched_ctx_delete.o `test -f 'sched_ctx/sched_ctx_delete.c' || echo '$(srcdir)/'`sched_ctx/sched_ctx_delete.c

sched_ctx_delete.obj: sched_ctx/sched_ctx_delete.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sched_ctx_delete.obj -MD -MP -MF $(DEPDIR)/sched_ctx_delete.Tpo -c -o sched_ctx_delete.obj `if test -f 'sched_ctx/sched_ctx_delete.c'; then $(CYGPATH_W) 'sched_ctx/sched_ctx_delete.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/sched_ctx_delete.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx_delete.Tpo $(DEPDIR)/sched_ctx_delete.Po
#	$(AM_V_CC)source='sched_ctx/sched_ctx_delete.c' object='sched_ctx_delete.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sched_ctx_delete.obj `if test -f 'sched_ctx/sched_ctx_delete.c'; then $(CYGPATH_W) 'sched_ctx/sched_ctx_delete.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/sched_ctx_delete.c'; fi`

sched_ctx_empty.o: sched_ctx/sched_ctx_empty.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sched_ctx_empty.o -MD -MP -MF $(DEPDIR)/sched_ctx_empty.Tpo -c -o sched_ctx_empty.o `test -f 'sched_ctx/sched_ctx_empty.c' || echo '$(srcdir)/'`sched_ctx/sched_ctx_empty.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx_empty.Tpo $(DEPDIR)/sched_ctx_empty.Po
#	$(AM_V_CC)source='sched_ctx/sched_ctx_empty.c' object='sched_ctx_empty.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sched_ctx_empty.o `test -f 'sched_ctx/sched_ctx_empty.c' || echo '$(srcdir)/'`sched_ctx/sched_ctx_empty.c

sched_ctx_empty.obj: sched_ctx/sched_ctx_empty.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sched_ctx_empty.obj -MD -MP -MF $(DEPDIR)/sched_ctx_empty.Tpo -c -o sched_ctx_empty.obj `if test -f 'sched_ctx/sched_ctx_empty.c'; then $(CYGPATH_W) 'sched_ctx/sched_ctx_empty.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/sched_ctx_empty.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx_empty.Tpo $(DEPDIR)/sched_ctx_empty.Po
#	$(AM_V_CC)source='sched_ctx/sched_ctx_empty.c' object='sched_ctx_empty.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sched_ctx_empty.obj `if test -f 'sched_ctx/sched_ctx_empty.c'; then $(CYGPATH_W) 'sched_ctx/sched_ctx_empty.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/sched_ctx_empty.c'; fi`

sched_ctx_sched_ctx_without_sched_policy-sched_ctx_without_sched_policy.o: sched_ctx/sched_ctx_without_sched_policy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sched_ctx_sched_ctx_without_sched_policy_CFLAGS) $(CFLAGS) -MT sched_ctx_sched_ctx_without_sched_policy-sched_ctx_without_sched_policy.o -MD -MP -MF $(DEPDIR)/sched_ctx_sched_ctx_without_sched_policy-sched_ctx_without_sched_policy.Tpo -c -o sched_ctx_sched_ctx_without_sched_policy-sched_ctx_without_sched_policy.o `test -f 'sched_ctx/sched_ctx_without_sched_policy.c' || echo '$(srcdir)/'`sched_ctx/sched_ctx_without_sched_policy.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx_sched_ctx_without_sched_policy-sched_ctx_without_sched_policy.Tpo $(DEPDIR)/sched_ctx_sched_ctx_without_sched_policy-sched_ctx_without_sched_policy.Po
#	$(AM_V_CC)source='sched_ctx/sched_ctx_without_sched_policy.c' object='sched_ctx_sched_ctx_without_sched_policy-sched_ctx_without_sched_policy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sched_ctx_sched_ctx_without_sched_policy_CFLAGS) $(CFLAGS) -c -o sched_ctx_sched_ctx_without_sched_policy-sched_ctx_without_sched_policy.o `test -f 'sched_ctx/sched_ctx_without_sched_policy.c' || echo '$(srcdir)/'`sched_ctx/sched_ctx_without_sched_policy.c

sched_ctx_sched_ctx_without_sched_policy-sched_ctx_without_sched_policy.obj: sched_ctx/sched_ctx_without_sched_policy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sched_ctx_sched_ctx_without_sched_policy_CFLAGS) $(CFLAGS) -MT sched_ctx_sched_ctx_without_sched_policy-sched_ctx_without_sched_policy.obj -MD -MP -MF $(DEPDIR)/sched_ctx_sched_ctx_without_sched_policy-sched_ctx_without_sched_policy.Tpo -c -o sched_ctx_sched_ctx_without_sched_policy-sched_ctx_without_sched_policy.obj `if test -f 'sched_ctx/sched_ctx_without_sched_policy.c'; then $(CYGPATH_W) 'sched_ctx/sched_ctx_without_sched_policy.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/sched_ctx_without_sched_policy.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx_sched_ctx_without_sched_policy-sched_ctx_without_sched_policy.Tpo $(DEPDIR)/sched_ctx_sched_ctx_without_sched_policy-sched_ctx_without_sched_policy.Po
#	$(AM_V_CC)source='sched_ctx/sched_ctx_without_sched_policy.c' object='sched_ctx_sched_ctx_without_sched_policy-sched_ctx_without_sched_policy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sched_ctx_sched_ctx_without_sched_policy_CFLAGS) $(CFLAGS) -c -o sched_ctx_sched_ctx_without_sched_policy-sched_ctx_without_sched_policy.obj `if test -f 'sched_ctx/sched_ctx_without_sched_policy.c'; then $(CYGPATH_W) 'sched_ctx/sched_ctx_without_sched_policy.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/sched_ctx_without_sched_policy.c'; fi`

sched_ctx_without_sched_policy_awake.o: sched_ctx/sched_ctx_without_sched_policy_awake.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sched_ctx_without_sched_policy_awake.o -MD -MP -MF $(DEPDIR)/sched_ctx_without_sched_policy_awake.Tpo -c -o sched_ctx_without_sched_policy_awake.o `test -f 'sched_ctx/sched_ctx_without_sched_policy_awake.c' || echo '$(srcdir)/'`sched_ctx/sched_ctx_without_sched_policy_awake.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx_without_sched_policy_awake.Tpo $(DEPDIR)/sched_ctx_without_sched_policy_awake.Po
#	$(AM_V_CC)source='sched_ctx/sched_ctx_without_sched_policy_awake.c' object='sched_ctx_without_sched_policy_awake.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sched_ctx_without_sched_policy_awake.o `test -f 'sched_ctx/sched_ctx_without_sched_policy_awake.c' || echo '$(srcdir)/'`sched_ctx/sched_ctx_without_sched_policy_awake.c

sched_ctx_without_sched_policy_awake.obj: sched_ctx/sched_ctx_without_sched_policy_awake.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sched_ctx_without_sched_policy_awake.obj -MD -MP -MF $(DEPDIR)/sched_ctx_without_sched_policy_awake.Tpo -c -o sched_ctx_without_sched_policy_awake.obj `if test -f 'sched_ctx/sched_ctx_without_sched_policy_awake.c'; then $(CYGPATH_W) 'sched_ctx/sched_ctx_without_sched_policy_awake.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/sched_ctx_without_sched_policy_awake.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_ctx_without_sched_policy_awake.Tpo $(DEPDIR)/sched_ctx_without_sched_policy_awake.Po
#	$(AM_V_CC)source='sched_ctx/sched_ctx_without_sched_policy_awake.c' object='sched_ctx_without_sched_policy_awake.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sched_ctx_without_sched_policy_awake.obj `if test -f 'sched_ctx/sched_ctx_without_sched_policy_awake.c'; then $(CYGPATH_W) 'sched_ctx/sched_ctx_without_sched_policy_awake.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/sched_ctx_without_sched_policy_awake.c'; fi`

two_cpu_contexts.o: sched_ctx/two_cpu_contexts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT two_cpu_contexts.o -MD -MP -MF $(DEPDIR)/two_cpu_contexts.Tpo -c -o two_cpu_contexts.o `test -f 'sched_ctx/two_cpu_contexts.c' || echo '$(srcdir)/'`sched_ctx/two_cpu_contexts.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/two_cpu_contexts.Tpo $(DEPDIR)/two_cpu_contexts.Po
#	$(AM_V_CC)source='sched_ctx/two_cpu_contexts.c' object='two_cpu_contexts.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o two_cpu_contexts.o `test -f 'sched_ctx/two_cpu_contexts.c' || echo '$(srcdir)/'`sched_ctx/two_cpu_contexts.c

two_cpu_contexts.obj: sched_ctx/two_cpu_contexts.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT two_cpu_contexts.obj -MD -MP -MF $(DEPDIR)/two_cpu_contexts.Tpo -c -o two_cpu_contexts.obj `if test -f 'sched_ctx/two_cpu_contexts.c'; then $(CYGPATH_W) 'sched_ctx/two_cpu_contexts.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/two_cpu_contexts.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/two_cpu_contexts.Tpo $(DEPDIR)/two_cpu_contexts.Po
#	$(AM_V_CC)source='sched_ctx/two_cpu_contexts.c' object='two_cpu_contexts.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o two_cpu_contexts.obj `if test -f 'sched_ctx/two_cpu_contexts.c'; then $(CYGPATH_W) 'sched_ctx/two_cpu_contexts.c'; else $(CYGPATH_W) '$(srcdir)/sched_ctx/two_cpu_contexts.c'; fi`

dummy_modular_sched.o: scheduler/dummy_modular_sched.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dummy_modular_sched.o -MD -MP -MF $(DEPDIR)/dummy_modular_sched.Tpo -c -o dummy_modular_sched.o `test -f 'scheduler/dummy_modular_sched.c' || echo '$(srcdir)/'`scheduler/dummy_modular_sched.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dummy_modular_sched.Tpo $(DEPDIR)/dummy_modular_sched.Po
#	$(AM_V_CC)source='scheduler/dummy_modular_sched.c' object='dummy_modular_sched.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dummy_modular_sched.o `test -f 'scheduler/dummy_modular_sched.c' || echo '$(srcdir)/'`scheduler/dummy_modular_sched.c

dummy_modular_sched.obj: scheduler/dummy_modular_sched.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dummy_modular_sched.obj -MD -MP -MF $(DEPDIR)/dummy_modular_sched.Tpo -c -o dummy_modular_sched.obj `if test -f 'scheduler/dummy_modular_sched.c'; then $(CYGPATH_W) 'scheduler/dummy_modular_sched.c'; else $(CYGPATH_W) '$(srcdir)/scheduler/dummy_modular_sched.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dummy_modular_sched.Tpo $(DEPDIR)/dummy_modular_sched.Po
#	$(AM_V_CC)source='scheduler/dummy_modular_sched.c' object='dummy_modular_sched.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dummy_modular_sched.obj `if test -f 'scheduler/dummy_modular_sched.c'; then $(CYGPATH_W) 'scheduler/dummy_modular_sched.c'; else $(CYGPATH_W) '$(srcdir)/scheduler/dummy_modular_sched.c'; fi`

dummy_sched.o: scheduler/dummy_sched.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dummy_sched.o -MD -MP -MF $(DEPDIR)/dummy_sched.Tpo -c -o dummy_sched.o `test -f 'scheduler/dummy_sched.c' || echo '$(srcdir)/'`scheduler/dummy_sched.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dummy_sched.Tpo $(DEPDIR)/dummy_sched.Po
#	$(AM_V_CC)source='scheduler/dummy_sched.c' object='dummy_sched.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dummy_sched.o `test -f 'scheduler/dummy_sched.c' || echo '$(srcdir)/'`scheduler/dummy_sched.c

dummy_sched.obj: scheduler/dummy_sched.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dummy_sched.obj -MD -MP -MF $(DEPDIR)/dummy_sched.Tpo -c -o dummy_sched.obj `if test -f 'scheduler/dummy_sched.c'; then $(CYGPATH_W) 'scheduler/dummy_sched.c'; else $(CYGPATH_W) '$(srcdir)/scheduler/dummy_sched.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dummy_sched.Tpo $(DEPDIR)/dummy_sched.Po
#	$(AM_V_CC)source='scheduler/dummy_sched.c' object='dummy_sched.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dummy_sched.obj `if test -f 'scheduler/dummy_sched.c'; then $(CYGPATH_W) 'scheduler/dummy_sched.c'; else $(CYGPATH_W) '$(srcdir)/scheduler/dummy_sched.c'; fi`

heteroprio_test.o: scheduler/heteroprio_test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT heteroprio_test.o -MD -MP -MF $(DEPDIR)/heteroprio_test.Tpo -c -o heteroprio_test.o `test -f 'scheduler/heteroprio_test.c' || echo '$(srcdir)/'`scheduler/heteroprio_test.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/heteroprio_test.Tpo $(DEPDIR)/heteroprio_test.Po
#	$(AM_V_CC)source='scheduler/heteroprio_test.c' object='heteroprio_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o heteroprio_test.o `test -f 'scheduler/heteroprio_test.c' || echo '$(srcdir)/'`scheduler/heteroprio_test.c

heteroprio_test.obj: scheduler/heteroprio_test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT heteroprio_test.obj -MD -MP -MF $(DEPDIR)/heteroprio_test.Tpo -c -o heteroprio_test.obj `if test -f 'scheduler/heteroprio_test.c'; then $(CYGPATH_W) 'scheduler/heteroprio_test.c'; else $(CYGPATH_W) '$(srcdir)/scheduler/heteroprio_test.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/heteroprio_test.Tpo $(DEPDIR)/heteroprio_test.Po
#	$(AM_V_CC)source='scheduler/heteroprio_test.c' object='heteroprio_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o heteroprio_test.obj `if test -f 'scheduler/heteroprio_test.c'; then $(CYGPATH_W) 'scheduler/heteroprio_test.c'; else $(CYGPATH_W) '$(srcdir)/scheduler/heteroprio_test.c'; fi`

vector_scal_spmd.o: spmd/vector_scal_spmd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vector_scal_spmd.o -MD -MP -MF $(DEPDIR)/vector_scal_spmd.Tpo -c -o vector_scal_spmd.o `test -f 'spmd/vector_scal_spmd.c' || echo '$(srcdir)/'`spmd/vector_scal_spmd.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/vector_scal_spmd.Tpo $(DEPDIR)/vector_scal_spmd.Po
#	$(AM_V_CC)source='spmd/vector_scal_spmd.c' object='vector_scal_spmd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vector_scal_spmd.o `test -f 'spmd/vector_scal_spmd.c' || echo '$(srcdir)/'`spmd/vector_scal_spmd.c

vector_scal_spmd.obj: spmd/vector_scal_spmd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vector_scal_spmd.obj -MD -MP -MF $(DEPDIR)/vector_scal_spmd.Tpo -c -o vector_scal_spmd.obj `if test -f 'spmd/vector_scal_spmd.c'; then $(CYGPATH_W) 'spmd/vector_scal_spmd.c'; else $(CYGPATH_W) '$(srcdir)/spmd/vector_scal_spmd.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/vector_scal_spmd.Tpo $(DEPDIR)/vector_scal_spmd.Po
#	$(AM_V_CC)source='spmd/vector_scal_spmd.c' object='vector_scal_spmd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vector_scal_spmd.obj `if test -f 'spmd/vector_scal_spmd.c'; then $(CYGPATH_W) 'spmd/vector_scal_spmd.c'; else $(CYGPATH_W) '$(srcdir)/spmd/vector_scal_spmd.c'; fi`

dw_block_spmv.o: spmv/dw_block_spmv.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dw_block_spmv.o -MD -MP -MF $(DEPDIR)/dw_block_spmv.Tpo -c -o dw_block_spmv.o `test -f 'spmv/dw_block_spmv.c' || echo '$(srcdir)/'`spmv/dw_block_spmv.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dw_block_spmv.Tpo $(DEPDIR)/dw_block_spmv.Po
#	$(AM_V_CC)source='spmv/dw_block_spmv.c' object='dw_block_spmv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dw_block_spmv.o `test -f 'spmv/dw_block_spmv.c' || echo '$(srcdir)/'`spmv/dw_block_spmv.c

dw_block_spmv.obj: spmv/dw_block_spmv.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dw_block_spmv.obj -MD -MP -MF $(DEPDIR)/dw_block_spmv.Tpo -c -o dw_block_spmv.obj `if test -f 'spmv/dw_block_spmv.c'; then $(CYGPATH_W) 'spmv/dw_block_spmv.c'; else $(CYGPATH_W) '$(srcdir)/spmv/dw_block_spmv.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dw_block_spmv.Tpo $(DEPDIR)/dw_block_spmv.Po
#	$(AM_V_CC)source='spmv/dw_block_spmv.c' object='dw_block_spmv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dw_block_spmv.obj `if test -f 'spmv/dw_block_spmv.c'; then $(CYGPATH_W) 'spmv/dw_block_spmv.c'; else $(CYGPATH_W) '$(srcdir)/spmv/dw_block_spmv.c'; fi`

dw_block_spmv_kernels.o: spmv/dw_block_spmv_kernels.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dw_block_spmv_kernels.o -MD -MP -MF $(DEPDIR)/dw_block_spmv_kernels.Tpo -c -o dw_block_spmv_kernels.o `test -f 'spmv/dw_block_spmv_kernels.c' || echo '$(srcdir)/'`spmv/dw_block_spmv_kernels.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dw_block_spmv_kernels.Tpo $(DEPDIR)/dw_block_spmv_kernels.Po
#	$(AM_V_CC)source='spmv/dw_block_spmv_kernels.c' object='dw_block_spmv_kernels.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dw_block_spmv_kernels.o `test -f 'spmv/dw_block_spmv_kernels.c' || echo '$(srcdir)/'`spmv/dw_block_spmv_kernels.c

dw_block_spmv_kernels.obj: spmv/dw_block_spmv_kernels.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dw_block_spmv_kernels.obj -MD -MP -MF $(DEPDIR)/dw_block_spmv_kernels.Tpo -c -o dw_block_spmv_kernels.obj `if test -f 'spmv/dw_block_spmv_kernels.c'; then $(CYGPATH_W) 'spmv/dw_block_spmv_kernels.c'; else $(CYGPATH_W) '$(srcdir)/spmv/dw_block_spmv_kernels.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dw_block_spmv_kernels.Tpo $(DEPDIR)/dw_block_spmv_kernels.Po
#	$(AM_V_CC)source='spmv/dw_block_spmv_kernels.c' object='dw_block_spmv_kernels.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dw_block_spmv_kernels.obj `if test -f 'spmv/dw_block_spmv_kernels.c'; then $(CYGPATH_W) 'spmv/dw_block_spmv_kernels.c'; else $(CYGPATH_W) '$(srcdir)/spmv/dw_block_spmv_kernels.c'; fi`

mm_to_bcsr.o: spmv/matrix_market/mm_to_bcsr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mm_to_bcsr.o -MD -MP -MF $(DEPDIR)/mm_to_bcsr.Tpo -c -o mm_to_bcsr.o `test -f 'spmv/matrix_market/mm_to_bcsr.c' || echo '$(srcdir)/'`spmv/matrix_market/mm_to_bcsr.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mm_to_bcsr.Tpo $(DEPDIR)/mm_to_bcsr.Po
#	$(AM_V_CC)source='spmv/matrix_market/mm_to_bcsr.c' object='mm_to_bcsr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mm_to_bcsr.o `test -f 'spmv/matrix_market/mm_to_bcsr.c' || echo '$(srcdir)/'`spmv/matrix_market/mm_to_bcsr.c

mm_to_bcsr.obj: spmv/matrix_market/mm_to_bcsr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mm_to_bcsr.obj -MD -MP -MF $(DEPDIR)/mm_to_bcsr.Tpo -c -o mm_to_bcsr.obj `if test -f 'spmv/matrix_market/mm_to_bcsr.c'; then $(CYGPATH_W) 'spmv/matrix_market/mm_to_bcsr.c'; else $(CYGPATH_W) '$(srcdir)/spmv/matrix_market/mm_to_bcsr.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mm_to_bcsr.Tpo $(DEPDIR)/mm_to_bcsr.Po
#	$(AM_V_CC)source='spmv/matrix_market/mm_to_bcsr.c' object='mm_to_bcsr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mm_to_bcsr.obj `if test -f 'spmv/matrix_market/mm_to_bcsr.c'; then $(CYGPATH_W) 'spmv/matrix_market/mm_to_bcsr.c'; else $(CYGPATH_W) '$(srcdir)/spmv/matrix_market/mm_to_bcsr.c'; fi`

mmio.o: spmv/matrix_market/mmio.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mmio.o -MD -MP -MF $(DEPDIR)/mmio.Tpo -c -o mmio.o `test -f 'spmv/matrix_market/mmio.c' || echo '$(srcdir)/'`spmv/matrix_market/mmio.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mmio.Tpo $(DEPDIR)/mmio.Po
#	$(AM_V_CC)source='spmv/matrix_market/mmio.c' object='mmio.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmio.o `test -f 'spmv/matrix_market/mmio.c' || echo '$(srcdir)/'`spmv/matrix_market/mmio.c

mmio.obj: spmv/matrix_market/mmio.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mmio.obj -MD -MP -MF $(DEPDIR)/mmio.Tpo -c -o mmio.obj `if test -f 'spmv/matrix_market/mmio.c'; then $(CYGPATH_W) 'spmv/matrix_market/mmio.c'; else $(CYGPATH_W) '$(srcdir)/spmv/matrix_market/mmio.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mmio.Tpo $(DEPDIR)/mmio.Po
#	$(AM_V_CC)source='spmv/matrix_market/mmio.c' object='mmio.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mmio.obj `if test -f 'spmv/matrix_market/mmio.c'; then $(CYGPATH_W) 'spmv/matrix_market/mmio.c'; else $(CYGPATH_W) '$(srcdir)/spmv/matrix_market/mmio.c'; fi`

spmv.o: spmv/spmv.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT spmv.o -MD -MP -MF $(DEPDIR)/spmv.Tpo -c -o spmv.o `test -f 'spmv/spmv.c' || echo '$(srcdir)/'`spmv/spmv.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/spmv.Tpo $(DEPDIR)/spmv.Po
#	$(AM_V_CC)source='spmv/spmv.c' object='spmv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spmv.o `test -f 'spmv/spmv.c' || echo '$(srcdir)/'`spmv/spmv.c

spmv.obj: spmv/spmv.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT spmv.obj -MD -MP -MF $(DEPDIR)/spmv.Tpo -c -o spmv.obj `if test -f 'spmv/spmv.c'; then $(CYGPATH_W) 'spmv/spmv.c'; else $(CYGPATH_W) '$(srcdir)/spmv/spmv.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/spmv.Tpo $(DEPDIR)/spmv.Po
#	$(AM_V_CC)source='spmv/spmv.c' object='spmv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spmv.obj `if test -f 'spmv/spmv.c'; then $(CYGPATH_W) 'spmv/spmv.c'; else $(CYGPATH_W) '$(srcdir)/spmv/spmv.c'; fi`

spmv_kernels.o: spmv/spmv_kernels.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT spmv_kernels.o -MD -MP -MF $(DEPDIR)/spmv_kernels.Tpo -c -o spmv_kernels.o `test -f 'spmv/spmv_kernels.c' || echo '$(srcdir)/'`spmv/spmv_kernels.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/spmv_kernels.Tpo $(DEPDIR)/spmv_kernels.Po
#	$(AM_V_CC)source='spmv/spmv_kernels.c' object='spmv_kernels.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spmv_kernels.o `test -f 'spmv/spmv_kernels.c' || echo '$(srcdir)/'`spmv/spmv_kernels.c

spmv_kernels.obj: spmv/spmv_kernels.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT spmv_kernels.obj -MD -MP -MF $(DEPDIR)/spmv_kernels.Tpo -c -o spmv_kernels.obj `if test -f 'spmv/spmv_kernels.c'; then $(CYGPATH_W) 'spmv/spmv_kernels.c'; else $(CYGPATH_W) '$(srcdir)/spmv/spmv_kernels.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/spmv_kernels.Tpo $(DEPDIR)/spmv_kernels.Po
#	$(AM_V_CC)source='spmv/spmv_kernels.c' object='spmv_kernels.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spmv_kernels.obj `if test -f 'spmv/spmv_kernels.c'; then $(CYGPATH_W) 'spmv/spmv_kernels.c'; else $(CYGPATH_W) '$(srcdir)/spmv/spmv_kernels.c'; fi`

tag_example.o: tag_example/tag_example.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tag_example.o -MD -MP -MF $(DEPDIR)/tag_example.Tpo -c -o tag_example.o `test -f 'tag_example/tag_example.c' || echo '$(srcdir)/'`tag_example/tag_example.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tag_example.Tpo $(DEPDIR)/tag_example.Po
#	$(AM_V_CC)source='tag_example/tag_example.c' object='tag_example.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tag_example.o `test -f 'tag_example/tag_example.c' || echo '$(srcdir)/'`tag_example/tag_example.c

tag_example.obj: tag_example/tag_example.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tag_example.obj -MD -MP -MF $(DEPDIR)/tag_example.Tpo -c -o tag_example.obj `if test -f 'tag_example/tag_example.c'; then $(CYGPATH_W) 'tag_example/tag_example.c'; else $(CYGPATH_W) '$(srcdir)/tag_example/tag_example.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tag_example.Tpo $(DEPDIR)/tag_example.Po
#	$(AM_V_CC)source='tag_example/tag_example.c' object='tag_example.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tag_example.obj `if test -f 'tag_example/tag_example.c'; then $(CYGPATH_W) 'tag_example/tag_example.c'; else $(CYGPATH_W) '$(srcdir)/tag_example/tag_example.c'; fi`

tag_example2.o: tag_example/tag_example2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tag_example2.o -MD -MP -MF $(DEPDIR)/tag_example2.Tpo -c -o tag_example2.o `test -f 'tag_example/tag_example2.c' || echo '$(srcdir)/'`tag_example/tag_example2.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tag_example2.Tpo $(DEPDIR)/tag_example2.Po
#	$(AM_V_CC)source='tag_example/tag_example2.c' object='tag_example2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tag_example2.o `test -f 'tag_example/tag_example2.c' || echo '$(srcdir)/'`tag_example/tag_example2.c

tag_example2.obj: tag_example/tag_example2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tag_example2.obj -MD -MP -MF $(DEPDIR)/tag_example2.Tpo -c -o tag_example2.obj `if test -f 'tag_example/tag_example2.c'; then $(CYGPATH_W) 'tag_example/tag_example2.c'; else $(CYGPATH_W) '$(srcdir)/tag_example/tag_example2.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tag_example2.Tpo $(DEPDIR)/tag_example2.Po
#	$(AM_V_CC)source='tag_example/tag_example2.c' object='tag_example2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tag_example2.obj `if test -f 'tag_example/tag_example2.c'; then $(CYGPATH_W) 'tag_example/tag_example2.c'; else $(CYGPATH_W) '$(srcdir)/tag_example/tag_example2.c'; fi`

tag_example3.o: tag_example/tag_example3.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tag_example3.o -MD -MP -MF $(DEPDIR)/tag_example3.Tpo -c -o tag_example3.o `test -f 'tag_example/tag_example3.c' || echo '$(srcdir)/'`tag_example/tag_example3.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tag_example3.Tpo $(DEPDIR)/tag_example3.Po
#	$(AM_V_CC)source='tag_example/tag_example3.c' object='tag_example3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tag_example3.o `test -f 'tag_example/tag_example3.c' || echo '$(srcdir)/'`tag_example/tag_example3.c

tag_example3.obj: tag_example/tag_example3.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tag_example3.obj -MD -MP -MF $(DEPDIR)/tag_example3.Tpo -c -o tag_example3.obj `if test -f 'tag_example/tag_example3.c'; then $(CYGPATH_W) 'tag_example/tag_example3.c'; else $(CYGPATH_W) '$(srcdir)/tag_example/tag_example3.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tag_example3.Tpo $(DEPDIR)/tag_example3.Po
#	$(AM_V_CC)source='tag_example/tag_example3.c' object='tag_example3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tag_example3.obj `if test -f 'tag_example/tag_example3.c'; then $(CYGPATH_W) 'tag_example/tag_example3.c'; else $(CYGPATH_W) '$(srcdir)/tag_example/tag_example3.c'; fi`

tag_example4.o: tag_example/tag_example4.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tag_example4.o -MD -MP -MF $(DEPDIR)/tag_example4.Tpo -c -o tag_example4.o `test -f 'tag_example/tag_example4.c' || echo '$(srcdir)/'`tag_example/tag_example4.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tag_example4.Tpo $(DEPDIR)/tag_example4.Po
#	$(AM_V_CC)source='tag_example/tag_example4.c' object='tag_example4.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tag_example4.o `test -f 'tag_example/tag_example4.c' || echo '$(srcdir)/'`tag_example/tag_example4.c

tag_example4.obj: tag_example/tag_example4.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tag_example4.obj -MD -MP -MF $(DEPDIR)/tag_example4.Tpo -c -o tag_example4.obj `if test -f 'tag_example/tag_example4.c'; then $(CYGPATH_W) 'tag_example/tag_example4.c'; else $(CYGPATH_W) '$(srcdir)/tag_example/tag_example4.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tag_example4.Tpo $(DEPDIR)/tag_example4.Po
#	$(AM_V_CC)source='tag_example/tag_example4.c' object='tag_example4.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tag_example4.obj `if test -f 'tag_example/tag_example4.c'; then $(CYGPATH_W) 'tag_example/tag_example4.c'; else $(CYGPATH_W) '$(srcdir)/tag_example/tag_example4.c'; fi`

tag_restartable.o: tag_example/tag_restartable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tag_restartable.o -MD -MP -MF $(DEPDIR)/tag_restartable.Tpo -c -o tag_restartable.o `test -f 'tag_example/tag_restartable.c' || echo '$(srcdir)/'`tag_example/tag_restartable.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tag_restartable.Tpo $(DEPDIR)/tag_restartable.Po
#	$(AM_V_CC)source='tag_example/tag_restartable.c' object='tag_restartable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tag_restartable.o `test -f 'tag_example/tag_restartable.c' || echo '$(srcdir)/'`tag_example/tag_restartable.c

tag_restartable.obj: tag_example/tag_restartable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tag_restartable.obj -MD -MP -MF $(DEPDIR)/tag_restartable.Tpo -c -o tag_restartable.obj `if test -f 'tag_example/tag_restartable.c'; then $(CYGPATH_W) 'tag_example/tag_restartable.c'; else $(CYGPATH_W) '$(srcdir)/tag_example/tag_restartable.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tag_restartable.Tpo $(DEPDIR)/tag_restartable.Po
#	$(AM_V_CC)source='tag_example/tag_restartable.c' object='tag_restartable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tag_restartable.obj `if test -f 'tag_example/tag_restartable.c'; then $(CYGPATH_W) 'tag_example/tag_restartable.c'; else $(CYGPATH_W) '$(srcdir)/tag_example/tag_restartable.c'; fi`

worker_list_example.o: worker_collections/worker_list_example.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT worker_list_example.o -MD -MP -MF $(DEPDIR)/worker_list_example.Tpo -c -o worker_list_example.o `test -f 'worker_collections/worker_list_example.c' || echo '$(srcdir)/'`worker_collections/worker_list_example.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/worker_list_example.Tpo $(DEPDIR)/worker_list_example.Po
#	$(AM_V_CC)source='worker_collections/worker_list_example.c' object='worker_list_example.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o worker_list_example.o `test -f 'worker_collections/worker_list_example.c' || echo '$(srcdir)/'`worker_collections/worker_list_example.c

worker_list_example.obj: worker_collections/worker_list_example.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT worker_list_example.obj -MD -MP -MF $(DEPDIR)/worker_list_example.Tpo -c -o worker_list_example.obj `if test -f 'worker_collections/worker_list_example.c'; then $(CYGPATH_W) 'worker_collections/worker_list_example.c'; else $(CYGPATH_W) '$(srcdir)/worker_collections/worker_list_example.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/worker_list_example.Tpo $(DEPDIR)/worker_list_example.Po
#	$(AM_V_CC)source='worker_collections/worker_list_example.c' object='worker_list_example.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o worker_list_example.obj `if test -f 'worker_collections/worker_list_example.c'; then $(CYGPATH_W) 'worker_collections/worker_list_example.c'; else $(CYGPATH_W) '$(srcdir)/worker_collections/worker_list_example.c'; fi`

worker_tree_example.o: worker_collections/worker_tree_example.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT worker_tree_example.o -MD -MP -MF $(DEPDIR)/worker_tree_example.Tpo -c -o worker_tree_example.o `test -f 'worker_collections/worker_tree_example.c' || echo '$(srcdir)/'`worker_collections/worker_tree_example.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/worker_tree_example.Tpo $(DEPDIR)/worker_tree_example.Po
#	$(AM_V_CC)source='worker_collections/worker_tree_example.c' object='worker_tree_example.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o worker_tree_example.o `test -f 'worker_collections/worker_tree_example.c' || echo '$(srcdir)/'`worker_collections/worker_tree_example.c

worker_tree_example.obj: worker_collections/worker_tree_example.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT worker_tree_example.obj -MD -MP -MF $(DEPDIR)/worker_tree_example.Tpo -c -o worker_tree_example.obj `if test -f 'worker_collections/worker_tree_example.c'; then $(CYGPATH_W) 'worker_collections/worker_tree_example.c'; else $(CYGPATH_W) '$(srcdir)/worker_collections/worker_tree_example.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/worker_tree_example.Tpo $(DEPDIR)/worker_tree_example.Po
#	$(AM_V_CC)source='worker_collections/worker_tree_example.c' object='worker_tree_example.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o worker_tree_example.obj `if test -f 'worker_collections/worker_tree_example.c'; then $(CYGPATH_W) 'worker_collections/worker_tree_example.c'; else $(CYGPATH_W) '$(srcdir)/worker_collections/worker_tree_example.c'; fi`

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

add_vectors.o: cpp/add_vectors.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT add_vectors.o -MD -MP -MF $(DEPDIR)/add_vectors.Tpo -c -o add_vectors.o `test -f 'cpp/add_vectors.cpp' || echo '$(srcdir)/'`cpp/add_vectors.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/add_vectors.Tpo $(DEPDIR)/add_vectors.Po
#	$(AM_V_CXX)source='cpp/add_vectors.cpp' object='add_vectors.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o add_vectors.o `test -f 'cpp/add_vectors.cpp' || echo '$(srcdir)/'`cpp/add_vectors.cpp

add_vectors.obj: cpp/add_vectors.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT add_vectors.obj -MD -MP -MF $(DEPDIR)/add_vectors.Tpo -c -o add_vectors.obj `if test -f 'cpp/add_vectors.cpp'; then $(CYGPATH_W) 'cpp/add_vectors.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp/add_vectors.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/add_vectors.Tpo $(DEPDIR)/add_vectors.Po
#	$(AM_V_CXX)source='cpp/add_vectors.cpp' object='add_vectors.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o add_vectors.obj `if test -f 'cpp/add_vectors.cpp'; then $(CYGPATH_W) 'cpp/add_vectors.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp/add_vectors.cpp'; fi`

add_vectors_cpp11.o: cpp/add_vectors_cpp11.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT add_vectors_cpp11.o -MD -MP -MF $(DEPDIR)/add_vectors_cpp11.Tpo -c -o add_vectors_cpp11.o `test -f 'cpp/add_vectors_cpp11.cpp' || echo '$(srcdir)/'`cpp/add_vectors_cpp11.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/add_vectors_cpp11.Tpo $(DEPDIR)/add_vectors_cpp11.Po
#	$(AM_V_CXX)source='cpp/add_vectors_cpp11.cpp' object='add_vectors_cpp11.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o add_vectors_cpp11.o `test -f 'cpp/add_vectors_cpp11.cpp' || echo '$(srcdir)/'`cpp/add_vectors_cpp11.cpp

add_vectors_cpp11.obj: cpp/add_vectors_cpp11.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT add_vectors_cpp11.obj -MD -MP -MF $(DEPDIR)/add_vectors_cpp11.Tpo -c -o add_vectors_cpp11.obj `if test -f 'cpp/add_vectors_cpp11.cpp'; then $(CYGPATH_W) 'cpp/add_vectors_cpp11.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp/add_vectors_cpp11.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/add_vectors_cpp11.Tpo $(DEPDIR)/add_vectors_cpp11.Po
#	$(AM_V_CXX)source='cpp/add_vectors_cpp11.cpp' object='add_vectors_cpp11.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o add_vectors_cpp11.obj `if test -f 'cpp/add_vectors_cpp11.cpp'; then $(CYGPATH_W) 'cpp/add_vectors_cpp11.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp/add_vectors_cpp11.cpp'; fi`

add_vectors_interface.o: cpp/add_vectors_interface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT add_vectors_interface.o -MD -MP -MF $(DEPDIR)/add_vectors_interface.Tpo -c -o add_vectors_interface.o `test -f 'cpp/add_vectors_interface.cpp' || echo '$(srcdir)/'`cpp/add_vectors_interface.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/add_vectors_interface.Tpo $(DEPDIR)/add_vectors_interface.Po
#	$(AM_V_CXX)source='cpp/add_vectors_interface.cpp' object='add_vectors_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o add_vectors_interface.o `test -f 'cpp/add_vectors_interface.cpp' || echo '$(srcdir)/'`cpp/add_vectors_interface.cpp

add_vectors_interface.obj: cpp/add_vectors_interface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT add_vectors_interface.obj -MD -MP -MF $(DEPDIR)/add_vectors_interface.Tpo -c -o add_vectors_interface.obj `if test -f 'cpp/add_vectors_interface.cpp'; then $(CYGPATH_W) 'cpp/add_vectors_interface.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp/add_vectors_interface.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/add_vectors_interface.Tpo $(DEPDIR)/add_vectors_interface.Po
#	$(AM_V_CXX)source='cpp/add_vectors_interface.cpp' object='add_vectors_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o add_vectors_interface.obj `if test -f 'cpp/add_vectors_interface.cpp'; then $(CYGPATH_W) 'cpp/add_vectors_interface.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp/add_vectors_interface.cpp'; fi`

incrementer_cpp.o: cpp/incrementer_cpp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT incrementer_cpp.o -MD -MP -MF $(DEPDIR)/incrementer_cpp.Tpo -c -o incrementer_cpp.o `test -f 'cpp/incrementer_cpp.cpp' || echo '$(srcdir)/'`cpp/incrementer_cpp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/incrementer_cpp.Tpo $(DEPDIR)/incrementer_cpp.Po
#	$(AM_V_CXX)source='cpp/incrementer_cpp.cpp' object='incrementer_cpp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o incrementer_cpp.o `test -f 'cpp/incrementer_cpp.cpp' || echo '$(srcdir)/'`cpp/incrementer_cpp.cpp

incrementer_cpp.obj: cpp/incrementer_cpp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT incrementer_cpp.obj -MD -MP -MF $(DEPDIR)/incrementer_cpp.Tpo -c -o incrementer_cpp.obj `if test -f 'cpp/incrementer_cpp.cpp'; then $(CYGPATH_W) 'cpp/incrementer_cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp/incrementer_cpp.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/incrementer_cpp.Tpo $(DEPDIR)/incrementer_cpp.Po
#	$(AM_V_CXX)source='cpp/incrementer_cpp.cpp' object='incrementer_cpp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o incrementer_cpp.obj `if test -f 'cpp/incrementer_cpp.cpp'; then $(CYGPATH_W) 'cpp/incrementer_cpp.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp/incrementer_cpp.cpp'; fi`

.f90.o:
	$(AM_V_FC)$(FCCOMPILE) -c -o $@ $<

.f90.obj:
	$(AM_V_FC)$(FCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f90.lo:
	$(AM_V_FC)$(LTFCCOMPILE) -c -o $@ $<

mod_types.o: fortran90/mod_types.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o mod_types.o `test -f 'fortran90/mod_types.f90' || echo '$(srcdir)/'`fortran90/mod_types.f90

mod_types.obj: fortran90/mod_types.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o mod_types.obj `if test -f 'fortran90/mod_types.f90'; then $(CYGPATH_W) 'fortran90/mod_types.f90'; else $(CYGPATH_W) '$(srcdir)/fortran90/mod_types.f90'; fi`

starpu_mod.o: $(top_srcdir)/include/starpu_mod.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o starpu_mod.o `test -f '$(top_srcdir)/include/starpu_mod.f90' || echo '$(srcdir)/'`$(top_srcdir)/include/starpu_mod.f90

starpu_mod.obj: $(top_srcdir)/include/starpu_mod.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o starpu_mod.obj `if test -f '$(top_srcdir)/include/starpu_mod.f90'; then $(CYGPATH_W) '$(top_srcdir)/include/starpu_mod.f90'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/include/starpu_mod.f90'; fi`

mod_interface.o: fortran90/mod_interface.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o mod_interface.o `test -f 'fortran90/mod_interface.f90' || echo '$(srcdir)/'`fortran90/mod_interface.f90

mod_interface.obj: fortran90/mod_interface.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o mod_interface.obj `if test -f 'fortran90/mod_interface.f90'; then $(CYGPATH_W) 'fortran90/mod_interface.f90'; else $(CYGPATH_W) '$(srcdir)/fortran90/mod_interface.f90'; fi`

mod_compute.o: fortran90/mod_compute.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o mod_compute.o `test -f 'fortran90/mod_compute.f90' || echo '$(srcdir)/'`fortran90/mod_compute.f90

mod_compute.obj: fortran90/mod_compute.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o mod_compute.obj `if test -f 'fortran90/mod_compute.f90'; then $(CYGPATH_W) 'fortran90/mod_compute.f90'; else $(CYGPATH_W) '$(srcdir)/fortran90/mod_compute.f90'; fi`

f90_example.o: fortran90/f90_example.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o f90_example.o `test -f 'fortran90/f90_example.f90' || echo '$(srcdir)/'`fortran90/f90_example.f90

f90_example.obj: fortran90/f90_example.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o f90_example.obj `if test -f 'fortran90/f90_example.f90'; then $(CYGPATH_W) 'fortran90/f90_example.f90'; else $(CYGPATH_W) '$(srcdir)/fortran90/f90_example.f90'; fi`

nf_dynbuf_cl.o: native_fortran/nf_dynbuf_cl.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_dynbuf_cl.o `test -f 'native_fortran/nf_dynbuf_cl.f90' || echo '$(srcdir)/'`native_fortran/nf_dynbuf_cl.f90

nf_dynbuf_cl.obj: native_fortran/nf_dynbuf_cl.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_dynbuf_cl.obj `if test -f 'native_fortran/nf_dynbuf_cl.f90'; then $(CYGPATH_W) 'native_fortran/nf_dynbuf_cl.f90'; else $(CYGPATH_W) '$(srcdir)/native_fortran/nf_dynbuf_cl.f90'; fi`

fstarpu_mod.o: $(top_srcdir)/include/fstarpu_mod.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o fstarpu_mod.o `test -f '$(top_srcdir)/include/fstarpu_mod.f90' || echo '$(srcdir)/'`$(top_srcdir)/include/fstarpu_mod.f90

fstarpu_mod.obj: $(top_srcdir)/include/fstarpu_mod.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o fstarpu_mod.obj `if test -f '$(top_srcdir)/include/fstarpu_mod.f90'; then $(CYGPATH_W) '$(top_srcdir)/include/fstarpu_mod.f90'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/include/fstarpu_mod.f90'; fi`

nf_dynbuf.o: native_fortran/nf_dynbuf.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_dynbuf.o `test -f 'native_fortran/nf_dynbuf.f90' || echo '$(srcdir)/'`native_fortran/nf_dynbuf.f90

nf_dynbuf.obj: native_fortran/nf_dynbuf.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_dynbuf.obj `if test -f 'native_fortran/nf_dynbuf.f90'; then $(CYGPATH_W) 'native_fortran/nf_dynbuf.f90'; else $(CYGPATH_W) '$(srcdir)/native_fortran/nf_dynbuf.f90'; fi`

nf_types.o: native_fortran/nf_types.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_types.o `test -f 'native_fortran/nf_types.f90' || echo '$(srcdir)/'`native_fortran/nf_types.f90

nf_types.obj: native_fortran/nf_types.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_types.obj `if test -f 'native_fortran/nf_types.f90'; then $(CYGPATH_W) 'native_fortran/nf_types.f90'; else $(CYGPATH_W) '$(srcdir)/native_fortran/nf_types.f90'; fi`

nf_compute.o: native_fortran/nf_compute.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_compute.o `test -f 'native_fortran/nf_compute.f90' || echo '$(srcdir)/'`native_fortran/nf_compute.f90

nf_compute.obj: native_fortran/nf_compute.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_compute.obj `if test -f 'native_fortran/nf_compute.f90'; then $(CYGPATH_W) 'native_fortran/nf_compute.f90'; else $(CYGPATH_W) '$(srcdir)/native_fortran/nf_compute.f90'; fi`

nf_example.o: native_fortran/nf_example.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_example.o `test -f 'native_fortran/nf_example.f90' || echo '$(srcdir)/'`native_fortran/nf_example.f90

nf_example.obj: native_fortran/nf_example.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_example.obj `if test -f 'native_fortran/nf_example.f90'; then $(CYGPATH_W) 'native_fortran/nf_example.f90'; else $(CYGPATH_W) '$(srcdir)/native_fortran/nf_example.f90'; fi`

nf_codelets.o: native_fortran/nf_codelets.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_codelets.o `test -f 'native_fortran/nf_codelets.f90' || echo '$(srcdir)/'`native_fortran/nf_codelets.f90

nf_codelets.obj: native_fortran/nf_codelets.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_codelets.obj `if test -f 'native_fortran/nf_codelets.f90'; then $(CYGPATH_W) 'native_fortran/nf_codelets.f90'; else $(CYGPATH_W) '$(srcdir)/native_fortran/nf_codelets.f90'; fi`

nf_matrix.o: native_fortran/nf_matrix.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_matrix.o `test -f 'native_fortran/nf_matrix.f90' || echo '$(srcdir)/'`native_fortran/nf_matrix.f90

nf_matrix.obj: native_fortran/nf_matrix.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_matrix.obj `if test -f 'native_fortran/nf_matrix.f90'; then $(CYGPATH_W) 'native_fortran/nf_matrix.f90'; else $(CYGPATH_W) '$(srcdir)/native_fortran/nf_matrix.f90'; fi`

nf_partition_cl.o: native_fortran/nf_partition_cl.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_partition_cl.o `test -f 'native_fortran/nf_partition_cl.f90' || echo '$(srcdir)/'`native_fortran/nf_partition_cl.f90

nf_partition_cl.obj: native_fortran/nf_partition_cl.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_partition_cl.obj `if test -f 'native_fortran/nf_partition_cl.f90'; then $(CYGPATH_W) 'native_fortran/nf_partition_cl.f90'; else $(CYGPATH_W) '$(srcdir)/native_fortran/nf_partition_cl.f90'; fi`

nf_partition.o: native_fortran/nf_partition.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_partition.o `test -f 'native_fortran/nf_partition.f90' || echo '$(srcdir)/'`native_fortran/nf_partition.f90

nf_partition.obj: native_fortran/nf_partition.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_partition.obj `if test -f 'native_fortran/nf_partition.f90'; then $(CYGPATH_W) 'native_fortran/nf_partition.f90'; else $(CYGPATH_W) '$(srcdir)/native_fortran/nf_partition.f90'; fi`

nf_sched_ctx_cl.o: native_fortran/nf_sched_ctx_cl.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_sched_ctx_cl.o `test -f 'native_fortran/nf_sched_ctx_cl.f90' || echo '$(srcdir)/'`native_fortran/nf_sched_ctx_cl.f90

nf_sched_ctx_cl.obj: native_fortran/nf_sched_ctx_cl.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_sched_ctx_cl.obj `if test -f 'native_fortran/nf_sched_ctx_cl.f90'; then $(CYGPATH_W) 'native_fortran/nf_sched_ctx_cl.f90'; else $(CYGPATH_W) '$(srcdir)/native_fortran/nf_sched_ctx_cl.f90'; fi`

nf_sched_ctx.o: native_fortran/nf_sched_ctx.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_sched_ctx.o `test -f 'native_fortran/nf_sched_ctx.f90' || echo '$(srcdir)/'`native_fortran/nf_sched_ctx.f90

nf_sched_ctx.obj: native_fortran/nf_sched_ctx.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_sched_ctx.obj `if test -f 'native_fortran/nf_sched_ctx.f90'; then $(CYGPATH_W) 'native_fortran/nf_sched_ctx.f90'; else $(CYGPATH_W) '$(srcdir)/native_fortran/nf_sched_ctx.f90'; fi`

nf_varbuf_cl.o: native_fortran/nf_varbuf_cl.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_varbuf_cl.o `test -f 'native_fortran/nf_varbuf_cl.f90' || echo '$(srcdir)/'`native_fortran/nf_varbuf_cl.f90

nf_varbuf_cl.obj: native_fortran/nf_varbuf_cl.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_varbuf_cl.obj `if test -f 'native_fortran/nf_varbuf_cl.f90'; then $(CYGPATH_W) 'native_fortran/nf_varbuf_cl.f90'; else $(CYGPATH_W) '$(srcdir)/native_fortran/nf_varbuf_cl.f90'; fi`

nf_varbuf.o: native_fortran/nf_varbuf.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_varbuf.o `test -f 'native_fortran/nf_varbuf.f90' || echo '$(srcdir)/'`native_fortran/nf_varbuf.f90

nf_varbuf.obj: native_fortran/nf_varbuf.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_varbuf.obj `if test -f 'native_fortran/nf_varbuf.f90'; then $(CYGPATH_W) 'native_fortran/nf_varbuf.f90'; else $(CYGPATH_W) '$(srcdir)/native_fortran/nf_varbuf.f90'; fi`

nf_vector.o: native_fortran/nf_vector.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_vector.o `test -f 'native_fortran/nf_vector.f90' || echo '$(srcdir)/'`native_fortran/nf_vector.f90

nf_vector.obj: native_fortran/nf_vector.f90
	$(AM_V_FC)$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o nf_vector.obj `if test -f 'native_fortran/nf_vector.f90'; then $(CYGPATH_W) 'native_fortran/nf_vector.f90'; else $(CYGPATH_W) '$(srcdir)/native_fortran/nf_vector.f90'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf api/.libs api/_libs
	-rm -rf axpy/.libs axpy/_libs
	-rm -rf basic_examples/.libs basic_examples/_libs
	-rm -rf binary/.libs binary/_libs
	-rm -rf callback/.libs callback/_libs
	-rm -rf cg/.libs cg/_libs
	-rm -rf cholesky/.libs cholesky/_libs
	-rm -rf cpp/.libs cpp/_libs
	-rm -rf dependency/.libs dependency/_libs
	-rm -rf filters/.libs filters/_libs
	-rm -rf filters/custom_mf/.libs filters/custom_mf/_libs
	-rm -rf fortran/.libs fortran/_libs
	-rm -rf fortran90/.libs fortran90/_libs
	-rm -rf gl_interop/.libs gl_interop/_libs
	-rm -rf heat/.libs heat/_libs
	-rm -rf incrementer/.libs incrementer/_libs
	-rm -rf interface/.libs interface/_libs
	-rm -rf lu/.libs lu/_libs
	-rm -rf mandelbrot/.libs mandelbrot/_libs
	-rm -rf matvecmult/.libs matvecmult/_libs
	-rm -rf mlr/.libs mlr/_libs
	-rm -rf mult/.libs mult/_libs
	-rm -rf native_fortran/.libs native_fortran/_libs
	-rm -rf openmp/.libs openmp/_libs
	-rm -rf pi/.libs pi/_libs
	-rm -rf pipeline/.libs pipeline/_libs
	-rm -rf ppm_downscaler/.libs ppm_downscaler/_libs
	-rm -rf profiling/.libs profiling/_libs
	-rm -rf reductions/.libs reductions/_libs
	-rm -rf sched_ctx/.libs sched_ctx/_libs
	-rm -rf scheduler/.libs scheduler/_libs
	-rm -rf spmd/.libs spmd/_libs
	-rm -rf spmv/.libs spmv/_libs
	-rm -rf tag_example/.libs tag_example/_libs
	-rm -rf worker_collections/.libs worker_collections/_libs
install-nobase_STARPU_OPENCL_DATADATA: $(nobase_STARPU_OPENCL_DATA_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nobase_STARPU_OPENCL_DATA_DATA)'; test -n "$(STARPU_OPENCL_DATAdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(STARPU_OPENCL_DATAdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(STARPU_OPENCL_DATAdir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(STARPU_OPENCL_DATAdir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(STARPU_OPENCL_DATAdir)/$$dir"; }; \
	    echo " $(INSTALL_DATA) $$xfiles '$(DESTDIR)$(STARPU_OPENCL_DATAdir)/$$dir'"; \
	    $(INSTALL_DATA) $$xfiles "$(DESTDIR)$(STARPU_OPENCL_DATAdir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_STARPU_OPENCL_DATADATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_STARPU_OPENCL_DATA_DATA)'; test -n "$(STARPU_OPENCL_DATAdir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(STARPU_OPENCL_DATAdir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
scheduler/schedulers.sh.log: scheduler/schedulers.sh
	@p='scheduler/schedulers.sh'; \
	b='scheduler/schedulers.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
scheduler/schedulers_context.sh.log: scheduler/schedulers_context.sh
	@p='scheduler/schedulers_context.sh'; \
	b='scheduler/schedulers_context.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mult/sgemm.sh.log: mult/sgemm.sh
	@p='mult/sgemm.sh'; \
	b='mult/sgemm.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
heat/heat.sh.log: heat/heat.sh
	@p='heat/heat.sh'; \
	b='heat/heat.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lu/lu.sh.log: lu/lu.sh
	@p='lu/lu.sh'; \
	b='lu/lu.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cholesky/cholesky.sh.log: cholesky/cholesky.sh
	@p='cholesky/cholesky.sh'; \
	b='cholesky/cholesky.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_ctx/prio.log: sched_ctx/prio$(EXEEXT)
	@p='sched_ctx/prio$(EXEEXT)'; \
	b='sched_ctx/prio'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
scheduler/dummy_sched.log: scheduler/dummy_sched$(EXEEXT)
	@p='scheduler/dummy_sched$(EXEEXT)'; \
	b='scheduler/dummy_sched'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
scheduler/dummy_modular_sched.log: scheduler/dummy_modular_sched$(EXEEXT)
	@p='scheduler/dummy_modular_sched$(EXEEXT)'; \
	b='scheduler/dummy_modular_sched'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
worker_collections/worker_list_example.log: worker_collections/worker_list_example$(EXEEXT)
	@p='worker_collections/worker_list_example$(EXEEXT)'; \
	b='worker_collections/worker_list_example'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
api/bcsr_data_interface.log: api/bcsr_data_interface$(EXEEXT)
	@p='api/bcsr_data_interface$(EXEEXT)'; \
	b='api/bcsr_data_interface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
api/block_data_interface.log: api/block_data_interface$(EXEEXT)
	@p='api/block_data_interface$(EXEEXT)'; \
	b='api/block_data_interface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
api/coo_data_interface.log: api/coo_data_interface$(EXEEXT)
	@p='api/coo_data_interface$(EXEEXT)'; \
	b='api/coo_data_interface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
api/csr_data_interface.log: api/csr_data_interface$(EXEEXT)
	@p='api/csr_data_interface$(EXEEXT)'; \
	b='api/csr_data_interface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
api/matrix_data_interface.log: api/matrix_data_interface$(EXEEXT)
	@p='api/matrix_data_interface$(EXEEXT)'; \
	b='api/matrix_data_interface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
api/multiformat_data_interface.log: api/multiformat_data_interface$(EXEEXT)
	@p='api/multiformat_data_interface$(EXEEXT)'; \
	b='api/multiformat_data_interface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
api/variable_data_interface.log: api/variable_data_interface$(EXEEXT)
	@p='api/variable_data_interface$(EXEEXT)'; \
	b='api/variable_data_interface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
api/vector_data_interface.log: api/vector_data_interface$(EXEEXT)
	@p='api/vector_data_interface$(EXEEXT)'; \
	b='api/vector_data_interface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
api/void_data_interface.log: api/void_data_interface$(EXEEXT)
	@p='api/void_data_interface$(EXEEXT)'; \
	b='api/void_data_interface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
basic_examples/hello_world.log: basic_examples/hello_world$(EXEEXT)
	@p='basic_examples/hello_world$(EXEEXT)'; \
	b='basic_examples/hello_world'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
basic_examples/topology.log: basic_examples/topology$(EXEEXT)
	@p='basic_examples/topology$(EXEEXT)'; \
	b='basic_examples/topology'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
basic_examples/vector_scal.log: basic_examples/vector_scal$(EXEEXT)
	@p='basic_examples/vector_scal$(EXEEXT)'; \
	b='basic_examples/vector_scal'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
basic_examples/mult.log: basic_examples/mult$(EXEEXT)
	@p='basic_examples/mult$(EXEEXT)'; \
	b='basic_examples/mult'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
basic_examples/block.log: basic_examples/block$(EXEEXT)
	@p='basic_examples/block$(EXEEXT)'; \
	b='basic_examples/block'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
basic_examples/variable.log: basic_examples/variable$(EXEEXT)
	@p='basic_examples/variable$(EXEEXT)'; \
	b='basic_examples/variable'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
basic_examples/multiformat.log: basic_examples/multiformat$(EXEEXT)
	@p='basic_examples/multiformat$(EXEEXT)'; \
	b='basic_examples/multiformat'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
basic_examples/dynamic_handles.log: basic_examples/dynamic_handles$(EXEEXT)
	@p='basic_examples/dynamic_handles$(EXEEXT)'; \
	b='basic_examples/dynamic_handles'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
basic_examples/task_insert_color.log: basic_examples/task_insert_color$(EXEEXT)
	@p='basic_examples/task_insert_color$(EXEEXT)'; \
	b='basic_examples/task_insert_color'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mlr/mlr.log: mlr/mlr$(EXEEXT)
	@p='mlr/mlr$(EXEEXT)'; \
	b='mlr/mlr'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cpp/incrementer_cpp.log: cpp/incrementer_cpp$(EXEEXT)
	@p='cpp/incrementer_cpp$(EXEEXT)'; \
	b='cpp/incrementer_cpp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cpp/add_vectors.log: cpp/add_vectors$(EXEEXT)
	@p='cpp/add_vectors$(EXEEXT)'; \
	b='cpp/add_vectors'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cpp/add_vectors_interface.log: cpp/add_vectors_interface$(EXEEXT)
	@p='cpp/add_vectors_interface$(EXEEXT)'; \
	b='cpp/add_vectors_interface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
filters/fread.log: filters/fread$(EXEEXT)
	@p='filters/fread$(EXEEXT)'; \
	b='filters/fread'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
filters/fvector.log: filters/fvector$(EXEEXT)
	@p='filters/fvector$(EXEEXT)'; \
	b='filters/fvector'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
filters/fblock.log: filters/fblock$(EXEEXT)
	@p='filters/fblock$(EXEEXT)'; \
	b='filters/fblock'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
filters/fmatrix.log: filters/fmatrix$(EXEEXT)
	@p='filters/fmatrix$(EXEEXT)'; \
	b='filters/fmatrix'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
filters/fmultiple_manual.log: filters/fmultiple_manual$(EXEEXT)
	@p='filters/fmultiple_manual$(EXEEXT)'; \
	b='filters/fmultiple_manual'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
filters/fmultiple_submit.log: filters/fmultiple_submit$(EXEEXT)
	@p='filters/fmultiple_submit$(EXEEXT)'; \
	b='filters/fmultiple_submit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
filters/fmultiple_submit_readonly.log: filters/fmultiple_submit_readonly$(EXEEXT)
	@p='filters/fmultiple_submit_readonly$(EXEEXT)'; \
	b='filters/fmultiple_submit_readonly'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
filters/fmultiple_submit_implicit.log: filters/fmultiple_submit_implicit$(EXEEXT)
	@p='filters/fmultiple_submit_implicit$(EXEEXT)'; \
	b='filters/fmultiple_submit_implicit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
filters/frecursive.log: filters/frecursive$(EXEEXT)
	@p='filters/frecursive$(EXEEXT)'; \
	b='filters/frecursive'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tag_example/tag_example.log: tag_example/tag_example$(EXEEXT)
	@p='tag_example/tag_example$(EXEEXT)'; \
	b='tag_example/tag_example'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tag_example/tag_example2.log: tag_example/tag_example2$(EXEEXT)
	@p='tag_example/tag_example2$(EXEEXT)'; \
	b='tag_example/tag_example2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tag_example/tag_example3.log: tag_example/tag_example3$(EXEEXT)
	@p='tag_example/tag_example3$(EXEEXT)'; \
	b='tag_example/tag_example3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tag_example/tag_example4.log: tag_example/tag_example4$(EXEEXT)
	@p='tag_example/tag_example4$(EXEEXT)'; \
	b='tag_example/tag_example4'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tag_example/tag_restartable.log: tag_example/tag_restartable$(EXEEXT)
	@p='tag_example/tag_restartable$(EXEEXT)'; \
	b='tag_example/tag_restartable'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
spmd/vector_scal_spmd.log: spmd/vector_scal_spmd$(EXEEXT)
	@p='spmd/vector_scal_spmd$(EXEEXT)'; \
	b='spmd/vector_scal_spmd'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
spmv/spmv.log: spmv/spmv$(EXEEXT)
	@p='spmv/spmv$(EXEEXT)'; \
	b='spmv/spmv'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
callback/callback.log: callback/callback$(EXEEXT)
	@p='callback/callback$(EXEEXT)'; \
	b='callback/callback'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
callback/prologue.log: callback/prologue$(EXEEXT)
	@p='callback/prologue$(EXEEXT)'; \
	b='callback/prologue'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
incrementer/incrementer.log: incrementer/incrementer$(EXEEXT)
	@p='incrementer/incrementer$(EXEEXT)'; \
	b='incrementer/incrementer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
binary/binary.log: binary/binary$(EXEEXT)
	@p='binary/binary$(EXEEXT)'; \
	b='binary/binary'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
interface/complex.log: interface/complex$(EXEEXT)
	@p='interface/complex$(EXEEXT)'; \
	b='interface/complex'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
matvecmult/matvecmult.log: matvecmult/matvecmult$(EXEEXT)
	@p='matvecmult/matvecmult$(EXEEXT)'; \
	b='matvecmult/matvecmult'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
profiling/profiling.log: profiling/profiling$(EXEEXT)
	@p='profiling/profiling$(EXEEXT)'; \
	b='profiling/profiling'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
scheduler/heteroprio_test.log: scheduler/heteroprio_test$(EXEEXT)
	@p='scheduler/heteroprio_test$(EXEEXT)'; \
	b='scheduler/heteroprio_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_ctx/sched_ctx.log: sched_ctx/sched_ctx$(EXEEXT)
	@p='sched_ctx/sched_ctx$(EXEEXT)'; \
	b='sched_ctx/sched_ctx'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_ctx/sched_ctx_empty.log: sched_ctx/sched_ctx_empty$(EXEEXT)
	@p='sched_ctx/sched_ctx_empty$(EXEEXT)'; \
	b='sched_ctx/sched_ctx_empty'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_ctx/sched_ctx_delete.log: sched_ctx/sched_ctx_delete$(EXEEXT)
	@p='sched_ctx/sched_ctx_delete$(EXEEXT)'; \
	b='sched_ctx/sched_ctx_delete'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_ctx/two_cpu_contexts.log: sched_ctx/two_cpu_contexts$(EXEEXT)
	@p='sched_ctx/two_cpu_contexts$(EXEEXT)'; \
	b='sched_ctx/two_cpu_contexts'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_ctx/dummy_sched_with_ctx.log: sched_ctx/dummy_sched_with_ctx$(EXEEXT)
	@p='sched_ctx/dummy_sched_with_ctx$(EXEEXT)'; \
	b='sched_ctx/dummy_sched_with_ctx'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
worker_collections/worker_tree_example.log: worker_collections/worker_tree_example$(EXEEXT)
	@p='worker_collections/worker_tree_example$(EXEEXT)'; \
	b='worker_collections/worker_tree_example'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
reductions/dot_product.log: reductions/dot_product$(EXEEXT)
	@p='reductions/dot_product$(EXEEXT)'; \
	b='reductions/dot_product'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
reductions/minmax_reduction.log: reductions/minmax_reduction$(EXEEXT)
	@p='reductions/minmax_reduction$(EXEEXT)'; \
	b='reductions/minmax_reduction'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dependency/task_end_dep.log: dependency/task_end_dep$(EXEEXT)
	@p='dependency/task_end_dep$(EXEEXT)'; \
	b='dependency/task_end_dep'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dependency/task_end_dep_add.log: dependency/task_end_dep_add$(EXEEXT)
	@p='dependency/task_end_dep_add$(EXEEXT)'; \
	b='dependency/task_end_dep_add'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dependency/sequential_consistency.log: dependency/sequential_consistency$(EXEEXT)
	@p='dependency/sequential_consistency$(EXEEXT)'; \
	b='dependency/sequential_consistency'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cpp/add_vectors_cpp11.log: cpp/add_vectors_cpp11$(EXEEXT)
	@p='cpp/add_vectors_cpp11$(EXEEXT)'; \
	b='cpp/add_vectors_cpp11'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
fortran/hello.log: fortran/hello$(EXEEXT)
	@p='fortran/hello$(EXEEXT)'; \
	b='fortran/hello'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
basic_examples/vector_scal_fortran.log: basic_examples/vector_scal_fortran$(EXEEXT)
	@p='basic_examples/vector_scal_fortran$(EXEEXT)'; \
	b='basic_examples/vector_scal_fortran'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
fortran90/f90_example.log: fortran90/f90_example$(EXEEXT)
	@p='fortran90/f90_example$(EXEEXT)'; \
	b='fortran90/f90_example'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
native_fortran/nf_vector.log: native_fortran/nf_vector$(EXEEXT)
	@p='native_fortran/nf_vector$(EXEEXT)'; \
	b='native_fortran/nf_vector'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
native_fortran/nf_matrix.log: native_fortran/nf_matrix$(EXEEXT)
	@p='native_fortran/nf_matrix$(EXEEXT)'; \
	b='native_fortran/nf_matrix'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
native_fortran/nf_example.log: native_fortran/nf_example$(EXEEXT)
	@p='native_fortran/nf_example$(EXEEXT)'; \
	b='native_fortran/nf_example'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
native_fortran/nf_dynbuf.log: native_fortran/nf_dynbuf$(EXEEXT)
	@p='native_fortran/nf_dynbuf$(EXEEXT)'; \
	b='native_fortran/nf_dynbuf'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
native_fortran/nf_varbuf.log: native_fortran/nf_varbuf$(EXEEXT)
	@p='native_fortran/nf_varbuf$(EXEEXT)'; \
	b='native_fortran/nf_varbuf'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
native_fortran/nf_sched_ctx.log: native_fortran/nf_sched_ctx$(EXEEXT)
	@p='native_fortran/nf_sched_ctx$(EXEEXT)'; \
	b='native_fortran/nf_sched_ctx'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
native_fortran/nf_partition.log: native_fortran/nf_partition$(EXEEXT)
	@p='native_fortran/nf_partition$(EXEEXT)'; \
	b='native_fortran/nf_partition'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mult/sgemm.log: mult/sgemm$(EXEEXT)
	@p='mult/sgemm$(EXEEXT)'; \
	b='mult/sgemm'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mult/dgemm.log: mult/dgemm$(EXEEXT)
	@p='mult/dgemm$(EXEEXT)'; \
	b='mult/dgemm'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lu/lu_example_float.log: lu/lu_example_float$(EXEEXT)
	@p='lu/lu_example_float$(EXEEXT)'; \
	b='lu/lu_example_float'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lu/lu_example_double.log: lu/lu_example_double$(EXEEXT)
	@p='lu/lu_example_double$(EXEEXT)'; \
	b='lu/lu_example_double'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lu/lu_implicit_example_float.log: lu/lu_implicit_example_float$(EXEEXT)
	@p='lu/lu_implicit_example_float$(EXEEXT)'; \
	b='lu/lu_implicit_example_float'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lu/lu_implicit_example_double.log: lu/lu_implicit_example_double$(EXEEXT)
	@p='lu/lu_implicit_example_double$(EXEEXT)'; \
	b='lu/lu_implicit_example_double'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cholesky/cholesky_tag.log: cholesky/cholesky_tag$(EXEEXT)
	@p='cholesky/cholesky_tag$(EXEEXT)'; \
	b='cholesky/cholesky_tag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cholesky/cholesky_tile_tag.log: cholesky/cholesky_tile_tag$(EXEEXT)
	@p='cholesky/cholesky_tile_tag$(EXEEXT)'; \
	b='cholesky/cholesky_tile_tag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cholesky/cholesky_implicit.log: cholesky/cholesky_implicit$(EXEEXT)
	@p='cholesky/cholesky_implicit$(EXEEXT)'; \
	b='cholesky/cholesky_implicit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cholesky/cholesky_compil.log: cholesky/cholesky_compil$(EXEEXT)
	@p='cholesky/cholesky_compil$(EXEEXT)'; \
	b='cholesky/cholesky_compil'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
axpy/axpy.log: axpy/axpy$(EXEEXT)
	@p='axpy/axpy$(EXEEXT)'; \
	b='axpy/axpy'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cholesky/cholesky_grain_tag.log: cholesky/cholesky_grain_tag$(EXEEXT)
	@p='cholesky/cholesky_grain_tag$(EXEEXT)'; \
	b='cholesky/cholesky_grain_tag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
heat/heat.log: heat/heat$(EXEEXT)
	@p='heat/heat$(EXEEXT)'; \
	b='heat/heat'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cg/cg.log: cg/cg$(EXEEXT)
	@p='cg/cg$(EXEEXT)'; \
	b='cg/cg'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
pipeline/pipeline.log: pipeline/pipeline$(EXEEXT)
	@p='pipeline/pipeline$(EXEEXT)'; \
	b='pipeline/pipeline'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lu/lu_example_complex_float.log: lu/lu_example_complex_float$(EXEEXT)
	@p='lu/lu_example_complex_float$(EXEEXT)'; \
	b='lu/lu_example_complex_float'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lu/lu_example_complex_double.log: lu/lu_example_complex_double$(EXEEXT)
	@p='lu/lu_example_complex_double$(EXEEXT)'; \
	b='lu/lu_example_complex_double'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lu/lu_implicit_example_complex_float.log: lu/lu_implicit_example_complex_float$(EXEEXT)
	@p='lu/lu_implicit_example_complex_float$(EXEEXT)'; \
	b='lu/lu_implicit_example_complex_float'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lu/lu_implicit_example_complex_double.log: lu/lu_implicit_example_complex_double$(EXEEXT)
	@p='lu/lu_implicit_example_complex_double$(EXEEXT)'; \
	b='lu/lu_implicit_example_complex_double'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
spmv/dw_block_spmv.log: spmv/dw_block_spmv$(EXEEXT)
	@p='spmv/dw_block_spmv$(EXEEXT)'; \
	b='spmv/dw_block_spmv'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
openmp/vector_scal_omp.log: openmp/vector_scal_omp$(EXEEXT)
	@p='openmp/vector_scal_omp$(EXEEXT)'; \
	b='openmp/vector_scal_omp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_ctx/sched_ctx_without_sched_policy.log: sched_ctx/sched_ctx_without_sched_policy$(EXEEXT)
	@p='sched_ctx/sched_ctx_without_sched_policy$(EXEEXT)'; \
	b='sched_ctx/sched_ctx_without_sched_policy'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_ctx/nested_sched_ctxs.log: sched_ctx/nested_sched_ctxs$(EXEEXT)
	@p='sched_ctx/nested_sched_ctxs$(EXEEXT)'; \
	b='sched_ctx/nested_sched_ctxs'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_ctx/sched_ctx_without_sched_policy_awake.log: sched_ctx/sched_ctx_without_sched_policy_awake$(EXEEXT)
	@p='sched_ctx/sched_ctx_without_sched_policy_awake$(EXEEXT)'; \
	b='sched_ctx/sched_ctx_without_sched_policy_awake'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_ctx/parallel_tasks_reuse_handle.log: sched_ctx/parallel_tasks_reuse_handle$(EXEEXT)
	@p='sched_ctx/parallel_tasks_reuse_handle$(EXEEXT)'; \
	b='sched_ctx/parallel_tasks_reuse_handle'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_ctx/parallel_code.log: sched_ctx/parallel_code$(EXEEXT)
	@p='sched_ctx/parallel_code$(EXEEXT)'; \
	b='sched_ctx/parallel_code'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_ctx/parallel_tasks_with_cluster_api.log: sched_ctx/parallel_tasks_with_cluster_api$(EXEEXT)
	@p='sched_ctx/parallel_tasks_with_cluster_api$(EXEEXT)'; \
	b='sched_ctx/parallel_tasks_with_cluster_api'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_ctx/gpu_partition.log: sched_ctx/gpu_partition$(EXEEXT)
	@p='sched_ctx/gpu_partition$(EXEEXT)'; \
	b='sched_ctx/gpu_partition'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(examplebindir)" "$(DESTDIR)$(STARPU_OPENCL_DATAdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f api/$(am__dirstamp)
	-rm -f axpy/$(am__dirstamp)
	-rm -f basic_examples/$(DEPDIR)/$(am__dirstamp)
	-rm -f basic_examples/$(am__dirstamp)
	-rm -f binary/$(am__dirstamp)
	-rm -f callback/$(am__dirstamp)
	-rm -f cg/$(am__dirstamp)
	-rm -f cholesky/$(am__dirstamp)
	-rm -f cpp/$(am__dirstamp)
	-rm -f dependency/$(am__dirstamp)
	-rm -f filters/$(DEPDIR)/$(am__dirstamp)
	-rm -f filters/$(am__dirstamp)
	-rm -f filters/custom_mf/$(DEPDIR)/$(am__dirstamp)
	-rm -f filters/custom_mf/$(am__dirstamp)
	-rm -f fortran/$(am__dirstamp)
	-rm -f fortran90/$(am__dirstamp)
	-rm -f gl_interop/$(am__dirstamp)
	-rm -f heat/$(am__dirstamp)
	-rm -f incrementer/$(DEPDIR)/$(am__dirstamp)
	-rm -f incrementer/$(am__dirstamp)
	-rm -f interface/$(DEPDIR)/$(am__dirstamp)
	-rm -f interface/$(am__dirstamp)
	-rm -f lu/$(am__dirstamp)
	-rm -f mandelbrot/$(am__dirstamp)
	-rm -f matvecmult/$(am__dirstamp)
	-rm -f mlr/$(am__dirstamp)
	-rm -f mult/$(am__dirstamp)
	-rm -f native_fortran/$(am__dirstamp)
	-rm -f openmp/$(am__dirstamp)
	-rm -f pi/$(DEPDIR)/$(am__dirstamp)
	-rm -f pi/$(am__dirstamp)
	-rm -f pi/SobolQRNG/$(DEPDIR)/$(am__dirstamp)
	-rm -f pi/SobolQRNG/$(am__dirstamp)
	-rm -f pipeline/$(am__dirstamp)
	-rm -f ppm_downscaler/$(am__dirstamp)
	-rm -f profiling/$(am__dirstamp)
	-rm -f reductions/$(DEPDIR)/$(am__dirstamp)
	-rm -f reductions/$(am__dirstamp)
	-rm -f sched_ctx/$(DEPDIR)/$(am__dirstamp)
	-rm -f sched_ctx/$(am__dirstamp)
	-rm -f scheduler/$(am__dirstamp)
	-rm -f spmd/$(am__dirstamp)
	-rm -f spmv/$(DEPDIR)/$(am__dirstamp)
	-rm -f spmv/$(am__dirstamp)
	-rm -f tag_example/$(am__dirstamp)
	-rm -f worker_collections/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-examplebinPROGRAMS clean-generic \
	clean-libtool clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
		-rm -f ./$(DEPDIR)/add_vectors.Po
	-rm -f ./$(DEPDIR)/add_vectors_cpp11.Po
	-rm -f ./$(DEPDIR)/add_vectors_interface.Po
	-rm -f ./$(DEPDIR)/axpy.Po
	-rm -f ./$(DEPDIR)/axpy_opencl.Po
	-rm -f ./$(DEPDIR)/bcsr_data_interface.Po
	-rm -f ./$(DEPDIR)/binary.Po
	-rm -f ./$(DEPDIR)/blas.Po
	-rm -f ./$(DEPDIR)/blas_complex.Po
	-rm -f ./$(DEPDIR)/block.Po
	-rm -f ./$(DEPDIR)/block_cpu.Po
	-rm -f ./$(DEPDIR)/block_data_interface.Po
	-rm -f ./$(DEPDIR)/block_opencl.Po
	-rm -f ./$(DEPDIR)/callback.Po
	-rm -f ./$(DEPDIR)/cg.Po
	-rm -f ./$(DEPDIR)/cg_kernels.Po
	-rm -f ./$(DEPDIR)/cholesky_compil.Po
	-rm -f ./$(DEPDIR)/cholesky_grain_tag.Po
	-rm -f ./$(DEPDIR)/cholesky_implicit.Po
	-rm -f ./$(DEPDIR)/cholesky_kernels.Po
	-rm -f ./$(DEPDIR)/cholesky_models.Po
	-rm -f ./$(DEPDIR)/cholesky_tag.Po
	-rm -f ./$(DEPDIR)/cholesky_tile_tag.Po
	-rm -f ./$(DEPDIR)/clu.Po
	-rm -f ./$(DEPDIR)/clu_implicit.Po
	-rm -f ./$(DEPDIR)/clu_implicit_pivot.Po
	-rm -f ./$(DEPDIR)/clu_kernels.Po
	-rm -f ./$(DEPDIR)/clu_pivot.Po
	-rm -f ./$(DEPDIR)/complex.Po
	-rm -f ./$(DEPDIR)/complex_filters.Po
	-rm -f ./$(DEPDIR)/complex_interface.Po
	-rm -f ./$(DEPDIR)/complex_kernels_opencl.Po
	-rm -f ./$(DEPDIR)/conversion_opencl.Po
	-rm -f ./$(DEPDIR)/coo_data_interface.Po
	-rm -f ./$(DEPDIR)/csr_data_interface.Po
	-rm -f ./$(DEPDIR)/custom_conversion_codelets.Po
	-rm -f ./$(DEPDIR)/custom_interface.Po
	-rm -f ./$(DEPDIR)/custom_mf_filter.Po
	-rm -f ./$(DEPDIR)/custom_opencl.Po
	-rm -f ./$(DEPDIR)/dgemm.Po
	-rm -f ./$(DEPDIR)/dlu.Po
	-rm -f ./$(DEPDIR)/dlu_implicit.Po
	-rm -f ./$(DEPDIR)/dlu_implicit_pivot.Po
	-rm -f ./$(DEPDIR)/dlu_kernels.Po
	-rm -f ./$(DEPDIR)/dlu_pivot.Po
	-rm -f ./$(DEPDIR)/dot_product.Po
	-rm -f ./$(DEPDIR)/dummy_modular_sched.Po
	-rm -f ./$(DEPDIR)/dummy_sched.Po
	-rm -f ./$(DEPDIR)/dummy_sched_with_ctx.Po
	-rm -f ./$(DEPDIR)/dw_block_spmv.Po
	-rm -f ./$(DEPDIR)/dw_block_spmv_kernels.Po
	-rm -f ./$(DEPDIR)/dw_factolu.Po
	-rm -f ./$(DEPDIR)/dw_factolu_grain.Po
	-rm -f ./$(DEPDIR)/dw_factolu_kernels.Po
	-rm -f ./$(DEPDIR)/dw_factolu_tag.Po
	-rm -f ./$(DEPDIR)/dw_sparse_cg.Po
	-rm -f ./$(DEPDIR)/dw_sparse_cg_kernels.Po
	-rm -f ./$(DEPDIR)/dynamic_handles.Po
	-rm -f ./$(DEPDIR)/fblock.Po
	-rm -f ./$(DEPDIR)/fblock_cpu.Po
	-rm -f ./$(DEPDIR)/fblock_opencl.Po
	-rm -f ./$(DEPDIR)/fmatrix.Po
	-rm -f ./$(DEPDIR)/fmultiple_manual.Po
	-rm -f ./$(DEPDIR)/fmultiple_submit.Po
	-rm -f ./$(DEPDIR)/fmultiple_submit_implicit.Po
	-rm -f ./$(DEPDIR)/fmultiple_submit_readonly.Po
	-rm -f ./$(DEPDIR)/fread.Po
	-rm -f ./$(DEPDIR)/frecursive.Po
	-rm -f ./$(DEPDIR)/fvector.Po
	-rm -f ./$(DEPDIR)/gl_interop.Po
	-rm -f ./$(DEPDIR)/gl_interop_idle.Po
	-rm -f ./$(DEPDIR)/gpu_partition.Po
	-rm -f ./$(DEPDIR)/heat.Po
	-rm -f ./$(DEPDIR)/heat_display.Po
	-rm -f ./$(DEPDIR)/hello_c.Po
	-rm -f ./$(DEPDIR)/hello_world.Po
	-rm -f ./$(DEPDIR)/heteroprio_test.Po
	-rm -f ./$(DEPDIR)/incrementer.Po
	-rm -f ./$(DEPDIR)/incrementer_cpp.Po
	-rm -f ./$(DEPDIR)/incrementer_kernels_opencl.Po
	-rm -f ./$(DEPDIR)/loader-loader.Po
	-rm -f ./$(DEPDIR)/lu_example_complex_double.Po
	-rm -f ./$(DEPDIR)/lu_example_complex_float.Po
	-rm -f ./$(DEPDIR)/lu_example_double.Po
	-rm -f ./$(DEPDIR)/lu_example_float.Po
	-rm -f ./$(DEPDIR)/lu_kernels_model.Po
	-rm -f ./$(DEPDIR)/mandelbrot_mandelbrot-mandelbrot.Po
	-rm -f ./$(DEPDIR)/marshalling.Po
	-rm -f ./$(DEPDIR)/matrix_data_interface.Po
	-rm -f ./$(DEPDIR)/matvecmult.Po
	-rm -f ./$(DEPDIR)/minmax_reduction.Po
	-rm -f ./$(DEPDIR)/mlr.Po
	-rm -f ./$(DEPDIR)/mm_to_bcsr.Po
	-rm -f ./$(DEPDIR)/mmio.Po
	-rm -f ./$(DEPDIR)/mult.Po
	-rm -f ./$(DEPDIR)/multiformat.Po
	-rm -f ./$(DEPDIR)/multiformat_conversion_codelets.Po
	-rm -f ./$(DEPDIR)/multiformat_conversion_codelets_opencl.Po
	-rm -f ./$(DEPDIR)/multiformat_data_interface.Po
	-rm -f ./$(DEPDIR)/multiformat_opencl.Po
	-rm -f ./$(DEPDIR)/openmp_vector_scal_omp-vector_scal_omp.Po
	-rm -f ./$(DEPDIR)/parallel_tasks_with_cluster_api.Po
	-rm -f ./$(DEPDIR)/pi.Po
	-rm -f ./$(DEPDIR)/pi_redux.Po
	-rm -f ./$(DEPDIR)/pipeline.Po
	-rm -f ./$(DEPDIR)/ppm_downscaler.Po
	-rm -f ./$(DEPDIR)/prio.Po
	-rm -f ./$(DEPDIR)/profiling.Po
	-rm -f ./$(DEPDIR)/prologue.Po
	-rm -f ./$(DEPDIR)/sched_ctx.Po
	-rm -f ./$(DEPDIR)/sched_ctx_delete.Po
	-rm -f ./$(DEPDIR)/sched_ctx_empty.Po
	-rm -f ./$(DEPDIR)/sched_ctx_nested_sched_ctxs-nested_sched_ctxs.Po
	-rm -f ./$(DEPDIR)/sched_ctx_parallel_code-parallel_code.Po
	-rm -f ./$(DEPDIR)/sched_ctx_parallel_tasks_reuse_handle-parallel_tasks_reuse_handle.Po
	-rm -f ./$(DEPDIR)/sched_ctx_sched_ctx_without_sched_policy-sched_ctx_without_sched_policy.Po
	-rm -f ./$(DEPDIR)/sched_ctx_utils.Po
	-rm -f ./$(DEPDIR)/sched_ctx_without_sched_policy_awake.Po
	-rm -f ./$(DEPDIR)/sequential_consistency.Po
	-rm -f ./$(DEPDIR)/sgemm.Po
	-rm -f ./$(DEPDIR)/shadow.Po
	-rm -f ./$(DEPDIR)/shadow2d.Po
	-rm -f ./$(DEPDIR)/shadow3d.Po
	-rm -f ./$(DEPDIR)/slu.Po
	-rm -f ./$(DEPDIR)/slu_implicit.Po
	-rm -f ./$(DEPDIR)/slu_implicit_pivot.Po
	-rm -f ./$(DEPDIR)/slu_kernels.Po
	-rm -f ./$(DEPDIR)/slu_pivot.Po
	-rm -f ./$(DEPDIR)/sobol_gold.Po
	-rm -f ./$(DEPDIR)/sobol_primitives.Po
	-rm -f ./$(DEPDIR)/spmv.Po
	-rm -f ./$(DEPDIR)/spmv_kernels.Po
	-rm -f ./$(DEPDIR)/tag_example.Po
	-rm -f ./$(DEPDIR)/tag_example2.Po
	-rm -f ./$(DEPDIR)/tag_example3.Po
	-rm -f ./$(DEPDIR)/tag_example4.Po
	-rm -f ./$(DEPDIR)/tag_restartable.Po
	-rm -f ./$(DEPDIR)/task_end_dep.Po
	-rm -f ./$(DEPDIR)/task_end_dep_add.Po
	-rm -f ./$(DEPDIR)/task_insert_color.Po
	-rm -f ./$(DEPDIR)/topology.Po
	-rm -f ./$(DEPDIR)/two_cpu_contexts.Po
	-rm -f ./$(DEPDIR)/variable.Po
	-rm -f ./$(DEPDIR)/variable_data_interface.Po
	-rm -f ./$(DEPDIR)/variable_kernels_cpu.Po
	-rm -f ./$(DEPDIR)/variable_kernels_opencl.Po
	-rm -f ./$(DEPDIR)/vector_data_interface.Po
	-rm -f ./$(DEPDIR)/vector_scal.Po
	-rm -f ./$(DEPDIR)/vector_scal_c.Po
	-rm -f ./$(DEPDIR)/vector_scal_cpu.Po
	-rm -f ./$(DEPDIR)/vector_scal_opencl.Po
	-rm -f ./$(DEPDIR)/vector_scal_spmd.Po
	-rm -f ./$(DEPDIR)/void_data_interface.Po
	-rm -f ./$(DEPDIR)/worker_list_example.Po
	-rm -f ./$(DEPDIR)/worker_tree_example.Po
	-rm -f ./$(DEPDIR)/yuv_downscaler.Po
	-rm -f ./$(DEPDIR)/zlu.Po
	-rm -f ./$(DEPDIR)/zlu_implicit.Po
	-rm -f ./$(DEPDIR)/zlu_implicit_pivot.Po
	-rm -f ./$(DEPDIR)/zlu_kernels.Po
	-rm -f ./$(DEPDIR)/zlu_pivot.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-examplebinPROGRAMS \
	install-nobase_STARPU_OPENCL_DATADATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
		-rm -f ./$(DEPDIR)/add_vectors.Po
	-rm -f ./$(DEPDIR)/add_vectors_cpp11.Po
	-rm -f ./$(DEPDIR)/add_vectors_interface.Po
	-rm -f ./$(DEPDIR)/axpy.Po
	-rm -f ./$(DEPDIR)/axpy_opencl.Po
	-rm -f ./$(DEPDIR)/bcsr_data_interface.Po
	-rm -f ./$(DEPDIR)/binary.Po
	-rm -f ./$(DEPDIR)/blas.Po
	-rm -f ./$(DEPDIR)/blas_complex.Po
	-rm -f ./$(DEPDIR)/block.Po
	-rm -f ./$(DEPDIR)/block_cpu.Po
	-rm -f ./$(DEPDIR)/block_data_interface.Po
	-rm -f ./$(DEPDIR)/block_opencl.Po
	-rm -f ./$(DEPDIR)/callback.Po
	-rm -f ./$(DEPDIR)/cg.Po
	-rm -f ./$(DEPDIR)/cg_kernels.Po
	-rm -f ./$(DEPDIR)/cholesky_compil.Po
	-rm -f ./$(DEPDIR)/cholesky_grain_tag.Po
	-rm -f ./$(DEPDIR)/cholesky_implicit.Po
	-rm -f ./$(DEPDIR)/cholesky_kernels.Po
	-rm -f ./$(DEPDIR)/cholesky_models.Po
	-rm -f ./$(DEPDIR)/cholesky_tag.Po
	-rm -f ./$(DEPDIR)/cholesky_tile_tag.Po
	-rm -f ./$(DEPDIR)/clu.Po
	-rm -f ./$(DEPDIR)/clu_implicit.Po
	-rm -f ./$(DEPDIR)/clu_implicit_pivot.Po
	-rm -f ./$(DEPDIR)/clu_kernels.Po
	-rm -f ./$(DEPDIR)/clu_pivot.Po
	-rm -f ./$(DEPDIR)/complex.Po
	-rm -f ./$(DEPDIR)/complex_filters.Po
	-rm -f ./$(DEPDIR)/complex_interface.Po
	-rm -f ./$(DEPDIR)/complex_kernels_opencl.Po
	-rm -f ./$(DEPDIR)/conversion_opencl.Po
	-rm -f ./$(DEPDIR)/coo_data_interface.Po
	-rm -f ./$(DEPDIR)/csr_data_interface.Po
	-rm -f ./$(DEPDIR)/custom_conversion_codelets.Po
	-rm -f ./$(DEPDIR)/custom_interface.Po
	-rm -f ./$(DEPDIR)/custom_mf_filter.Po
	-rm -f ./$(DEPDIR)/custom_opencl.Po
	-rm -f ./$(DEPDIR)/dgemm.Po
	-rm -f ./$(DEPDIR)/dlu.Po
	-rm -f ./$(DEPDIR)/dlu_implicit.Po
	-rm -f ./$(DEPDIR)/dlu_implicit_pivot.Po
	-rm -f ./$(DEPDIR)/dlu_kernels.Po
	-rm -f ./$(DEPDIR)/dlu_pivot.Po
	-rm -f ./$(DEPDIR)/dot_product.Po
	-rm -f ./$(DEPDIR)/dummy_modular_sched.Po
	-rm -f ./$(DEPDIR)/dummy_sched.Po
	-rm -f ./$(DEPDIR)/dummy_sched_with_ctx.Po
	-rm -f ./$(DEPDIR)/dw_block_spmv.Po
	-rm -f ./$(DEPDIR)/dw_block_spmv_kernels.Po
	-rm -f ./$(DEPDIR)/dw_factolu.Po
	-rm -f ./$(DEPDIR)/dw_factolu_grain.Po
	-rm -f ./$(DEPDIR)/dw_factolu_kernels.Po
	-rm -f ./$(DEPDIR)/dw_factolu_tag.Po
	-rm -f ./$(DEPDIR)/dw_sparse_cg.Po
	-rm -f ./$(DEPDIR)/dw_sparse_cg_kernels.Po
	-rm -f ./$(DEPDIR)/dynamic_handles.Po
	-rm -f ./$(DEPDIR)/fblock.Po
	-rm -f ./$(DEPDIR)/fblock_cpu.Po
	-rm -f ./$(DEPDIR)/fblock_opencl.Po
	-rm -f ./$(DEPDIR)/fmatrix.Po
	-rm -f ./$(DEPDIR)/fmultiple_manual.Po
	-rm -f ./$(DEPDIR)/fmultiple_submit.Po
	-rm -f ./$(DEPDIR)/fmultiple_submit_implicit.Po
	-rm -f ./$(DEPDIR)/fmultiple_submit_readonly.Po
	-rm -f ./$(DEPDIR)/fread.Po
	-rm -f ./$(DEPDIR)/frecursive.Po
	-rm -f ./$(DEPDIR)/fvector.Po
	-rm -f ./$(DEPDIR)/gl_interop.Po
	-rm -f ./$(DEPDIR)/gl_interop_idle.Po
	-rm -f ./$(DEPDIR)/gpu_partition.Po
	-rm -f ./$(DEPDIR)/heat.Po
	-rm -f ./$(DEPDIR)/heat_display.Po
	-rm -f ./$(DEPDIR)/hello_c.Po
	-rm -f ./$(DEPDIR)/hello_world.Po
	-rm -f ./$(DEPDIR)/heteroprio_test.Po
	-rm -f ./$(DEPDIR)/incrementer.Po
	-rm -f ./$(DEPDIR)/incrementer_cpp.Po
	-rm -f ./$(DEPDIR)/incrementer_kernels_opencl.Po
	-rm -f ./$(DEPDIR)/loader-loader.Po
	-rm -f ./$(DEPDIR)/lu_example_complex_double.Po
	-rm -f ./$(DEPDIR)/lu_example_complex_float.Po
	-rm -f ./$(DEPDIR)/lu_example_double.Po
	-rm -f ./$(DEPDIR)/lu_example_float.Po
	-rm -f ./$(DEPDIR)/lu_kernels_model.Po
	-rm -f ./$(DEPDIR)/mandelbrot_mandelbrot-mandelbrot.Po
	-rm -f ./$(DEPDIR)/marshalling.Po
	-rm -f ./$(DEPDIR)/matrix_data_interface.Po
	-rm -f ./$(DEPDIR)/matvecmult.Po
	-rm -f ./$(DEPDIR)/minmax_reduction.Po
	-rm -f ./$(DEPDIR)/mlr.Po
	-rm -f ./$(DEPDIR)/mm_to_bcsr.Po
	-rm -f ./$(DEPDIR)/mmio.Po
	-rm -f ./$(DEPDIR)/mult.Po
	-rm -f ./$(DEPDIR)/multiformat.Po
	-rm -f ./$(DEPDIR)/multiformat_conversion_codelets.Po
	-rm -f ./$(DEPDIR)/multiformat_conversion_codelets_opencl.Po
	-rm -f ./$(DEPDIR)/multiformat_data_interface.Po
	-rm -f ./$(DEPDIR)/multiformat_opencl.Po
	-rm -f ./$(DEPDIR)/openmp_vector_scal_omp-vector_scal_omp.Po
	-rm -f ./$(DEPDIR)/parallel_tasks_with_cluster_api.Po
	-rm -f ./$(DEPDIR)/pi.Po
	-rm -f ./$(DEPDIR)/pi_redux.Po
	-rm -f ./$(DEPDIR)/pipeline.Po
	-rm -f ./$(DEPDIR)/ppm_downscaler.Po
	-rm -f ./$(DEPDIR)/prio.Po
	-rm -f ./$(DEPDIR)/profiling.Po
	-rm -f ./$(DEPDIR)/prologue.Po
	-rm -f ./$(DEPDIR)/sched_ctx.Po
	-rm -f ./$(DEPDIR)/sched_ctx_delete.Po
	-rm -f ./$(DEPDIR)/sched_ctx_empty.Po
	-rm -f ./$(DEPDIR)/sched_ctx_nested_sched_ctxs-nested_sched_ctxs.Po
	-rm -f ./$(DEPDIR)/sched_ctx_parallel_code-parallel_code.Po
	-rm -f ./$(DEPDIR)/sched_ctx_parallel_tasks_reuse_handle-parallel_tasks_reuse_handle.Po
	-rm -f ./$(DEPDIR)/sched_ctx_sched_ctx_without_sched_policy-sched_ctx_without_sched_policy.Po
	-rm -f ./$(DEPDIR)/sched_ctx_utils.Po
	-rm -f ./$(DEPDIR)/sched_ctx_without_sched_policy_awake.Po
	-rm -f ./$(DEPDIR)/sequential_consistency.Po
	-rm -f ./$(DEPDIR)/sgemm.Po
	-rm -f ./$(DEPDIR)/shadow.Po
	-rm -f ./$(DEPDIR)/shadow2d.Po
	-rm -f ./$(DEPDIR)/shadow3d.Po
	-rm -f ./$(DEPDIR)/slu.Po
	-rm -f ./$(DEPDIR)/slu_implicit.Po
	-rm -f ./$(DEPDIR)/slu_implicit_pivot.Po
	-rm -f ./$(DEPDIR)/slu_kernels.Po
	-rm -f ./$(DEPDIR)/slu_pivot.Po
	-rm -f ./$(DEPDIR)/sobol_gold.Po
	-rm -f ./$(DEPDIR)/sobol_primitives.Po
	-rm -f ./$(DEPDIR)/spmv.Po
	-rm -f ./$(DEPDIR)/spmv_kernels.Po
	-rm -f ./$(DEPDIR)/tag_example.Po
	-rm -f ./$(DEPDIR)/tag_example2.Po
	-rm -f ./$(DEPDIR)/tag_example3.Po
	-rm -f ./$(DEPDIR)/tag_example4.Po
	-rm -f ./$(DEPDIR)/tag_restartable.Po
	-rm -f ./$(DEPDIR)/task_end_dep.Po
	-rm -f ./$(DEPDIR)/task_end_dep_add.Po
	-rm -f ./$(DEPDIR)/task_insert_color.Po
	-rm -f ./$(DEPDIR)/topology.Po
	-rm -f ./$(DEPDIR)/two_cpu_contexts.Po
	-rm -f ./$(DEPDIR)/variable.Po
	-rm -f ./$(DEPDIR)/variable_data_interface.Po
	-rm -f ./$(DEPDIR)/variable_kernels_cpu.Po
	-rm -f ./$(DEPDIR)/variable_kernels_opencl.Po
	-rm -f ./$(DEPDIR)/vector_data_interface.Po
	-rm -f ./$(DEPDIR)/vector_scal.Po
	-rm -f ./$(DEPDIR)/vector_scal_c.Po
	-rm -f ./$(DEPDIR)/vector_scal_cpu.Po
	-rm -f ./$(DEPDIR)/vector_scal_opencl.Po
	-rm -f ./$(DEPDIR)/vector_scal_spmd.Po
	-rm -f ./$(DEPDIR)/void_data_interface.Po
	-rm -f ./$(DEPDIR)/worker_list_example.Po
	-rm -f ./$(DEPDIR)/worker_tree_example.Po
	-rm -f ./$(DEPDIR)/yuv_downscaler.Po
	-rm -f ./$(DEPDIR)/zlu.Po
	-rm -f ./$(DEPDIR)/zlu_implicit.Po
	-rm -f ./$(DEPDIR)/zlu_implicit_pivot.Po
	-rm -f ./$(DEPDIR)/zlu_kernels.Po
	-rm -f ./$(DEPDIR)/zlu_pivot.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-examplebinPROGRAMS \
	uninstall-nobase_STARPU_OPENCL_DATADATA

.MAKE: $(am__recursive_targets) all check check-am install install-am \
	install-exec install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--depfiles check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-examplebinPROGRAMS clean-generic \
	clean-libtool clean-noinstPROGRAMS cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am \
	install-examplebinPROGRAMS install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-nobase_STARPU_OPENCL_DATADATA install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am uninstall-examplebinPROGRAMS \
	uninstall-nobase_STARPU_OPENCL_DATADATA

.PRECIOUS: Makefile


showfailed:
	@! grep "^FAIL " $(TEST_LOGS) /dev/null
	@! grep -l "ERROR: AddressSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -l "WARNING: AddressSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -l "ERROR: ThreadSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -l "WARNING: ThreadSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -l "ERROR: LeakSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -l "WARNING: LeakSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -l " runtime error: " $(TEST_LOGS) /dev/null
	@RET=0 ; \
	for i in $(SUBDIRS) ; do \
		make -C $$i showfailed || RET=1 ; \
	done ; \
	exit $$RET

showcheck:
	-cat $(TEST_LOGS) /dev/null
	@! grep -q "ERROR: AddressSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -q "WARNING: AddressSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -q "ERROR: ThreadSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -q "WARNING: ThreadSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -q "ERROR: LeakSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -q "WARNING: LeakSanitizer: " $(TEST_LOGS) /dev/null
	@! grep -q " runtime error: " $(TEST_LOGS) /dev/null
	RET=0 ; \
	for i in $(SUBDIRS) ; do \
		make -C $$i showcheck || RET=1 ; \
	done ; \
	exit $$RET

showsuite:
	-cat $(TEST_SUITE_LOG) /dev/null
	@! grep -q "ERROR: AddressSanitizer: " $(TEST_SUITE_LOG) /dev/null
	@! grep -q "WARNING: AddressSanitizer: " $(TEST_SUITE_LOG) /dev/null
	@! grep -q "ERROR: ThreadSanitizer: " $(TEST_SUITE_LOG) /dev/null
	@! grep -q "WARNING: ThreadSanitizer: " $(TEST_SUITE_LOG) /dev/null
	@! grep -q "ERROR: LeakSanitizer: " $(TEST_SUITE_LOG) /dev/null
	@! grep -q "WARNING: LeakSanitizer: " $(TEST_SUITE_LOG) /dev/null
	@! grep -q " runtime error: " $(TEST_SUITE_LOG) /dev/null
	RET=0 ; \
	for i in $(SUBDIRS) ; do \
		make -C $$i showsuite || RET=1 ; \
	done ; \
	exit $$RET
#export STARPU_PERF_MODEL_DIR
#export STARPU_HOSTNAME
#export MALLOC_PERTURB_

#env:
#	@echo export STARPU_PERF_MODEL_DIR=$(STARPU_PERF_MODEL_DIR)
#	@echo export STARPU_HOSTNAME=$(STARPU_HOSTNAME)
#	@echo export MALLOC_PERTURB_=$(MALLOC_PERTURB_)
#export STARPU_SIMGRID
#export STARPU_QUICK_CHECK
#export STARPU_LONG_CHECK
#.cu.o:
#	@$(MKDIR_P) `dirname $@`
#	$(V_mynvcc)grep 'extern *"C" *void *' $< | sed -ne 's/extern *"C" *void *\([a-zA-Z0-9_]*\) *(.*/void \1(void) {}/p' | $(CC) -x c - -o $@ -c

.cu.o:
	$(V_nvcc) $(NVCC) $< -c -o $@ $(NVCCFLAGS)

#.icc.o:
#	$(V_icc) $(ICC) -x c $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) $< -c -o $@

# Fortran90 example
# - list explicit dependences to control proper module files generation
# - the overriding rule fully disables the corresponing default rule, thus
#   the default rule body must be copied entirely
#mod_types.mod: mod_types.o
#mod_compute.mod: mod_compute.o
#mod_interface.mod: mod_interface.o
#starpu_mod.mod: starpu_mod.o

#starpu_mod.o: $(top_srcdir)/include/starpu_mod.f90
#	$(AM_V_FC)$(FC) $(fortran90_f90_example_FCFLAGS) $(FCFLAGS) -c -o $@ '$(top_srcdir)/'include/starpu_mod.f90

#mod_compute.o: $(top_srcdir)/examples/fortran90/mod_compute.f90 mod_types.mod mod_interface.mod starpu_mod.mod
#	$(AM_V_FC)$(FC) $(fortran90_f90_example_FCFLAGS) $(FCFLAGS) -c -o $@ `test -f 'fortran90/mod_compute.f90' || echo '$(srcdir)/'`fortran90/mod_compute.f90

#f90_example.o: $(top_srcdir)/examples/fortran90/f90_example.f90 $(top_srcdir)/examples/fortran90/marshalling.c mod_types.mod mod_interface.mod mod_compute.mod starpu_mod.mod
#	$(AM_V_FC)$(FC) $(fortran90_f90_example_FCFLAGS) $(FCFLAGS) -c -o $@ `test -f 'fortran90/f90_example.f90' || echo '$(srcdir)/'`fortran90/f90_example.f90

# Native Fortran example
# - list explicit dependences to control proper module files generation
# - the overriding rule fully disables the corresponing default rule, thus
#   the default rule body must be copied entirely
#nf_types.mod: nf_types.o
#nf_compute.mod: nf_compute.o
#fstarpu_mod.mod: fstarpu_mod.o
#nf_codelets.mod: nf_codelets.o
#nf_dynbuf_cl.mod: nf_dynbuf_cl.o
#nf_varbuf_cl.mod: nf_varbuf_cl.o
#nf_sched_ctx_cl.mod: nf_sched_ctx_cl.o
#nf_partition_cl.mod: nf_partition_cl.o

#fstarpu_mod.o: $(top_srcdir)/include/fstarpu_mod.f90
#	$(AM_V_FC)$(FC) $(native_fortran_nf_vector_FCFLAGS) $(FCFLAGS) -c -o $@ '$(top_srcdir)/'include/fstarpu_mod.f90

#nf_codelets.o: $(top_srcdir)/examples/native_fortran/nf_codelets.f90 fstarpu_mod.mod
#	$(AM_V_FC)$(FC) $(native_fortran_nf_vector_FCFLAGS) $(FCFLAGS) -c -o $@ `test -f 'native_fortran/nf_codelets.f90' || echo '$(srcdir)/'`native_fortran/nf_codelets.f90

#nf_vector.o: $(top_srcdir)/examples/native_fortran/nf_vector.f90 nf_codelets.mod fstarpu_mod.mod
#	$(AM_V_FC)$(FC) $(native_fortran_nf_vector_FCFLAGS) $(FCFLAGS) -c -o $@ `test -f 'native_fortran/nf_vector.f90' || echo '$(srcdir)/'`native_fortran/nf_vector.f90

#nf_matrix.o: $(top_srcdir)/examples/native_fortran/nf_matrix.f90 nf_codelets.mod fstarpu_mod.mod
#	$(AM_V_FC)$(FC) $(native_fortran_nf_matrix_FCFLAGS) $(FCFLAGS) -c -o $@ `test -f 'native_fortran/nf_matrix.f90' || echo '$(srcdir)/'`native_fortran/nf_matrix.f90

#nf_compute.o: $(top_srcdir)/examples/native_fortran/nf_compute.f90 nf_types.mod fstarpu_mod.mod
#	$(AM_V_FC)$(FC) $(native_fortran_nf_example_FCFLAGS) $(FCFLAGS) -c -o $@ `test -f 'native_fortran/nf_compute.f90' || echo '$(srcdir)/'`native_fortran/nf_compute.f90

#nf_example.o: $(top_srcdir)/examples/native_fortran/nf_example.f90 nf_types.mod nf_compute.mod fstarpu_mod.mod
#	$(AM_V_FC)$(FC) $(native_fortran_nf_example_FCFLAGS) $(FCFLAGS) -c -o $@ `test -f 'native_fortran/nf_example.f90' || echo '$(srcdir)/'`native_fortran/nf_example.f90

#nf_dynbuf_cl.o: $(top_srcdir)/examples/native_fortran/nf_dynbuf_cl.f90 nf_types.mod fstarpu_mod.mod
#	$(AM_V_FC)$(FC) $(native_fortran_nf_dynbuf_FCFLAGS) $(FCFLAGS) -c -o $@ `test -f 'native_fortran/nf_dynbuf_cl.f90' || echo '$(srcdir)/'`native_fortran/nf_dynbuf_cl.f90

#nf_dynbuf.o: $(top_srcdir)/examples/native_fortran/nf_dynbuf.f90 nf_types.mod nf_dynbuf_cl.mod fstarpu_mod.mod
#	$(AM_V_FC)$(FC) $(native_fortran_nf_dynbuf_FCFLAGS) $(FCFLAGS) -c -o $@ `test -f 'native_fortran/nf_dynbuf.f90' || echo '$(srcdir)/'`native_fortran/nf_dynbuf.f90

#nf_varbuf_cl.o: $(top_srcdir)/examples/native_fortran/nf_varbuf_cl.f90 nf_types.mod fstarpu_mod.mod
#	$(AM_V_FC)$(FC) $(native_fortran_nf_varbuf_FCFLAGS) $(FCFLAGS) -c -o $@ `test -f 'native_fortran/nf_varbuf_cl.f90' || echo '$(srcdir)/'`native_fortran/nf_varbuf_cl.f90

#nf_varbuf.o: $(top_srcdir)/examples/native_fortran/nf_varbuf.f90 nf_types.mod nf_varbuf_cl.mod fstarpu_mod.mod
#	$(AM_V_FC)$(FC) $(native_fortran_nf_varbuf_FCFLAGS) $(FCFLAGS) -c -o $@ `test -f 'native_fortran/nf_varbuf.f90' || echo '$(srcdir)/'`native_fortran/nf_varbuf.f90

#nf_sched_ctx_cl.o: $(top_srcdir)/examples/native_fortran/nf_sched_ctx_cl.f90 nf_types.mod fstarpu_mod.mod
#	$(AM_V_FC)$(FC) $(native_fortran_nf_sched_ctx_FCFLAGS) $(FCFLAGS) -c -o $@ `test -f 'native_fortran/nf_sched_ctx_cl.f90' || echo '$(srcdir)/'`native_fortran/nf_sched_ctx_cl.f90

#nf_sched_ctx.o: $(top_srcdir)/examples/native_fortran/nf_sched_ctx.f90 nf_types.mod nf_sched_ctx_cl.mod fstarpu_mod.mod
#	$(AM_V_FC)$(FC) $(native_fortran_nf_sched_ctx_FCFLAGS) $(FCFLAGS) -c -o $@ `test -f 'native_fortran/nf_sched_ctx.f90' || echo '$(srcdir)/'`native_fortran/nf_sched_ctx.f90

#nf_partition_cl.o: $(top_srcdir)/examples/native_fortran/nf_partition_cl.f90 nf_types.mod fstarpu_mod.mod
#	$(AM_V_FC)$(FC) $(native_fortran_nf_partition_FCFLAGS) $(FCFLAGS) -c -o $@ `test -f 'native_fortran/nf_partition_cl.f90' || echo '$(srcdir)/'`native_fortran/nf_partition_cl.f90

#nf_partition.o: $(top_srcdir)/examples/native_fortran/nf_partition.f90 nf_types.mod nf_partition_cl.mod fstarpu_mod.mod
#	$(AM_V_FC)$(FC) $(native_fortran_nf_partition_FCFLAGS) $(FCFLAGS) -c -o $@ `test -f 'native_fortran/nf_partition.f90' || echo '$(srcdir)/'`native_fortran/nf_partition.f90

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
